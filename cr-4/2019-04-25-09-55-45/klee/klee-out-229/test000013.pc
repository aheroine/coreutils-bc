array argno0[96] : w32 -> w8 = symbolic
array argno1[4] : w32 -> w8 = symbolic
array argno2[4] : w32 -> w8 = symbolic
array const_arr114[784] : w32 -> w8 = [0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
array macke_sizeof_argno0[4] : w32 -> w8 = symbolic
array macke_sizeof_argno2[4] : w32 -> w8 = symbolic
array macke_sym_switch_dump_remainder[4] : w32 -> w8 = symbolic
array model_version[4] : w32 -> w8 = symbolic
(query [(Eq 1
             (ReadLSB w32 0 model_version))
         (Sle 1
              N0:(ReadLSB w32 0 macke_sizeof_argno0))
         (Slt N0 1025)
         (Eq false (Eq 4 N0))
         (Eq false (Eq 16 N0))
         (Eq false (Eq 128 N0))
         (Eq false (Eq 2 N0))
         (Sle 1
              N1:(ReadLSB w32 0 macke_sizeof_argno2))
         (Slt N1 1025)
         (Eq false (Eq 4 N1))
         (Eq false (Eq 16 N1))
         (Eq false (Eq 128 N1))
         (Eq false (Eq 2 N1))
         (Eq false
             (Ult (Add w64 18446744073671899792
                           N2:(ReadLSB w64 0 argno0))
                  417))
         (Ult (Add w64 18446744073671793984 N2) 208)
         (Ult N3:(ReadLSB w32 56 argno0)
              32)
         (Eq false
             (Eq 0
                 (And w32 (ReadLSB w32 N4:(Extract w32 0 (Add w64 4
                                                                  N5:(Mul w64 24 (SExt w64 N3)))) U0:[783=0, 782=0, 781=0, 780=0, 779=0, 778=0, 777=0, 776=0, 775=N6:(Read w8 3 model_version),
                                                                                                      774=N7:(Read w8 2 model_version),
                                                                                                      773=N8:(Read w8 1 model_version),
                                                                                                      772=N9:(Read w8 0 model_version)] @ const_arr114)
                          1)))
         (Eq false
             (Eq 32768
                 (And w32 (ReadLSB w32 48 argno0)
                          61440)))
         (Eq (ReadLSB w32 0 argno2)
             (ReadLSB w32 0 argno1))
         (Eq false
             (Eq 1
                 N10:(ReadLSB w32 0 macke_sym_switch_dump_remainder)))
         (Eq false (Eq 4 N10))
         (Eq false (Eq 3 N10))
         (Eq false (Eq 9 N10))
         (Eq false (Eq 6 N10))
         (Eq false (Eq 5 N10))
         (Eq false (Eq 2 N10))
         (Eq false (Eq 8 N10))
         (Eq false (Eq 7 N10))
         (Eq 0
             (ReadLSB w32 N11:(Extract w32 0 N5) U0))]
        false)
