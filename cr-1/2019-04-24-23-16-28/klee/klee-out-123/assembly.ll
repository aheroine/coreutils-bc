; ModuleID = '/home/jl/testspace/coreutils-bc/cr-1/2019-04-24-23-16-28/bitcode/symmains.bc_AD_mark_current_as_unremovable_ChangeEntry.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, [8 x i32] }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.cp_options = type { i32, i8, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, %struct.hash_table*, %struct.hash_table* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.rm_options = type { i8, i32, i8, i8, %struct.dev_ino*, i8, i8, i8 }
%struct.dev_ino = type { i64, i64 }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.F_triple = type { i8*, i64, i64 }
%struct.Src_to_dest = type { i64, i64, i8* }
%struct.dirstack_state = type { %struct.obstack, %struct.obstack, %struct.obstack, %struct.cycle_check_state, [1 x %struct.__jmp_buf_tag] }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, %union.anon, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%union.anon = type { i64 }
%struct.cycle_check_state = type { %struct.dev_ino, i64, i32 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.AD_ent = type { %struct.hash_table*, i32, %struct.dev_ino }
%struct.__mbstate_t = type { i32, %union.anon.42 }
%union.anon.42 = type { i32 }
%struct.timeval = type { i64, i64 }

@stderr = external global %struct._IO_FILE*
@.str = private unnamed_addr constant [39 x i8] c"Try `%s --help' for more information.\0A\00", align 1
@program_name = common global i8* null, align 8
@.str1 = private unnamed_addr constant [127 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A\00", align 1
@.str2 = private unnamed_addr constant [57 x i8] c"Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\0A\0A\00", align 1
@stdout = external global %struct._IO_FILE*
@.str3 = private unnamed_addr constant [74 x i8] c"Mandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str4 = private unnamed_addr constant [276 x i8] c"      --backup[=CONTROL]       make a backup of each existing destination file\0A  -b                           like --backup but does not accept an argument\0A  -f, --force                  do not prom
@.str5 = private unnamed_addr constant [184 x i8] c"      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\0A                                 argument\0A  -S, --suffix=SUFFIX          override the usual backup suffix\0A\00", align 1
@.str6 = private unnamed_addr constant [398 x i8] c"  -t, --target-directory=DIRECTORY  move all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory    treat DEST as a normal file\0A  -u, --update                 move only when the SOURCE file 
@.str7 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str8 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str9 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is `~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.
@.str10 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   a
@.str11 = private unnamed_addr constant [23 x i8] c"\0AReport bugs to <%s>.\0A\00", align 1
@.str12 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str14 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str15 = private unnamed_addr constant [11 x i8] c"bfit:uvS:T\00", align 1
@optarg = external global i8*
@.str16 = private unnamed_addr constant [8 x i8] c"--reply\00", align 1
@reply_args = internal constant [4 x i8*] [i8* getelementptr inbounds ([4 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str36, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str37, i32 0, i32 0), i8* null], align 16
@reply_vals = internal constant [3 x i32] [i32 1, i32 2, i32 3], align 4
@.str17 = private unnamed_addr constant [55 x i8] c"the --reply option is deprecated; use -i or -f instead\00", align 1
@remove_trailing_slashes = internal global i8 0, align 1
@.str18 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str19 = private unnamed_addr constant [13 x i8] c"accessing %s\00", align 1
@.str20 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str21 = private unnamed_addr constant [3 x i8] c"mv\00", align 1
@.str22 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str23 = private unnamed_addr constant [10 x i8] c"6.7-dirty\00", align 1
@.str24 = private unnamed_addr constant [12 x i8] c"Mike Parker\00", align 1
@.str25 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str26 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@optind = external global i32
@.str27 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str28 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str29 = private unnamed_addr constant [70 x i8] c"Cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str30 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str31 = private unnamed_addr constant [13 x i8] c"2 <= n_files\00", align 1
@.str32 = private unnamed_addr constant [5 x i8] c"mv.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str33 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str34 = private unnamed_addr constant [76 x i8] c"((status) == RM_OK || (status) == RM_USER_DECLINED || (status) == RM_ERROR)\00", align 1
@__PRETTY_FUNCTION__.do_move = private unnamed_addr constant [69 x i8] c"_Bool do_move(const char *, const char *, const struct cp_options *)\00", align 1
@.str35 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str36 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str37 = private unnamed_addr constant [6 x i8] c"query\00", align 1
@.str38 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str39 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str40 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str41 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str42 = private unnamed_addr constant [6 x i8] c"reply\00", align 1
@.str43 = private unnamed_addr constant [23 x i8] c"strip-trailing-slashes\00", align 1
@.str44 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str45 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str46 = private unnamed_addr constant [7 x i8] c"update\00", align 1
@.str47 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str48 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str49 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@long_options = internal constant <{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, 
@.str50 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str151 = private unnamed_addr constant [7 x i8] c"copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8
@top_level_dst_name = internal global i8* null, align 8
@cached_umask.mask = internal global i32 -1, align 4
@.str252 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str353 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str454 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str555 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str656 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str757 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str858 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str959 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str1060 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str1161 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str1262 = private unnamed_addr constant [50 x i8] c"backing up %s would destroy source;  %s not moved\00", align 1
@.str1363 = private unnamed_addr constant [51 x i8] c"backing up %s would destroy source;  %s not copied\00", align 1
@.str1464 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str1565 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str1666 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str1767 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str1868 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str1969 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str2070 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str2171 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str2272 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str2373 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str2474 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str2575 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str2676 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str2777 = private unnamed_addr constant [22 x i8] c"cannot create link %s\00", align 1
@.str2878 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str2979 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str3080 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str3181 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str3282 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str3383 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str3484 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str3585 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str3686 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str3787 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@.str3888 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str3989 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str4090 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str4191 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str4292 = private unnamed_addr constant [11 x i8] c"reading %s\00", align 1
@.str4393 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str4494 = private unnamed_addr constant [11 x i8] c"writing %s\00", align 1
@.str4595 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str4696 = private unnamed_addr constant [11 x i8] c"closing %s\00", align 1
@.str4797 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str4898 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str4999 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str50100 = private unnamed_addr constant [42 x i8] c"%s: overwrite %s, overriding mode %04lo? \00", align 1
@.str51 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str52 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str53 = private unnamed_addr constant [17 x i8] c"co != ((void*)0)\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str54 = private unnamed_addr constant [55 x i8] c"((unsigned int) (co->backup_type) <= numbered_backups)\00", align 1
@.str55 = private unnamed_addr constant [110 x i8] c"((co->sparse_mode) == SPARSE_NEVER || (co->sparse_mode) == SPARSE_AUTO || (co->sparse_mode) == SPARSE_ALWAYS)\00", align 1
@.str56 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8
@.str108 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@after_divergence = global i32 0, align 4
@.str117 = private unnamed_addr constant [21 x i8] c"KLEE_DIVERGENCE_FILE\00", align 1
@klee_div_file_env = global i8* getelementptr inbounds ([21 x i8]* @.str117, i32 0, i32 0), align 8
@.str1118 = private unnamed_addr constant [21 x i8] c"EKLEEPSE_MARKER_FILE\00", align 1
@klee_div_marker_file_env = global i8* getelementptr inbounds ([21 x i8]* @.str1118, i32 0, i32 0), align 8
@.str2119 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str3120 = private unnamed_addr constant [3 x i8] c"1\0A\00", align 1
@.str4121 = private unnamed_addr constant [26 x i8] c"fopen failed for file %s\0A\00", align 1
@.str5122 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str6123 = private unnamed_addr constant [26 x i8] c"getenv failed for key %s\0A\00", align 1
@.str7124 = private unnamed_addr constant [32 x i8] c"cannot remove relative-named %s\00", align 1
@.str8125 = private unnamed_addr constant [61 x i8] c"((s) == RM_OK || (s) == RM_USER_DECLINED || (s) == RM_ERROR)\00", align 1
@.str9126 = private unnamed_addr constant [9 x i8] c"remove.c\00", align 1
@__PRETTY_FUNCTION__.rm = private unnamed_addr constant [74 x i8] c"enum RM_status rm(size_t, const char *const *, const struct rm_options *)\00", align 1
@.str10127 = private unnamed_addr constant [41 x i8] c"cannot restore current working directory\00", align 1
@.str11128 = private unnamed_addr constant [27 x i8] c"cannot remove directory %s\00", align 1
@.str12129 = private unnamed_addr constant [30 x i8] c"cannot remove %s directory %s\00", align 1
@.str13130 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str14131 = private unnamed_addr constant [32 x i8] c"cannot remove root directory %s\00", align 1
@.str15132 = private unnamed_addr constant [25 x i8] c"0 < AD_stack_height (ds)\00", align 1
@__PRETTY_FUNCTION__.AD_stack_pop = private unnamed_addr constant [36 x i8] c"void AD_stack_pop(Dirstack_state *)\00", align 1
@.str16133 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str17134 = private unnamed_addr constant [45 x i8] c"it is dangerous to operate recursively on %s\00", align 1
@.str18135 = private unnamed_addr constant [58 x i8] c"it is dangerous to operate recursively on %s (same as %s)\00", align 1
@.str19136 = private unnamed_addr constant [49 x i8] c"use --no-preserve-root to override this failsafe\00", align 1
@.str20137 = private unnamed_addr constant [46 x i8] c"skipping %s, since it's on a different device\00", align 1
@.str21138 = private unnamed_addr constant [40 x i8] c"fd != -100 || AD_stack_height (ds) == 1\00", align 1
@__PRETTY_FUNCTION__.remove_dir = private unnamed_addr constant [112 x i8] c"enum RM_status remove_dir(int, Dirstack_state *, const char *, struct stat *, const struct rm_options *, int *)\00", align 1
@.str22139 = private unnamed_addr constant [23 x i8] c"removed directory: %s\0A\00", align 1
@.str23140 = private unnamed_addr constant [35 x i8] c"FATAL: cannot return to .. from %s\00", align 1
@.str24141 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str25142 = private unnamed_addr constant [29 x i8] c"failed to close directory %s\00", align 1
@.str26143 = private unnamed_addr constant [48 x i8] c"%s: descend into write-protected directory %s? \00", align 1
@.str27144 = private unnamed_addr constant [32 x i8] c"%s: descend into directory %s? \00", align 1
@.str28145 = private unnamed_addr constant [35 x i8] c"%s: remove write-protected %s %s? \00", align 1
@.str29146 = private unnamed_addr constant [19 x i8] c"%s: remove %s %s? \00", align 1
@.str30147 = private unnamed_addr constant [21 x i8] c"AD_stack_height (ds)\00", align 1
@__PRETTY_FUNCTION__.AD_pop_and_chdir = private unnamed_addr constant [55 x i8] c"char *AD_pop_and_chdir(DIR *, int *, Dirstack_state *)\00", align 1
@.str31148 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str32149 = private unnamed_addr constant [36 x i8] c"FATAL: failed to close directory %s\00", align 1
@.str33150 = private unnamed_addr constant [30 x i8] c"FATAL: cannot open .. from %s\00", align 1
@.str34151 = private unnamed_addr constant [53 x i8] c"FATAL: cannot ensure %s (returned to via ..) is safe\00", align 1
@.str35152 = private unnamed_addr constant [36 x i8] c"FATAL: directory %s changed dev/ino\00", align 1
@.str36153 = private unnamed_addr constant [14 x i8] c"n_lengths > 0\00", align 1
@__PRETTY_FUNCTION__.pop_dir = private unnamed_addr constant [31 x i8] c"void pop_dir(Dirstack_state *)\00", align 1
@.str37154 = private unnamed_addr constant [13 x i8] c"top_len >= 2\00", align 1
@.str38155 = private unnamed_addr constant [125 x i8] c"__extension__ ({ struct obstack const *__o = (&ds->dir_stack); (unsigned) (__o->next_free - __o->object_base); }) >= top_len\00", align 1
@.str39156 = private unnamed_addr constant [133 x i8] c"__extension__ ({ struct obstack const *__o = (&ds->len_stack); (unsigned) (__o->next_free - __o->object_base); }) >= sizeof (size_t)\00", align 1
@.str40157 = private unnamed_addr constant [25 x i8] c"1 < AD_stack_height (ds)\00", align 1
@__PRETTY_FUNCTION__.AD_mark_current_as_unremovable = private unnamed_addr constant [54 x i8] c"void AD_mark_current_as_unremovable(Dirstack_state *)\00", align 1
@.str41158 = private unnamed_addr constant [76 x i8] c"((status) == RM_OK || (status) == RM_USER_DECLINED || (status) == RM_ERROR)\00", align 1
@__PRETTY_FUNCTION__.remove_cwd_entries = private unnamed_addr constant [111 x i8] c"enum RM_status remove_cwd_entries(DIR **, Dirstack_state *, char **, struct stat *, const struct rm_options *)\00", align 1
@.str42159 = private unnamed_addr constant [20 x i8] c"*dirp != ((void*)0)\00", align 1
@.str43160 = private unnamed_addr constant [30 x i8] c"0 <= fcntl (dirfd (*dirp), 1)\00", align 1
@.str44161 = private unnamed_addr constant [186 x i8] c"WARNING: Circular directory structure.\0AThis almost certainly means that you have a corrupted file system.\0ANOTIFY YOUR SYSTEM MANAGER.\0AThe following directory is part of the cycle:\0A  %s\0A\00
@.str45162 = private unnamed_addr constant [160 x i8] c"AD_stack_height (ds) == 1 + __extension__ ({ struct obstack const *__o = (&ds->len_stack); (unsigned) (__o->next_free - __o->object_base); }) / sizeof (size_t)\00", align 1
@__PRETTY_FUNCTION__.AD_push = private unnamed_addr constant [71 x i8] c"void AD_push(int, Dirstack_state *, const char *, const struct stat *)\00", align 1
@full_filename_.buf = internal global i8* null, align 8
@full_filename_.n_allocated = internal global i64 0, align 8
@full_filename_.static_buf = internal global [512 x i8] zeroinitializer, align 16
@.str46163 = private unnamed_addr constant [6 x i8] c"[...]\00", align 1
@.str47164 = private unnamed_addr constant [35 x i8] c"strlen (buf) + 1 == n_bytes_needed\00", align 1
@__PRETTY_FUNCTION__.full_filename_ = private unnamed_addr constant [59 x i8] c"char *full_filename_(const Dirstack_state *, const char *)\00", align 1
@.str48165 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str49166 = private unnamed_addr constant [66 x i8] c"!cache_stat_ok (st) || ((((st->st_mode)) & 0170000) == (0040000))\00", align 1
@__PRETTY_FUNCTION__.remove_entry = private unnamed_addr constant [136 x i8] c"enum RM_status remove_entry(int, const Dirstack_state *, const char *, struct stat *, const struct rm_options *, const struct dirent *)\00", align 1
@.str177 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str1178 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str2179 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str3180 = private unnamed_addr constant [205 x i8] c"\0AThis is free software.  You may redistribute copies of it under the terms of\0Athe GNU General Public License <http://www.gnu.org/licenses/gpl.html>.\0AThere is NO WARRANTY, to the extent permitte
@.str4181 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str5182 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str6183 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str7184 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str8185 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str9186 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str10187 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str11188 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str12189 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str13190 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16
@.str195 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str1196 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str201 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str1202 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@argmatch_die = global void ()* @__argmatch_die, align 8
@.str209 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str1210 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str2211 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str3212 = private unnamed_addr constant [10 x i8] c"\0A  - `%s'\00", align 1
@.str4213 = private unnamed_addr constant [7 x i8] c", `%s'\00", align 1
@.str216 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@simple_backup_suffix = global i8* getelementptr inbounds ([2 x i8]* @.str216, i32 0, i32 0), align 8
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8]* @.str3221, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str4222, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str5223, i32 0, i32 0), i8* getelementptr 
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16
@.str1219 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@.str2220 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str3221 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str4222 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str5223 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str6224 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str7225 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str8226 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str9227 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str10228 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str11229 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str12230 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@file_name = internal global i8* null, align 8
@.str239 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str1240 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str2241 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str244 = private unnamed_addr constant [24 x i8] c"state->magic == 9827862\00", align 1
@.str1245 = private unnamed_addr constant [14 x i8] c"cycle-check.c\00", align 1
@__PRETTY_FUNCTION__.cycle_check = private unnamed_addr constant [67 x i8] c"_Bool cycle_check(struct cycle_check_state *, const struct stat *)\00", align 1
@exit_failure = global i32 1, align 4
@.str254 = private unnamed_addr constant [19 x i8] c"regular empty file\00", align 1
@.str1255 = private unnamed_addr constant [13 x i8] c"regular file\00", align 1
@.str2256 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str3257 = private unnamed_addr constant [19 x i8] c"block special file\00", align 1
@.str4258 = private unnamed_addr constant [23 x i8] c"character special file\00", align 1
@.str5259 = private unnamed_addr constant [5 x i8] c"fifo\00", align 1
@.str6260 = private unnamed_addr constant [14 x i8] c"symbolic link\00", align 1
@.str7261 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str8262 = private unnamed_addr constant [14 x i8] c"message queue\00", align 1
@.str9263 = private unnamed_addr constant [10 x i8] c"semaphore\00", align 1
@.str10264 = private unnamed_addr constant [21 x i8] c"shared memory object\00", align 1
@.str11265 = private unnamed_addr constant [11 x i8] c"weird file\00", align 1
@.str270 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str1271 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str2273 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str3274 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant { float, float, float, float, i8, [3 x i8] } { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0, [3 x i8] undef }, align 4
@.str291 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str1292 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str2293 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str3294 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str4295 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str5296 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str6297 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_args = constant [8 x i8*] [i8* getelementptr inbounds ([8 x i8]* @.str291, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str1292, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str2293, i32 0, i32 0), i8* getelementptr in
@quoting_style_vals = constant [7 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6], align 16
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 4
@slotvec = internal global %struct.slotvec* @slotvec0, align 8
@nslots = internal global i32 1, align 4
@slot0 = internal global [256 x i8] zeroinitializer, align 16
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8]* @slot0, i32 0, i32 0) }, align 8
@.str7298 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str8299 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str9300 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str307 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@utimecmp.ht = internal global %struct.hash_table* null, align 8
@utimecmp.new_dst_res = internal global %struct.fs_res* null, align 8
@0 = private unnamed_addr constant [7 x i8] c"argno0\00"
@1 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@2 = private unnamed_addr constant [7 x i8] c"argno0\00"
@3 = private unnamed_addr constant [7 x i8] c"argno1\00"
@4 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@5 = private unnamed_addr constant [7 x i8] c"argno0\00"
@6 = private unnamed_addr constant [7 x i8] c"argno1\00"
@7 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@8 = private unnamed_addr constant [7 x i8] c"argno0\00"
@9 = private unnamed_addr constant [7 x i8] c"argno1\00"
@10 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@11 = private unnamed_addr constant [7 x i8] c"argno0\00"
@12 = private unnamed_addr constant [7 x i8] c"argno1\00"
@13 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@14 = private unnamed_addr constant [7 x i8] c"argno2\00"
@15 = private unnamed_addr constant [7 x i8] c"argno3\00"
@16 = private unnamed_addr constant [7 x i8] c"argno4\00"
@17 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@18 = private unnamed_addr constant [7 x i8] c"argno5\00"
@19 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@20 = private unnamed_addr constant [7 x i8] c"argno0\00"
@21 = private unnamed_addr constant [7 x i8] c"argno1\00"
@22 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@23 = private unnamed_addr constant [7 x i8] c"argno2\00"
@24 = private unnamed_addr constant [7 x i8] c"argno3\00"
@25 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@26 = private unnamed_addr constant [7 x i8] c"argno4\00"
@27 = private unnamed_addr constant [7 x i8] c"argno0\00"
@28 = private unnamed_addr constant [7 x i8] c"argno0\00"
@29 = private unnamed_addr constant [7 x i8] c"argno0\00"
@30 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@31 = private unnamed_addr constant [7 x i8] c"argno1\00"
@32 = private unnamed_addr constant [7 x i8] c"argno2\00"
@33 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@34 = private unnamed_addr constant [7 x i8] c"argno3\00"
@35 = private unnamed_addr constant [7 x i8] c"argno0\00"
@36 = private unnamed_addr constant [7 x i8] c"argno1\00"
@37 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@38 = private unnamed_addr constant [7 x i8] c"argno2\00"
@39 = private unnamed_addr constant [7 x i8] c"argno0\00"
@40 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@41 = private unnamed_addr constant [7 x i8] c"argno1\00"
@42 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@43 = private unnamed_addr constant [7 x i8] c"argno0\00"
@44 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@45 = private unnamed_addr constant [7 x i8] c"argno1\00"
@46 = private unnamed_addr constant [7 x i8] c"argno2\00"
@47 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@48 = private unnamed_addr constant [7 x i8] c"argno0\00"
@49 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@50 = private unnamed_addr constant [7 x i8] c"argno0\00"
@51 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@52 = private unnamed_addr constant [7 x i8] c"argno1\00"
@53 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@54 = private unnamed_addr constant [7 x i8] c"argno2\00"
@55 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@56 = private unnamed_addr constant [7 x i8] c"argno3\00"
@57 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@58 = private unnamed_addr constant [7 x i8] c"argno4\00"
@59 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@60 = private unnamed_addr constant [7 x i8] c"argno0\00"
@61 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@62 = private unnamed_addr constant [7 x i8] c"argno1\00"
@63 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@64 = private unnamed_addr constant [7 x i8] c"argno2\00"
@65 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@66 = private unnamed_addr constant [7 x i8] c"argno3\00"
@67 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@68 = private unnamed_addr constant [7 x i8] c"argno0\00"
@69 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@70 = private unnamed_addr constant [7 x i8] c"argno0\00"
@71 = private unnamed_addr constant [7 x i8] c"argno1\00"
@72 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@73 = private unnamed_addr constant [7 x i8] c"argno0\00"
@74 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@75 = private unnamed_addr constant [7 x i8] c"argno0\00"
@76 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@77 = private unnamed_addr constant [7 x i8] c"argno1\00"
@78 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@79 = private unnamed_addr constant [7 x i8] c"argno0\00"
@80 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@81 = private unnamed_addr constant [7 x i8] c"argno1\00"
@82 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@83 = private unnamed_addr constant [7 x i8] c"argno0\00"
@84 = private unnamed_addr constant [7 x i8] c"argno0\00"
@85 = private unnamed_addr constant [7 x i8] c"argno0\00"
@86 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@87 = private unnamed_addr constant [7 x i8] c"argno0\00"
@88 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@89 = private unnamed_addr constant [7 x i8] c"argno0\00"
@90 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@91 = private unnamed_addr constant [7 x i8] c"argno0\00"
@92 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@93 = private unnamed_addr constant [7 x i8] c"argno0\00"
@94 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@95 = private unnamed_addr constant [7 x i8] c"argno0\00"
@96 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@97 = private unnamed_addr constant [7 x i8] c"argno0\00"
@98 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@99 = private unnamed_addr constant [7 x i8] c"argno0\00"
@100 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@101 = private unnamed_addr constant [7 x i8] c"argno1\00"
@102 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@103 = private unnamed_addr constant [7 x i8] c"argno0\00"
@104 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@105 = private unnamed_addr constant [7 x i8] c"argno1\00"
@106 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@107 = private unnamed_addr constant [7 x i8] c"argno2\00"
@108 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@109 = private unnamed_addr constant [7 x i8] c"argno0\00"
@110 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@111 = private unnamed_addr constant [7 x i8] c"argno1\00"
@112 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@113 = private unnamed_addr constant [7 x i8] c"argno0\00"
@114 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@115 = private unnamed_addr constant [7 x i8] c"argno0\00"
@116 = private unnamed_addr constant [7 x i8] c"argno1\00"
@117 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@118 = private unnamed_addr constant [7 x i8] c"argno0\00"
@119 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@120 = private unnamed_addr constant [7 x i8] c"argno1\00"
@121 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@122 = private unnamed_addr constant [7 x i8] c"argno0\00"
@123 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@124 = private unnamed_addr constant [7 x i8] c"argno0\00"
@125 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@126 = private unnamed_addr constant [7 x i8] c"argno1\00"
@127 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@128 = private unnamed_addr constant [7 x i8] c"argno2\00"
@129 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@130 = private unnamed_addr constant [7 x i8] c"argno0\00"
@131 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@132 = private unnamed_addr constant [7 x i8] c"argno0\00"
@133 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@134 = private unnamed_addr constant [7 x i8] c"argno0\00"
@135 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@136 = private unnamed_addr constant [7 x i8] c"argno1\00"
@137 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@138 = private unnamed_addr constant [7 x i8] c"argno0\00"
@139 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@140 = private unnamed_addr constant [7 x i8] c"argno1\00"
@141 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@142 = private unnamed_addr constant [7 x i8] c"argno2\00"
@143 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@144 = private unnamed_addr constant [7 x i8] c"argno3\00"
@145 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@146 = private unnamed_addr constant [7 x i8] c"argno4\00"
@147 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@148 = private unnamed_addr constant [7 x i8] c"argno5\00"
@149 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno6\00"
@150 = private unnamed_addr constant [7 x i8] c"argno6\00"
@151 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@152 = private unnamed_addr constant [7 x i8] c"argno0\00"
@153 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@154 = private unnamed_addr constant [7 x i8] c"argno1\00"
@155 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@156 = private unnamed_addr constant [7 x i8] c"argno0\00"
@157 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@158 = private unnamed_addr constant [7 x i8] c"argno1\00"
@159 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@160 = private unnamed_addr constant [7 x i8] c"argno2\00"
@161 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@162 = private unnamed_addr constant [7 x i8] c"argno0\00"
@163 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@164 = private unnamed_addr constant [7 x i8] c"argno0\00"
@165 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@166 = private unnamed_addr constant [7 x i8] c"argno0\00"
@167 = private unnamed_addr constant [7 x i8] c"argno0\00"
@168 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@169 = private unnamed_addr constant [7 x i8] c"argno1\00"
@170 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@171 = private unnamed_addr constant [7 x i8] c"argno2\00"
@172 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@173 = private unnamed_addr constant [7 x i8] c"argno0\00"
@174 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@175 = private unnamed_addr constant [7 x i8] c"argno1\00"
@176 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@177 = private unnamed_addr constant [7 x i8] c"argno0\00"
@178 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@179 = private unnamed_addr constant [7 x i8] c"argno1\00"
@180 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@181 = private unnamed_addr constant [7 x i8] c"argno2\00"
@182 = private unnamed_addr constant [7 x i8] c"argno3\00"
@183 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@184 = private unnamed_addr constant [7 x i8] c"argno0\00"
@185 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@186 = private unnamed_addr constant [7 x i8] c"argno0\00"
@187 = private unnamed_addr constant [7 x i8] c"argno1\00"
@188 = private unnamed_addr constant [7 x i8] c"argno2\00"
@189 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@190 = private unnamed_addr constant [7 x i8] c"argno0\00"
@191 = private unnamed_addr constant [7 x i8] c"argno1\00"
@192 = private unnamed_addr constant [7 x i8] c"argno2\00"
@193 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@194 = private unnamed_addr constant [7 x i8] c"argno0\00"
@195 = private unnamed_addr constant [7 x i8] c"argno1\00"
@196 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@197 = private unnamed_addr constant [7 x i8] c"argno0\00"
@198 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@199 = private unnamed_addr constant [7 x i8] c"argno1\00"
@200 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@201 = private unnamed_addr constant [7 x i8] c"argno2\00"
@202 = private unnamed_addr constant [7 x i8] c"argno0\00"
@203 = private unnamed_addr constant [7 x i8] c"argno1\00"
@204 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@205 = private unnamed_addr constant [7 x i8] c"argno0\00"
@206 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@207 = private unnamed_addr constant [7 x i8] c"argno0\00"
@208 = private unnamed_addr constant [7 x i8] c"argno1\00"
@209 = private unnamed_addr constant [7 x i8] c"argno2\00"
@210 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@211 = private unnamed_addr constant [7 x i8] c"argno0\00"
@212 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@213 = private unnamed_addr constant [7 x i8] c"argno1\00"
@214 = private unnamed_addr constant [7 x i8] c"argno0\00"
@215 = private unnamed_addr constant [7 x i8] c"argno1\00"
@216 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@217 = private unnamed_addr constant [7 x i8] c"argno0\00"
@218 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@219 = private unnamed_addr constant [7 x i8] c"argno1\00"
@220 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@221 = private unnamed_addr constant [7 x i8] c"argno0\00"
@222 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@223 = private unnamed_addr constant [7 x i8] c"argno0\00"
@224 = private unnamed_addr constant [7 x i8] c"argno0\00"
@225 = private unnamed_addr constant [7 x i8] c"argno0\00"
@226 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@227 = private unnamed_addr constant [7 x i8] c"argno0\00"
@228 = private unnamed_addr constant [7 x i8] c"argno1\00"
@229 = private unnamed_addr constant [7 x i8] c"argno0\00"
@230 = private unnamed_addr constant [7 x i8] c"argno1\00"
@231 = private unnamed_addr constant [7 x i8] c"argno0\00"
@232 = private unnamed_addr constant [7 x i8] c"argno1\00"
@233 = private unnamed_addr constant [7 x i8] c"argno0\00"
@234 = private unnamed_addr constant [7 x i8] c"argno1\00"
@235 = private unnamed_addr constant [7 x i8] c"argno2\00"
@236 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@237 = private unnamed_addr constant [7 x i8] c"argno0\00"
@238 = private unnamed_addr constant [7 x i8] c"argno1\00"
@239 = private unnamed_addr constant [7 x i8] c"argno0\00"
@240 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@241 = private unnamed_addr constant [7 x i8] c"argno1\00"
@242 = private unnamed_addr constant [7 x i8] c"argno2\00"
@243 = private unnamed_addr constant [7 x i8] c"argno0\00"
@244 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@245 = private unnamed_addr constant [7 x i8] c"argno1\00"
@246 = private unnamed_addr constant [7 x i8] c"argno2\00"
@247 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@248 = private unnamed_addr constant [7 x i8] c"argno0\00"
@249 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@250 = private unnamed_addr constant [7 x i8] c"argno0\00"
@251 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@252 = private unnamed_addr constant [7 x i8] c"argno0\00"
@253 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@254 = private unnamed_addr constant [7 x i8] c"argno0\00"
@255 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@256 = private unnamed_addr constant [7 x i8] c"argno1\00"
@257 = private unnamed_addr constant [7 x i8] c"argno2\00"
@258 = private unnamed_addr constant [7 x i8] c"argno3\00"
@259 = private unnamed_addr constant [7 x i8] c"argno4\00"
@260 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@261 = private unnamed_addr constant [7 x i8] c"argno0\00"
@262 = private unnamed_addr constant [7 x i8] c"argno1\00"
@263 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@264 = private unnamed_addr constant [7 x i8] c"argno2\00"
@265 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@266 = private unnamed_addr constant [7 x i8] c"argno0\00"
@267 = private unnamed_addr constant [7 x i8] c"argno1\00"
@268 = private unnamed_addr constant [7 x i8] c"argno2\00"
@269 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@270 = private unnamed_addr constant [7 x i8] c"argno0\00"
@271 = private unnamed_addr constant [7 x i8] c"argno1\00"
@272 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@273 = private unnamed_addr constant [7 x i8] c"argno2\00"
@274 = private unnamed_addr constant [7 x i8] c"argno3\00"
@275 = private unnamed_addr constant [7 x i8] c"argno4\00"
@276 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@277 = private unnamed_addr constant [7 x i8] c"argno0\00"
@278 = private unnamed_addr constant [7 x i8] c"argno1\00"
@279 = private unnamed_addr constant [7 x i8] c"argno2\00"
@280 = private unnamed_addr constant [7 x i8] c"argno0\00"
@281 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@282 = private unnamed_addr constant [7 x i8] c"argno1\00"
@283 = private unnamed_addr constant [7 x i8] c"argno2\00"
@284 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@285 = private unnamed_addr constant [7 x i8] c"argno0\00"
@286 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@287 = private unnamed_addr constant [7 x i8] c"argno1\00"
@288 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@289 = private unnamed_addr constant [7 x i8] c"argno2\00"
@290 = private unnamed_addr constant [7 x i8] c"argno3\00"
@291 = private unnamed_addr constant [7 x i8] c"argno4\00"
@292 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@293 = private unnamed_addr constant [7 x i8] c"argno5\00"
@294 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno6\00"
@295 = private unnamed_addr constant [7 x i8] c"argno6\00"
@296 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@297 = private unnamed_addr constant [7 x i8] c"argno0\00"
@298 = private unnamed_addr constant [7 x i8] c"argno1\00"
@299 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@300 = private unnamed_addr constant [7 x i8] c"argno0\00"
@301 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@302 = private unnamed_addr constant [7 x i8] c"argno1\00"
@303 = private unnamed_addr constant [7 x i8] c"argno2\00"
@304 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@305 = private unnamed_addr constant [7 x i8] c"argno3\00"
@306 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@307 = private unnamed_addr constant [7 x i8] c"argno4\00"
@308 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@309 = private unnamed_addr constant [7 x i8] c"argno5\00"
@310 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno6\00"
@311 = private unnamed_addr constant [7 x i8] c"argno6\00"
@312 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@313 = private unnamed_addr constant [7 x i8] c"argno0\00"
@314 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@315 = private unnamed_addr constant [7 x i8] c"argno1\00"
@316 = private unnamed_addr constant [7 x i8] c"argno2\00"
@317 = private unnamed_addr constant [7 x i8] c"argno3\00"
@318 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@319 = private unnamed_addr constant [7 x i8] c"argno4\00"
@320 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@321 = private unnamed_addr constant [7 x i8] c"argno5\00"
@322 = private unnamed_addr constant [7 x i8] c"argno6\00"
@323 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno7\00"
@324 = private unnamed_addr constant [7 x i8] c"argno7\00"
@325 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno8\00"
@326 = private unnamed_addr constant [7 x i8] c"argno8\00"
@327 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@328 = private unnamed_addr constant [7 x i8] c"argno0\00"
@329 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@330 = private unnamed_addr constant [7 x i8] c"argno1\00"
@331 = private unnamed_addr constant [7 x i8] c"argno2\00"
@332 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@333 = private unnamed_addr constant [7 x i8] c"argno3\00"
@334 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@335 = private unnamed_addr constant [7 x i8] c"argno4\00"
@336 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@337 = private unnamed_addr constant [7 x i8] c"argno5\00"
@338 = private unnamed_addr constant [7 x i8] c"argno0\00"
@339 = private unnamed_addr constant [7 x i8] c"argno1\00"
@340 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@341 = private unnamed_addr constant [7 x i8] c"argno0\00"
@342 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@343 = private unnamed_addr constant [7 x i8] c"argno0\00"
@344 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@345 = private unnamed_addr constant [7 x i8] c"argno0\00"
@346 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@347 = private unnamed_addr constant [7 x i8] c"argno0\00"
@348 = private unnamed_addr constant [7 x i8] c"argno0\00"
@349 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@350 = private unnamed_addr constant [7 x i8] c"argno1\00"
@351 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@352 = private unnamed_addr constant [7 x i8] c"argno2\00"
@353 = private unnamed_addr constant [7 x i8] c"argno3\00"
@354 = private unnamed_addr constant [7 x i8] c"argno0\00"
@355 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@356 = private unnamed_addr constant [7 x i8] c"argno0\00"
@357 = private unnamed_addr constant [7 x i8] c"argno1\00"
@358 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@359 = private unnamed_addr constant [7 x i8] c"argno0\00"
@360 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@361 = private unnamed_addr constant [7 x i8] c"argno0\00"
@362 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@363 = private unnamed_addr constant [7 x i8] c"argno0\00"
@364 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@365 = private unnamed_addr constant [7 x i8] c"argno1\00"
@366 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@367 = private unnamed_addr constant [7 x i8] c"argno0\00"
@368 = private unnamed_addr constant [7 x i8] c"argno1\00"
@369 = private unnamed_addr constant [7 x i8] c"argno0\00"
@370 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@371 = private unnamed_addr constant [7 x i8] c"argno1\00"
@372 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@373 = private unnamed_addr constant [7 x i8] c"argno2\00"
@374 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@375 = private unnamed_addr constant [7 x i8] c"argno3\00"
@376 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@377 = private unnamed_addr constant [7 x i8] c"argno0\00"
@378 = private unnamed_addr constant [7 x i8] c"argno0\00"
@379 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@380 = private unnamed_addr constant [7 x i8] c"argno1\00"
@381 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@382 = private unnamed_addr constant [7 x i8] c"argno0\00"
@383 = private unnamed_addr constant [7 x i8] c"argno0\00"
@384 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@385 = private unnamed_addr constant [7 x i8] c"argno1\00"
@386 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@387 = private unnamed_addr constant [7 x i8] c"argno2\00"
@388 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@389 = private unnamed_addr constant [7 x i8] c"argno3\00"
@390 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@391 = private unnamed_addr constant [7 x i8] c"argno4\00"
@392 = private unnamed_addr constant [7 x i8] c"argno5\00"
@393 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno6\00"
@394 = private unnamed_addr constant [7 x i8] c"argno6\00"
@395 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@396 = private unnamed_addr constant [7 x i8] c"argno0\00"
@397 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@398 = private unnamed_addr constant [7 x i8] c"argno0\00"
@399 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@400 = private unnamed_addr constant [7 x i8] c"argno1\00"
@401 = private unnamed_addr constant [7 x i8] c"argno0\00"
@402 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@403 = private unnamed_addr constant [7 x i8] c"argno1\00"
@404 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@405 = private unnamed_addr constant [7 x i8] c"argno2\00"
@406 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@407 = private unnamed_addr constant [7 x i8] c"argno3\00"
@408 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@409 = private unnamed_addr constant [7 x i8] c"argno4\00"
@410 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@411 = private unnamed_addr constant [7 x i8] c"argno5\00"
@412 = private unnamed_addr constant [7 x i8] c"argno0\00"
@413 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@414 = private unnamed_addr constant [7 x i8] c"argno1\00"
@415 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@416 = private unnamed_addr constant [7 x i8] c"argno2\00"
@417 = private unnamed_addr constant [7 x i8] c"argno3\00"
@418 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@419 = private unnamed_addr constant [7 x i8] c"argno4\00"
@420 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@421 = private unnamed_addr constant [7 x i8] c"argno5\00"
@422 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@423 = private unnamed_addr constant [7 x i8] c"argno0\00"
@424 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@425 = private unnamed_addr constant [7 x i8] c"argno1\00"
@426 = private unnamed_addr constant [7 x i8] c"argno0\00"
@427 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@428 = private unnamed_addr constant [7 x i8] c"argno0\00"
@429 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@430 = private unnamed_addr constant [7 x i8] c"argno1\00"
@431 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@432 = private unnamed_addr constant [7 x i8] c"argno0\00"
@433 = private unnamed_addr constant [7 x i8] c"argno0\00"
@434 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@435 = private unnamed_addr constant [7 x i8] c"argno1\00"
@436 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@437 = private unnamed_addr constant [7 x i8] c"argno2\00"
@438 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@439 = private unnamed_addr constant [7 x i8] c"argno3\00"
@440 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@441 = private unnamed_addr constant [7 x i8] c"argno0\00"
@442 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@443 = private unnamed_addr constant [7 x i8] c"argno1\00"
@444 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@445 = private unnamed_addr constant [7 x i8] c"argno0\00"
@446 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@447 = private unnamed_addr constant [7 x i8] c"argno1\00"
@448 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@449 = private unnamed_addr constant [7 x i8] c"argno0\00"
@450 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@451 = private unnamed_addr constant [7 x i8] c"argno0\00"
@452 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@453 = private unnamed_addr constant [7 x i8] c"argno0\00"
@454 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@455 = private unnamed_addr constant [7 x i8] c"argno0\00"
@456 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@457 = private unnamed_addr constant [7 x i8] c"argno0\00"
@458 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@459 = private unnamed_addr constant [7 x i8] c"argno0\00"
@460 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@461 = private unnamed_addr constant [7 x i8] c"argno1\00"
@462 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@463 = private unnamed_addr constant [7 x i8] c"argno2\00"
@464 = private unnamed_addr constant [7 x i8] c"argno0\00"
@465 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@466 = private unnamed_addr constant [7 x i8] c"argno1\00"
@467 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@468 = private unnamed_addr constant [7 x i8] c"argno2\00"
@469 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@470 = private unnamed_addr constant [7 x i8] c"argno3\00"
@471 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@472 = private unnamed_addr constant [7 x i8] c"argno4\00"
@473 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@474 = private unnamed_addr constant [7 x i8] c"argno5\00"
@475 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@476 = private unnamed_addr constant [7 x i8] c"argno0\00"
@477 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@478 = private unnamed_addr constant [7 x i8] c"argno0\00"
@479 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@480 = private unnamed_addr constant [7 x i8] c"argno0\00"
@481 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@482 = private unnamed_addr constant [7 x i8] c"argno1\00"
@483 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@484 = private unnamed_addr constant [7 x i8] c"argno2\00"
@485 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@486 = private unnamed_addr constant [7 x i8] c"argno3\00"
@487 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@488 = private unnamed_addr constant [7 x i8] c"argno0\00"
@489 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@490 = private unnamed_addr constant [7 x i8] c"argno0\00"
@491 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@492 = private unnamed_addr constant [7 x i8] c"argno1\00"
@493 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@494 = private unnamed_addr constant [7 x i8] c"argno2\00"
@495 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@496 = private unnamed_addr constant [7 x i8] c"argno0\00"
@497 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@498 = private unnamed_addr constant [7 x i8] c"argno1\00"
@499 = private unnamed_addr constant [7 x i8] c"argno2\00"
@500 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@501 = private unnamed_addr constant [7 x i8] c"argno3\00"
@502 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@503 = private unnamed_addr constant [7 x i8] c"argno0\00"
@504 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@505 = private unnamed_addr constant [7 x i8] c"argno0\00"
@506 = private unnamed_addr constant [7 x i8] c"argno1\00"
@507 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@508 = private unnamed_addr constant [7 x i8] c"argno0\00"
@509 = private unnamed_addr constant [7 x i8] c"argno1\00"
@510 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@511 = private unnamed_addr constant [7 x i8] c"argno0\00"
@512 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@513 = private unnamed_addr constant [7 x i8] c"argno1\00"
@514 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@515 = private unnamed_addr constant [7 x i8] c"argno0\00"
@516 = private unnamed_addr constant [7 x i8] c"argno1\00"
@517 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@518 = private unnamed_addr constant [7 x i8] c"argno0\00"
@519 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@520 = private unnamed_addr constant [7 x i8] c"argno0\00"
@521 = private unnamed_addr constant [7 x i8] c"argno1\00"
@522 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@523 = private unnamed_addr constant [7 x i8] c"argno0\00"
@524 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@525 = private unnamed_addr constant [7 x i8] c"argno1\00"
@526 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@527 = private unnamed_addr constant [7 x i8] c"argno0\00"
@528 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@529 = private unnamed_addr constant [7 x i8] c"argno0\00"
@530 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@531 = private unnamed_addr constant [7 x i8] c"argno1\00"
@532 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@533 = private unnamed_addr constant [7 x i8] c"argno0\00"
@534 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@535 = private unnamed_addr constant [7 x i8] c"argno1\00"
@536 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@537 = private unnamed_addr constant [7 x i8] c"argno0\00"
@538 = private unnamed_addr constant [7 x i8] c"argno1\00"
@539 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@540 = private unnamed_addr constant [7 x i8] c"argno0\00"
@541 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@542 = private unnamed_addr constant [7 x i8] c"argno0\00"
@543 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@544 = private unnamed_addr constant [7 x i8] c"argno0\00"
@545 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@546 = private unnamed_addr constant [7 x i8] c"argno0\00"
@547 = private unnamed_addr constant [7 x i8] c"argno1\00"
@548 = private unnamed_addr constant [7 x i8] c"argno2\00"
@549 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@550 = private unnamed_addr constant [7 x i8] c"argno0\00"
@551 = private unnamed_addr constant [7 x i8] c"argno1\00"
@552 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@553 = private unnamed_addr constant [7 x i8] c"argno0\00"
@554 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@555 = private unnamed_addr constant [7 x i8] c"argno0\00"
@556 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@557 = private unnamed_addr constant [7 x i8] c"argno0\00"
@558 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@559 = private unnamed_addr constant [7 x i8] c"argno0\00"
@560 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@561 = private unnamed_addr constant [7 x i8] c"argno0\00"
@562 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@563 = private unnamed_addr constant [7 x i8] c"argno0\00"
@564 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@565 = private unnamed_addr constant [7 x i8] c"argno0\00"
@566 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@567 = private unnamed_addr constant [7 x i8] c"argno1\00"
@568 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@569 = private unnamed_addr constant [7 x i8] c"argno0\00"
@570 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@571 = private unnamed_addr constant [7 x i8] c"argno0\00"
@572 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@573 = private unnamed_addr constant [7 x i8] c"argno1\00"
@574 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@575 = private unnamed_addr constant [7 x i8] c"argno0\00"
@576 = private unnamed_addr constant [7 x i8] c"argno1\00"
@577 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@578 = private unnamed_addr constant [7 x i8] c"argno0\00"
@579 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@580 = private unnamed_addr constant [7 x i8] c"argno0\00"
@581 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@582 = private unnamed_addr constant [7 x i8] c"argno0\00"
@583 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@584 = private unnamed_addr constant [7 x i8] c"argno0\00"
@585 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@586 = private unnamed_addr constant [7 x i8] c"argno0\00"
@587 = private unnamed_addr constant [7 x i8] c"argno1\00"
@588 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@589 = private unnamed_addr constant [7 x i8] c"argno0\00"
@590 = private unnamed_addr constant [7 x i8] c"argno1\00"
@591 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@592 = private unnamed_addr constant [7 x i8] c"argno2\00"
@593 = private unnamed_addr constant [7 x i8] c"argno0\00"
@594 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@595 = private unnamed_addr constant [7 x i8] c"argno1\00"
@596 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@597 = private unnamed_addr constant [7 x i8] c"argno0\00"
@598 = private unnamed_addr constant [7 x i8] c"argno0\00"
@599 = private unnamed_addr constant [7 x i8] c"argno1\00"
@600 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@601 = private unnamed_addr constant [7 x i8] c"argno2\00"
@602 = private unnamed_addr constant [7 x i8] c"argno3\00"
@603 = private unnamed_addr constant [7 x i8] c"argno0\00"
@604 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@605 = private unnamed_addr constant [7 x i8] c"argno1\00"
@606 = private unnamed_addr constant [7 x i8] c"argno0\00"
@607 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@608 = private unnamed_addr constant [7 x i8] c"argno0\00"
@609 = private unnamed_addr constant [7 x i8] c"argno1\00"
@610 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@611 = private unnamed_addr constant [7 x i8] c"argno0\00"
@612 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@613 = private unnamed_addr constant [7 x i8] c"argno1\00"
@614 = private unnamed_addr constant [7 x i8] c"argno0\00"
@615 = private unnamed_addr constant [7 x i8] c"argno1\00"
@616 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@617 = private unnamed_addr constant [7 x i8] c"argno0\00"
@618 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@619 = private unnamed_addr constant [7 x i8] c"argno1\00"
@620 = private unnamed_addr constant [7 x i8] c"argno2\00"
@621 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@622 = private unnamed_addr constant [7 x i8] c"argno0\00"
@623 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@624 = private unnamed_addr constant [7 x i8] c"argno1\00"
@625 = private unnamed_addr constant [7 x i8] c"argno0\00"
@626 = private unnamed_addr constant [7 x i8] c"argno0\00"
@627 = private unnamed_addr constant [7 x i8] c"argno1\00"
@.str57 = private unnamed_addr constant [64 x i8] c"/home/jl/deploy/use/src/runtime/Intrinsic/klee_div_zero_check.c\00", align 1
@.str158 = private unnamed_addr constant [15 x i8] c"divide by zero\00", align 1
@.str259 = private unnamed_addr constant [8 x i8] c"div.err\00", align 1
@.str360 = private unnamed_addr constant [5 x i8] c"argv\00", align 1
@.str461 = private unnamed_addr constant [8 x i8] c"IGNORED\00", align 1
@.str1562 = private unnamed_addr constant [16 x i8] c"overshift error\00", align 1
@.str2663 = private unnamed_addr constant [14 x i8] c"overshift.err\00", align 1
@.str764 = private unnamed_addr constant [55 x i8] c"/home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c\00", align 1
@.str1865 = private unnamed_addr constant [14 x i8] c"invalid range\00", align 1
@.str2966 = private unnamed_addr constant [5 x i8] c"user\00", align 1

; Function Attrs: nounwind uwtable
define void @usage(i32 %status) #0 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  %0 = load i32* %status.addr, align 4, !dbg !1745
  %cmp = icmp ne i32 %0, 0, !dbg !1745
  br i1 %cmp, label %if.then, label %if.else, !dbg !1745

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !1747
  %2 = load i8** @program_name, align 8, !dbg !1747
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str, i32 0, i32 0), i8* %2), !dbg !1747
  br label %if.end, !dbg !1747

if.else:                                          ; preds = %entry
  %3 = load i8** @program_name, align 8, !dbg !1748
  %4 = load i8** @program_name, align 8, !dbg !1748
  %5 = load i8** @program_name, align 8, !dbg !1748
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([127 x i8]* @.str1, i32 0, i32 0), i8* %3, i8* %4, i8* %5), !dbg !1748
  %6 = load %struct._IO_FILE** @stdout, align 8, !dbg !1750
  %call2 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([57 x i8]* @.str2, i32 0, i32 0), %struct._IO_FILE* %6), !dbg !1750
  %7 = load %struct._IO_FILE** @stdout, align 8, !dbg !1751
  %call3 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([74 x i8]* @.str3, i32 0, i32 0), %struct._IO_FILE* %7), !dbg !1751
  %8 = load %struct._IO_FILE** @stdout, align 8, !dbg !1752
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([276 x i8]* @.str4, i32 0, i32 0), %struct._IO_FILE* %8), !dbg !1752
  %9 = load %struct._IO_FILE** @stdout, align 8, !dbg !1753
  %call5 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([184 x i8]* @.str5, i32 0, i32 0), %struct._IO_FILE* %9), !dbg !1753
  %10 = load %struct._IO_FILE** @stdout, align 8, !dbg !1754
  %call6 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([398 x i8]* @.str6, i32 0, i32 0), %struct._IO_FILE* %10), !dbg !1754
  %11 = load %struct._IO_FILE** @stdout, align 8, !dbg !1755
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([45 x i8]* @.str7, i32 0, i32 0), %struct._IO_FILE* %11), !dbg !1755
  %12 = load %struct._IO_FILE** @stdout, align 8, !dbg !1756
  %call8 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([54 x i8]* @.str8, i32 0, i32 0), %struct._IO_FILE* %12), !dbg !1756
  %13 = load %struct._IO_FILE** @stdout, align 8, !dbg !1757
  %call9 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([221 x i8]* @.str9, i32 0, i32 0), %struct._IO_FILE* %13), !dbg !1757
  %14 = load %struct._IO_FILE** @stdout, align 8, !dbg !1758
  %call10 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([222 x i8]* @.str10, i32 0, i32 0), %struct._IO_FILE* %14), !dbg !1758
  %call11 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str12, i32 0, i32 0)), !dbg !1759
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load i32* %status.addr, align 4, !dbg !1760
  call void @exit(i32 %15) #17, !dbg !1760
  unreachable, !dbg !1760
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare i32 @printf(i8*, ...) #2

declare i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

; Function Attrs: nounwind uwtable
define i32 @__main_old(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %c = alloca i32, align 4
  %ok = alloca i8, align 1
  %make_backups = alloca i8, align 1
  %backup_suffix_string = alloca i8*, align 8
  %version_control_string = alloca i8*, align 8
  %x = alloca %struct.cp_options, align 8
  %target_directory = alloca i8*, align 8
  %no_target_directory = alloca i8, align 1
  %n_files = alloca i32, align 4
  %file = alloca i8**, align 8
  %st = alloca %struct.stat, align 8
  %i = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  store i8 0, i8* %make_backups, align 1, !dbg !1761
  store i8* null, i8** %version_control_string, align 8, !dbg !1762
  store i8* null, i8** %target_directory, align 8, !dbg !1763
  store i8 0, i8* %no_target_directory, align 1, !dbg !1764
  %0 = load i8*** %argv.addr, align 8, !dbg !1765
  %arrayidx = getelementptr inbounds i8** %0, i64 0, !dbg !1765
  %1 = load i8** %arrayidx, align 8, !dbg !1765
  store i8* %1, i8** @program_name, align 8, !dbg !1765
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8]* @.str13, i32 0, i32 0)) #6, !dbg !1766
  %call1 = call i32 @atexit(void ()* @close_stdout) #6, !dbg !1767
  call void @cp_option_init(%struct.cp_options* %x), !dbg !1768
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([21 x i8]* @.str14, i32 0, i32 0)) #6, !dbg !1769
  store i8* %call2, i8** %backup_suffix_string, align 8, !dbg !1769
  br label %while.cond, !dbg !1770

while.cond:                                       ; preds = %sw.bb4, %sw.bb5, %sw.bb7, %sw.bb11, %if.end26, %sw.bb27, %sw.bb28, %sw.bb29, %sw.bb30, %sw.bb31, %sw.default, %if.then, %sw.bb, %entry
  %2 = load i32* %argc.addr, align 4, !dbg !1770
  %3 = load i8*** %argv.addr, align 8, !dbg !1770
  %call3 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([11 x i8]* @.str15, i32 0, i32 0), %struct.option* getelementptr inbounds ([13 x %struct.option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8]
  store i32 %call3, i32* %c, align 4, !dbg !1770
  %cmp = icmp ne i32 %call3, -1, !dbg !1770
  br i1 %cmp, label %while.body, label %while.end, !dbg !1770

while.body:                                       ; preds = %while.cond
  %4 = load i32* %c, align 4, !dbg !1771
  switch i32 %4, label %sw.default [
    i32 98, label %sw.bb
    i32 102, label %sw.bb4
    i32 105, label %sw.bb5
    i32 128, label %sw.bb7
    i32 129, label %sw.bb11
    i32 116, label %sw.bb12
    i32 84, label %sw.bb27
    i32 117, label %sw.bb28
    i32 118, label %sw.bb29
    i32 83, label %sw.bb30
    i32 -130, label %sw.bb31
    i32 -131, label %sw.bb32
  ], !dbg !1771

sw.bb:                                            ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !1773
  %5 = load i8** @optarg, align 8, !dbg !1775
  %tobool = icmp ne i8* %5, null, !dbg !1775
  br i1 %tobool, label %if.then, label %while.cond, !dbg !1775

if.then:                                          ; preds = %sw.bb
  %6 = load i8** @optarg, align 8, !dbg !1777
  store i8* %6, i8** %version_control_string, align 8, !dbg !1777
  br label %while.cond, !dbg !1777

sw.bb4:                                           ; preds = %while.body
  %interactive = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 6, !dbg !1778
  store i32 1, i32* %interactive, align 4, !dbg !1778
  br label %while.cond, !dbg !1779

sw.bb5:                                           ; preds = %while.body
  %interactive6 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 6, !dbg !1780
  store i32 3, i32* %interactive6, align 4, !dbg !1780
  br label %while.cond, !dbg !1781

sw.bb7:                                           ; preds = %while.body
  %7 = load i8** @optarg, align 8, !dbg !1782
  %8 = load void ()** @argmatch_die, align 8, !dbg !1782
  %call8 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([8 x i8]* @.str16, i32 0, i32 0), i8* %7, i8** getelementptr inbounds ([4 x i8*]* @reply_args, i32 0, i32 0), i8* bitcast ([3 x i32]* @reply_vals to i8*), i64 4, void ()* %8), !dbg !17
  %arrayidx9 = getelementptr inbounds [3 x i32]* @reply_vals, i32 0, i64 %call8, !dbg !1782
  %9 = load i32* %arrayidx9, align 4, !dbg !1782
  %interactive10 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 6, !dbg !1782
  store i32 %9, i32* %interactive10, align 4, !dbg !1782
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* getelementptr inbounds ([55 x i8]* @.str17, i32 0, i32 0)), !dbg !1783
  br label %while.cond, !dbg !1784

sw.bb11:                                          ; preds = %while.body
  store i8 1, i8* @remove_trailing_slashes, align 1, !dbg !1785
  br label %while.cond, !dbg !1786

sw.bb12:                                          ; preds = %while.body
  %10 = load i8** %target_directory, align 8, !dbg !1787
  %tobool13 = icmp ne i8* %10, null, !dbg !1787
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !1787

if.then14:                                        ; preds = %sw.bb12
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 1, i32* (...)* null, i8* getelementptr inbounds ([38 x i8]* @.str18, i32 0, i32 0)), !dbg !1789
  br label %if.end26, !dbg !1789

if.else:                                          ; preds = %sw.bb12
  %11 = load i8** @optarg, align 8, !dbg !1790
  %call15 = call i32 @stat(i8* %11, %struct.stat* %st) #6, !dbg !1790
  %cmp16 = icmp ne i32 %call15, 0, !dbg !1790
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !1790

if.then17:                                        ; preds = %if.else
  %call18 = call i32* @__errno_location() #1, !dbg !1793
  %12 = load i32* %call18, align 4, !dbg !1793
  %conv = sext i32 %12 to i64, !dbg !1793
  %13 = inttoptr i64 %conv to i32* (...)*, !dbg !1793
  %14 = load i8** @optarg, align 8, !dbg !1793
  %call19 = call i8* @quote(i8* %14), !dbg !1793
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 1, i32* (...)* %13, i8* getelementptr inbounds ([13 x i8]* @.str19, i32 0, i32 0), i8* %call19), !dbg !1793
  br label %if.end20, !dbg !1793

if.end20:                                         ; preds = %if.then17, %if.else
  %st_mode = getelementptr inbounds %struct.stat* %st, i32 0, i32 3, !dbg !1794
  %15 = load i32* %st_mode, align 4, !dbg !1794
  %and = and i32 %15, 61440, !dbg !1794
  %cmp21 = icmp eq i32 %and, 16384, !dbg !1794
  br i1 %cmp21, label %if.end26, label %if.then23, !dbg !1794

if.then23:                                        ; preds = %if.end20
  %16 = load i8** @optarg, align 8, !dbg !1796
  %call24 = call i8* @quote(i8* %16), !dbg !1796
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 1, i32* (...)* null, i8* getelementptr inbounds ([29 x i8]* @.str20, i32 0, i32 0), i8* %call24), !dbg !1797
  br label %if.end26, !dbg !1797

if.end26:                                         ; preds = %if.end20, %if.then23, %if.then14
  %17 = load i8** @optarg, align 8, !dbg !1798
  store i8* %17, i8** %target_directory, align 8, !dbg !1798
  br label %while.cond, !dbg !1799

sw.bb27:                                          ; preds = %while.body
  store i8 1, i8* %no_target_directory, align 1, !dbg !1800
  br label %while.cond, !dbg !1801

sw.bb28:                                          ; preds = %while.body
  %update = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 20, !dbg !1802
  store i8 1, i8* %update, align 1, !dbg !1802
  br label %while.cond, !dbg !1803

sw.bb29:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 21, !dbg !1804
  store i8 1, i8* %verbose, align 1, !dbg !1804
  br label %while.cond, !dbg !1805

sw.bb30:                                          ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !1806
  %18 = load i8** @optarg, align 8, !dbg !1807
  store i8* %18, i8** %backup_suffix_string, align 8, !dbg !1807
  br label %while.cond, !dbg !1808

sw.bb31:                                          ; preds = %while.body
  call void @usage(i32 0), !dbg !1809
  br label %while.cond, !dbg !1809

sw.bb32:                                          ; preds = %while.body
  %19 = load %struct._IO_FILE** @stdout, align 8, !dbg !1810
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...)* @version_etc(%struct._IO_FILE* %19, i8* getelementptr inbounds ([3 x i8]* @.str21, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str22, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @
  call void @exit(i32 0) #17, !dbg !1810
  unreachable, !dbg !1810

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1), !dbg !1811
  br label %while.cond, !dbg !1812

while.end:                                        ; preds = %while.cond
  %20 = load i32* %argc.addr, align 4, !dbg !1813
  %21 = load i32* @optind, align 4, !dbg !1813
  %sub = sub nsw i32 %20, %21, !dbg !1813
  store i32 %sub, i32* %n_files, align 4, !dbg !1813
  %22 = load i8*** %argv.addr, align 8, !dbg !1814
  %23 = load i32* @optind, align 4, !dbg !1814
  %idx.ext = sext i32 %23 to i64, !dbg !1814
  %add.ptr = getelementptr inbounds i8** %22, i64 %idx.ext, !dbg !1814
  store i8** %add.ptr, i8*** %file, align 8, !dbg !1814
  %24 = load i32* %n_files, align 4, !dbg !1815
  %25 = load i8** %target_directory, align 8, !dbg !1815
  %tobool33 = icmp ne i8* %25, null, !dbg !1815
  %lnot = xor i1 %tobool33, true, !dbg !1815
  %lnot.ext = zext i1 %lnot to i32, !dbg !1815
  %cmp34 = icmp sle i32 %24, %lnot.ext, !dbg !1815
  br i1 %cmp34, label %if.then36, label %if.end44, !dbg !1815

if.then36:                                        ; preds = %while.end
  %26 = load i32* %n_files, align 4, !dbg !1817
  %cmp37 = icmp sle i32 %26, 0, !dbg !1817
  br i1 %cmp37, label %if.then39, label %if.else40, !dbg !1817

if.then39:                                        ; preds = %if.then36
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* getelementptr inbounds ([21 x i8]* @.str27, i32 0, i32 0)), !dbg !1820
  br label %if.end43, !dbg !1820

if.else40:                                        ; preds = %if.then36
  %27 = load i8*** %file, align 8, !dbg !1821
  %arrayidx41 = getelementptr inbounds i8** %27, i64 0, !dbg !1821
  %28 = load i8** %arrayidx41, align 8, !dbg !1821
  %call42 = call i8* @quote(i8* %28), !dbg !1821
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* getelementptr inbounds ([42 x i8]* @.str28, i32 0, i32 0), i8* %call42), !dbg !1822
  br label %if.end43

if.end43:                                         ; preds = %if.else40, %if.then39
  call void @usage(i32 1), !dbg !1823
  br label %if.end44, !dbg !1824

if.end44:                                         ; preds = %if.end43, %while.end
  %29 = load i8* %no_target_directory, align 1, !dbg !1825
  %tobool45 = trunc i8 %29 to i1, !dbg !1825
  %30 = load i8** %target_directory, align 8, !dbg !1827
  %tobool47 = icmp ne i8* %30, null, !dbg !1827
  br i1 %tobool45, label %if.then46, label %if.else56, !dbg !1825

if.then46:                                        ; preds = %if.end44
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !1827

if.then48:                                        ; preds = %if.then46
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 1, i32* (...)* null, i8* getelementptr inbounds ([70 x i8]* @.str29, i32 0, i32 0)), !dbg !1830
  br label %if.end49, !dbg !1830

if.end49:                                         ; preds = %if.then48, %if.then46
  %31 = load i32* %n_files, align 4, !dbg !1831
  %cmp50 = icmp slt i32 2, %31, !dbg !1831
  br i1 %cmp50, label %if.then52, label %if.end78, !dbg !1831

if.then52:                                        ; preds = %if.end49
  %32 = load i8*** %file, align 8, !dbg !1833
  %arrayidx53 = getelementptr inbounds i8** %32, i64 2, !dbg !1833
  %33 = load i8** %arrayidx53, align 8, !dbg !1833
  %call54 = call i8* @quote(i8* %33), !dbg !1833
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* getelementptr inbounds ([17 x i8]* @.str30, i32 0, i32 0), i8* %call54), !dbg !1833
  call void @usage(i32 1), !dbg !1835
  br label %if.end78, !dbg !1836

if.else56:                                        ; preds = %if.end44
  br i1 %tobool47, label %if.end78, label %if.then58, !dbg !1837

if.then58:                                        ; preds = %if.else56
  %34 = load i32* %n_files, align 4, !dbg !1839
  %cmp59 = icmp sle i32 2, %34, !dbg !1839
  br i1 %cmp59, label %cond.end, label %cond.false, !dbg !1839

cond.false:                                       ; preds = %if.then58
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8]* @.str31, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str32, i32 0, i32 0), i32 468, i8* getelementptr inbounds ([23 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)) #17, !dbg !1
  unreachable, !dbg !1839

cond.end:                                         ; preds = %if.then58
  %35 = load i32* %n_files, align 4, !dbg !1841
  %sub61 = sub nsw i32 %35, 1, !dbg !1841
  %idxprom = sext i32 %sub61 to i64, !dbg !1841
  %36 = load i8*** %file, align 8, !dbg !1841
  %arrayidx62 = getelementptr inbounds i8** %36, i64 %idxprom, !dbg !1841
  %37 = load i8** %arrayidx62, align 8, !dbg !1841
  %call63 = call zeroext i1 @target_directory_operand(i8* %37), !dbg !1841
  %38 = load i32* %n_files, align 4, !dbg !1843
  br i1 %call63, label %if.then64, label %if.else67, !dbg !1841

if.then64:                                        ; preds = %cond.end
  %dec = add nsw i32 %38, -1, !dbg !1843
  store i32 %dec, i32* %n_files, align 4, !dbg !1843
  %idxprom65 = sext i32 %dec to i64, !dbg !1843
  %39 = load i8*** %file, align 8, !dbg !1843
  %arrayidx66 = getelementptr inbounds i8** %39, i64 %idxprom65, !dbg !1843
  %40 = load i8** %arrayidx66, align 8, !dbg !1843
  store i8* %40, i8** %target_directory, align 8, !dbg !1843
  br label %if.end78, !dbg !1843

if.else67:                                        ; preds = %cond.end
  %cmp68 = icmp slt i32 2, %38, !dbg !1844
  br i1 %cmp68, label %if.then70, label %if.end78, !dbg !1844

if.then70:                                        ; preds = %if.else67
  %41 = load i32* %n_files, align 4, !dbg !1846
  %sub71 = sub nsw i32 %41, 1, !dbg !1846
  %idxprom72 = sext i32 %sub71 to i64, !dbg !1846
  %42 = load i8*** %file, align 8, !dbg !1846
  %arrayidx73 = getelementptr inbounds i8** %42, i64 %idxprom72, !dbg !1846
  %43 = load i8** %arrayidx73, align 8, !dbg !1846
  %call74 = call i8* @quote(i8* %43), !dbg !1846
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 1, i32* (...)* null, i8* getelementptr inbounds ([29 x i8]* @.str20, i32 0, i32 0), i8* %call74), !dbg !1847
  br label %if.end78, !dbg !1847

if.end78:                                         ; preds = %if.else56, %if.else67, %if.then70, %if.then64, %if.end49, %if.then52
  %44 = load i8** %backup_suffix_string, align 8, !dbg !1848
  %tobool79 = icmp ne i8* %44, null, !dbg !1848
  br i1 %tobool79, label %if.then80, label %if.end82, !dbg !1848

if.then80:                                        ; preds = %if.end78
  %45 = load i8** %backup_suffix_string, align 8, !dbg !1850
  %call81 = call i8* @xstrdup(i8* %45), !dbg !1850
  store i8* %call81, i8** @simple_backup_suffix, align 8, !dbg !1850
  br label %if.end82, !dbg !1850

if.end82:                                         ; preds = %if.then80, %if.end78
  %46 = load i8* %make_backups, align 1, !dbg !1851
  %tobool83 = trunc i8 %46 to i1, !dbg !1851
  br i1 %tobool83, label %cond.true85, label %cond.end88, !dbg !1851

cond.true85:                                      ; preds = %if.end82
  %47 = load i8** %version_control_string, align 8, !dbg !1852
  %call86 = call i32 @xget_version(i8* getelementptr inbounds ([12 x i8]* @.str33, i32 0, i32 0), i8* %47), !dbg !1852
  br label %cond.end88, !dbg !1852

cond.end88:                                       ; preds = %if.end82, %cond.true85
  %cond = phi i32 [ %call86, %cond.true85 ], [ 0, %if.end82 ], !dbg !1852
  %backup_type = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 0, !dbg !1852
  store i32 %cond, i32* %backup_type, align 4, !dbg !1852
  call void @hash_init(), !dbg !1853
  %48 = load i8** %target_directory, align 8, !dbg !1854
  %tobool89 = icmp ne i8* %48, null, !dbg !1854
  br i1 %tobool89, label %if.then90, label %if.else105, !dbg !1854

if.then90:                                        ; preds = %cond.end88
  %49 = load i32* %n_files, align 4, !dbg !1856
  %cmp91 = icmp sle i32 2, %49, !dbg !1856
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !1856

if.then93:                                        ; preds = %if.then90
  call void @dest_info_init(%struct.cp_options* %x), !dbg !1859
  br label %if.end94, !dbg !1859

if.end94:                                         ; preds = %if.then93, %if.then90
  store i8 1, i8* %ok, align 1, !dbg !1860
  store i32 0, i32* %i, align 4, !dbg !1861
  br label %for.cond, !dbg !1861

for.cond:                                         ; preds = %for.body, %if.end94
  %50 = load i32* %i, align 4, !dbg !1861
  %51 = load i32* %n_files, align 4, !dbg !1861
  %cmp95 = icmp slt i32 %50, %51, !dbg !1861
  br i1 %cmp95, label %for.body, label %if.end110, !dbg !1861

for.body:                                         ; preds = %for.cond
  %52 = load i32* %i, align 4, !dbg !1863
  %idxprom97 = sext i32 %52 to i64, !dbg !1863
  %53 = load i8*** %file, align 8, !dbg !1863
  %arrayidx98 = getelementptr inbounds i8** %53, i64 %idxprom97, !dbg !1863
  %54 = load i8** %arrayidx98, align 8, !dbg !1863
  %55 = load i8** %target_directory, align 8, !dbg !1863
  %call99 = call zeroext i1 @movefile(i8* %54, i8* %55, i1 zeroext true, %struct.cp_options* %x), !dbg !1863
  %conv100 = zext i1 %call99 to i32, !dbg !1863
  %56 = load i8* %ok, align 1, !dbg !1863
  %tobool101 = trunc i8 %56 to i1, !dbg !1863
  %conv102 = zext i1 %tobool101 to i32, !dbg !1863
  %and103 = and i32 %conv102, %conv100, !dbg !1863
  %tobool104 = icmp ne i32 %and103, 0, !dbg !1863
  %frombool = zext i1 %tobool104 to i8, !dbg !1863
  store i8 %frombool, i8* %ok, align 1, !dbg !1863
  %57 = load i32* %i, align 4, !dbg !1861
  %inc = add nsw i32 %57, 1, !dbg !1861
  store i32 %inc, i32* %i, align 4, !dbg !1861
  br label %for.cond, !dbg !1861

if.else105:                                       ; preds = %cond.end88
  %58 = load i8*** %file, align 8, !dbg !1864
  %arrayidx106 = getelementptr inbounds i8** %58, i64 0, !dbg !1864
  %59 = load i8** %arrayidx106, align 8, !dbg !1864
  %60 = load i8*** %file, align 8, !dbg !1864
  %arrayidx107 = getelementptr inbounds i8** %60, i64 1, !dbg !1864
  %61 = load i8** %arrayidx107, align 8, !dbg !1864
  %call108 = call zeroext i1 @movefile(i8* %59, i8* %61, i1 zeroext false, %struct.cp_options* %x), !dbg !1864
  %frombool109 = zext i1 %call108 to i8, !dbg !1864
  store i8 %frombool109, i8* %ok, align 1, !dbg !1864
  br label %if.end110

if.end110:                                        ; preds = %for.cond, %if.else105
  %62 = load i8* %ok, align 1, !dbg !1865
  %tobool111 = trunc i8 %62 to i1, !dbg !1865
  %cond113 = select i1 %tobool111, i32 0, i32 1, !dbg !1865
  call void @exit(i32 %cond113) #17, !dbg !1865
  unreachable, !dbg !1865
}

; Function Attrs: nounwind
declare i8* @setlocale(i32, i8*) #4

; Function Attrs: nounwind
declare i32 @atexit(void ()*) #4

; Function Attrs: nounwind uwtable
define internal void @cp_option_init(%struct.cp_options* %x) #0 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  %0 = load %struct.cp_options** %x.addr, align 8, !dbg !1866
  %copy_as_regular = getelementptr inbounds %struct.cp_options* %0, i32 0, i32 1, !dbg !1866
  store i8 0, i8* %copy_as_regular, align 1, !dbg !1866
  %1 = load %struct.cp_options** %x.addr, align 8, !dbg !1867
  %dereference = getelementptr inbounds %struct.cp_options* %1, i32 0, i32 2, !dbg !1867
  store i32 2, i32* %dereference, align 4, !dbg !1867
  %2 = load %struct.cp_options** %x.addr, align 8, !dbg !1868
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options* %2, i32 0, i32 3, !dbg !1868
  store i8 0, i8* %unlink_dest_before_opening, align 1, !dbg !1868
  %3 = load %struct.cp_options** %x.addr, align 8, !dbg !1869
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options* %3, i32 0, i32 4, !dbg !1869
  store i8 0, i8* %unlink_dest_after_failed_open, align 1, !dbg !1869
  %4 = load %struct.cp_options** %x.addr, align 8, !dbg !1870
  %hard_link = getelementptr inbounds %struct.cp_options* %4, i32 0, i32 5, !dbg !1870
  store i8 0, i8* %hard_link, align 1, !dbg !1870
  %5 = load %struct.cp_options** %x.addr, align 8, !dbg !1871
  %interactive = getelementptr inbounds %struct.cp_options* %5, i32 0, i32 6, !dbg !1871
  store i32 4, i32* %interactive, align 4, !dbg !1871
  %6 = load %struct.cp_options** %x.addr, align 8, !dbg !1872
  %move_mode = getelementptr inbounds %struct.cp_options* %6, i32 0, i32 7, !dbg !1872
  store i8 1, i8* %move_mode, align 1, !dbg !1872
  %call = call zeroext i1 @chown_privileges(), !dbg !1873
  %7 = load %struct.cp_options** %x.addr, align 8, !dbg !1873
  %chown_privileges = getelementptr inbounds %struct.cp_options* %7, i32 0, i32 8, !dbg !1873
  %frombool = zext i1 %call to i8, !dbg !1873
  store i8 %frombool, i8* %chown_privileges, align 1, !dbg !1873
  %8 = load %struct.cp_options** %x.addr, align 8, !dbg !1874
  %one_file_system = getelementptr inbounds %struct.cp_options* %8, i32 0, i32 9, !dbg !1874
  store i8 0, i8* %one_file_system, align 1, !dbg !1874
  %9 = load %struct.cp_options** %x.addr, align 8, !dbg !1875
  %preserve_ownership = getelementptr inbounds %struct.cp_options* %9, i32 0, i32 10, !dbg !1875
  store i8 1, i8* %preserve_ownership, align 1, !dbg !1875
  %10 = load %struct.cp_options** %x.addr, align 8, !dbg !1876
  %preserve_links = getelementptr inbounds %struct.cp_options* %10, i32 0, i32 13, !dbg !1876
  store i8 1, i8* %preserve_links, align 1, !dbg !1876
  %11 = load %struct.cp_options** %x.addr, align 8, !dbg !1877
  %preserve_mode = getelementptr inbounds %struct.cp_options* %11, i32 0, i32 11, !dbg !1877
  store i8 1, i8* %preserve_mode, align 1, !dbg !1877
  %12 = load %struct.cp_options** %x.addr, align 8, !dbg !1878
  %preserve_timestamps = getelementptr inbounds %struct.cp_options* %12, i32 0, i32 12, !dbg !1878
  store i8 1, i8* %preserve_timestamps, align 1, !dbg !1878
  %13 = load %struct.cp_options** %x.addr, align 8, !dbg !1879
  %require_preserve = getelementptr inbounds %struct.cp_options* %13, i32 0, i32 14, !dbg !1879
  store i8 0, i8* %require_preserve, align 1, !dbg !1879
  %14 = load %struct.cp_options** %x.addr, align 8, !dbg !1880
  %recursive = getelementptr inbounds %struct.cp_options* %14, i32 0, i32 15, !dbg !1880
  store i8 1, i8* %recursive, align 1, !dbg !1880
  %15 = load %struct.cp_options** %x.addr, align 8, !dbg !1881
  %sparse_mode = getelementptr inbounds %struct.cp_options* %15, i32 0, i32 18, !dbg !1881
  store i32 2, i32* %sparse_mode, align 4, !dbg !1881
  %16 = load %struct.cp_options** %x.addr, align 8, !dbg !1882
  %symbolic_link = getelementptr inbounds %struct.cp_options* %16, i32 0, i32 19, !dbg !1882
  store i8 0, i8* %symbolic_link, align 1, !dbg !1882
  %17 = load %struct.cp_options** %x.addr, align 8, !dbg !1883
  %set_mode = getelementptr inbounds %struct.cp_options* %17, i32 0, i32 16, !dbg !1883
  store i8 0, i8* %set_mode, align 1, !dbg !1883
  %18 = load %struct.cp_options** %x.addr, align 8, !dbg !1884
  %mode = getelementptr inbounds %struct.cp_options* %18, i32 0, i32 17, !dbg !1884
  store i32 0, i32* %mode, align 4, !dbg !1884
  %call1 = call i32 @isatty(i32 0) #6, !dbg !1885
  %tobool = icmp ne i32 %call1, 0, !dbg !1885
  %19 = load %struct.cp_options** %x.addr, align 8, !dbg !1885
  %stdin_tty = getelementptr inbounds %struct.cp_options* %19, i32 0, i32 22, !dbg !1885
  %frombool2 = zext i1 %tobool to i8, !dbg !1885
  store i8 %frombool2, i8* %stdin_tty, align 1, !dbg !1885
  %20 = load %struct.cp_options** %x.addr, align 8, !dbg !1886
  %update = getelementptr inbounds %struct.cp_options* %20, i32 0, i32 20, !dbg !1886
  store i8 0, i8* %update, align 1, !dbg !1886
  %21 = load %struct.cp_options** %x.addr, align 8, !dbg !1887
  %verbose = getelementptr inbounds %struct.cp_options* %21, i32 0, i32 21, !dbg !1887
  store i8 0, i8* %verbose, align 1, !dbg !1887
  %22 = load %struct.cp_options** %x.addr, align 8, !dbg !1888
  %dest_info = getelementptr inbounds %struct.cp_options* %22, i32 0, i32 23, !dbg !1888
  store %struct.hash_table* null, %struct.hash_table** %dest_info, align 8, !dbg !1888
  %23 = load %struct.cp_options** %x.addr, align 8, !dbg !1889
  %src_info = getelementptr inbounds %struct.cp_options* %23, i32 0, i32 24, !dbg !1889
  store %struct.hash_table* null, %struct.hash_table** %src_info, align 8, !dbg !1889
  ret void, !dbg !1890
}

; Function Attrs: nounwind
declare i8* @getenv(i8*) #4

; Function Attrs: nounwind
declare i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #4

; Function Attrs: nounwind uwtable
define internal void @klee_compatible_error(i32 %status, i32* (...)* %__errno_location, i8* %format, ...) #0 {
entry:
  %status.addr = alloca i32, align 4
  %__errno_location.addr = alloca i32* (...)*, align 8
  %format.addr = alloca i8*, align 8
  %err_args = alloca [1 x %struct.__va_list_tag], align 16
  store i32 %status, i32* %status.addr, align 4
  store i32* (...)* %__errno_location, i32* (...)** %__errno_location.addr, align 8
  store i8* %format, i8** %format.addr, align 8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !1891
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !1891
  call void @llvm.va_start(i8* %arraydecay1), !dbg !1891
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1892
  %1 = load i8** %format.addr, align 8, !dbg !1892
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !1892
  %call = call i32 @vfprintf(%struct._IO_FILE* %0, i8* %1, %struct.__va_list_tag* %arraydecay2), !dbg !1892
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !1893
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !1893
  call void @llvm.va_end(i8* %arraydecay34), !dbg !1893
  %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !1894
  %call5 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %2), !dbg !1894
  %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !1895
  %call6 = call i32 @fflush_unlocked(%struct._IO_FILE* %3), !dbg !1895
  %4 = load i32* %status.addr, align 4, !dbg !1896
  %tobool = icmp ne i32 %4, 0, !dbg !1896
  br i1 %tobool, label %if.then, label %if.end, !dbg !1896

if.then:                                          ; preds = %entry
  %5 = load i32* %status.addr, align 4, !dbg !1898
  call void @exit(i32 %5) #17, !dbg !1898
  unreachable, !dbg !1898

if.end:                                           ; preds = %entry
  ret void, !dbg !1900
}

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #3

; Function Attrs: nounwind uwtable
define internal zeroext i1 @target_directory_operand(i8* %file) #0 {
entry:
  %file.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  %err = alloca i32, align 4
  %is_a_dir = alloca i8, align 1
  store i8* %file, i8** %file.addr, align 8
  %0 = load i8** %file.addr, align 8, !dbg !1901
  %call = call i32 @stat(i8* %0, %struct.stat* %st) #6, !dbg !1901
  %cmp = icmp eq i32 %call, 0, !dbg !1901
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !1901

cond.false:                                       ; preds = %entry
  %call1 = call i32* @__errno_location() #1, !dbg !1901
  %1 = load i32* %call1, align 4, !dbg !1901
  br label %cond.end, !dbg !1901

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %1, %cond.false ], [ 0, %entry ], !dbg !1901
  store i32 %cond, i32* %err, align 4, !dbg !1901
  %2 = load i32* %err, align 4, !dbg !1902
  %tobool = icmp ne i32 %2, 0, !dbg !1902
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !1902

land.rhs:                                         ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat* %st, i32 0, i32 3, !dbg !1902
  %3 = load i32* %st_mode, align 4, !dbg !1902
  %and = and i32 %3, 61440, !dbg !1902
  %cmp2 = icmp eq i32 %and, 16384, !dbg !1902
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %4 = phi i1 [ false, %cond.end ], [ %cmp2, %land.rhs ]
  %frombool = zext i1 %4 to i8
  store i8 %frombool, i8* %is_a_dir, align 1
  %5 = load i32* %err, align 4, !dbg !1903
  %tobool3 = icmp ne i32 %5, 0, !dbg !1903
  %6 = load i32* %err, align 4, !dbg !1903
  %cmp4 = icmp ne i32 %6, 2, !dbg !1903
  %or.cond = and i1 %tobool3, %cmp4, !dbg !1903
  br i1 %or.cond, label %if.then, label %if.end, !dbg !1903

if.then:                                          ; preds = %land.end
  %7 = load i32* %err, align 4, !dbg !1905
  %conv = sext i32 %7 to i64, !dbg !1905
  %8 = inttoptr i64 %conv to i32* (...)*, !dbg !1905
  %9 = load i8** %file.addr, align 8, !dbg !1905
  %call5 = call i8* @quote(i8* %9), !dbg !1905
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 1, i32* (...)* %8, i8* getelementptr inbounds ([13 x i8]* @.str19, i32 0, i32 0), i8* %call5), !dbg !1905
  br label %if.end, !dbg !1905

if.end:                                           ; preds = %if.then, %land.end
  %10 = load i8* %is_a_dir, align 1, !dbg !1906
  %tobool6 = trunc i8 %10 to i1, !dbg !1906
  ret i1 %tobool6, !dbg !1906
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @movefile(i8* %source, i8* %dest, i1 zeroext %dest_is_dir, %struct.cp_options* %x) #0 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %dest_is_dir.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %ok = alloca i8, align 1
  %src_basename = alloca i8*, align 8
  %new_dest = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8
  store i8* %dest, i8** %dest.addr, align 8
  %frombool = zext i1 %dest_is_dir to i8
  store i8 %frombool, i8* %dest_is_dir.addr, align 1
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  %0 = load i8* @remove_trailing_slashes, align 1, !dbg !1907
  %tobool = trunc i8 %0 to i1, !dbg !1907
  br i1 %tobool, label %if.then, label %if.end, !dbg !1907

if.then:                                          ; preds = %entry
  %1 = load i8** %source.addr, align 8, !dbg !1909
  %call = call zeroext i1 @strip_trailing_slashes(i8* %1), !dbg !1909
  br label %if.end, !dbg !1909

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8* %dest_is_dir.addr, align 1, !dbg !1910
  %tobool1 = trunc i8 %2 to i1, !dbg !1910
  %3 = load i8** %source.addr, align 8, !dbg !1912
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !1910

if.then2:                                         ; preds = %if.end
  %call3 = call i8* @last_component(i8* %3), !dbg !1912
  store i8* %call3, i8** %src_basename, align 8, !dbg !1912
  %4 = load i8** %dest.addr, align 8, !dbg !1914
  %5 = load i8** %src_basename, align 8, !dbg !1914
  %call4 = call i8* @file_name_concat(i8* %4, i8* %5, i8** null), !dbg !1914
  store i8* %call4, i8** %new_dest, align 8, !dbg !1914
  %6 = load i8** %new_dest, align 8, !dbg !1915
  %call5 = call zeroext i1 @strip_trailing_slashes(i8* %6), !dbg !1915
  %7 = load i8** %source.addr, align 8, !dbg !1916
  %8 = load i8** %new_dest, align 8, !dbg !1916
  %9 = load %struct.cp_options** %x.addr, align 8, !dbg !1916
  %call6 = call zeroext i1 @do_move(i8* %7, i8* %8, %struct.cp_options* %9), !dbg !1916
  %frombool7 = zext i1 %call6 to i8, !dbg !1916
  store i8 %frombool7, i8* %ok, align 1, !dbg !1916
  %10 = load i8** %new_dest, align 8, !dbg !1917
  call void @free(i8* %10) #6, !dbg !1917
  br label %if.end10, !dbg !1918

if.else:                                          ; preds = %if.end
  %11 = load i8** %dest.addr, align 8, !dbg !1919
  %12 = load %struct.cp_options** %x.addr, align 8, !dbg !1919
  %call8 = call zeroext i1 @do_move(i8* %3, i8* %11, %struct.cp_options* %12), !dbg !1919
  %frombool9 = zext i1 %call8 to i8, !dbg !1919
  store i8 %frombool9, i8* %ok, align 1, !dbg !1919
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then2
  %13 = load i8* %ok, align 1, !dbg !1921
  %tobool11 = trunc i8 %13 to i1, !dbg !1921
  ret i1 %tobool11, !dbg !1921
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @do_move(i8* %source, i8* %dest, %struct.cp_options* %x) #0 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %copy_into_self = alloca i8, align 1
  %rename_succeeded = alloca i8, align 1
  %ok = alloca i8, align 1
  %dir_to_remove = alloca i8*, align 8
  %rm_options = alloca %struct.rm_options, align 8
  %status = alloca i32, align 4
  store i8* %source, i8** %source.addr, align 8
  store i8* %dest, i8** %dest.addr, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  %0 = load i8** %source.addr, align 8, !dbg !1922
  %1 = load i8** %dest.addr, align 8, !dbg !1922
  %2 = load %struct.cp_options** %x.addr, align 8, !dbg !1922
  %call = call zeroext i1 @copy(i8* %0, i8* %1, i1 zeroext false, %struct.cp_options* %2, i8* %copy_into_self, i8* %rename_succeeded), !dbg !1922
  %frombool = zext i1 %call to i8, !dbg !1922
  store i8 %frombool, i8* %ok, align 1, !dbg !1922
  %3 = load i8* %ok, align 1, !dbg !1923
  %tobool = trunc i8 %3 to i1, !dbg !1923
  br i1 %tobool, label %if.then, label %if.end20, !dbg !1923

if.then:                                          ; preds = %entry
  %4 = load i8* %copy_into_self, align 1, !dbg !1925
  %tobool1 = trunc i8 %4 to i1, !dbg !1925
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !1925

if.then2:                                         ; preds = %if.then
  store i8* null, i8** %dir_to_remove, align 8, !dbg !1928
  store i8 0, i8* %ok, align 1, !dbg !1930
  br label %if.end6, !dbg !1931

if.else:                                          ; preds = %if.then
  %5 = load i8* %rename_succeeded, align 1, !dbg !1932
  %tobool3 = trunc i8 %5 to i1, !dbg !1932
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !1932

if.then4:                                         ; preds = %if.else
  store i8* null, i8** %dir_to_remove, align 8, !dbg !1934
  br label %if.end6, !dbg !1936

if.else5:                                         ; preds = %if.else
  %6 = load i8** %source.addr, align 8, !dbg !1937
  store i8* %6, i8** %dir_to_remove, align 8, !dbg !1937
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.else5, %if.then2
  %7 = load i8** %dir_to_remove, align 8, !dbg !1939
  %cmp = icmp ne i8* %7, null, !dbg !1939
  br i1 %cmp, label %if.then7, label %if.end20, !dbg !1939

if.then7:                                         ; preds = %if.end6
  call void @rm_option_init(%struct.rm_options* %rm_options), !dbg !1941
  %8 = load %struct.cp_options** %x.addr, align 8, !dbg !1943
  %verbose = getelementptr inbounds %struct.cp_options* %8, i32 0, i32 21, !dbg !1943
  %9 = load i8* %verbose, align 1, !dbg !1943
  %tobool8 = trunc i8 %9 to i1, !dbg !1943
  %verbose9 = getelementptr inbounds %struct.rm_options* %rm_options, i32 0, i32 6, !dbg !1943
  %frombool10 = zext i1 %tobool8 to i8, !dbg !1943
  store i8 %frombool10, i8* %verbose9, align 1, !dbg !1943
  %call11 = call i32 @rm(i64 1, i8** %dir_to_remove, %struct.rm_options* %rm_options), !dbg !1944
  store i32 %call11, i32* %status, align 4, !dbg !1944
  %10 = load i32* %status, align 4, !dbg !1945
  %cmp12 = icmp eq i32 %10, 2, !dbg !1945
  %11 = load i32* %status, align 4, !dbg !1945
  %cmp13 = icmp eq i32 %11, 3, !dbg !1945
  %or.cond = or i1 %cmp12, %cmp13, !dbg !1945
  %12 = load i32* %status, align 4, !dbg !1945
  %cmp15 = icmp eq i32 %12, 4, !dbg !1945
  %or.cond1 = or i1 %or.cond, %cmp15, !dbg !1945
  br i1 %or.cond1, label %cond.end, label %cond.false, !dbg !1945

cond.false:                                       ; preds = %if.then7
  call void @__assert_fail(i8* getelementptr inbounds ([76 x i8]* @.str34, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str32, i32 0, i32 0), i32 248, i8* getelementptr inbounds ([69 x i8]* @__PRETTY_FUNCTION__.do_move, i32 0, i32 0)) #17, !dbg
  unreachable, !dbg !1945

cond.end:                                         ; preds = %if.then7
  %13 = load i32* %status, align 4, !dbg !1946
  %cmp16 = icmp eq i32 %13, 4, !dbg !1946
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !1946

if.then17:                                        ; preds = %cond.end
  store i8 0, i8* %ok, align 1, !dbg !1948
  br label %if.end20, !dbg !1948

if.end20:                                         ; preds = %if.end6, %if.then17, %cond.end, %entry
  %14 = load i8* %ok, align 1, !dbg !1949
  %tobool21 = trunc i8 %14 to i1, !dbg !1949
  ret i1 %tobool21, !dbg !1949
}

; Function Attrs: nounwind
declare void @free(i8*) #4

; Function Attrs: nounwind uwtable
define internal void @rm_option_init(%struct.rm_options* %x) #0 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  %0 = load %struct.rm_options** %x.addr, align 8, !dbg !1950
  %ignore_missing_files = getelementptr inbounds %struct.rm_options* %0, i32 0, i32 0, !dbg !1950
  store i8 0, i8* %ignore_missing_files, align 1, !dbg !1950
  %1 = load %struct.rm_options** %x.addr, align 8, !dbg !1951
  %root_dev_ino = getelementptr inbounds %struct.rm_options* %1, i32 0, i32 4, !dbg !1951
  store %struct.dev_ino* null, %struct.dev_ino** %root_dev_ino, align 8, !dbg !1951
  %2 = load %struct.rm_options** %x.addr, align 8, !dbg !1952
  %recursive = getelementptr inbounds %struct.rm_options* %2, i32 0, i32 3, !dbg !1952
  store i8 1, i8* %recursive, align 1, !dbg !1952
  %3 = load %struct.rm_options** %x.addr, align 8, !dbg !1953
  %one_file_system = getelementptr inbounds %struct.rm_options* %3, i32 0, i32 2, !dbg !1953
  store i8 0, i8* %one_file_system, align 1, !dbg !1953
  %call = call i64 @klee_change(i64 0, i64 5), !dbg !1954
  %conv = trunc i64 %call to i32, !dbg !1954
  %4 = load %struct.rm_options** %x.addr, align 8, !dbg !1954
  %interactive = getelementptr inbounds %struct.rm_options* %4, i32 0, i32 1, !dbg !1954
  store i32 %conv, i32* %interactive, align 4, !dbg !1954
  %5 = load %struct.rm_options** %x.addr, align 8, !dbg !1955
  %stdin_tty = getelementptr inbounds %struct.rm_options* %5, i32 0, i32 5, !dbg !1955
  store i8 0, i8* %stdin_tty, align 1, !dbg !1955
  %6 = load %struct.rm_options** %x.addr, align 8, !dbg !1956
  %verbose = getelementptr inbounds %struct.rm_options* %6, i32 0, i32 6, !dbg !1956
  store i8 0, i8* %verbose, align 1, !dbg !1956
  %7 = load %struct.rm_options** %x.addr, align 8, !dbg !1957
  %require_restore_cwd = getelementptr inbounds %struct.rm_options* %7, i32 0, i32 7, !dbg !1957
  store i8 1, i8* %require_restore_cwd, align 1, !dbg !1957
  ret void, !dbg !1958
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

declare i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

declare i32 @putc_unlocked(i32, %struct._IO_FILE*) #2

declare i32 @fflush_unlocked(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare i32 @isatty(i32) #4

; Function Attrs: nounwind uwtable
define void @dest_info_init(%struct.cp_options* %x) #0 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !1959
  %0 = load %struct.cp_options** %x.addr, align 8, !dbg !1959
  %dest_info = getelementptr inbounds %struct.cp_options* %0, i32 0, i32 23, !dbg !1959
  store %struct.hash_table* %call, %struct.hash_table** %dest_info, align 8, !dbg !1959
  ret void, !dbg !1960
}

; Function Attrs: nounwind uwtable
define void @src_info_init(%struct.cp_options* %x) #0 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !1961
  %0 = load %struct.cp_options** %x.addr, align 8, !dbg !1961
  %src_info = getelementptr inbounds %struct.cp_options* %0, i32 0, i32 24, !dbg !1961
  store %struct.hash_table* %call, %struct.hash_table** %src_info, align 8, !dbg !1961
  ret void, !dbg !1962
}

; Function Attrs: nounwind uwtable
define zeroext i1 @copy(i8* %src_name, i8* %dst_name, i1 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) #0 {
entry:
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %nonexistent_dst.addr = alloca i8, align 1
  %options.addr = alloca %struct.cp_options*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  store i8* %src_name, i8** %src_name.addr, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  %frombool = zext i1 %nonexistent_dst to i8
  store i8 %frombool, i8* %nonexistent_dst.addr, align 1
  store %struct.cp_options* %options, %struct.cp_options** %options.addr, align 8
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8
  %0 = load %struct.cp_options** %options.addr, align 8, !dbg !1963
  %call = call zeroext i1 @valid_options(%struct.cp_options* %0), !dbg !1963
  br i1 %call, label %cond.end, label %cond.false, !dbg !1963

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8]* @.str50, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str151, i32 0, i32 0), i32 1939, i8* getelementptr inbounds ([91 x i8]* @__PRETTY_FUNCTION__.copy, i32 0, i32 0)) #17, !dbg 
  unreachable, !dbg !1963

cond.end:                                         ; preds = %entry
  %1 = load i8** %src_name.addr, align 8, !dbg !1964
  store i8* %1, i8** @top_level_src_name, align 8, !dbg !1964
  %2 = load i8** %dst_name.addr, align 8, !dbg !1965
  store i8* %2, i8** @top_level_dst_name, align 8, !dbg !1965
  %3 = load i8** %src_name.addr, align 8, !dbg !1966
  %4 = load i8** %dst_name.addr, align 8, !dbg !1966
  %5 = load i8* %nonexistent_dst.addr, align 1, !dbg !1966
  %tobool = trunc i8 %5 to i1, !dbg !1966
  %6 = load %struct.cp_options** %options.addr, align 8, !dbg !1966
  %7 = load i8** %copy_into_self.addr, align 8, !dbg !1966
  %8 = load i8** %rename_succeeded.addr, align 8, !dbg !1966
  %call1 = call zeroext i1 @copy_internal(i8* %3, i8* %4, i1 zeroext %tobool, i64 0, %struct.dir_list* null, %struct.cp_options* %6, i1 zeroext true, i8* %7, i8* %8), !dbg !1966
  ret i1 %call1, !dbg !1966
}

; Function Attrs: nounwind uwtable
define zeroext i1 @chown_privileges() #0 {
entry:
  %call = call i32 @geteuid() #6, !dbg !1967
  %cmp = icmp eq i32 %call, 0, !dbg !1967
  ret i1 %cmp, !dbg !1967
}

; Function Attrs: nounwind
declare i32 @geteuid() #4

; Function Attrs: nounwind uwtable
define zeroext i1 @chown_failure_ok(%struct.cp_options* %x) #0 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  %call = call i32* @__errno_location() #1, !dbg !1968
  %0 = load i32* %call, align 4, !dbg !1968
  %cmp = icmp eq i32 %0, 1, !dbg !1968
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !1968

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #1, !dbg !1968
  %1 = load i32* %call1, align 4, !dbg !1968
  %cmp2 = icmp eq i32 %1, 22, !dbg !1968
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !1968

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options** %x.addr, align 8, !dbg !1968
  %chown_privileges = getelementptr inbounds %struct.cp_options* %2, i32 0, i32 8, !dbg !1968
  %3 = load i8* %chown_privileges, align 1, !dbg !1968
  %tobool = trunc i8 %3 to i1, !dbg !1968
  %lnot = xor i1 %tobool, true, !dbg !1968
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ]
  ret i1 %4, !dbg !1969
}

; Function Attrs: nounwind uwtable
define i32 @cached_umask() #0 {
entry:
  %0 = load i32* @cached_umask.mask, align 4, !dbg !1970
  %cmp = icmp eq i32 %0, -1, !dbg !1970
  br i1 %cmp, label %if.then, label %if.end, !dbg !1970

if.then:                                          ; preds = %entry
  %call = call i32 @umask(i32 0) #6, !dbg !1972
  store i32 %call, i32* @cached_umask.mask, align 4, !dbg !1972
  %1 = load i32* @cached_umask.mask, align 4, !dbg !1974
  %call1 = call i32 @umask(i32 %1) #6, !dbg !1974
  br label %if.end, !dbg !1975

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32* @cached_umask.mask, align 4, !dbg !1976
  ret i32 %2, !dbg !1976
}

; Function Attrs: nounwind
declare i32 @umask(i32) #4

; Function Attrs: nounwind
declare i32 @lstat(i8*, %struct.stat*) #4

; Function Attrs: nounwind
declare i32 @unlink(i8*) #4

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #7

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: nounwind
declare i32 @rename(i8*, i8*) #4

; Function Attrs: nounwind
declare i32 @link(i8*, i8*) #4

; Function Attrs: nounwind
declare i32 @mkdir(i8*, i32) #4

; Function Attrs: nounwind
declare i32 @chmod(i8*, i32) #4

; Function Attrs: nounwind
declare i32 @symlink(i8*, i8*) #4

; Function Attrs: nounwind
declare i32 @mknod(i8*, i32, i64) #4

; Function Attrs: nounwind
declare i32 @mkfifo(i8*, i32) #4

; Function Attrs: nounwind
declare i32 @lchown(i8*, i32, i32) #4

; Function Attrs: nounwind
declare i32 @fchown(i32, i32, i32) #4

; Function Attrs: nounwind
declare i32 @chown(i8*, i32, i32) #4

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat*) #4

; Function Attrs: nounwind readnone
declare i32 @getpagesize() #5

declare i64 @read(i32, i8*, i64) #2

; Function Attrs: nounwind
declare i64 @lseek(i32, i64, i32) #4

; Function Attrs: nounwind
declare i32 @ftruncate(i32, i64) #4

declare i32 @close(i32) #2

; Function Attrs: nounwind
declare i32 @fchmod(i32, i32) #4

declare i32 @putchar_unlocked(i32) #2

; Function Attrs: nounwind
declare i32 @euidaccess(i8*, i32) #4

; Function Attrs: nounwind uwtable
define internal i64 @triple_hash(i8* %x, i64 %table_size) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8
  %tmp = alloca i64, align 8
  store i8* %x, i8** %x.addr, align 8
  store i64 %table_size, i64* %table_size.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !1977
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !1977
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !1977
  %2 = load %struct.F_triple** %p, align 8, !dbg !1978
  %name = getelementptr inbounds %struct.F_triple* %2, i32 0, i32 0, !dbg !1978
  %3 = load i8** %name, align 8, !dbg !1978
  %4 = load i64* %table_size.addr, align 8, !dbg !1978
  %call = call i64 @hash_pjw(i8* %3, i64 %4), !dbg !1978
  store i64 %call, i64* %tmp, align 8, !dbg !1978
  %5 = load i64* %tmp, align 8, !dbg !1979
  %6 = load %struct.F_triple** %p, align 8, !dbg !1979
  %st_ino = getelementptr inbounds %struct.F_triple* %6, i32 0, i32 1, !dbg !1979
  %7 = load i64* %st_ino, align 8, !dbg !1979
  %or = or i64 %5, %7, !dbg !1979
  %8 = load i64* %table_size.addr, align 8, !dbg !1979
  %int_cast_to_i64 = bitcast i64 %8 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !1979
  %rem = urem i64 %or, %8, !dbg !1979
  ret i64 %rem, !dbg !1979
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @triple_compare(i8* %x, i8* %y) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8
  %b = alloca %struct.F_triple*, align 8
  store i8* %x, i8** %x.addr, align 8
  store i8* %y, i8** %y.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !1980
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !1980
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !1980
  %2 = load i8** %y.addr, align 8, !dbg !1981
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !1981
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !1981
  %4 = load %struct.F_triple** %a, align 8, !dbg !1982
  %st_ino = getelementptr inbounds %struct.F_triple* %4, i32 0, i32 1, !dbg !1982
  %5 = load i64* %st_ino, align 8, !dbg !1982
  %6 = load %struct.F_triple** %b, align 8, !dbg !1982
  %st_ino1 = getelementptr inbounds %struct.F_triple* %6, i32 0, i32 1, !dbg !1982
  %7 = load i64* %st_ino1, align 8, !dbg !1982
  %cmp = icmp eq i64 %5, %7, !dbg !1982
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !1982

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple** %a, align 8, !dbg !1982
  %st_dev = getelementptr inbounds %struct.F_triple* %8, i32 0, i32 2, !dbg !1982
  %9 = load i64* %st_dev, align 8, !dbg !1982
  %10 = load %struct.F_triple** %b, align 8, !dbg !1982
  %st_dev2 = getelementptr inbounds %struct.F_triple* %10, i32 0, i32 2, !dbg !1982
  %11 = load i64* %st_dev2, align 8, !dbg !1982
  %cmp3 = icmp eq i64 %9, %11, !dbg !1982
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !1982

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple** %a, align 8, !dbg !1982
  %name = getelementptr inbounds %struct.F_triple* %12, i32 0, i32 0, !dbg !1982
  %13 = load i8** %name, align 8, !dbg !1982
  %14 = load %struct.F_triple** %b, align 8, !dbg !1982
  %name4 = getelementptr inbounds %struct.F_triple* %14, i32 0, i32 0, !dbg !1982
  %15 = load i8** %name4, align 8, !dbg !1982
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !1982
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ]
  %cond = select i1 %16, i32 1, i32 0
  %tobool = icmp ne i32 %cond, 0
  ret i1 %tobool, !dbg !1983
}

; Function Attrs: nounwind uwtable
define internal void @triple_free(i8* %x) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8
  store i8* %x, i8** %x.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !1984
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !1984
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !1984
  %2 = load %struct.F_triple** %a, align 8, !dbg !1985
  %name = getelementptr inbounds %struct.F_triple* %2, i32 0, i32 0, !dbg !1985
  %3 = load i8** %name, align 8, !dbg !1985
  call void @free(i8* %3) #6, !dbg !1985
  %4 = load %struct.F_triple** %a, align 8, !dbg !1986
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !1986
  call void @free(i8* %5) #6, !dbg !1986
  ret void, !dbg !1987
}

; Function Attrs: nounwind uwtable
define internal i64 @triple_hash_no_name(i8* %x, i64 %table_size) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8
  store i8* %x, i8** %x.addr, align 8
  store i64 %table_size, i64* %table_size.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !1988
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !1988
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !1988
  %2 = load %struct.F_triple** %p, align 8, !dbg !1989
  %st_ino = getelementptr inbounds %struct.F_triple* %2, i32 0, i32 1, !dbg !1989
  %3 = load i64* %st_ino, align 8, !dbg !1989
  %4 = load i64* %table_size.addr, align 8, !dbg !1989
  %int_cast_to_i64 = bitcast i64 %4 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !1989
  %rem = urem i64 %3, %4, !dbg !1989
  ret i64 %rem, !dbg !1989
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %co) #0 {
entry:
  %co.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %co, %struct.cp_options** %co.addr, align 8
  %0 = load %struct.cp_options** %co.addr, align 8, !dbg !1990
  %cmp = icmp ne %struct.cp_options* %0, null, !dbg !1990
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !1990

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str53, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str151, i32 0, i32 0), i32 1918, i8* getelementptr inbounds ([47 x i8]* @__PRETTY_FUNCTION__.valid_options, i32 0, i32 0)) #
  unreachable, !dbg !1990

cond.end:                                         ; preds = %entry
  %1 = load %struct.cp_options** %co.addr, align 8, !dbg !1991
  %backup_type = getelementptr inbounds %struct.cp_options* %1, i32 0, i32 0, !dbg !1991
  %2 = load i32* %backup_type, align 4, !dbg !1991
  %cmp1 = icmp ule i32 %2, 3, !dbg !1991
  br i1 %cmp1, label %cond.end4, label %cond.false3, !dbg !1991

cond.false3:                                      ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8]* @.str54, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str151, i32 0, i32 0), i32 1919, i8* getelementptr inbounds ([47 x i8]* @__PRETTY_FUNCTION__.valid_options, i32 0, i32 0)) #
  unreachable, !dbg !1991

cond.end4:                                        ; preds = %cond.end
  %3 = load %struct.cp_options** %co.addr, align 8, !dbg !1992
  %sparse_mode = getelementptr inbounds %struct.cp_options* %3, i32 0, i32 18, !dbg !1992
  %4 = load i32* %sparse_mode, align 4, !dbg !1992
  %cmp5 = icmp eq i32 %4, 1, !dbg !1992
  br i1 %cmp5, label %cond.end13, label %lor.lhs.false, !dbg !1992

lor.lhs.false:                                    ; preds = %cond.end4
  %5 = load %struct.cp_options** %co.addr, align 8, !dbg !1992
  %sparse_mode6 = getelementptr inbounds %struct.cp_options* %5, i32 0, i32 18, !dbg !1992
  %6 = load i32* %sparse_mode6, align 4, !dbg !1992
  %cmp7 = icmp eq i32 %6, 2, !dbg !1992
  br i1 %cmp7, label %cond.end13, label %lor.lhs.false8, !dbg !1992

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %7 = load %struct.cp_options** %co.addr, align 8, !dbg !1992
  %sparse_mode9 = getelementptr inbounds %struct.cp_options* %7, i32 0, i32 18, !dbg !1992
  %8 = load i32* %sparse_mode9, align 4, !dbg !1992
  %cmp10 = icmp eq i32 %8, 3, !dbg !1992
  br i1 %cmp10, label %cond.end13, label %cond.false12, !dbg !1992

cond.false12:                                     ; preds = %lor.lhs.false8
  call void @__assert_fail(i8* getelementptr inbounds ([110 x i8]* @.str55, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str151, i32 0, i32 0), i32 1920, i8* getelementptr inbounds ([47 x i8]* @__PRETTY_FUNCTION__.valid_options, i32 0, i32 0)) 
  unreachable, !dbg !1992

cond.end13:                                       ; preds = %cond.end4, %lor.lhs.false, %lor.lhs.false8
  %9 = load %struct.cp_options** %co.addr, align 8, !dbg !1993
  %hard_link = getelementptr inbounds %struct.cp_options* %9, i32 0, i32 5, !dbg !1993
  %10 = load i8* %hard_link, align 1, !dbg !1993
  %tobool = trunc i8 %10 to i1, !dbg !1993
  br i1 %tobool, label %land.lhs.true, label %cond.end17, !dbg !1993

land.lhs.true:                                    ; preds = %cond.end13
  %11 = load %struct.cp_options** %co.addr, align 8, !dbg !1993
  %symbolic_link = getelementptr inbounds %struct.cp_options* %11, i32 0, i32 19, !dbg !1993
  %12 = load i8* %symbolic_link, align 1, !dbg !1993
  %tobool14 = trunc i8 %12 to i1, !dbg !1993
  br i1 %tobool14, label %cond.false16, label %cond.end17, !dbg !1993

cond.false16:                                     ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8]* @.str56, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str151, i32 0, i32 0), i32 1921, i8* getelementptr inbounds ([47 x i8]* @__PRETTY_FUNCTION__.valid_options, i32 0, i32 0)) #
  unreachable, !dbg !1993

cond.end17:                                       ; preds = %cond.end13, %land.lhs.true
  ret i1 true, !dbg !1994
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @copy_internal(i8* %src_name, i8* %dst_name, i1 zeroext %new_dst, i64 %device, %struct.dir_list* %ancestors, %struct.cp_options* %x, i1 zeroext %command_line_arg, i8* %copy_into_self, i8* %rename_succeeded) #0 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %device.addr = alloca i64, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %src_sb = alloca %struct.stat, align 8
  %dst_sb = alloca %struct.stat, align 8
  %src_mode = alloca i32, align 4
  %dst_mode = alloca i32, align 4
  %omitted_permissions = alloca i32, align 4
  %restore_dst_mode = alloca i8, align 1
  %earlier_file = alloca i8*, align 8
  %dst_backup = alloca i8*, align 8
  %backup_succeeded = alloca i8, align 1
  %delayed_ok = alloca i8, align 1
  %copied_as_regular = alloca i8, align 1
  %preserve_metadata = alloca i8, align 1
  %return_now = alloca i8, align 1
  %unlink_src = alloca i8, align 1
  %options = alloca i32, align 4
  %tmp_backup = alloca i8*, align 8
  %fmt = alloca i8*, align 8
  %__old = alloca i8*, align 8
  %__len = alloca i64, align 8
  %__new = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %link_failed = alloca i8, align 1
  %dir = alloca %struct.dir_list*, align 8
  %mkdir_mode = alloca i32, align 4
  %dot_sb = alloca %struct.stat, align 8
  %dst_parent_sb = alloca %struct.stat, align 8
  %dst_parent = alloca i8*, align 8
  %in_current_dir = alloca i8, align 1
  %src_link_val = alloca i8*, align 8
  %saved_errno = alloca i32, align 4
  %same_link = alloca i8, align 1
  %dest_link_val = alloca i8*, align 8
  %timespec = alloca [2 x %struct.timespec], align 16
  %coerce = alloca %struct.timespec, align 8
  %coerce801 = alloca %struct.timespec, align 8
  store i8* %src_name, i8** %src_name.addr, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  store i64 %device, i64* %device.addr, align 8
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  %frombool1 = zext i1 %command_line_arg to i8
  store i8 %frombool1, i8* %command_line_arg.addr, align 1
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8
  store i8 0, i8* %restore_dst_mode, align 1, !dbg !1995
  store i8* null, i8** %earlier_file, align 8, !dbg !1996
  store i8* null, i8** %dst_backup, align 8, !dbg !1997
  store i8 0, i8* %backup_succeeded, align 1, !dbg !1998
  store i8 0, i8* %copied_as_regular, align 1, !dbg !1999
  %0 = load %struct.cp_options** %x.addr, align 8, !dbg !2000
  %move_mode = getelementptr inbounds %struct.cp_options* %0, i32 0, i32 7, !dbg !2000
  %1 = load i8* %move_mode, align 1, !dbg !2000
  %tobool = trunc i8 %1 to i1, !dbg !2000
  %2 = load i8** %rename_succeeded.addr, align 8, !dbg !2000
  %tobool2 = icmp ne i8* %2, null, !dbg !2000
  %or.cond = and i1 %tobool, %tobool2, !dbg !2000
  br i1 %or.cond, label %if.then, label %if.end, !dbg !2000

if.then:                                          ; preds = %entry
  %3 = load i8** %rename_succeeded.addr, align 8, !dbg !2002
  store i8 0, i8* %3, align 1, !dbg !2002
  br label %if.end, !dbg !2002

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8** %copy_into_self.addr, align 8, !dbg !2003
  store i8 0, i8* %4, align 1, !dbg !2003
  %5 = load %struct.cp_options** %x.addr, align 8, !dbg !2004
  %dereference = getelementptr inbounds %struct.cp_options* %5, i32 0, i32 2, !dbg !2004
  %6 = load i32* %dereference, align 4, !dbg !2004
  %cmp = icmp eq i32 %6, 2, !dbg !2004
  %7 = load i8** %src_name.addr, align 8, !dbg !2004
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2004

cond.true:                                        ; preds = %if.end
  %call = call i32 @lstat(i8* %7, %struct.stat* %src_sb) #6, !dbg !2004
  br label %cond.end, !dbg !2004

cond.false:                                       ; preds = %if.end
  %call3 = call i32 @stat(i8* %7, %struct.stat* %src_sb) #6, !dbg !2004
  br label %cond.end, !dbg !2004

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call3, %cond.false ], !dbg !2004
  %cmp4 = icmp ne i32 %cond, 0, !dbg !2004
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !2004

if.then5:                                         ; preds = %cond.end
  %call6 = call i32* @__errno_location() #1, !dbg !2006
  %8 = load i32* %call6, align 4, !dbg !2006
  %conv = sext i32 %8 to i64, !dbg !2006
  %9 = inttoptr i64 %conv to i32* (...)*, !dbg !2006
  %10 = load i8** %src_name.addr, align 8, !dbg !2006
  %call7 = call i8* @quote(i8* %10), !dbg !2006
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %9, i8* getelementptr inbounds ([15 x i8]* @.str252, i32 0, i32 0), i8* %call7), !dbg !2006
  store i1 false, i1* %retval, !dbg !2008
  br label %return, !dbg !2008

if.end8:                                          ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 3, !dbg !2009
  %11 = load i32* %st_mode, align 4, !dbg !2009
  store i32 %11, i32* %src_mode, align 4, !dbg !2009
  %12 = load i32* %src_mode, align 4, !dbg !2010
  %and = and i32 %12, 61440, !dbg !2010
  %cmp9 = icmp eq i32 %and, 16384, !dbg !2010
  br i1 %cmp9, label %land.lhs.true11, label %if.end15, !dbg !2010

land.lhs.true11:                                  ; preds = %if.end8
  %13 = load %struct.cp_options** %x.addr, align 8, !dbg !2010
  %recursive = getelementptr inbounds %struct.cp_options* %13, i32 0, i32 15, !dbg !2010
  %14 = load i8* %recursive, align 1, !dbg !2010
  %tobool12 = trunc i8 %14 to i1, !dbg !2010
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !2010

if.then13:                                        ; preds = %land.lhs.true11
  %15 = load i8** %src_name.addr, align 8, !dbg !2012
  %call14 = call i8* @quote(i8* %15), !dbg !2012
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([22 x i8]* @.str353, i32 0, i32 0), i8* %call14), !dbg !2012
  store i1 false, i1* %retval, !dbg !2014
  br label %return, !dbg !2014

if.end15:                                         ; preds = %land.lhs.true11, %if.end8
  %16 = load i8* %command_line_arg.addr, align 1, !dbg !2015
  %tobool16 = trunc i8 %16 to i1, !dbg !2015
  br i1 %tobool16, label %if.then17, label %if.end32, !dbg !2015

if.then17:                                        ; preds = %if.end15
  %st_mode18 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 3, !dbg !2017
  %17 = load i32* %st_mode18, align 4, !dbg !2017
  %and19 = and i32 %17, 61440, !dbg !2017
  %cmp20 = icmp eq i32 %and19, 16384, !dbg !2017
  br i1 %cmp20, label %if.end30, label %land.lhs.true22, !dbg !2017

land.lhs.true22:                                  ; preds = %if.then17
  %18 = load %struct.cp_options** %x.addr, align 8, !dbg !2017
  %backup_type = getelementptr inbounds %struct.cp_options* %18, i32 0, i32 0, !dbg !2017
  %19 = load i32* %backup_type, align 4, !dbg !2017
  %cmp23 = icmp eq i32 %19, 0, !dbg !2017
  br i1 %cmp23, label %land.lhs.true25, label %if.end30, !dbg !2017

land.lhs.true25:                                  ; preds = %land.lhs.true22
  %20 = load %struct.cp_options** %x.addr, align 8, !dbg !2020
  %src_info = getelementptr inbounds %struct.cp_options* %20, i32 0, i32 24, !dbg !2020
  %21 = load %struct.hash_table** %src_info, align 8, !dbg !2020
  %22 = load i8** %src_name.addr, align 8, !dbg !2020
  %call26 = call zeroext i1 @seen_file(%struct.hash_table* %21, i8* %22, %struct.stat* %src_sb), !dbg !2020
  br i1 %call26, label %if.then28, label %if.end30, !dbg !2020

if.then28:                                        ; preds = %land.lhs.true25
  %23 = load i8** %src_name.addr, align 8, !dbg !2021
  %call29 = call i8* @quote(i8* %23), !dbg !2021
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([49 x i8]* @.str454, i32 0, i32 0), i8* %call29), !dbg !2023
  store i1 true, i1* %retval, !dbg !2024
  br label %return, !dbg !2024

if.end30:                                         ; preds = %land.lhs.true25, %land.lhs.true22, %if.then17
  %24 = load %struct.cp_options** %x.addr, align 8, !dbg !2025
  %src_info31 = getelementptr inbounds %struct.cp_options* %24, i32 0, i32 24, !dbg !2025
  %25 = load %struct.hash_table** %src_info31, align 8, !dbg !2025
  %26 = load i8** %src_name.addr, align 8, !dbg !2025
  call void @record_file(%struct.hash_table* %25, i8* %26, %struct.stat* %src_sb), !dbg !2025
  br label %if.end32, !dbg !2026

if.end32:                                         ; preds = %if.end30, %if.end15
  %27 = load i8* %new_dst.addr, align 1, !dbg !2027
  %tobool33 = trunc i8 %27 to i1, !dbg !2027
  br i1 %tobool33, label %if.end306, label %if.then34, !dbg !2027

if.then34:                                        ; preds = %if.end32
  %28 = load %struct.cp_options** %x.addr, align 8, !dbg !2029
  %dereference35 = getelementptr inbounds %struct.cp_options* %28, i32 0, i32 2, !dbg !2029
  %29 = load i32* %dereference35, align 4, !dbg !2029
  %cmp36 = icmp eq i32 %29, 2, !dbg !2029
  %30 = load i8** %dst_name.addr, align 8, !dbg !2029
  br i1 %cmp36, label %cond.true38, label %cond.false40, !dbg !2029

cond.true38:                                      ; preds = %if.then34
  %call39 = call i32 @lstat(i8* %30, %struct.stat* %dst_sb) #6, !dbg !2029
  br label %cond.end42, !dbg !2029

cond.false40:                                     ; preds = %if.then34
  %call41 = call i32 @stat(i8* %30, %struct.stat* %dst_sb) #6, !dbg !2029
  br label %cond.end42, !dbg !2029

cond.end42:                                       ; preds = %cond.false40, %cond.true38
  %cond43 = phi i32 [ %call39, %cond.true38 ], [ %call41, %cond.false40 ], !dbg !2029
  %cmp44 = icmp ne i32 %cond43, 0, !dbg !2029
  br i1 %cmp44, label %if.then46, label %if.else55, !dbg !2029

if.then46:                                        ; preds = %cond.end42
  %call47 = call i32* @__errno_location() #1, !dbg !2032
  %31 = load i32* %call47, align 4, !dbg !2032
  %cmp48 = icmp ne i32 %31, 2, !dbg !2032
  br i1 %cmp48, label %if.then50, label %if.else, !dbg !2032

if.then50:                                        ; preds = %if.then46
  %call51 = call i32* @__errno_location() #1, !dbg !2035
  %32 = load i32* %call51, align 4, !dbg !2035
  %conv52 = sext i32 %32 to i64, !dbg !2035
  %33 = inttoptr i64 %conv52 to i32* (...)*, !dbg !2035
  %34 = load i8** %dst_name.addr, align 8, !dbg !2035
  %call53 = call i8* @quote(i8* %34), !dbg !2035
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %33, i8* getelementptr inbounds ([15 x i8]* @.str252, i32 0, i32 0), i8* %call53), !dbg !2035
  store i1 false, i1* %retval, !dbg !2037
  br label %return, !dbg !2037

if.else:                                          ; preds = %if.then46
  store i8 1, i8* %new_dst.addr, align 1, !dbg !2038
  br label %if.end306, !dbg !2040

if.else55:                                        ; preds = %cond.end42
  %35 = load i8** %src_name.addr, align 8, !dbg !2041
  %36 = load i8** %dst_name.addr, align 8, !dbg !2041
  %37 = load %struct.cp_options** %x.addr, align 8, !dbg !2041
  %call56 = call zeroext i1 @same_file_ok(i8* %35, %struct.stat* %src_sb, i8* %36, %struct.stat* %dst_sb, %struct.cp_options* %37, i8* %return_now, i8* %unlink_src), !dbg !2041
  br i1 %call56, label %if.end60, label %if.then57, !dbg !2041

if.then57:                                        ; preds = %if.else55
  %38 = load i8** %src_name.addr, align 8, !dbg !2044
  %call58 = call i8* @quote_n(i32 0, i8* %38), !dbg !2044
  %39 = load i8** %dst_name.addr, align 8, !dbg !2044
  %call59 = call i8* @quote_n(i32 1, i8* %39), !dbg !2044
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([28 x i8]* @.str555, i32 0, i32 0), i8* %call58, i8* %call59), !dbg !2046
  store i1 false, i1* %retval, !dbg !2047
  br label %return, !dbg !2047

if.end60:                                         ; preds = %if.else55
  %40 = load %struct.cp_options** %x.addr, align 8, !dbg !2048
  %move_mode61 = getelementptr inbounds %struct.cp_options* %40, i32 0, i32 7, !dbg !2048
  %41 = load i8* %move_mode61, align 1, !dbg !2048
  %tobool62 = trunc i8 %41 to i1, !dbg !2048
  br i1 %tobool62, label %if.then63, label %if.else92, !dbg !2048

if.then63:                                        ; preds = %if.end60
  %42 = load %struct.cp_options** %x.addr, align 8, !dbg !2050
  %43 = load i8** %dst_name.addr, align 8, !dbg !2050
  %call64 = call zeroext i1 @abandon_move(%struct.cp_options* %42, i8* %43, %struct.stat* %dst_sb), !dbg !2050
  br i1 %call64, label %if.then72, label %lor.lhs.false, !dbg !2050

lor.lhs.false:                                    ; preds = %if.then63
  %44 = load i8* %unlink_src, align 1, !dbg !2050
  %tobool66 = trunc i8 %44 to i1, !dbg !2050
  br i1 %tobool66, label %land.lhs.true68, label %if.end85, !dbg !2050

land.lhs.true68:                                  ; preds = %lor.lhs.false
  %45 = load i8** %src_name.addr, align 8, !dbg !2053
  %call69 = call i32 @unlink(i8* %45) #6, !dbg !2053
  %cmp70 = icmp eq i32 %call69, 0, !dbg !2053
  br i1 %cmp70, label %if.then72, label %if.end85, !dbg !2053

if.then72:                                        ; preds = %land.lhs.true68, %if.then63
  %46 = load i8** %rename_succeeded.addr, align 8, !dbg !2054
  %tobool73 = icmp ne i8* %46, null, !dbg !2054
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !2054

if.then74:                                        ; preds = %if.then72
  %47 = load i8** %rename_succeeded.addr, align 8, !dbg !2057
  store i8 1, i8* %47, align 1, !dbg !2057
  br label %if.end75, !dbg !2057

if.end75:                                         ; preds = %if.then74, %if.then72
  %48 = load i8* %unlink_src, align 1, !dbg !2058
  %tobool76 = trunc i8 %48 to i1, !dbg !2058
  br i1 %tobool76, label %land.lhs.true78, label %if.end84, !dbg !2058

land.lhs.true78:                                  ; preds = %if.end75
  %49 = load %struct.cp_options** %x.addr, align 8, !dbg !2058
  %verbose = getelementptr inbounds %struct.cp_options* %49, i32 0, i32 21, !dbg !2058
  %50 = load i8* %verbose, align 1, !dbg !2058
  %tobool79 = trunc i8 %50 to i1, !dbg !2058
  br i1 %tobool79, label %if.then81, label %if.end84, !dbg !2058

if.then81:                                        ; preds = %land.lhs.true78
  %51 = load i8** %src_name.addr, align 8, !dbg !2060
  %call82 = call i8* @quote(i8* %51), !dbg !2060
  %call83 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str656, i32 0, i32 0), i8* %call82), !dbg !2060
  br label %if.end84, !dbg !2060

if.end84:                                         ; preds = %if.then81, %land.lhs.true78, %if.end75
  store i1 true, i1* %retval, !dbg !2061
  br label %return, !dbg !2061

if.end85:                                         ; preds = %land.lhs.true68, %lor.lhs.false
  %52 = load i8* %unlink_src, align 1, !dbg !2062
  %tobool86 = trunc i8 %52 to i1, !dbg !2062
  br i1 %tobool86, label %if.then87, label %if.end108, !dbg !2062

if.then87:                                        ; preds = %if.end85
  %call88 = call i32* @__errno_location() #1, !dbg !2064
  %53 = load i32* %call88, align 4, !dbg !2064
  %conv89 = sext i32 %53 to i64, !dbg !2064
  %54 = inttoptr i64 %conv89 to i32* (...)*, !dbg !2064
  %55 = load i8** %src_name.addr, align 8, !dbg !2064
  %call90 = call i8* @quote(i8* %55), !dbg !2064
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %54, i8* getelementptr inbounds ([17 x i8]* @.str757, i32 0, i32 0), i8* %call90), !dbg !2064
  store i1 false, i1* %retval, !dbg !2066
  br label %return, !dbg !2066

if.else92:                                        ; preds = %if.end60
  %56 = load i32* %src_mode, align 4, !dbg !2067
  %and93 = and i32 %56, 61440, !dbg !2067
  %cmp94 = icmp eq i32 %and93, 16384, !dbg !2067
  br i1 %cmp94, label %if.end108, label %land.lhs.true96, !dbg !2067

land.lhs.true96:                                  ; preds = %if.else92
  %57 = load %struct.cp_options** %x.addr, align 8, !dbg !2067
  %interactive = getelementptr inbounds %struct.cp_options* %57, i32 0, i32 6, !dbg !2067
  %58 = load i32* %interactive, align 4, !dbg !2067
  %cmp97 = icmp eq i32 %58, 2, !dbg !2067
  br i1 %cmp97, label %if.then106, label %lor.lhs.false99, !dbg !2067

lor.lhs.false99:                                  ; preds = %land.lhs.true96
  %59 = load %struct.cp_options** %x.addr, align 8, !dbg !2067
  %interactive100 = getelementptr inbounds %struct.cp_options* %59, i32 0, i32 6, !dbg !2067
  %60 = load i32* %interactive100, align 4, !dbg !2067
  %cmp101 = icmp eq i32 %60, 3, !dbg !2067
  br i1 %cmp101, label %land.lhs.true103, label %if.end108, !dbg !2067

land.lhs.true103:                                 ; preds = %lor.lhs.false99
  %61 = load i8** %dst_name.addr, align 8, !dbg !2070
  call void @overwrite_prompt(i8* %61, %struct.stat* %dst_sb), !dbg !2070
  %call105 = call zeroext i1 @yesno(), !dbg !2071
  br i1 %call105, label %if.end108, label %if.then106, !dbg !2071

if.then106:                                       ; preds = %land.lhs.true103, %land.lhs.true96
  store i1 true, i1* %retval, !dbg !2072
  br label %return, !dbg !2072

if.end108:                                        ; preds = %if.else92, %lor.lhs.false99, %land.lhs.true103, %if.end85
  %62 = load i8* %return_now, align 1, !dbg !2073
  %tobool109 = trunc i8 %62 to i1, !dbg !2073
  br i1 %tobool109, label %if.then110, label %if.end111, !dbg !2073

if.then110:                                       ; preds = %if.end108
  store i1 true, i1* %retval, !dbg !2075
  br label %return, !dbg !2075

if.end111:                                        ; preds = %if.end108
  %st_mode112 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3, !dbg !2076
  %63 = load i32* %st_mode112, align 4, !dbg !2076
  %and113 = and i32 %63, 61440, !dbg !2076
  %cmp114 = icmp eq i32 %and113, 16384, !dbg !2076
  br i1 %cmp114, label %if.end147, label %if.then116, !dbg !2076

if.then116:                                       ; preds = %if.end111
  %64 = load i32* %src_mode, align 4, !dbg !2078
  %and117 = and i32 %64, 61440, !dbg !2078
  %cmp118 = icmp eq i32 %and117, 16384, !dbg !2078
  br i1 %cmp118, label %if.then120, label %if.end133, !dbg !2078

if.then120:                                       ; preds = %if.then116
  %65 = load %struct.cp_options** %x.addr, align 8, !dbg !2081
  %move_mode121 = getelementptr inbounds %struct.cp_options* %65, i32 0, i32 7, !dbg !2081
  %66 = load i8* %move_mode121, align 1, !dbg !2081
  %tobool122 = trunc i8 %66 to i1, !dbg !2081
  br i1 %tobool122, label %land.lhs.true124, label %if.else129, !dbg !2081

land.lhs.true124:                                 ; preds = %if.then120
  %67 = load %struct.cp_options** %x.addr, align 8, !dbg !2081
  %backup_type125 = getelementptr inbounds %struct.cp_options* %67, i32 0, i32 0, !dbg !2081
  %68 = load i32* %backup_type125, align 4, !dbg !2081
  %cmp126 = icmp ne i32 %68, 0, !dbg !2081
  br i1 %cmp126, label %if.end133, label %if.else129, !dbg !2081

if.else129:                                       ; preds = %land.lhs.true124, %if.then120
  %69 = load i8** %dst_name.addr, align 8, !dbg !2084
  %call130 = call i8* @quote_n(i32 0, i8* %69), !dbg !2084
  %70 = load i8** %src_name.addr, align 8, !dbg !2084
  %call131 = call i8* @quote_n(i32 1, i8* %70), !dbg !2084
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([52 x i8]* @.str858, i32 0, i32 0), i8* %call130, i8* %call131), !dbg !2086
  store i1 false, i1* %retval, !dbg !2087
  br label %return, !dbg !2087

if.end133:                                        ; preds = %land.lhs.true124, %if.then116
  %71 = load i8* %command_line_arg.addr, align 1, !dbg !2088
  %tobool134 = trunc i8 %71 to i1, !dbg !2088
  br i1 %tobool134, label %land.lhs.true136, label %if.end147, !dbg !2088

land.lhs.true136:                                 ; preds = %if.end133
  %72 = load %struct.cp_options** %x.addr, align 8, !dbg !2088
  %backup_type137 = getelementptr inbounds %struct.cp_options* %72, i32 0, i32 0, !dbg !2088
  %73 = load i32* %backup_type137, align 4, !dbg !2088
  %cmp138 = icmp ne i32 %73, 3, !dbg !2088
  br i1 %cmp138, label %land.lhs.true140, label %if.end147, !dbg !2088

land.lhs.true140:                                 ; preds = %land.lhs.true136
  %74 = load %struct.cp_options** %x.addr, align 8, !dbg !2090
  %dest_info = getelementptr inbounds %struct.cp_options* %74, i32 0, i32 23, !dbg !2090
  %75 = load %struct.hash_table** %dest_info, align 8, !dbg !2090
  %76 = load i8** %dst_name.addr, align 8, !dbg !2090
  %call141 = call zeroext i1 @seen_file(%struct.hash_table* %75, i8* %76, %struct.stat* %dst_sb), !dbg !2090
  br i1 %call141, label %if.then143, label %if.end147, !dbg !2090

if.then143:                                       ; preds = %land.lhs.true140
  %77 = load i8** %dst_name.addr, align 8, !dbg !2091
  %call144 = call i8* @quote_n(i32 0, i8* %77), !dbg !2091
  %78 = load i8** %src_name.addr, align 8, !dbg !2091
  %call145 = call i8* @quote_n(i32 1, i8* %78), !dbg !2091
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([43 x i8]* @.str959, i32 0, i32 0), i8* %call144, i8* %call145), !dbg !2093
  store i1 false, i1* %retval, !dbg !2094
  br label %return, !dbg !2094

if.end147:                                        ; preds = %if.end133, %land.lhs.true136, %land.lhs.true140, %if.end111
  %79 = load i32* %src_mode, align 4, !dbg !2095
  %and148 = and i32 %79, 61440, !dbg !2095
  %cmp149 = icmp eq i32 %and148, 16384, !dbg !2095
  br i1 %cmp149, label %if.end191, label %if.then151, !dbg !2095

if.then151:                                       ; preds = %if.end147
  %st_mode152 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3, !dbg !2097
  %80 = load i32* %st_mode152, align 4, !dbg !2097
  %and153 = and i32 %80, 61440, !dbg !2097
  %cmp154 = icmp eq i32 %and153, 16384, !dbg !2097
  br i1 %cmp154, label %if.then156, label %if.end168, !dbg !2097

if.then156:                                       ; preds = %if.then151
  %81 = load %struct.cp_options** %x.addr, align 8, !dbg !2100
  %move_mode157 = getelementptr inbounds %struct.cp_options* %81, i32 0, i32 7, !dbg !2100
  %82 = load i8* %move_mode157, align 1, !dbg !2100
  %tobool158 = trunc i8 %82 to i1, !dbg !2100
  br i1 %tobool158, label %land.lhs.true160, label %if.else165, !dbg !2100

land.lhs.true160:                                 ; preds = %if.then156
  %83 = load %struct.cp_options** %x.addr, align 8, !dbg !2100
  %backup_type161 = getelementptr inbounds %struct.cp_options* %83, i32 0, i32 0, !dbg !2100
  %84 = load i32* %backup_type161, align 4, !dbg !2100
  %cmp162 = icmp ne i32 %84, 0, !dbg !2100
  br i1 %cmp162, label %if.end168, label %if.else165, !dbg !2100

if.else165:                                       ; preds = %land.lhs.true160, %if.then156
  %85 = load i8** %dst_name.addr, align 8, !dbg !2103
  %call166 = call i8* @quote(i8* %85), !dbg !2103
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([49 x i8]* @.str1060, i32 0, i32 0), i8* %call166), !dbg !2105
  store i1 false, i1* %retval, !dbg !2106
  br label %return, !dbg !2106

if.end168:                                        ; preds = %land.lhs.true160, %if.then151
  %86 = load %struct.cp_options** %x.addr, align 8, !dbg !2107
  %update = getelementptr inbounds %struct.cp_options* %86, i32 0, i32 20, !dbg !2107
  %87 = load i8* %update, align 1, !dbg !2107
  %tobool169 = trunc i8 %87 to i1, !dbg !2107
  br i1 %tobool169, label %if.then170, label %if.end191, !dbg !2107

if.then170:                                       ; preds = %if.end168
  %88 = load %struct.cp_options** %x.addr, align 8, !dbg !2109
  %preserve_timestamps = getelementptr inbounds %struct.cp_options* %88, i32 0, i32 12, !dbg !2109
  %89 = load i8* %preserve_timestamps, align 1, !dbg !2109
  %tobool171 = trunc i8 %89 to i1, !dbg !2109
  br i1 %tobool171, label %land.rhs, label %land.end180, !dbg !2109

land.rhs:                                         ; preds = %if.then170
  %90 = load %struct.cp_options** %x.addr, align 8, !dbg !2109
  %move_mode173 = getelementptr inbounds %struct.cp_options* %90, i32 0, i32 7, !dbg !2109
  %91 = load i8* %move_mode173, align 1, !dbg !2109
  %tobool174 = trunc i8 %91 to i1, !dbg !2109
  br i1 %tobool174, label %land.rhs176, label %land.end, !dbg !2109

land.rhs176:                                      ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 0, !dbg !2109
  %92 = load i64* %st_dev, align 8, !dbg !2109
  %st_dev177 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0, !dbg !2109
  %93 = load i64* %st_dev177, align 8, !dbg !2109
  %cmp178 = icmp eq i64 %92, %93, !dbg !2109
  br label %land.end

land.end:                                         ; preds = %land.rhs176, %land.rhs
  %94 = phi i1 [ false, %land.rhs ], [ %cmp178, %land.rhs176 ]
  %lnot = xor i1 %94, true
  br label %land.end180

land.end180:                                      ; preds = %land.end, %if.then170
  %95 = phi i1 [ false, %if.then170 ], [ %lnot, %land.end ]
  %cond181 = select i1 %95, i32 1, i32 0
  store i32 %cond181, i32* %options, align 4
  %96 = load i8** %dst_name.addr, align 8, !dbg !2111
  %97 = load i32* %options, align 4, !dbg !2111
  %call182 = call i32 @utimecmp(i8* %96, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %97), !dbg !2111
  %cmp183 = icmp sle i32 0, %call182, !dbg !2111
  br i1 %cmp183, label %if.then185, label %if.end191, !dbg !2111

if.then185:                                       ; preds = %land.end180
  %98 = load i8** %rename_succeeded.addr, align 8, !dbg !2113
  %tobool186 = icmp ne i8* %98, null, !dbg !2113
  br i1 %tobool186, label %if.then187, label %if.end188, !dbg !2113

if.then187:                                       ; preds = %if.then185
  %99 = load i8** %rename_succeeded.addr, align 8, !dbg !2116
  store i8 1, i8* %99, align 1, !dbg !2116
  br label %if.end188, !dbg !2116

if.end188:                                        ; preds = %if.then187, %if.then185
  store i1 true, i1* %retval, !dbg !2117
  br label %return, !dbg !2117

if.end191:                                        ; preds = %if.end168, %land.end180, %if.end147
  %100 = load %struct.cp_options** %x.addr, align 8, !dbg !2118
  %move_mode192 = getelementptr inbounds %struct.cp_options* %100, i32 0, i32 7, !dbg !2118
  %101 = load i8* %move_mode192, align 1, !dbg !2118
  %tobool193 = trunc i8 %101 to i1, !dbg !2118
  br i1 %tobool193, label %if.then194, label %if.end212, !dbg !2118

if.then194:                                       ; preds = %if.end191
  %st_mode195 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 3, !dbg !2120
  %102 = load i32* %st_mode195, align 4, !dbg !2120
  %and196 = and i32 %102, 61440, !dbg !2120
  %cmp197 = icmp eq i32 %and196, 16384, !dbg !2120
  br i1 %cmp197, label %land.lhs.true199, label %if.end212, !dbg !2120

land.lhs.true199:                                 ; preds = %if.then194
  %st_mode200 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3, !dbg !2120
  %103 = load i32* %st_mode200, align 4, !dbg !2120
  %and201 = and i32 %103, 61440, !dbg !2120
  %cmp202 = icmp eq i32 %and201, 16384, !dbg !2120
  br i1 %cmp202, label %if.end212, label %land.lhs.true204, !dbg !2120

land.lhs.true204:                                 ; preds = %land.lhs.true199
  %104 = load %struct.cp_options** %x.addr, align 8, !dbg !2120
  %backup_type205 = getelementptr inbounds %struct.cp_options* %104, i32 0, i32 0, !dbg !2120
  %105 = load i32* %backup_type205, align 4, !dbg !2120
  %cmp206 = icmp eq i32 %105, 0, !dbg !2120
  br i1 %cmp206, label %if.then208, label %if.end212, !dbg !2120

if.then208:                                       ; preds = %land.lhs.true204
  %106 = load i8** %src_name.addr, align 8, !dbg !2123
  %call209 = call i8* @quote_n(i32 0, i8* %106), !dbg !2123
  %107 = load i8** %dst_name.addr, align 8, !dbg !2123
  %call210 = call i8* @quote_n(i32 0, i8* %107), !dbg !2123
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([51 x i8]* @.str1161, i32 0, i32 0), i8* %call209, i8* %call210), !dbg !2125
  store i1 false, i1* %retval, !dbg !2126
  br label %return, !dbg !2126

if.end212:                                        ; preds = %if.then194, %land.lhs.true199, %land.lhs.true204, %if.end191
  %108 = load %struct.cp_options** %x.addr, align 8, !dbg !2127
  %backup_type213 = getelementptr inbounds %struct.cp_options* %108, i32 0, i32 0, !dbg !2127
  %109 = load i32* %backup_type213, align 4, !dbg !2127
  %cmp214 = icmp ne i32 %109, 0, !dbg !2127
  br i1 %cmp214, label %land.lhs.true216, label %if.else258, !dbg !2127

land.lhs.true216:                                 ; preds = %if.end212
  %110 = load i8** %src_name.addr, align 8, !dbg !2129
  %call217 = call i8* @last_component(i8* %110), !dbg !2129
  %call218 = call zeroext i1 @dot_or_dotdot(i8* %call217), !dbg !2130
  br i1 %call218, label %if.else258, label %land.lhs.true219, !dbg !2130

land.lhs.true219:                                 ; preds = %land.lhs.true216
  %111 = load %struct.cp_options** %x.addr, align 8, !dbg !2130
  %move_mode220 = getelementptr inbounds %struct.cp_options* %111, i32 0, i32 7, !dbg !2130
  %112 = load i8* %move_mode220, align 1, !dbg !2130
  %tobool221 = trunc i8 %112 to i1, !dbg !2130
  br i1 %tobool221, label %if.then228, label %lor.lhs.false223, !dbg !2130

lor.lhs.false223:                                 ; preds = %land.lhs.true219
  %st_mode224 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3, !dbg !2130
  %113 = load i32* %st_mode224, align 4, !dbg !2130
  %and225 = and i32 %113, 61440, !dbg !2130
  %cmp226 = icmp eq i32 %and225, 16384, !dbg !2130
  br i1 %cmp226, label %if.else258, label %if.then228, !dbg !2130

if.then228:                                       ; preds = %lor.lhs.false223, %land.lhs.true219
  %114 = load i8** %dst_name.addr, align 8, !dbg !2131
  %115 = load %struct.cp_options** %x.addr, align 8, !dbg !2131
  %backup_type229 = getelementptr inbounds %struct.cp_options* %115, i32 0, i32 0, !dbg !2131
  %116 = load i32* %backup_type229, align 4, !dbg !2131
  %call230 = call i8* @find_backup_file_name(i8* %114, i32 %116), !dbg !2131
  store i8* %call230, i8** %tmp_backup, align 8, !dbg !2131
  %117 = load i8** %tmp_backup, align 8, !dbg !2133
  %118 = load i8** %src_name.addr, align 8, !dbg !2133
  %call231 = call i32 @strcmp(i8* %117, i8* %118) #18, !dbg !2133
  %cmp232 = icmp eq i32 %call231, 0, !dbg !2133
  br i1 %cmp232, label %if.then234, label %do.body, !dbg !2133

if.then234:                                       ; preds = %if.then228
  %119 = load %struct.cp_options** %x.addr, align 8, !dbg !2135
  %move_mode235 = getelementptr inbounds %struct.cp_options* %119, i32 0, i32 7, !dbg !2135
  %120 = load i8* %move_mode235, align 1, !dbg !2135
  %tobool236 = trunc i8 %120 to i1, !dbg !2135
  %cond238 = select i1 %tobool236, i8* getelementptr inbounds ([50 x i8]* @.str1262, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8]* @.str1363, i32 0, i32 0), !dbg !2135
  store i8* %cond238, i8** %fmt, align 8, !dbg !2135
  %121 = load i8** %fmt, align 8, !dbg !2137
  %122 = load i8** %dst_name.addr, align 8, !dbg !2138
  %call239 = call i8* @quote_n(i32 0, i8* %122), !dbg !2138
  %123 = load i8** %src_name.addr, align 8, !dbg !2139
  %call240 = call i8* @quote_n(i32 1, i8* %123), !dbg !2139
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* %121, i8* %call239, i8* %call240), !dbg !2137
  %124 = load i8** %tmp_backup, align 8, !dbg !2140
  call void @free(i8* %124) #6, !dbg !2140
  store i1 false, i1* %retval, !dbg !2141
  br label %return, !dbg !2141

do.body:                                          ; preds = %if.then228
  %125 = load i8** %tmp_backup, align 8, !dbg !2142
  store i8* %125, i8** %__old, align 8, !dbg !2142
  %126 = load i8** %__old, align 8, !dbg !2142
  %call242 = call i64 @strlen(i8* %126) #18, !dbg !2142
  %add = add i64 %call242, 1, !dbg !2142
  store i64 %add, i64* %__len, align 8, !dbg !2142
  %127 = load i64* %__len, align 8, !dbg !2142
  %128 = alloca i8, i64 %127, !dbg !2142
  store i8* %128, i8** %__new, align 8, !dbg !2142
  %129 = load i8** %__new, align 8, !dbg !2142
  %130 = load i8** %__old, align 8, !dbg !2142
  %131 = load i64* %__len, align 8, !dbg !2142
  %132 = call i8* @memcpy(i8* %129, i8* %130, i64 %131)
  store i8* %129, i8** %tmp, !dbg !2142
  %133 = load i8** %tmp, !dbg !2142
  store i8* %133, i8** %dst_backup, align 8, !dbg !2142
  %134 = load i8** %tmp_backup, align 8, !dbg !2145
  call void @free(i8* %134) #6, !dbg !2145
  %135 = load i8** %dst_name.addr, align 8, !dbg !2146
  %136 = load i8** %dst_backup, align 8, !dbg !2146
  %call243 = call i32 @rename(i8* %135, i8* %136) #6, !dbg !2146
  %cmp244 = icmp ne i32 %call243, 0, !dbg !2146
  br i1 %cmp244, label %if.then246, label %if.else256, !dbg !2146

if.then246:                                       ; preds = %do.body
  %call247 = call i32* @__errno_location() #1, !dbg !2148
  %137 = load i32* %call247, align 4, !dbg !2148
  %cmp248 = icmp ne i32 %137, 2, !dbg !2148
  br i1 %cmp248, label %if.then250, label %if.else254, !dbg !2148

if.then250:                                       ; preds = %if.then246
  %call251 = call i32* @__errno_location() #1, !dbg !2151
  %138 = load i32* %call251, align 4, !dbg !2151
  %conv252 = sext i32 %138 to i64, !dbg !2151
  %139 = inttoptr i64 %conv252 to i32* (...)*, !dbg !2151
  %140 = load i8** %dst_name.addr, align 8, !dbg !2151
  %call253 = call i8* @quote(i8* %140), !dbg !2151
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %139, i8* getelementptr inbounds ([17 x i8]* @.str1464, i32 0, i32 0), i8* %call253), !dbg !2151
  store i1 false, i1* %retval, !dbg !2153
  br label %return, !dbg !2153

if.else254:                                       ; preds = %if.then246
  store i8* null, i8** %dst_backup, align 8, !dbg !2154
  br label %if.end257, !dbg !2156

if.else256:                                       ; preds = %do.body
  store i8 1, i8* %backup_succeeded, align 1, !dbg !2157
  br label %if.end257

if.end257:                                        ; preds = %if.else256, %if.else254
  store i8 1, i8* %new_dst.addr, align 1, !dbg !2159
  br label %if.end306, !dbg !2160

if.else258:                                       ; preds = %lor.lhs.false223, %land.lhs.true216, %if.end212
  %st_mode259 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3, !dbg !2161
  %141 = load i32* %st_mode259, align 4, !dbg !2161
  %and260 = and i32 %141, 61440, !dbg !2161
  %cmp261 = icmp eq i32 %and260, 16384, !dbg !2161
  br i1 %cmp261, label %if.end306, label %land.lhs.true263, !dbg !2161

land.lhs.true263:                                 ; preds = %if.else258
  %142 = load %struct.cp_options** %x.addr, align 8, !dbg !2161
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options* %142, i32 0, i32 3, !dbg !2161
  %143 = load i8* %unlink_dest_before_opening, align 1, !dbg !2161
  %tobool264 = trunc i8 %143 to i1, !dbg !2161
  br i1 %tobool264, label %if.then284, label %lor.lhs.false266, !dbg !2161

lor.lhs.false266:                                 ; preds = %land.lhs.true263
  %144 = load %struct.cp_options** %x.addr, align 8, !dbg !2161
  %preserve_links = getelementptr inbounds %struct.cp_options* %144, i32 0, i32 13, !dbg !2161
  %145 = load i8* %preserve_links, align 1, !dbg !2161
  %tobool267 = trunc i8 %145 to i1, !dbg !2161
  br i1 %tobool267, label %land.lhs.true269, label %lor.lhs.false272, !dbg !2161

land.lhs.true269:                                 ; preds = %lor.lhs.false266
  %st_nlink = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 2, !dbg !2161
  %146 = load i64* %st_nlink, align 8, !dbg !2161
  %cmp270 = icmp ult i64 1, %146, !dbg !2161
  br i1 %cmp270, label %if.then284, label %lor.lhs.false272, !dbg !2161

lor.lhs.false272:                                 ; preds = %land.lhs.true269, %lor.lhs.false266
  %147 = load %struct.cp_options** %x.addr, align 8, !dbg !2161
  %move_mode273 = getelementptr inbounds %struct.cp_options* %147, i32 0, i32 7, !dbg !2161
  %148 = load i8* %move_mode273, align 1, !dbg !2161
  %tobool274 = trunc i8 %148 to i1, !dbg !2161
  br i1 %tobool274, label %if.end306, label %land.lhs.true275, !dbg !2161

land.lhs.true275:                                 ; preds = %lor.lhs.false272
  %149 = load %struct.cp_options** %x.addr, align 8, !dbg !2161
  %dereference276 = getelementptr inbounds %struct.cp_options* %149, i32 0, i32 2, !dbg !2161
  %150 = load i32* %dereference276, align 4, !dbg !2161
  %cmp277 = icmp eq i32 %150, 2, !dbg !2161
  br i1 %cmp277, label %land.lhs.true279, label %if.end306, !dbg !2161

land.lhs.true279:                                 ; preds = %land.lhs.true275
  %st_mode280 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 3, !dbg !2161
  %151 = load i32* %st_mode280, align 4, !dbg !2161
  %and281 = and i32 %151, 61440, !dbg !2161
  %cmp282 = icmp eq i32 %and281, 40960, !dbg !2161
  br i1 %cmp282, label %if.then284, label %if.end306, !dbg !2161

if.then284:                                       ; preds = %land.lhs.true279, %land.lhs.true269, %land.lhs.true263
  %152 = load i8** %dst_name.addr, align 8, !dbg !2163
  %call285 = call i32 @unlink(i8* %152) #6, !dbg !2163
  %cmp286 = icmp ne i32 %call285, 0, !dbg !2163
  br i1 %cmp286, label %land.lhs.true288, label %if.end296, !dbg !2163

land.lhs.true288:                                 ; preds = %if.then284
  %call289 = call i32* @__errno_location() #1, !dbg !2163
  %153 = load i32* %call289, align 4, !dbg !2163
  %cmp290 = icmp ne i32 %153, 2, !dbg !2163
  br i1 %cmp290, label %if.then292, label %if.end296, !dbg !2163

if.then292:                                       ; preds = %land.lhs.true288
  %call293 = call i32* @__errno_location() #1, !dbg !2166
  %154 = load i32* %call293, align 4, !dbg !2166
  %conv294 = sext i32 %154 to i64, !dbg !2166
  %155 = inttoptr i64 %conv294 to i32* (...)*, !dbg !2166
  %156 = load i8** %dst_name.addr, align 8, !dbg !2166
  %call295 = call i8* @quote(i8* %156), !dbg !2166
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %155, i8* getelementptr inbounds ([17 x i8]* @.str757, i32 0, i32 0), i8* %call295), !dbg !2166
  store i1 false, i1* %retval, !dbg !2168
  br label %return, !dbg !2168

if.end296:                                        ; preds = %land.lhs.true288, %if.then284
  store i8 1, i8* %new_dst.addr, align 1, !dbg !2169
  %157 = load %struct.cp_options** %x.addr, align 8, !dbg !2170
  %verbose297 = getelementptr inbounds %struct.cp_options* %157, i32 0, i32 21, !dbg !2170
  %158 = load i8* %verbose297, align 1, !dbg !2170
  %tobool298 = trunc i8 %158 to i1, !dbg !2170
  br i1 %tobool298, label %if.then299, label %if.end306, !dbg !2170

if.then299:                                       ; preds = %if.end296
  %159 = load i8** %dst_name.addr, align 8, !dbg !2172
  %call300 = call i8* @quote(i8* %159), !dbg !2172
  %call301 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str656, i32 0, i32 0), i8* %call300), !dbg !2172
  br label %if.end306, !dbg !2172

if.end306:                                        ; preds = %if.else, %if.else258, %lor.lhs.false272, %land.lhs.true275, %land.lhs.true279, %if.then299, %if.end296, %if.end257, %if.end32
  %160 = load %struct.cp_options** %x.addr, align 8, !dbg !2173
  %verbose307 = getelementptr inbounds %struct.cp_options* %160, i32 0, i32 21, !dbg !2173
  %161 = load i8* %verbose307, align 1, !dbg !2173
  %tobool308 = trunc i8 %161 to i1, !dbg !2173
  br i1 %tobool308, label %land.lhs.true310, label %if.end321, !dbg !2173

land.lhs.true310:                                 ; preds = %if.end306
  %162 = load i32* %src_mode, align 4, !dbg !2173
  %and311 = and i32 %162, 61440, !dbg !2173
  %cmp312 = icmp eq i32 %and311, 16384, !dbg !2173
  br i1 %cmp312, label %if.end321, label %if.then314, !dbg !2173

if.then314:                                       ; preds = %land.lhs.true310
  %163 = load i8** %src_name.addr, align 8, !dbg !2175
  %164 = load i8** %dst_name.addr, align 8, !dbg !2175
  %165 = load i8* %backup_succeeded, align 1, !dbg !2175
  %tobool315 = trunc i8 %165 to i1, !dbg !2175
  %166 = load i8** %dst_backup, align 8, !dbg !2175
  %cond320 = select i1 %tobool315, i8* %166, i8* null, !dbg !2175
  call void @emit_verbose(i8* %163, i8* %164, i8* %cond320), !dbg !2175
  br label %if.end321, !dbg !2175

if.end321:                                        ; preds = %if.then314, %land.lhs.true310, %if.end306
  %167 = load %struct.cp_options** %x.addr, align 8, !dbg !2176
  %move_mode322 = getelementptr inbounds %struct.cp_options* %167, i32 0, i32 7, !dbg !2176
  %168 = load i8* %move_mode322, align 1, !dbg !2176
  %tobool323 = trunc i8 %168 to i1, !dbg !2176
  br i1 %tobool323, label %land.lhs.true325, label %if.else332, !dbg !2176

land.lhs.true325:                                 ; preds = %if.end321
  %st_nlink326 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 2, !dbg !2176
  %169 = load i64* %st_nlink326, align 8, !dbg !2176
  %cmp327 = icmp eq i64 %169, 1, !dbg !2176
  br i1 %cmp327, label %if.then329, label %if.else332, !dbg !2176

if.then329:                                       ; preds = %land.lhs.true325
  %st_ino = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1, !dbg !2178
  %170 = load i64* %st_ino, align 8, !dbg !2178
  %st_dev330 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0, !dbg !2178
  %171 = load i64* %st_dev330, align 8, !dbg !2178
  %call331 = call i8* @src_to_dest_lookup(i64 %170, i64 %171), !dbg !2178
  store i8* %call331, i8** %earlier_file, align 8, !dbg !2178
  br label %if.end364, !dbg !2180

if.else332:                                       ; preds = %land.lhs.true325, %if.end321
  %172 = load %struct.cp_options** %x.addr, align 8, !dbg !2181
  %preserve_links333 = getelementptr inbounds %struct.cp_options* %172, i32 0, i32 13, !dbg !2181
  %173 = load i8* %preserve_links333, align 1, !dbg !2181
  %tobool334 = trunc i8 %173 to i1, !dbg !2181
  br i1 %tobool334, label %land.lhs.true336, label %lor.lhs.false351, !dbg !2181

land.lhs.true336:                                 ; preds = %if.else332
  %st_nlink337 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 2, !dbg !2181
  %174 = load i64* %st_nlink337, align 8, !dbg !2181
  %cmp338 = icmp ult i64 1, %174, !dbg !2181
  br i1 %cmp338, label %if.then359, label %lor.lhs.false340, !dbg !2181

lor.lhs.false340:                                 ; preds = %land.lhs.true336
  %175 = load i8* %command_line_arg.addr, align 1, !dbg !2181
  %tobool341 = trunc i8 %175 to i1, !dbg !2181
  br i1 %tobool341, label %land.lhs.true343, label %lor.lhs.false347, !dbg !2181

land.lhs.true343:                                 ; preds = %lor.lhs.false340
  %176 = load %struct.cp_options** %x.addr, align 8, !dbg !2181
  %dereference344 = getelementptr inbounds %struct.cp_options* %176, i32 0, i32 2, !dbg !2181
  %177 = load i32* %dereference344, align 4, !dbg !2181
  %cmp345 = icmp eq i32 %177, 3, !dbg !2181
  br i1 %cmp345, label %if.then359, label %lor.lhs.false347, !dbg !2181

lor.lhs.false347:                                 ; preds = %land.lhs.true343, %lor.lhs.false340
  %178 = load %struct.cp_options** %x.addr, align 8, !dbg !2181
  %dereference348 = getelementptr inbounds %struct.cp_options* %178, i32 0, i32 2, !dbg !2181
  %179 = load i32* %dereference348, align 4, !dbg !2181
  %cmp349 = icmp eq i32 %179, 4, !dbg !2181
  br i1 %cmp349, label %if.then359, label %lor.lhs.false351, !dbg !2181

lor.lhs.false351:                                 ; preds = %lor.lhs.false347, %if.else332
  %180 = load %struct.cp_options** %x.addr, align 8, !dbg !2181
  %recursive352 = getelementptr inbounds %struct.cp_options* %180, i32 0, i32 15, !dbg !2181
  %181 = load i8* %recursive352, align 1, !dbg !2181
  %tobool353 = trunc i8 %181 to i1, !dbg !2181
  br i1 %tobool353, label %land.lhs.true355, label %if.end364, !dbg !2181

land.lhs.true355:                                 ; preds = %lor.lhs.false351
  %182 = load i32* %src_mode, align 4, !dbg !2181
  %and356 = and i32 %182, 61440, !dbg !2181
  %cmp357 = icmp eq i32 %and356, 16384, !dbg !2181
  br i1 %cmp357, label %if.then359, label %if.end364, !dbg !2181

if.then359:                                       ; preds = %land.lhs.true355, %lor.lhs.false347, %land.lhs.true343, %land.lhs.true336
  %183 = load i8** %dst_name.addr, align 8, !dbg !2183
  %st_ino360 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1, !dbg !2183
  %184 = load i64* %st_ino360, align 8, !dbg !2183
  %st_dev361 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0, !dbg !2183
  %185 = load i64* %st_dev361, align 8, !dbg !2183
  %call362 = call i8* @remember_copied(i8* %183, i64 %184, i64 %185), !dbg !2183
  store i8* %call362, i8** %earlier_file, align 8, !dbg !2183
  br label %if.end364, !dbg !2185

if.end364:                                        ; preds = %lor.lhs.false351, %land.lhs.true355, %if.then359, %if.then329
  %186 = load i8** %earlier_file, align 8, !dbg !2186
  %tobool365 = icmp ne i8* %186, null, !dbg !2186
  br i1 %tobool365, label %if.then366, label %if.end425, !dbg !2186

if.then366:                                       ; preds = %if.end364
  %187 = load i32* %src_mode, align 4, !dbg !2188
  %and367 = and i32 %187, 61440, !dbg !2188
  %cmp368 = icmp eq i32 %and367, 16384, !dbg !2188
  br i1 %cmp368, label %if.then370, label %if.else385, !dbg !2188

if.then370:                                       ; preds = %if.then366
  %188 = load i8** %src_name.addr, align 8, !dbg !2191
  %189 = load i8** %earlier_file, align 8, !dbg !2191
  %call371 = call zeroext i1 @same_name(i8* %188, i8* %189), !dbg !2191
  br i1 %call371, label %if.then372, label %if.else375, !dbg !2191

if.then372:                                       ; preds = %if.then370
  %190 = load i8** @top_level_src_name, align 8, !dbg !2194
  %call373 = call i8* @quote_n(i32 0, i8* %190), !dbg !2194
  %191 = load i8** @top_level_dst_name, align 8, !dbg !2196
  %call374 = call i8* @quote_n(i32 1, i8* %191), !dbg !2196
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([45 x i8]* @.str1565, i32 0, i32 0), i8* %call373, i8* %call374), !dbg !2197
  %192 = load i8** %copy_into_self.addr, align 8, !dbg !2198
  store i8 1, i8* %192, align 1, !dbg !2198
  br label %un_backup, !dbg !2199

if.else375:                                       ; preds = %if.then370
  %193 = load %struct.cp_options** %x.addr, align 8, !dbg !2200
  %dereference376 = getelementptr inbounds %struct.cp_options* %193, i32 0, i32 2, !dbg !2200
  %194 = load i32* %dereference376, align 4, !dbg !2200
  %cmp377 = icmp eq i32 %194, 4, !dbg !2200
  br i1 %cmp377, label %if.end425, label %if.else380, !dbg !2200

if.else380:                                       ; preds = %if.else375
  %195 = load i8** %dst_name.addr, align 8, !dbg !2202
  %call381 = call i8* @quote_n(i32 0, i8* %195), !dbg !2202
  %196 = load i8** %earlier_file, align 8, !dbg !2202
  %call382 = call i8* @quote_n(i32 1, i8* %196), !dbg !2202
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([45 x i8]* @.str1666, i32 0, i32 0), i8* %call381, i8* %call382), !dbg !2204
  br label %un_backup, !dbg !2205

if.else385:                                       ; preds = %if.then366
  %197 = load i8** %earlier_file, align 8, !dbg !2206
  %198 = load i8** %dst_name.addr, align 8, !dbg !2206
  %call387 = call i32 @link(i8* %197, i8* %198) #6, !dbg !2206
  %cmp388 = icmp ne i32 %call387, 0, !dbg !2206
  %frombool390 = zext i1 %cmp388 to i8, !dbg !2206
  store i8 %frombool390, i8* %link_failed, align 1, !dbg !2206
  %199 = load i8* %link_failed, align 1, !dbg !2208
  %tobool391 = trunc i8 %199 to i1, !dbg !2208
  br i1 %tobool391, label %land.lhs.true393, label %if.end416, !dbg !2208

land.lhs.true393:                                 ; preds = %if.else385
  %call394 = call i32* @__errno_location() #1, !dbg !2208
  %200 = load i32* %call394, align 4, !dbg !2208
  %cmp395 = icmp eq i32 %200, 17, !dbg !2208
  br i1 %cmp395, label %if.then397, label %if.end416, !dbg !2208

if.then397:                                       ; preds = %land.lhs.true393
  %201 = load i8** %dst_name.addr, align 8, !dbg !2210
  %call398 = call i32 @unlink(i8* %201) #6, !dbg !2210
  %cmp399 = icmp ne i32 %call398, 0, !dbg !2210
  br i1 %cmp399, label %if.then401, label %if.end405, !dbg !2210

if.then401:                                       ; preds = %if.then397
  %call402 = call i32* @__errno_location() #1, !dbg !2213
  %202 = load i32* %call402, align 4, !dbg !2213
  %conv403 = sext i32 %202 to i64, !dbg !2213
  %203 = inttoptr i64 %conv403 to i32* (...)*, !dbg !2213
  %204 = load i8** %dst_name.addr, align 8, !dbg !2213
  %call404 = call i8* @quote(i8* %204), !dbg !2213
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %203, i8* getelementptr inbounds ([17 x i8]* @.str757, i32 0, i32 0), i8* %call404), !dbg !2213
  br label %un_backup, !dbg !2215

if.end405:                                        ; preds = %if.then397
  %205 = load %struct.cp_options** %x.addr, align 8, !dbg !2216
  %verbose406 = getelementptr inbounds %struct.cp_options* %205, i32 0, i32 21, !dbg !2216
  %206 = load i8* %verbose406, align 1, !dbg !2216
  %tobool407 = trunc i8 %206 to i1, !dbg !2216
  br i1 %tobool407, label %if.then408, label %if.end411, !dbg !2216

if.then408:                                       ; preds = %if.end405
  %207 = load i8** %dst_name.addr, align 8, !dbg !2218
  %call409 = call i8* @quote(i8* %207), !dbg !2218
  %call410 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str656, i32 0, i32 0), i8* %call409), !dbg !2218
  br label %if.end411, !dbg !2218

if.end411:                                        ; preds = %if.then408, %if.end405
  %208 = load i8** %earlier_file, align 8, !dbg !2219
  %209 = load i8** %dst_name.addr, align 8, !dbg !2219
  %call412 = call i32 @link(i8* %208, i8* %209) #6, !dbg !2219
  %cmp413 = icmp ne i32 %call412, 0, !dbg !2219
  %frombool415 = zext i1 %cmp413 to i8, !dbg !2219
  store i8 %frombool415, i8* %link_failed, align 1, !dbg !2219
  br label %if.end416, !dbg !2220

if.end416:                                        ; preds = %if.end411, %land.lhs.true393, %if.else385
  %210 = load i8* %link_failed, align 1, !dbg !2221
  %tobool417 = trunc i8 %210 to i1, !dbg !2221
  br i1 %tobool417, label %if.then418, label %if.end423, !dbg !2221

if.then418:                                       ; preds = %if.end416
  %call419 = call i32* @__errno_location() #1, !dbg !2223
  %211 = load i32* %call419, align 4, !dbg !2223
  %conv420 = sext i32 %211 to i64, !dbg !2223
  %212 = inttoptr i64 %conv420 to i32* (...)*, !dbg !2223
  %213 = load i8** %dst_name.addr, align 8, !dbg !2225
  %call421 = call i8* @quote_n(i32 0, i8* %213), !dbg !2225
  %214 = load i8** %earlier_file, align 8, !dbg !2225
  %call422 = call i8* @quote_n(i32 1, i8* %214), !dbg !2225
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %212, i8* getelementptr inbounds ([33 x i8]* @.str1767, i32 0, i32 0), i8* %call421, i8* %call422), !dbg !2223
  br label %un_backup, !dbg !2226

if.end423:                                        ; preds = %if.end416
  store i1 true, i1* %retval, !dbg !2227
  br label %return, !dbg !2227

if.end425:                                        ; preds = %if.else375, %if.end364
  %215 = load %struct.cp_options** %x.addr, align 8, !dbg !2228
  %move_mode426 = getelementptr inbounds %struct.cp_options* %215, i32 0, i32 7, !dbg !2228
  %216 = load i8* %move_mode426, align 1, !dbg !2228
  %tobool427 = trunc i8 %216 to i1, !dbg !2228
  br i1 %tobool427, label %if.then428, label %if.end489, !dbg !2228

if.then428:                                       ; preds = %if.end425
  %217 = load i8** %src_name.addr, align 8, !dbg !2230
  %218 = load i8** %dst_name.addr, align 8, !dbg !2230
  %call429 = call i32 @rename(i8* %217, i8* %218) #6, !dbg !2230
  %cmp430 = icmp eq i32 %call429, 0, !dbg !2230
  br i1 %cmp430, label %if.then432, label %if.end455, !dbg !2230

if.then432:                                       ; preds = %if.then428
  %219 = load %struct.cp_options** %x.addr, align 8, !dbg !2233
  %verbose433 = getelementptr inbounds %struct.cp_options* %219, i32 0, i32 21, !dbg !2233
  %220 = load i8* %verbose433, align 1, !dbg !2233
  %tobool434 = trunc i8 %220 to i1, !dbg !2233
  br i1 %tobool434, label %land.lhs.true436, label %if.end447, !dbg !2233

land.lhs.true436:                                 ; preds = %if.then432
  %221 = load i32* %src_mode, align 4, !dbg !2233
  %and437 = and i32 %221, 61440, !dbg !2233
  %cmp438 = icmp eq i32 %and437, 16384, !dbg !2233
  br i1 %cmp438, label %if.then440, label %if.end447, !dbg !2233

if.then440:                                       ; preds = %land.lhs.true436
  %222 = load i8** %src_name.addr, align 8, !dbg !2236
  %223 = load i8** %dst_name.addr, align 8, !dbg !2236
  %224 = load i8* %backup_succeeded, align 1, !dbg !2236
  %tobool441 = trunc i8 %224 to i1, !dbg !2236
  %225 = load i8** %dst_backup, align 8, !dbg !2236
  %cond446 = select i1 %tobool441, i8* %225, i8* null, !dbg !2236
  call void @emit_verbose(i8* %222, i8* %223, i8* %cond446), !dbg !2236
  br label %if.end447, !dbg !2236

if.end447:                                        ; preds = %if.then440, %land.lhs.true436, %if.then432
  %226 = load i8** %rename_succeeded.addr, align 8, !dbg !2237
  %tobool448 = icmp ne i8* %226, null, !dbg !2237
  br i1 %tobool448, label %if.then449, label %if.end450, !dbg !2237

if.then449:                                       ; preds = %if.end447
  %227 = load i8** %rename_succeeded.addr, align 8, !dbg !2239
  store i8 1, i8* %227, align 1, !dbg !2239
  br label %if.end450, !dbg !2239

if.end450:                                        ; preds = %if.then449, %if.end447
  %228 = load i8* %command_line_arg.addr, align 1, !dbg !2240
  %tobool451 = trunc i8 %228 to i1, !dbg !2240
  br i1 %tobool451, label %if.then452, label %if.end454, !dbg !2240

if.then452:                                       ; preds = %if.end450
  %229 = load %struct.cp_options** %x.addr, align 8, !dbg !2242
  %dest_info453 = getelementptr inbounds %struct.cp_options* %229, i32 0, i32 23, !dbg !2242
  %230 = load %struct.hash_table** %dest_info453, align 8, !dbg !2242
  %231 = load i8** %dst_name.addr, align 8, !dbg !2242
  call void @record_file(%struct.hash_table* %230, i8* %231, %struct.stat* %src_sb), !dbg !2242
  br label %if.end454, !dbg !2244

if.end454:                                        ; preds = %if.then452, %if.end450
  store i1 true, i1* %retval, !dbg !2245
  br label %return, !dbg !2245

if.end455:                                        ; preds = %if.then428
  %call456 = call i32* @__errno_location() #1, !dbg !2246
  %232 = load i32* %call456, align 4, !dbg !2246
  %cmp457 = icmp eq i32 %232, 22, !dbg !2246
  br i1 %cmp457, label %if.then459, label %if.end462, !dbg !2246

if.then459:                                       ; preds = %if.end455
  %233 = load i8** @top_level_src_name, align 8, !dbg !2248
  %call460 = call i8* @quote_n(i32 0, i8* %233), !dbg !2248
  %234 = load i8** @top_level_dst_name, align 8, !dbg !2250
  %call461 = call i8* @quote_n(i32 1, i8* %234), !dbg !2250
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([47 x i8]* @.str1868, i32 0, i32 0), i8* %call460, i8* %call461), !dbg !2251
  %235 = load i8** %copy_into_self.addr, align 8, !dbg !2252
  store i8 1, i8* %235, align 1, !dbg !2252
  store i1 true, i1* %retval, !dbg !2253
  br label %return, !dbg !2253

if.end462:                                        ; preds = %if.end455
  %call463 = call i32* @__errno_location() #1, !dbg !2254
  %236 = load i32* %call463, align 4, !dbg !2254
  %cmp464 = icmp ne i32 %236, 18, !dbg !2254
  br i1 %cmp464, label %if.then466, label %if.end473, !dbg !2254

if.then466:                                       ; preds = %if.end462
  %call467 = call i32* @__errno_location() #1, !dbg !2256
  %237 = load i32* %call467, align 4, !dbg !2256
  %conv468 = sext i32 %237 to i64, !dbg !2256
  %238 = inttoptr i64 %conv468 to i32* (...)*, !dbg !2256
  %239 = load i8** %src_name.addr, align 8, !dbg !2258
  %call469 = call i8* @quote_n(i32 0, i8* %239), !dbg !2258
  %240 = load i8** %dst_name.addr, align 8, !dbg !2258
  %call470 = call i8* @quote_n(i32 1, i8* %240), !dbg !2258
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %238, i8* getelementptr inbounds ([21 x i8]* @.str1969, i32 0, i32 0), i8* %call469, i8* %call470), !dbg !2256
  %st_ino471 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1, !dbg !2259
  %241 = load i64* %st_ino471, align 8, !dbg !2259
  %st_dev472 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0, !dbg !2259
  %242 = load i64* %st_dev472, align 8, !dbg !2259
  call void @forget_created(i64 %241, i64 %242), !dbg !2259
  store i1 false, i1* %retval, !dbg !2260
  br label %return, !dbg !2260

if.end473:                                        ; preds = %if.end462
  %243 = load i8** %dst_name.addr, align 8, !dbg !2261
  %call474 = call i32 @unlink(i8* %243) #6, !dbg !2261
  %cmp475 = icmp ne i32 %call474, 0, !dbg !2261
  br i1 %cmp475, label %land.lhs.true477, label %if.end488, !dbg !2261

land.lhs.true477:                                 ; preds = %if.end473
  %call478 = call i32* @__errno_location() #1, !dbg !2261
  %244 = load i32* %call478, align 4, !dbg !2261
  %cmp479 = icmp ne i32 %244, 2, !dbg !2261
  br i1 %cmp479, label %if.then481, label %if.end488, !dbg !2261

if.then481:                                       ; preds = %land.lhs.true477
  %call482 = call i32* @__errno_location() #1, !dbg !2263
  %245 = load i32* %call482, align 4, !dbg !2263
  %conv483 = sext i32 %245 to i64, !dbg !2263
  %246 = inttoptr i64 %conv483 to i32* (...)*, !dbg !2263
  %247 = load i8** %src_name.addr, align 8, !dbg !2265
  %call484 = call i8* @quote_n(i32 0, i8* %247), !dbg !2265
  %248 = load i8** %dst_name.addr, align 8, !dbg !2265
  %call485 = call i8* @quote_n(i32 1, i8* %248), !dbg !2265
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %246, i8* getelementptr inbounds ([60 x i8]* @.str2070, i32 0, i32 0), i8* %call484, i8* %call485), !dbg !2263
  %st_ino486 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1, !dbg !2266
  %249 = load i64* %st_ino486, align 8, !dbg !2266
  %st_dev487 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0, !dbg !2266
  %250 = load i64* %st_dev487, align 8, !dbg !2266
  call void @forget_created(i64 %249, i64 %250), !dbg !2266
  store i1 false, i1* %retval, !dbg !2267
  br label %return, !dbg !2267

if.end488:                                        ; preds = %land.lhs.true477, %if.end473
  store i8 1, i8* %new_dst.addr, align 1, !dbg !2268
  br label %if.end489, !dbg !2269

if.end489:                                        ; preds = %if.end488, %if.end425
  %251 = load %struct.cp_options** %x.addr, align 8, !dbg !2270
  %preserve_ownership = getelementptr inbounds %struct.cp_options* %251, i32 0, i32 10, !dbg !2270
  %252 = load i8* %preserve_ownership, align 1, !dbg !2270
  %tobool490 = trunc i8 %252 to i1, !dbg !2270
  br i1 %tobool490, label %cond.true492, label %cond.end501, !dbg !2270

cond.true492:                                     ; preds = %if.end489
  %253 = load %struct.cp_options** %x.addr, align 8, !dbg !2270
  %set_mode = getelementptr inbounds %struct.cp_options* %253, i32 0, i32 16, !dbg !2270
  %254 = load i8* %set_mode, align 1, !dbg !2270
  %tobool493 = trunc i8 %254 to i1, !dbg !2270
  br i1 %tobool493, label %cond.true495, label %cond.false496, !dbg !2270

cond.true495:                                     ; preds = %cond.true492
  %255 = load %struct.cp_options** %x.addr, align 8, !dbg !2270
  %mode = getelementptr inbounds %struct.cp_options* %255, i32 0, i32 17, !dbg !2270
  %256 = load i32* %mode, align 4, !dbg !2270
  br label %cond.end497, !dbg !2270

cond.false496:                                    ; preds = %cond.true492
  %257 = load i32* %src_mode, align 4, !dbg !2270
  br label %cond.end497, !dbg !2270

cond.end497:                                      ; preds = %cond.false496, %cond.true495
  %cond498 = phi i32 [ %256, %cond.true495 ], [ %257, %cond.false496 ], !dbg !2270
  %and499 = and i32 %cond498, 63, !dbg !2270
  br label %cond.end501, !dbg !2270

cond.end501:                                      ; preds = %if.end489, %cond.end497
  %cond502 = phi i32 [ %and499, %cond.end497 ], [ 0, %if.end489 ], !dbg !2270
  store i32 %cond502, i32* %omitted_permissions, align 4, !dbg !2270
  store i8 1, i8* %delayed_ok, align 1, !dbg !2271
  store i8 1, i8* %preserve_metadata, align 1, !dbg !2272
  %258 = load i32* %src_mode, align 4, !dbg !2273
  %and503 = and i32 %258, 61440, !dbg !2273
  %cmp504 = icmp eq i32 %and503, 16384, !dbg !2273
  br i1 %cmp504, label %if.then506, label %if.else588, !dbg !2273

if.then506:                                       ; preds = %cond.end501
  %259 = load %struct.dir_list** %ancestors.addr, align 8, !dbg !2275
  %call508 = call zeroext i1 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %259), !dbg !2275
  br i1 %call508, label %if.then509, label %if.end511, !dbg !2275

if.then509:                                       ; preds = %if.then506
  %260 = load i8** %src_name.addr, align 8, !dbg !2278
  %call510 = call i8* @quote(i8* %260), !dbg !2278
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([36 x i8]* @.str2171, i32 0, i32 0), i8* %call510), !dbg !2280
  br label %un_backup, !dbg !2281

if.end511:                                        ; preds = %if.then506
  %261 = alloca i8, i64 24, !dbg !2282
  %262 = bitcast i8* %261 to %struct.dir_list*, !dbg !2282
  store %struct.dir_list* %262, %struct.dir_list** %dir, align 8, !dbg !2282
  %263 = load %struct.dir_list** %ancestors.addr, align 8, !dbg !2283
  %264 = load %struct.dir_list** %dir, align 8, !dbg !2283
  %parent = getelementptr inbounds %struct.dir_list* %264, i32 0, i32 0, !dbg !2283
  store %struct.dir_list* %263, %struct.dir_list** %parent, align 8, !dbg !2283
  %st_ino512 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1, !dbg !2284
  %265 = load i64* %st_ino512, align 8, !dbg !2284
  %266 = load %struct.dir_list** %dir, align 8, !dbg !2284
  %ino = getelementptr inbounds %struct.dir_list* %266, i32 0, i32 1, !dbg !2284
  store i64 %265, i64* %ino, align 8, !dbg !2284
  %st_dev513 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0, !dbg !2285
  %267 = load i64* %st_dev513, align 8, !dbg !2285
  %268 = load %struct.dir_list** %dir, align 8, !dbg !2285
  %dev = getelementptr inbounds %struct.dir_list* %268, i32 0, i32 2, !dbg !2285
  store i64 %267, i64* %dev, align 8, !dbg !2285
  %269 = load i8* %new_dst.addr, align 1, !dbg !2286
  %tobool514 = trunc i8 %269 to i1, !dbg !2286
  br i1 %tobool514, label %if.then521, label %lor.lhs.false516, !dbg !2286

lor.lhs.false516:                                 ; preds = %if.end511
  %st_mode517 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3, !dbg !2286
  %270 = load i32* %st_mode517, align 4, !dbg !2286
  %and518 = and i32 %270, 61440, !dbg !2286
  %cmp519 = icmp eq i32 %and518, 16384, !dbg !2286
  br i1 %cmp519, label %if.end572, label %if.then521, !dbg !2286

if.then521:                                       ; preds = %lor.lhs.false516, %if.end511
  %271 = load %struct.cp_options** %x.addr, align 8, !dbg !2288
  %set_mode523 = getelementptr inbounds %struct.cp_options* %271, i32 0, i32 16, !dbg !2288
  %272 = load i8* %set_mode523, align 1, !dbg !2288
  %tobool524 = trunc i8 %272 to i1, !dbg !2288
  br i1 %tobool524, label %cond.true526, label %cond.false528, !dbg !2288

cond.true526:                                     ; preds = %if.then521
  %273 = load %struct.cp_options** %x.addr, align 8, !dbg !2288
  %mode527 = getelementptr inbounds %struct.cp_options* %273, i32 0, i32 17, !dbg !2288
  %274 = load i32* %mode527, align 4, !dbg !2288
  br label %cond.end529, !dbg !2288

cond.false528:                                    ; preds = %if.then521
  %275 = load i32* %src_mode, align 4, !dbg !2288
  br label %cond.end529, !dbg !2288

cond.end529:                                      ; preds = %cond.false528, %cond.true526
  %cond530 = phi i32 [ %274, %cond.true526 ], [ %275, %cond.false528 ], !dbg !2288
  %and531 = and i32 %cond530, 4095, !dbg !2288
  %276 = load i32* %omitted_permissions, align 4, !dbg !2288
  %neg = xor i32 %276, -1, !dbg !2288
  %and532 = and i32 %and531, %neg, !dbg !2288
  store i32 %and532, i32* %mkdir_mode, align 4, !dbg !2288
  %277 = load i8** %dst_name.addr, align 8, !dbg !2290
  %278 = load i32* %mkdir_mode, align 4, !dbg !2290
  %call533 = call i32 @mkdir(i8* %277, i32 %278) #6, !dbg !2290
  %cmp534 = icmp ne i32 %call533, 0, !dbg !2290
  br i1 %cmp534, label %if.then536, label %if.end540, !dbg !2290

if.then536:                                       ; preds = %cond.end529
  %call537 = call i32* @__errno_location() #1, !dbg !2292
  %279 = load i32* %call537, align 4, !dbg !2292
  %conv538 = sext i32 %279 to i64, !dbg !2292
  %280 = inttoptr i64 %conv538 to i32* (...)*, !dbg !2292
  %281 = load i8** %dst_name.addr, align 8, !dbg !2294
  %call539 = call i8* @quote(i8* %281), !dbg !2294
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %280, i8* getelementptr inbounds ([27 x i8]* @.str2272, i32 0, i32 0), i8* %call539), !dbg !2292
  br label %un_backup, !dbg !2295

if.end540:                                        ; preds = %cond.end529
  %282 = load i8** %dst_name.addr, align 8, !dbg !2296
  %call541 = call i32 @lstat(i8* %282, %struct.stat* %dst_sb) #6, !dbg !2296
  %cmp542 = icmp ne i32 %call541, 0, !dbg !2296
  br i1 %cmp542, label %if.then544, label %if.else548, !dbg !2296

if.then544:                                       ; preds = %if.end540
  %call545 = call i32* @__errno_location() #1, !dbg !2298
  %283 = load i32* %call545, align 4, !dbg !2298
  %conv546 = sext i32 %283 to i64, !dbg !2298
  %284 = inttoptr i64 %conv546 to i32* (...)*, !dbg !2298
  %285 = load i8** %dst_name.addr, align 8, !dbg !2298
  %call547 = call i8* @quote(i8* %285), !dbg !2298
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %284, i8* getelementptr inbounds ([15 x i8]* @.str252, i32 0, i32 0), i8* %call547), !dbg !2298
  br label %un_backup, !dbg !2300

if.else548:                                       ; preds = %if.end540
  %st_mode549 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3, !dbg !2301
  %286 = load i32* %st_mode549, align 4, !dbg !2301
  %and550 = and i32 %286, 448, !dbg !2301
  %cmp551 = icmp ne i32 %and550, 448, !dbg !2301
  br i1 %cmp551, label %if.then553, label %if.end564, !dbg !2301

if.then553:                                       ; preds = %if.else548
  %st_mode554 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3, !dbg !2303
  %287 = load i32* %st_mode554, align 4, !dbg !2303
  store i32 %287, i32* %dst_mode, align 4, !dbg !2303
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !2305
  %288 = load i8** %dst_name.addr, align 8, !dbg !2306
  %289 = load i32* %dst_mode, align 4, !dbg !2306
  %or = or i32 %289, 448, !dbg !2306
  %call555 = call i32 @chmod(i8* %288, i32 %or) #6, !dbg !2306
  %cmp556 = icmp ne i32 %call555, 0, !dbg !2306
  br i1 %cmp556, label %if.then558, label %if.end564, !dbg !2306

if.then558:                                       ; preds = %if.then553
  %call559 = call i32* @__errno_location() #1, !dbg !2308
  %290 = load i32* %call559, align 4, !dbg !2308
  %conv560 = sext i32 %290 to i64, !dbg !2308
  %291 = inttoptr i64 %conv560 to i32* (...)*, !dbg !2308
  %292 = load i8** %dst_name.addr, align 8, !dbg !2310
  %call561 = call i8* @quote(i8* %292), !dbg !2310
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %291, i8* getelementptr inbounds ([27 x i8]* @.str2373, i32 0, i32 0), i8* %call561), !dbg !2308
  br label %un_backup, !dbg !2311

if.end564:                                        ; preds = %if.else548, %if.then553
  %293 = load i8** %dst_name.addr, align 8, !dbg !2312
  %st_ino565 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 1, !dbg !2312
  %294 = load i64* %st_ino565, align 8, !dbg !2312
  %st_dev566 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 0, !dbg !2312
  %295 = load i64* %st_dev566, align 8, !dbg !2312
  %call567 = call i8* @remember_copied(i8* %293, i64 %294, i64 %295), !dbg !2312
  %296 = load %struct.cp_options** %x.addr, align 8, !dbg !2313
  %verbose568 = getelementptr inbounds %struct.cp_options* %296, i32 0, i32 21, !dbg !2313
  %297 = load i8* %verbose568, align 1, !dbg !2313
  %tobool569 = trunc i8 %297 to i1, !dbg !2313
  br i1 %tobool569, label %if.then570, label %if.end572, !dbg !2313

if.then570:                                       ; preds = %if.end564
  %298 = load i8** %src_name.addr, align 8, !dbg !2315
  %299 = load i8** %dst_name.addr, align 8, !dbg !2315
  call void @emit_verbose(i8* %298, i8* %299, i8* null), !dbg !2315
  br label %if.end572, !dbg !2315

if.end572:                                        ; preds = %if.end564, %if.then570, %lor.lhs.false516
  %300 = load %struct.cp_options** %x.addr, align 8, !dbg !2316
  %one_file_system = getelementptr inbounds %struct.cp_options* %300, i32 0, i32 9, !dbg !2316
  %301 = load i8* %one_file_system, align 1, !dbg !2316
  %tobool573 = trunc i8 %301 to i1, !dbg !2316
  %302 = load i64* %device.addr, align 8, !dbg !2316
  %cmp576 = icmp ne i64 %302, 0, !dbg !2316
  %or.cond1 = and i1 %tobool573, %cmp576, !dbg !2316
  br i1 %or.cond1, label %land.lhs.true578, label %if.end583, !dbg !2316

land.lhs.true578:                                 ; preds = %if.end572
  %303 = load i64* %device.addr, align 8, !dbg !2316
  %st_dev579 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0, !dbg !2316
  %304 = load i64* %st_dev579, align 8, !dbg !2316
  %cmp580 = icmp ne i64 %303, %304, !dbg !2316
  br i1 %cmp580, label %if.then582, label %if.end583, !dbg !2316

if.then582:                                       ; preds = %land.lhs.true578
  store i1 true, i1* %retval, !dbg !2318
  br label %return, !dbg !2318

if.end583:                                        ; preds = %land.lhs.true578, %if.end572
  %305 = load i8** %src_name.addr, align 8, !dbg !2319
  %306 = load i8** %dst_name.addr, align 8, !dbg !2319
  %307 = load i8* %new_dst.addr, align 1, !dbg !2319
  %tobool584 = trunc i8 %307 to i1, !dbg !2319
  %308 = load %struct.dir_list** %dir, align 8, !dbg !2319
  %309 = load %struct.cp_options** %x.addr, align 8, !dbg !2319
  %310 = load i8** %copy_into_self.addr, align 8, !dbg !2319
  %call585 = call zeroext i1 @copy_dir(i8* %305, i8* %306, i1 zeroext %tobool584, %struct.stat* %src_sb, %struct.dir_list* %308, %struct.cp_options* %309, i8* %310), !dbg !2319
  br i1 %call585, label %if.end782, label %if.then586, !dbg !2319

if.then586:                                       ; preds = %if.end583
  store i8 0, i8* %delayed_ok, align 1, !dbg !2321
  br label %if.end782, !dbg !2323

if.else588:                                       ; preds = %cond.end501
  %311 = load %struct.cp_options** %x.addr, align 8, !dbg !2324
  %symbolic_link = getelementptr inbounds %struct.cp_options* %311, i32 0, i32 19, !dbg !2324
  %312 = load i8* %symbolic_link, align 1, !dbg !2324
  %tobool589 = trunc i8 %312 to i1, !dbg !2324
  br i1 %tobool589, label %if.then590, label %if.else636, !dbg !2324

if.then590:                                       ; preds = %if.else588
  store i8 0, i8* %preserve_metadata, align 1, !dbg !2326
  %313 = load i8** %src_name.addr, align 8, !dbg !2328
  %314 = load i8* %313, align 1, !dbg !2328
  %conv591 = sext i8 %314 to i32, !dbg !2328
  %cmp592 = icmp ne i32 %conv591, 47, !dbg !2328
  br i1 %cmp592, label %if.then594, label %if.end626, !dbg !2328

if.then594:                                       ; preds = %if.then590
  %315 = load i8** %dst_name.addr, align 8, !dbg !2330
  %call599 = call i8* @dir_name(i8* %315), !dbg !2330
  store i8* %call599, i8** %dst_parent, align 8, !dbg !2330
  %316 = load i8** %dst_parent, align 8, !dbg !2332
  %call600 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8]* @.str2474, i32 0, i32 0), i8* %316) #18, !dbg !2332
  %cmp601 = icmp eq i32 %call600, 0, !dbg !2332
  br i1 %cmp601, label %lor.end, label %lor.lhs.false603, !dbg !2332

lor.lhs.false603:                                 ; preds = %if.then594
  %call604 = call i32 @stat(i8* getelementptr inbounds ([2 x i8]* @.str2474, i32 0, i32 0), %struct.stat* %dot_sb) #6, !dbg !2333
  %cmp605 = icmp ne i32 %call604, 0, !dbg !2333
  br i1 %cmp605, label %lor.end, label %lor.lhs.false607, !dbg !2333

lor.lhs.false607:                                 ; preds = %lor.lhs.false603
  %317 = load i8** %dst_parent, align 8, !dbg !2334
  %call608 = call i32 @stat(i8* %317, %struct.stat* %dst_parent_sb) #6, !dbg !2334
  %cmp609 = icmp ne i32 %call608, 0, !dbg !2334
  br i1 %cmp609, label %lor.end, label %lor.rhs, !dbg !2334

lor.rhs:                                          ; preds = %lor.lhs.false607
  %st_ino611 = getelementptr inbounds %struct.stat* %dot_sb, i32 0, i32 1, !dbg !2334
  %318 = load i64* %st_ino611, align 8, !dbg !2334
  %st_ino612 = getelementptr inbounds %struct.stat* %dst_parent_sb, i32 0, i32 1, !dbg !2334
  %319 = load i64* %st_ino612, align 8, !dbg !2334
  %cmp613 = icmp eq i64 %318, %319, !dbg !2334
  br i1 %cmp613, label %land.rhs615, label %lor.end, !dbg !2334

land.rhs615:                                      ; preds = %lor.rhs
  %st_dev616 = getelementptr inbounds %struct.stat* %dot_sb, i32 0, i32 0, !dbg !2334
  %320 = load i64* %st_dev616, align 8, !dbg !2334
  %st_dev617 = getelementptr inbounds %struct.stat* %dst_parent_sb, i32 0, i32 0, !dbg !2334
  %321 = load i64* %st_dev617, align 8, !dbg !2334
  %cmp618 = icmp eq i64 %320, %321, !dbg !2334
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs615, %lor.lhs.false607, %lor.lhs.false603, %if.then594
  %322 = phi i1 [ true, %lor.lhs.false607 ], [ true, %lor.lhs.false603 ], [ true, %if.then594 ], [ false, %lor.rhs ], [ %cmp618, %land.rhs615 ]
  %frombool621 = zext i1 %322 to i8
  store i8 %frombool621, i8* %in_current_dir, align 1
  %323 = load i8** %dst_parent, align 8, !dbg !2335
  call void @free(i8* %323) #6, !dbg !2335
  %324 = load i8* %in_current_dir, align 1, !dbg !2336
  %tobool622 = trunc i8 %324 to i1, !dbg !2336
  br i1 %tobool622, label %if.end626, label %if.then623, !dbg !2336

if.then623:                                       ; preds = %lor.end
  %325 = load i8** %dst_name.addr, align 8, !dbg !2338
  %call624 = call i8* @quote(i8* %325), !dbg !2338
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([63 x i8]* @.str2575, i32 0, i32 0), i8* %call624), !dbg !2340
  br label %un_backup, !dbg !2341

if.end626:                                        ; preds = %lor.end, %if.then590
  %326 = load i8** %src_name.addr, align 8, !dbg !2342
  %327 = load i8** %dst_name.addr, align 8, !dbg !2342
  %call627 = call i32 @symlink(i8* %326, i8* %327) #6, !dbg !2342
  %cmp628 = icmp ne i32 %call627, 0, !dbg !2342
  br i1 %cmp628, label %if.then630, label %if.end782, !dbg !2342

if.then630:                                       ; preds = %if.end626
  %call631 = call i32* @__errno_location() #1, !dbg !2344
  %328 = load i32* %call631, align 4, !dbg !2344
  %conv632 = sext i32 %328 to i64, !dbg !2344
  %329 = inttoptr i64 %conv632 to i32* (...)*, !dbg !2344
  %330 = load i8** %dst_name.addr, align 8, !dbg !2346
  %call633 = call i8* @quote_n(i32 0, i8* %330), !dbg !2346
  %331 = load i8** %src_name.addr, align 8, !dbg !2346
  %call634 = call i8* @quote_n(i32 1, i8* %331), !dbg !2346
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %329, i8* getelementptr inbounds ([37 x i8]* @.str2676, i32 0, i32 0), i8* %call633, i8* %call634), !dbg !2344
  br label %un_backup, !dbg !2347

if.else636:                                       ; preds = %if.else588
  %332 = load %struct.cp_options** %x.addr, align 8, !dbg !2348
  %hard_link = getelementptr inbounds %struct.cp_options* %332, i32 0, i32 5, !dbg !2348
  %333 = load i8* %hard_link, align 1, !dbg !2348
  %tobool637 = trunc i8 %333 to i1, !dbg !2348
  br i1 %tobool637, label %if.then638, label %if.else646, !dbg !2348

if.then638:                                       ; preds = %if.else636
  store i8 0, i8* %preserve_metadata, align 1, !dbg !2350
  %334 = load i8** %src_name.addr, align 8, !dbg !2352
  %335 = load i8** %dst_name.addr, align 8, !dbg !2352
  %call639 = call i32 @link(i8* %334, i8* %335) #6, !dbg !2352
  %tobool640 = icmp ne i32 %call639, 0, !dbg !2352
  br i1 %tobool640, label %if.then641, label %if.end782, !dbg !2352

if.then641:                                       ; preds = %if.then638
  %call642 = call i32* @__errno_location() #1, !dbg !2354
  %336 = load i32* %call642, align 4, !dbg !2354
  %conv643 = sext i32 %336 to i64, !dbg !2354
  %337 = inttoptr i64 %conv643 to i32* (...)*, !dbg !2354
  %338 = load i8** %dst_name.addr, align 8, !dbg !2354
  %call644 = call i8* @quote(i8* %338), !dbg !2354
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %337, i8* getelementptr inbounds ([22 x i8]* @.str2777, i32 0, i32 0), i8* %call644), !dbg !2354
  br label %un_backup, !dbg !2356

if.else646:                                       ; preds = %if.else636
  %339 = load i32* %src_mode, align 4, !dbg !2357
  %and647 = and i32 %339, 61440, !dbg !2357
  %cmp648 = icmp eq i32 %and647, 32768, !dbg !2357
  br i1 %cmp648, label %if.then657, label %lor.lhs.false650, !dbg !2357

lor.lhs.false650:                                 ; preds = %if.else646
  %340 = load %struct.cp_options** %x.addr, align 8, !dbg !2357
  %copy_as_regular = getelementptr inbounds %struct.cp_options* %340, i32 0, i32 1, !dbg !2357
  %341 = load i8* %copy_as_regular, align 1, !dbg !2357
  %tobool651 = trunc i8 %341 to i1, !dbg !2357
  br i1 %tobool651, label %land.lhs.true653, label %if.else662, !dbg !2357

land.lhs.true653:                                 ; preds = %lor.lhs.false650
  %342 = load i32* %src_mode, align 4, !dbg !2357
  %and654 = and i32 %342, 61440, !dbg !2357
  %cmp655 = icmp eq i32 %and654, 40960, !dbg !2357
  br i1 %cmp655, label %if.else662, label %if.then657, !dbg !2357

if.then657:                                       ; preds = %land.lhs.true653, %if.else646
  store i8 1, i8* %copied_as_regular, align 1, !dbg !2359
  %343 = load i8** %src_name.addr, align 8, !dbg !2361
  %344 = load i8** %dst_name.addr, align 8, !dbg !2361
  %345 = load %struct.cp_options** %x.addr, align 8, !dbg !2361
  %346 = load i32* %src_mode, align 4, !dbg !2361
  %and658 = and i32 %346, 511, !dbg !2361
  %347 = load i32* %omitted_permissions, align 4, !dbg !2361
  %call659 = call zeroext i1 @copy_reg(i8* %343, i8* %344, %struct.cp_options* %345, i32 %and658, i32 %347, i8* %new_dst.addr, %struct.stat* %src_sb), !dbg !2361
  br i1 %call659, label %if.end782, label %un_backup, !dbg !2361

if.else662:                                       ; preds = %land.lhs.true653, %lor.lhs.false650
  %348 = load i32* %src_mode, align 4, !dbg !2363
  %and663 = and i32 %348, 61440, !dbg !2363
  %cmp664 = icmp eq i32 %and663, 4096, !dbg !2363
  br i1 %cmp664, label %if.then666, label %if.else685, !dbg !2363

if.then666:                                       ; preds = %if.else662
  %349 = load i8** %dst_name.addr, align 8, !dbg !2365
  %350 = load i32* %src_mode, align 4, !dbg !2365
  %351 = load i32* %omitted_permissions, align 4, !dbg !2365
  %neg667 = xor i32 %351, -1, !dbg !2365
  %and668 = and i32 %350, %neg667, !dbg !2365
  %call669 = call i32 @mknod(i8* %349, i32 %and668, i64 0) #6, !dbg !2365
  %cmp670 = icmp ne i32 %call669, 0, !dbg !2365
  br i1 %cmp670, label %if.then672, label %if.end782, !dbg !2365

if.then672:                                       ; preds = %if.then666
  %352 = load i8** %dst_name.addr, align 8, !dbg !2368
  %353 = load i32* %src_mode, align 4, !dbg !2368
  %and673 = and i32 %353, -4097, !dbg !2368
  %354 = load i32* %omitted_permissions, align 4, !dbg !2368
  %neg674 = xor i32 %354, -1, !dbg !2368
  %and675 = and i32 %and673, %neg674, !dbg !2368
  %call676 = call i32 @mkfifo(i8* %352, i32 %and675) #6, !dbg !2368
  %cmp677 = icmp ne i32 %call676, 0, !dbg !2368
  br i1 %cmp677, label %if.then679, label %if.end782, !dbg !2368

if.then679:                                       ; preds = %if.then672
  %call680 = call i32* @__errno_location() #1, !dbg !2370
  %355 = load i32* %call680, align 4, !dbg !2370
  %conv681 = sext i32 %355 to i64, !dbg !2370
  %356 = inttoptr i64 %conv681 to i32* (...)*, !dbg !2370
  %357 = load i8** %dst_name.addr, align 8, !dbg !2370
  %call682 = call i8* @quote(i8* %357), !dbg !2370
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %356, i8* getelementptr inbounds ([22 x i8]* @.str2878, i32 0, i32 0), i8* %call682), !dbg !2370
  br label %un_backup, !dbg !2372

if.else685:                                       ; preds = %if.else662
  %358 = load i32* %src_mode, align 4, !dbg !2373
  %and686 = and i32 %358, 61440, !dbg !2373
  %cmp687 = icmp eq i32 %and686, 24576, !dbg !2373
  br i1 %cmp687, label %if.then697, label %lor.lhs.false689, !dbg !2373

lor.lhs.false689:                                 ; preds = %if.else685
  %359 = load i32* %src_mode, align 4, !dbg !2373
  %and690 = and i32 %359, 61440, !dbg !2373
  %cmp691 = icmp eq i32 %and690, 8192, !dbg !2373
  br i1 %cmp691, label %if.then697, label %lor.lhs.false693, !dbg !2373

lor.lhs.false693:                                 ; preds = %lor.lhs.false689
  %360 = load i32* %src_mode, align 4, !dbg !2373
  %and694 = and i32 %360, 61440, !dbg !2373
  %cmp695 = icmp eq i32 %and694, 49152, !dbg !2373
  br i1 %cmp695, label %if.then697, label %if.else708, !dbg !2373

if.then697:                                       ; preds = %lor.lhs.false693, %lor.lhs.false689, %if.else685
  %361 = load i8** %dst_name.addr, align 8, !dbg !2375
  %362 = load i32* %src_mode, align 4, !dbg !2375
  %363 = load i32* %omitted_permissions, align 4, !dbg !2375
  %neg698 = xor i32 %363, -1, !dbg !2375
  %and699 = and i32 %362, %neg698, !dbg !2375
  %st_rdev = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 7, !dbg !2375
  %364 = load i64* %st_rdev, align 8, !dbg !2375
  %call700 = call i32 @mknod(i8* %361, i32 %and699, i64 %364) #6, !dbg !2375
  %cmp701 = icmp ne i32 %call700, 0, !dbg !2375
  br i1 %cmp701, label %if.then703, label %if.end782, !dbg !2375

if.then703:                                       ; preds = %if.then697
  %call704 = call i32* @__errno_location() #1, !dbg !2378
  %365 = load i32* %call704, align 4, !dbg !2378
  %conv705 = sext i32 %365 to i64, !dbg !2378
  %366 = inttoptr i64 %conv705 to i32* (...)*, !dbg !2378
  %367 = load i8** %dst_name.addr, align 8, !dbg !2380
  %call706 = call i8* @quote(i8* %367), !dbg !2380
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %366, i8* getelementptr inbounds ([30 x i8]* @.str2979, i32 0, i32 0), i8* %call706), !dbg !2378
  br label %un_backup, !dbg !2381

if.else708:                                       ; preds = %lor.lhs.false693
  %368 = load i32* %src_mode, align 4, !dbg !2382
  %and709 = and i32 %368, 61440, !dbg !2382
  %cmp710 = icmp eq i32 %and709, 40960, !dbg !2382
  %369 = load i8** %src_name.addr, align 8, !dbg !2384
  br i1 %cmp710, label %if.then712, label %if.else774, !dbg !2382

if.then712:                                       ; preds = %if.else708
  %st_size = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 8, !dbg !2384
  %370 = load i64* %st_size, align 8, !dbg !2384
  %call714 = call i8* @xreadlink(i8* %369, i64 %370), !dbg !2384
  store i8* %call714, i8** %src_link_val, align 8, !dbg !2384
  %371 = load i8** %src_link_val, align 8, !dbg !2386
  %cmp715 = icmp eq i8* %371, null, !dbg !2386
  br i1 %cmp715, label %if.then717, label %if.end721, !dbg !2386

if.then717:                                       ; preds = %if.then712
  %call718 = call i32* @__errno_location() #1, !dbg !2388
  %372 = load i32* %call718, align 4, !dbg !2388
  %conv719 = sext i32 %372 to i64, !dbg !2388
  %373 = inttoptr i64 %conv719 to i32* (...)*, !dbg !2388
  %374 = load i8** %src_name.addr, align 8, !dbg !2388
  %call720 = call i8* @quote(i8* %374), !dbg !2388
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %373, i8* getelementptr inbounds ([29 x i8]* @.str3080, i32 0, i32 0), i8* %call720), !dbg !2388
  br label %un_backup, !dbg !2390

if.end721:                                        ; preds = %if.then712
  %375 = load i8** %src_link_val, align 8, !dbg !2391
  %376 = load i8** %dst_name.addr, align 8, !dbg !2391
  %call722 = call i32 @symlink(i8* %375, i8* %376) #6, !dbg !2391
  %cmp723 = icmp eq i32 %call722, 0, !dbg !2391
  br i1 %cmp723, label %if.then725, label %if.else726, !dbg !2391

if.then725:                                       ; preds = %if.end721
  %377 = load i8** %src_link_val, align 8, !dbg !2393
  call void @free(i8* %377) #6, !dbg !2393
  br label %if.end760, !dbg !2393

if.else726:                                       ; preds = %if.end721
  %call728 = call i32* @__errno_location() #1, !dbg !2394
  %378 = load i32* %call728, align 4, !dbg !2394
  store i32 %378, i32* %saved_errno, align 4, !dbg !2394
  store i8 0, i8* %same_link, align 1, !dbg !2396
  %379 = load %struct.cp_options** %x.addr, align 8, !dbg !2397
  %update730 = getelementptr inbounds %struct.cp_options* %379, i32 0, i32 20, !dbg !2397
  %380 = load i8* %update730, align 1, !dbg !2397
  %tobool731 = trunc i8 %380 to i1, !dbg !2397
  br i1 %tobool731, label %land.lhs.true733, label %if.end754, !dbg !2397

land.lhs.true733:                                 ; preds = %if.else726
  %381 = load i8* %new_dst.addr, align 1, !dbg !2397
  %tobool734 = trunc i8 %381 to i1, !dbg !2397
  br i1 %tobool734, label %if.end754, label %land.lhs.true735, !dbg !2397

land.lhs.true735:                                 ; preds = %land.lhs.true733
  %st_mode736 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3, !dbg !2397
  %382 = load i32* %st_mode736, align 4, !dbg !2397
  %and737 = and i32 %382, 61440, !dbg !2397
  %cmp738 = icmp eq i32 %and737, 40960, !dbg !2397
  br i1 %cmp738, label %land.lhs.true740, label %if.end754, !dbg !2397

land.lhs.true740:                                 ; preds = %land.lhs.true735
  %st_size741 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 8, !dbg !2397
  %383 = load i64* %st_size741, align 8, !dbg !2397
  %384 = load i8** %src_link_val, align 8, !dbg !2399
  %call742 = call i64 @strlen(i8* %384) #18, !dbg !2399
  %cmp743 = icmp eq i64 %383, %call742, !dbg !2399
  br i1 %cmp743, label %if.then745, label %if.end754, !dbg !2399

if.then745:                                       ; preds = %land.lhs.true740
  %385 = load i8** %dst_name.addr, align 8, !dbg !2400
  %st_size747 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 8, !dbg !2400
  %386 = load i64* %st_size747, align 8, !dbg !2400
  %call748 = call i8* @xreadlink(i8* %385, i64 %386), !dbg !2400
  store i8* %call748, i8** %dest_link_val, align 8, !dbg !2400
  %387 = load i8** %dest_link_val, align 8, !dbg !2402
  %388 = load i8** %src_link_val, align 8, !dbg !2402
  %call749 = call i32 @strcmp(i8* %387, i8* %388) #18, !dbg !2402
  %cmp750 = icmp eq i32 %call749, 0, !dbg !2402
  br i1 %cmp750, label %if.then752, label %if.end753, !dbg !2402

if.then752:                                       ; preds = %if.then745
  store i8 1, i8* %same_link, align 1, !dbg !2404
  br label %if.end753, !dbg !2404

if.end753:                                        ; preds = %if.then752, %if.then745
  %389 = load i8** %dest_link_val, align 8, !dbg !2405
  call void @free(i8* %389) #6, !dbg !2405
  br label %if.end754, !dbg !2406

if.end754:                                        ; preds = %if.end753, %land.lhs.true740, %land.lhs.true735, %land.lhs.true733, %if.else726
  %390 = load i8** %src_link_val, align 8, !dbg !2407
  call void @free(i8* %390) #6, !dbg !2407
  %391 = load i8* %same_link, align 1, !dbg !2408
  %tobool755 = trunc i8 %391 to i1, !dbg !2408
  br i1 %tobool755, label %if.end760, label %if.then756, !dbg !2408

if.then756:                                       ; preds = %if.end754
  %392 = load i32* %saved_errno, align 4, !dbg !2410
  %conv757 = sext i32 %392 to i64, !dbg !2410
  %393 = inttoptr i64 %conv757 to i32* (...)*, !dbg !2410
  %394 = load i8** %dst_name.addr, align 8, !dbg !2412
  %call758 = call i8* @quote(i8* %394), !dbg !2412
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %393, i8* getelementptr inbounds ([31 x i8]* @.str3181, i32 0, i32 0), i8* %call758), !dbg !2410
  br label %un_backup, !dbg !2413

if.end760:                                        ; preds = %if.end754, %if.then725
  store i8 0, i8* %preserve_metadata, align 1, !dbg !2414
  %395 = load %struct.cp_options** %x.addr, align 8, !dbg !2415
  %preserve_ownership761 = getelementptr inbounds %struct.cp_options* %395, i32 0, i32 10, !dbg !2415
  %396 = load i8* %preserve_ownership761, align 1, !dbg !2415
  %tobool762 = trunc i8 %396 to i1, !dbg !2415
  br i1 %tobool762, label %if.then763, label %if.end782, !dbg !2415

if.then763:                                       ; preds = %if.end760
  %397 = load i8** %dst_name.addr, align 8, !dbg !2417
  %st_uid = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 4, !dbg !2417
  %398 = load i32* %st_uid, align 4, !dbg !2417
  %st_gid = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 5, !dbg !2417
  %399 = load i32* %st_gid, align 4, !dbg !2417
  %call764 = call i32 @lchown(i8* %397, i32 %398, i32 %399) #6, !dbg !2417
  %cmp765 = icmp ne i32 %call764, 0, !dbg !2417
  br i1 %cmp765, label %land.lhs.true767, label %if.end782, !dbg !2417

land.lhs.true767:                                 ; preds = %if.then763
  %400 = load %struct.cp_options** %x.addr, align 8, !dbg !2420
  %call768 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %400), !dbg !2420
  br i1 %call768, label %if.end782, label %if.then769, !dbg !2420

if.then769:                                       ; preds = %land.lhs.true767
  %call770 = call i32* @__errno_location() #1, !dbg !2421
  %401 = load i32* %call770, align 4, !dbg !2421
  %conv771 = sext i32 %401 to i64, !dbg !2421
  %402 = inttoptr i64 %conv771 to i32* (...)*, !dbg !2421
  %403 = load i8** %dst_name.addr, align 8, !dbg !2421
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %402, i8* getelementptr inbounds ([36 x i8]* @.str3282, i32 0, i32 0), i8* %403), !dbg !2421
  br label %un_backup, !dbg !2423

if.else774:                                       ; preds = %if.else708
  %call775 = call i8* @quote(i8* %369), !dbg !2424
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([25 x i8]* @.str3383, i32 0, i32 0), i8* %call775), !dbg !2424
  br label %un_backup, !dbg !2426

if.end782:                                        ; preds = %if.end626, %if.then657, %if.then697, %if.end760, %land.lhs.true767, %if.then763, %if.then666, %if.then672, %if.then638, %if.end583, %if.then586
  %404 = load i8* %command_line_arg.addr, align 1, !dbg !2427
  %tobool783 = trunc i8 %404 to i1, !dbg !2427
  br i1 %tobool783, label %if.then784, label %if.end786, !dbg !2427

if.then784:                                       ; preds = %if.end782
  %405 = load %struct.cp_options** %x.addr, align 8, !dbg !2429
  %dest_info785 = getelementptr inbounds %struct.cp_options* %405, i32 0, i32 23, !dbg !2429
  %406 = load %struct.hash_table** %dest_info785, align 8, !dbg !2429
  %407 = load i8** %dst_name.addr, align 8, !dbg !2429
  call void @record_file(%struct.hash_table* %406, i8* %407, %struct.stat* null), !dbg !2429
  br label %if.end786, !dbg !2429

if.end786:                                        ; preds = %if.then784, %if.end782
  %408 = load i8* %preserve_metadata, align 1, !dbg !2430
  %tobool787 = trunc i8 %408 to i1, !dbg !2430
  br i1 %tobool787, label %if.end789, label %if.then788, !dbg !2430

if.then788:                                       ; preds = %if.end786
  store i1 true, i1* %retval, !dbg !2432
  br label %return, !dbg !2432

if.end789:                                        ; preds = %if.end786
  %409 = load i8* %copied_as_regular, align 1, !dbg !2433
  %tobool790 = trunc i8 %409 to i1, !dbg !2433
  br i1 %tobool790, label %if.then791, label %if.end793, !dbg !2433

if.then791:                                       ; preds = %if.end789
  %410 = load i8* %delayed_ok, align 1, !dbg !2435
  %tobool792 = trunc i8 %410 to i1, !dbg !2435
  store i1 %tobool792, i1* %retval, !dbg !2435
  br label %return, !dbg !2435

if.end793:                                        ; preds = %if.end789
  %411 = load %struct.cp_options** %x.addr, align 8, !dbg !2436
  %preserve_timestamps794 = getelementptr inbounds %struct.cp_options* %411, i32 0, i32 12, !dbg !2436
  %412 = load i8* %preserve_timestamps794, align 1, !dbg !2436
  %tobool795 = trunc i8 %412 to i1, !dbg !2436
  br i1 %tobool795, label %if.then796, label %if.end813, !dbg !2436

if.then796:                                       ; preds = %if.end793
  %arrayidx = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i64 0, !dbg !2438
  %call798 = call { i64, i64 } @get_stat_atime(%struct.stat* %src_sb), !dbg !2440
  %413 = bitcast %struct.timespec* %coerce to { i64, i64 }*, !dbg !2440
  %414 = getelementptr { i64, i64 }* %413, i32 0, i32 0, !dbg !2440
  %415 = extractvalue { i64, i64 } %call798, 0, !dbg !2440
  store i64 %415, i64* %414, align 1, !dbg !2440
  %416 = getelementptr { i64, i64 }* %413, i32 0, i32 1, !dbg !2440
  %417 = extractvalue { i64, i64 } %call798, 1, !dbg !2440
  store i64 %417, i64* %416, align 1, !dbg !2440
  %418 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !2440
  %419 = bitcast %struct.timespec* %coerce to i8*, !dbg !2440
  %420 = call i8* @memcpy(i8* %418, i8* %419, i64 16)
  %arrayidx799 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i64 1, !dbg !2441
  %call800 = call { i64, i64 } @get_stat_mtime(%struct.stat* %src_sb), !dbg !2442
  %421 = bitcast %struct.timespec* %coerce801 to { i64, i64 }*, !dbg !2442
  %422 = getelementptr { i64, i64 }* %421, i32 0, i32 0, !dbg !2442
  %423 = extractvalue { i64, i64 } %call800, 0, !dbg !2442
  store i64 %423, i64* %422, align 1, !dbg !2442
  %424 = getelementptr { i64, i64 }* %421, i32 0, i32 1, !dbg !2442
  %425 = extractvalue { i64, i64 } %call800, 1, !dbg !2442
  store i64 %425, i64* %424, align 1, !dbg !2442
  %426 = bitcast %struct.timespec* %arrayidx799 to i8*, !dbg !2442
  %427 = bitcast %struct.timespec* %coerce801 to i8*, !dbg !2442
  %428 = call i8* @memcpy(i8* %426, i8* %427, i64 16)
  %429 = load i8** %dst_name.addr, align 8, !dbg !2443
  %arraydecay = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i32 0, !dbg !2443
  %call802 = call i32 @utimens1(i8* %429, %struct.timespec* %arraydecay), !dbg !2443
  %cmp803 = icmp ne i32 %call802, 0, !dbg !2443
  br i1 %cmp803, label %if.then805, label %if.end813, !dbg !2443

if.then805:                                       ; preds = %if.then796
  %call806 = call i32* @__errno_location() #1, !dbg !2445
  %430 = load i32* %call806, align 4, !dbg !2445
  %conv807 = sext i32 %430 to i64, !dbg !2445
  %431 = inttoptr i64 %conv807 to i32* (...)*, !dbg !2445
  %432 = load i8** %dst_name.addr, align 8, !dbg !2445
  %call808 = call i8* @quote(i8* %432), !dbg !2445
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %431, i8* getelementptr inbounds ([24 x i8]* @.str3484, i32 0, i32 0), i8* %call808), !dbg !2445
  %433 = load %struct.cp_options** %x.addr, align 8, !dbg !2447
  %require_preserve = getelementptr inbounds %struct.cp_options* %433, i32 0, i32 14, !dbg !2447
  %434 = load i8* %require_preserve, align 1, !dbg !2447
  %tobool809 = trunc i8 %434 to i1, !dbg !2447
  br i1 %tobool809, label %if.then810, label %if.end813, !dbg !2447

if.then810:                                       ; preds = %if.then805
  store i1 false, i1* %retval, !dbg !2449
  br label %return, !dbg !2449

if.end813:                                        ; preds = %if.then796, %if.then805, %if.end793
  %435 = load %struct.cp_options** %x.addr, align 8, !dbg !2450
  %preserve_ownership814 = getelementptr inbounds %struct.cp_options* %435, i32 0, i32 10, !dbg !2450
  %436 = load i8* %preserve_ownership814, align 1, !dbg !2450
  %tobool815 = trunc i8 %436 to i1, !dbg !2450
  br i1 %tobool815, label %land.lhs.true817, label %if.end836, !dbg !2450

land.lhs.true817:                                 ; preds = %if.end813
  %437 = load i8* %new_dst.addr, align 1, !dbg !2450
  %tobool818 = trunc i8 %437 to i1, !dbg !2450
  br i1 %tobool818, label %if.then830, label %lor.lhs.false820, !dbg !2450

lor.lhs.false820:                                 ; preds = %land.lhs.true817
  %st_uid821 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 4, !dbg !2450
  %438 = load i32* %st_uid821, align 4, !dbg !2450
  %st_uid822 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 4, !dbg !2450
  %439 = load i32* %st_uid822, align 4, !dbg !2450
  %cmp823 = icmp eq i32 %438, %439, !dbg !2450
  br i1 %cmp823, label %land.lhs.true825, label %if.then830, !dbg !2450

land.lhs.true825:                                 ; preds = %lor.lhs.false820
  %st_gid826 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 5, !dbg !2450
  %440 = load i32* %st_gid826, align 4, !dbg !2450
  %st_gid827 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 5, !dbg !2450
  %441 = load i32* %st_gid827, align 4, !dbg !2450
  %cmp828 = icmp eq i32 %440, %441, !dbg !2450
  br i1 %cmp828, label %if.end836, label %if.then830, !dbg !2450

if.then830:                                       ; preds = %land.lhs.true825, %lor.lhs.false820, %land.lhs.true817
  %442 = load %struct.cp_options** %x.addr, align 8, !dbg !2452
  %443 = load i8** %dst_name.addr, align 8, !dbg !2452
  %st_uid831 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 4, !dbg !2452
  %444 = load i32* %st_uid831, align 4, !dbg !2452
  %st_gid832 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 5, !dbg !2452
  %445 = load i32* %st_gid832, align 4, !dbg !2452
  %call833 = call i32 @set_owner(%struct.cp_options* %442, i8* %443, i32 -1, i32 %444, i32 %445), !dbg !2452
  switch i32 %call833, label %if.end836 [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb834
  ], !dbg !2452

sw.bb:                                            ; preds = %if.then830
  store i1 false, i1* %retval, !dbg !2454
  br label %return, !dbg !2454

sw.bb834:                                         ; preds = %if.then830
  %446 = load i32* %src_mode, align 4, !dbg !2456
  %and835 = and i32 %446, -3585, !dbg !2456
  store i32 %and835, i32* %src_mode, align 4, !dbg !2456
  br label %if.end836, !dbg !2457

if.end836:                                        ; preds = %if.then830, %sw.bb834, %land.lhs.true825, %if.end813
  %447 = load i8** %dst_name.addr, align 8, !dbg !2458
  call void @set_author(i8* %447, i32 -1, %struct.stat* %src_sb), !dbg !2458
  %448 = load %struct.cp_options** %x.addr, align 8, !dbg !2459
  %preserve_mode = getelementptr inbounds %struct.cp_options* %448, i32 0, i32 11, !dbg !2459
  %449 = load i8* %preserve_mode, align 1, !dbg !2459
  %tobool837 = trunc i8 %449 to i1, !dbg !2459
  br i1 %tobool837, label %if.then843, label %lor.lhs.false839, !dbg !2459

lor.lhs.false839:                                 ; preds = %if.end836
  %450 = load %struct.cp_options** %x.addr, align 8, !dbg !2459
  %move_mode840 = getelementptr inbounds %struct.cp_options* %450, i32 0, i32 7, !dbg !2459
  %451 = load i8* %move_mode840, align 1, !dbg !2459
  %tobool841 = trunc i8 %451 to i1, !dbg !2459
  br i1 %tobool841, label %if.then843, label %if.else853, !dbg !2459

if.then843:                                       ; preds = %lor.lhs.false839, %if.end836
  %452 = load i8** %src_name.addr, align 8, !dbg !2461
  %453 = load i8** %dst_name.addr, align 8, !dbg !2461
  %454 = load i32* %src_mode, align 4, !dbg !2461
  %call844 = call i32 @copy_acl(i8* %452, i32 -1, i8* %453, i32 -1, i32 %454), !dbg !2461
  %cmp845 = icmp ne i32 %call844, 0, !dbg !2461
  br i1 %cmp845, label %land.lhs.true847, label %if.end909, !dbg !2461

land.lhs.true847:                                 ; preds = %if.then843
  %455 = load %struct.cp_options** %x.addr, align 8, !dbg !2461
  %require_preserve848 = getelementptr inbounds %struct.cp_options* %455, i32 0, i32 14, !dbg !2461
  %456 = load i8* %require_preserve848, align 1, !dbg !2461
  %tobool849 = trunc i8 %456 to i1, !dbg !2461
  br i1 %tobool849, label %if.then851, label %if.end909, !dbg !2461

if.then851:                                       ; preds = %land.lhs.true847
  store i1 false, i1* %retval, !dbg !2464
  br label %return, !dbg !2464

if.else853:                                       ; preds = %lor.lhs.false839
  %457 = load %struct.cp_options** %x.addr, align 8, !dbg !2465
  %set_mode854 = getelementptr inbounds %struct.cp_options* %457, i32 0, i32 16, !dbg !2465
  %458 = load i8* %set_mode854, align 1, !dbg !2465
  %tobool855 = trunc i8 %458 to i1, !dbg !2465
  br i1 %tobool855, label %if.then856, label %if.else863, !dbg !2465

if.then856:                                       ; preds = %if.else853
  %459 = load i8** %dst_name.addr, align 8, !dbg !2467
  %460 = load %struct.cp_options** %x.addr, align 8, !dbg !2467
  %mode857 = getelementptr inbounds %struct.cp_options* %460, i32 0, i32 17, !dbg !2467
  %461 = load i32* %mode857, align 4, !dbg !2467
  %call858 = call i32 @set_acl(i8* %459, i32 -1, i32 %461), !dbg !2467
  %cmp859 = icmp ne i32 %call858, 0, !dbg !2467
  br i1 %cmp859, label %if.then861, label %if.end909, !dbg !2467

if.then861:                                       ; preds = %if.then856
  store i1 false, i1* %retval, !dbg !2470
  br label %return, !dbg !2470

if.else863:                                       ; preds = %if.else853
  %462 = load i32* %omitted_permissions, align 4, !dbg !2471
  %tobool864 = icmp ne i32 %462, 0, !dbg !2471
  br i1 %tobool864, label %if.then865, label %if.end891, !dbg !2471

if.then865:                                       ; preds = %if.else863
  %call866 = call i32 @cached_umask(), !dbg !2474
  %neg867 = xor i32 %call866, -1, !dbg !2474
  %463 = load i32* %omitted_permissions, align 4, !dbg !2474
  %and868 = and i32 %463, %neg867, !dbg !2474
  store i32 %and868, i32* %omitted_permissions, align 4, !dbg !2474
  %464 = load i32* %omitted_permissions, align 4, !dbg !2476
  %tobool869 = icmp ne i32 %464, 0, !dbg !2476
  br i1 %tobool869, label %land.lhs.true870, label %if.end891, !dbg !2476

land.lhs.true870:                                 ; preds = %if.then865
  %465 = load i8* %restore_dst_mode, align 1, !dbg !2476
  %tobool871 = trunc i8 %465 to i1, !dbg !2476
  br i1 %tobool871, label %if.end891, label %if.then872, !dbg !2476

if.then872:                                       ; preds = %land.lhs.true870
  %466 = load i8* %new_dst.addr, align 1, !dbg !2478
  %tobool873 = trunc i8 %466 to i1, !dbg !2478
  br i1 %tobool873, label %land.lhs.true875, label %if.end883, !dbg !2478

land.lhs.true875:                                 ; preds = %if.then872
  %467 = load i8** %dst_name.addr, align 8, !dbg !2478
  %call876 = call i32 @lstat(i8* %467, %struct.stat* %dst_sb) #6, !dbg !2478
  %cmp877 = icmp ne i32 %call876, 0, !dbg !2478
  br i1 %cmp877, label %if.then879, label %if.end883, !dbg !2478

if.then879:                                       ; preds = %land.lhs.true875
  %call880 = call i32* @__errno_location() #1, !dbg !2481
  %468 = load i32* %call880, align 4, !dbg !2481
  %conv881 = sext i32 %468 to i64, !dbg !2481
  %469 = inttoptr i64 %conv881 to i32* (...)*, !dbg !2481
  %470 = load i8** %dst_name.addr, align 8, !dbg !2481
  %call882 = call i8* @quote(i8* %470), !dbg !2481
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %469, i8* getelementptr inbounds ([15 x i8]* @.str252, i32 0, i32 0), i8* %call882), !dbg !2481
  store i1 false, i1* %retval, !dbg !2483
  br label %return, !dbg !2483

if.end883:                                        ; preds = %land.lhs.true875, %if.then872
  %st_mode884 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3, !dbg !2484
  %471 = load i32* %st_mode884, align 4, !dbg !2484
  store i32 %471, i32* %dst_mode, align 4, !dbg !2484
  %472 = load i32* %omitted_permissions, align 4, !dbg !2485
  %473 = load i32* %dst_mode, align 4, !dbg !2485
  %neg885 = xor i32 %473, -1, !dbg !2485
  %and886 = and i32 %472, %neg885, !dbg !2485
  %tobool887 = icmp ne i32 %and886, 0, !dbg !2485
  br i1 %tobool887, label %if.then888, label %if.end891, !dbg !2485

if.then888:                                       ; preds = %if.end883
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !2487
  br label %if.end891, !dbg !2487

if.end891:                                        ; preds = %if.then865, %land.lhs.true870, %if.then888, %if.end883, %if.else863
  %474 = load i8* %restore_dst_mode, align 1, !dbg !2488
  %tobool892 = trunc i8 %474 to i1, !dbg !2488
  br i1 %tobool892, label %if.then893, label %if.end909, !dbg !2488

if.then893:                                       ; preds = %if.end891
  %475 = load i8** %dst_name.addr, align 8, !dbg !2490
  %476 = load i32* %dst_mode, align 4, !dbg !2490
  %477 = load i32* %omitted_permissions, align 4, !dbg !2490
  %or894 = or i32 %476, %477, !dbg !2490
  %call895 = call i32 @chmod(i8* %475, i32 %or894) #6, !dbg !2490
  %cmp896 = icmp ne i32 %call895, 0, !dbg !2490
  br i1 %cmp896, label %if.then898, label %if.end909, !dbg !2490

if.then898:                                       ; preds = %if.then893
  %call899 = call i32* @__errno_location() #1, !dbg !2493
  %478 = load i32* %call899, align 4, !dbg !2493
  %conv900 = sext i32 %478 to i64, !dbg !2493
  %479 = inttoptr i64 %conv900 to i32* (...)*, !dbg !2493
  %480 = load i8** %dst_name.addr, align 8, !dbg !2495
  %call901 = call i8* @quote(i8* %480), !dbg !2495
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %479, i8* getelementptr inbounds ([30 x i8]* @.str3585, i32 0, i32 0), i8* %call901), !dbg !2493
  %481 = load %struct.cp_options** %x.addr, align 8, !dbg !2496
  %require_preserve902 = getelementptr inbounds %struct.cp_options* %481, i32 0, i32 14, !dbg !2496
  %482 = load i8* %require_preserve902, align 1, !dbg !2496
  %tobool903 = trunc i8 %482 to i1, !dbg !2496
  br i1 %tobool903, label %if.then904, label %if.end909, !dbg !2496

if.then904:                                       ; preds = %if.then898
  store i1 false, i1* %retval, !dbg !2498
  br label %return, !dbg !2498

if.end909:                                        ; preds = %if.then856, %if.then893, %if.then898, %if.end891, %if.then843, %land.lhs.true847
  %483 = load i8* %delayed_ok, align 1, !dbg !2499
  %tobool910 = trunc i8 %483 to i1, !dbg !2499
  store i1 %tobool910, i1* %retval, !dbg !2499
  br label %return, !dbg !2499

un_backup:                                        ; preds = %if.then657, %if.else774, %if.then769, %if.then756, %if.then717, %if.then703, %if.then679, %if.then641, %if.then630, %if.then623, %if.then558, %if.then544, %if.then536, %if.then509, %if.then418,
  %484 = load i8** %earlier_file, align 8, !dbg !2500
  %cmp911 = icmp eq i8* %484, null, !dbg !2500
  br i1 %cmp911, label %if.then913, label %if.end916, !dbg !2500

if.then913:                                       ; preds = %un_backup
  %st_ino914 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1, !dbg !2502
  %485 = load i64* %st_ino914, align 8, !dbg !2502
  %st_dev915 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0, !dbg !2502
  %486 = load i64* %st_dev915, align 8, !dbg !2502
  call void @forget_created(i64 %485, i64 %486), !dbg !2502
  br label %if.end916, !dbg !2502

if.end916:                                        ; preds = %if.then913, %un_backup
  %487 = load i8** %dst_backup, align 8, !dbg !2503
  %tobool917 = icmp ne i8* %487, null, !dbg !2503
  br i1 %tobool917, label %if.then918, label %if.end935, !dbg !2503

if.then918:                                       ; preds = %if.end916
  %488 = load i8** %dst_backup, align 8, !dbg !2505
  %489 = load i8** %dst_name.addr, align 8, !dbg !2505
  %call919 = call i32 @rename(i8* %488, i8* %489) #6, !dbg !2505
  %cmp920 = icmp ne i32 %call919, 0, !dbg !2505
  br i1 %cmp920, label %if.then922, label %if.else926, !dbg !2505

if.then922:                                       ; preds = %if.then918
  %call923 = call i32* @__errno_location() #1, !dbg !2508
  %490 = load i32* %call923, align 4, !dbg !2508
  %conv924 = sext i32 %490 to i64, !dbg !2508
  %491 = inttoptr i64 %conv924 to i32* (...)*, !dbg !2508
  %492 = load i8** %dst_name.addr, align 8, !dbg !2508
  %call925 = call i8* @quote(i8* %492), !dbg !2508
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %491, i8* getelementptr inbounds ([20 x i8]* @.str3686, i32 0, i32 0), i8* %call925), !dbg !2508
  br label %if.end935, !dbg !2508

if.else926:                                       ; preds = %if.then918
  %493 = load %struct.cp_options** %x.addr, align 8, !dbg !2509
  %verbose927 = getelementptr inbounds %struct.cp_options* %493, i32 0, i32 21, !dbg !2509
  %494 = load i8* %verbose927, align 1, !dbg !2509
  %tobool928 = trunc i8 %494 to i1, !dbg !2509
  br i1 %tobool928, label %if.then929, label %if.end935, !dbg !2509

if.then929:                                       ; preds = %if.else926
  %495 = load i8** %dst_backup, align 8, !dbg !2512
  %call930 = call i8* @quote_n(i32 0, i8* %495), !dbg !2512
  %496 = load i8** %dst_name.addr, align 8, !dbg !2512
  %call931 = call i8* @quote_n(i32 1, i8* %496), !dbg !2512
  %call932 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str3787, i32 0, i32 0), i8* %call930, i8* %call931), !dbg !2513
  br label %if.end935, !dbg !2513

if.end935:                                        ; preds = %if.then922, %if.then929, %if.else926, %if.end916
  store i1 false, i1* %retval, !dbg !2514
  br label %return, !dbg !2514

return:                                           ; preds = %if.end935, %if.end909, %if.then904, %if.then879, %if.then861, %if.then851, %sw.bb, %if.then810, %if.then791, %if.then788, %if.then582, %if.then481, %if.then466, %if.then459, %if.end454, %if.end
  %497 = load i1* %retval, !dbg !2515
  ret i1 %497, !dbg !2515
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) #0 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_mode.addr = alloca i32, align 4
  %omitted_permissions.addr = alloca i32, align 4
  %new_dst.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %buf = alloca i8*, align 8
  %buf_alloc = alloca i8*, align 8
  %dest_desc = alloca i32, align 4
  %source_desc = alloca i32, align 4
  %src_mode = alloca i32, align 4
  %sb = alloca %struct.stat, align 8
  %src_open_sb = alloca %struct.stat, align 8
  %return_val = alloca i8, align 1
  %n_read_total = alloca i64, align 8
  %buf_alignment = alloca i64, align 8
  %buf_alignment_slop = alloca i64, align 8
  %buf_size = alloca i64, align 8
  %last_write_made_hole = alloca i8, align 1
  %make_holes = alloca i8, align 1
  %blcm_max = alloca i64, align 8
  %blcm = alloca i64, align 8
  %wp = alloca i64*, align 8
  %n_read = alloca i64, align 8
  %cp = alloca i8*, align 8
  %n = alloca i64, align 8
  %timespec = alloca [2 x %struct.timespec], align 16
  %coerce = alloca %struct.timespec, align 8
  %coerce242 = alloca %struct.timespec, align 8
  store i8* %src_name, i8** %src_name.addr, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  store i32 %dst_mode, i32* %dst_mode.addr, align 4
  store i32 %omitted_permissions, i32* %omitted_permissions.addr, align 4
  store i8* %new_dst, i8** %new_dst.addr, align 8
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  store i8* null, i8** %buf_alloc, align 8, !dbg !2516
  %0 = load %struct.stat** %src_sb.addr, align 8, !dbg !2518
  %st_mode = getelementptr inbounds %struct.stat* %0, i32 0, i32 3, !dbg !2518
  %1 = load i32* %st_mode, align 4, !dbg !2518
  store i32 %1, i32* %src_mode, align 4, !dbg !2518
  store i8 1, i8* %return_val, align 1, !dbg !2519
  %2 = load i8** %src_name.addr, align 8, !dbg !2520
  %call = call i32 (i8*, i32, ...)* @open_safer(i8* %2, i32 0), !dbg !2520
  store i32 %call, i32* %source_desc, align 4, !dbg !2520
  %3 = load i32* %source_desc, align 4, !dbg !2521
  %cmp = icmp slt i32 %3, 0, !dbg !2521
  br i1 %cmp, label %if.then, label %if.end, !dbg !2521

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #1, !dbg !2523
  %4 = load i32* %call1, align 4, !dbg !2523
  %conv = sext i32 %4 to i64, !dbg !2523
  %5 = inttoptr i64 %conv to i32* (...)*, !dbg !2523
  %6 = load i8** %src_name.addr, align 8, !dbg !2523
  %call2 = call i8* @quote(i8* %6), !dbg !2523
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %5, i8* getelementptr inbounds ([27 x i8]* @.str3888, i32 0, i32 0), i8* %call2), !dbg !2523
  store i1 false, i1* %retval, !dbg !2525
  br label %return, !dbg !2525

if.end:                                           ; preds = %entry
  %7 = load i32* %source_desc, align 4, !dbg !2526
  %call3 = call i32 @fstat(i32 %7, %struct.stat* %src_open_sb) #6, !dbg !2526
  %cmp4 = icmp ne i32 %call3, 0, !dbg !2526
  br i1 %cmp4, label %if.then6, label %if.end10, !dbg !2526

if.then6:                                         ; preds = %if.end
  %call7 = call i32* @__errno_location() #1, !dbg !2528
  %8 = load i32* %call7, align 4, !dbg !2528
  %conv8 = sext i32 %8 to i64, !dbg !2528
  %9 = inttoptr i64 %conv8 to i32* (...)*, !dbg !2528
  %10 = load i8** %src_name.addr, align 8, !dbg !2528
  %call9 = call i8* @quote(i8* %10), !dbg !2528
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %9, i8* getelementptr inbounds ([16 x i8]* @.str3989, i32 0, i32 0), i8* %call9), !dbg !2528
  store i8 0, i8* %return_val, align 1, !dbg !2530
  br label %close_src_desc, !dbg !2531

if.end10:                                         ; preds = %if.end
  %11 = load %struct.stat** %src_sb.addr, align 8, !dbg !2532
  %st_ino = getelementptr inbounds %struct.stat* %11, i32 0, i32 1, !dbg !2532
  %12 = load i64* %st_ino, align 8, !dbg !2532
  %st_ino11 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 1, !dbg !2532
  %13 = load i64* %st_ino11, align 8, !dbg !2532
  %cmp12 = icmp eq i64 %12, %13, !dbg !2532
  br i1 %cmp12, label %land.lhs.true, label %if.then17, !dbg !2532

land.lhs.true:                                    ; preds = %if.end10
  %14 = load %struct.stat** %src_sb.addr, align 8, !dbg !2532
  %st_dev = getelementptr inbounds %struct.stat* %14, i32 0, i32 0, !dbg !2532
  %15 = load i64* %st_dev, align 8, !dbg !2532
  %st_dev14 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 0, !dbg !2532
  %16 = load i64* %st_dev14, align 8, !dbg !2532
  %cmp15 = icmp eq i64 %15, %16, !dbg !2532
  br i1 %cmp15, label %if.end19, label %if.then17, !dbg !2532

if.then17:                                        ; preds = %land.lhs.true, %if.end10
  %17 = load i8** %src_name.addr, align 8, !dbg !2534
  %call18 = call i8* @quote(i8* %17), !dbg !2534
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* null, i8* getelementptr inbounds ([56 x i8]* @.str4090, i32 0, i32 0), i8* %call18), !dbg !2536
  store i8 0, i8* %return_val, align 1, !dbg !2537
  br label %close_src_desc, !dbg !2538

if.end19:                                         ; preds = %land.lhs.true
  %18 = load i8** %new_dst.addr, align 8, !dbg !2539
  %19 = load i8* %18, align 1, !dbg !2539
  %tobool = trunc i8 %19 to i1, !dbg !2539
  br i1 %tobool, label %if.end42, label %if.then20, !dbg !2539

if.then20:                                        ; preds = %if.end19
  %20 = load i8** %dst_name.addr, align 8, !dbg !2541
  %call21 = call i32 (i8*, i32, ...)* @open_safer(i8* %20, i32 513), !dbg !2541
  store i32 %call21, i32* %dest_desc, align 4, !dbg !2541
  %21 = load i32* %dest_desc, align 4, !dbg !2543
  %cmp22 = icmp slt i32 %21, 0, !dbg !2543
  br i1 %cmp22, label %land.lhs.true24, label %if.end42, !dbg !2543

land.lhs.true24:                                  ; preds = %if.then20
  %22 = load %struct.cp_options** %x.addr, align 8, !dbg !2543
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options* %22, i32 0, i32 4, !dbg !2543
  %23 = load i8* %unlink_dest_after_failed_open, align 1, !dbg !2543
  %tobool25 = trunc i8 %23 to i1, !dbg !2543
  br i1 %tobool25, label %if.then27, label %if.end42, !dbg !2543

if.then27:                                        ; preds = %land.lhs.true24
  %24 = load i8** %dst_name.addr, align 8, !dbg !2545
  %call28 = call i32 @unlink(i8* %24) #6, !dbg !2545
  %cmp29 = icmp ne i32 %call28, 0, !dbg !2545
  br i1 %cmp29, label %if.then31, label %if.end35, !dbg !2545

if.then31:                                        ; preds = %if.then27
  %call32 = call i32* @__errno_location() #1, !dbg !2548
  %25 = load i32* %call32, align 4, !dbg !2548
  %conv33 = sext i32 %25 to i64, !dbg !2548
  %26 = inttoptr i64 %conv33 to i32* (...)*, !dbg !2548
  %27 = load i8** %dst_name.addr, align 8, !dbg !2548
  %call34 = call i8* @quote(i8* %27), !dbg !2548
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %26, i8* getelementptr inbounds ([17 x i8]* @.str757, i32 0, i32 0), i8* %call34), !dbg !2548
  store i8 0, i8* %return_val, align 1, !dbg !2550
  br label %close_src_desc, !dbg !2551

if.end35:                                         ; preds = %if.then27
  %28 = load %struct.cp_options** %x.addr, align 8, !dbg !2552
  %verbose = getelementptr inbounds %struct.cp_options* %28, i32 0, i32 21, !dbg !2552
  %29 = load i8* %verbose, align 1, !dbg !2552
  %tobool36 = trunc i8 %29 to i1, !dbg !2552
  br i1 %tobool36, label %if.then37, label %if.end40, !dbg !2552

if.then37:                                        ; preds = %if.end35
  %30 = load i8** %dst_name.addr, align 8, !dbg !2554
  %call38 = call i8* @quote(i8* %30), !dbg !2554
  %call39 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str656, i32 0, i32 0), i8* %call38), !dbg !2554
  br label %if.end40, !dbg !2554

if.end40:                                         ; preds = %if.then37, %if.end35
  %31 = load i8** %new_dst.addr, align 8, !dbg !2555
  store i8 1, i8* %31, align 1, !dbg !2555
  br label %if.end42, !dbg !2556

if.end42:                                         ; preds = %if.then20, %land.lhs.true24, %if.end40, %if.end19
  %32 = load i8** %new_dst.addr, align 8, !dbg !2557
  %33 = load i8* %32, align 1, !dbg !2557
  %tobool43 = trunc i8 %33 to i1, !dbg !2557
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !2557

if.then44:                                        ; preds = %if.end42
  %34 = load i8** %dst_name.addr, align 8, !dbg !2559
  %35 = load i32* %dst_mode.addr, align 4, !dbg !2559
  %36 = load i32* %omitted_permissions.addr, align 4, !dbg !2559
  %neg = xor i32 %36, -1, !dbg !2559
  %and = and i32 %35, %neg, !dbg !2559
  %call45 = call i32 (i8*, i32, ...)* @open_safer(i8* %34, i32 193, i32 %and), !dbg !2559
  store i32 %call45, i32* %dest_desc, align 4, !dbg !2559
  br label %if.end46, !dbg !2559

if.else:                                          ; preds = %if.end42
  store i32 0, i32* %omitted_permissions.addr, align 4, !dbg !2560
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then44
  %37 = load i32* %dest_desc, align 4, !dbg !2561
  %cmp47 = icmp slt i32 %37, 0, !dbg !2561
  br i1 %cmp47, label %if.then49, label %if.end53, !dbg !2561

if.then49:                                        ; preds = %if.end46
  %call50 = call i32* @__errno_location() #1, !dbg !2563
  %38 = load i32* %call50, align 4, !dbg !2563
  %conv51 = sext i32 %38 to i64, !dbg !2563
  %39 = inttoptr i64 %conv51 to i32* (...)*, !dbg !2563
  %40 = load i8** %dst_name.addr, align 8, !dbg !2563
  %call52 = call i8* @quote(i8* %40), !dbg !2563
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %39, i8* getelementptr inbounds ([30 x i8]* @.str4191, i32 0, i32 0), i8* %call52), !dbg !2563
  store i8 0, i8* %return_val, align 1, !dbg !2565
  br label %close_src_desc, !dbg !2566

if.end53:                                         ; preds = %if.end46
  %41 = load i32* %dest_desc, align 4, !dbg !2567
  %call54 = call i32 @fstat(i32 %41, %struct.stat* %sb) #6, !dbg !2567
  %cmp55 = icmp ne i32 %call54, 0, !dbg !2567
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !2567

if.then57:                                        ; preds = %if.end53
  %call58 = call i32* @__errno_location() #1, !dbg !2569
  %42 = load i32* %call58, align 4, !dbg !2569
  %conv59 = sext i32 %42 to i64, !dbg !2569
  %43 = inttoptr i64 %conv59 to i32* (...)*, !dbg !2569
  %44 = load i8** %dst_name.addr, align 8, !dbg !2569
  %call60 = call i8* @quote(i8* %44), !dbg !2569
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %43, i8* getelementptr inbounds ([16 x i8]* @.str3989, i32 0, i32 0), i8* %call60), !dbg !2569
  store i8 0, i8* %return_val, align 1, !dbg !2571
  br label %close_src_and_dst_desc, !dbg !2572

if.end61:                                         ; preds = %if.end53
  %st_mode62 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !2573
  %45 = load i32* %st_mode62, align 4, !dbg !2573
  %and63 = and i32 %45, 61440, !dbg !2573
  %cmp64 = icmp eq i32 %and63, 32768, !dbg !2573
  br i1 %cmp64, label %land.lhs.true66, label %if.then69, !dbg !2573

land.lhs.true66:                                  ; preds = %if.end61
  %st_size = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !2573
  %46 = load i64* %st_size, align 8, !dbg !2573
  %cmp67 = icmp eq i64 %46, 0, !dbg !2573
  br i1 %cmp67, label %if.end235, label %if.then69, !dbg !2573

if.then69:                                        ; preds = %land.lhs.true66, %if.end61
  store i64 0, i64* %n_read_total, align 8, !dbg !2575
  %call70 = call i32 @getpagesize() #1, !dbg !2577
  %conv71 = sext i32 %call70 to i64, !dbg !2577
  %call72 = call i64 @lcm(i64 %conv71, i64 8), !dbg !2578
  store i64 %call72, i64* %buf_alignment, align 8, !dbg !2578
  %47 = load i64* %buf_alignment, align 8, !dbg !2579
  %add = add i64 8, %47, !dbg !2579
  %sub = sub i64 %add, 1, !dbg !2579
  store i64 %sub, i64* %buf_alignment_slop, align 8, !dbg !2579
  %st_blksize = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9, !dbg !2580
  %48 = load i64* %st_blksize, align 8, !dbg !2580
  %cmp73 = icmp slt i64 0, %48, !dbg !2580
  br i1 %cmp73, label %land.lhs.true75, label %cond.end, !dbg !2580

land.lhs.true75:                                  ; preds = %if.then69
  %st_blksize76 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9, !dbg !2580
  %49 = load i64* %st_blksize76, align 8, !dbg !2580
  %cmp77 = icmp ule i64 %49, 2305843009213693952, !dbg !2580
  br i1 %cmp77, label %cond.true, label %cond.end, !dbg !2580

cond.true:                                        ; preds = %land.lhs.true75
  %st_blksize79 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9, !dbg !2580
  %50 = load i64* %st_blksize79, align 8, !dbg !2580
  br label %cond.end, !dbg !2580

cond.end:                                         ; preds = %if.then69, %land.lhs.true75, %cond.true
  %cond = phi i64 [ %50, %cond.true ], [ 512, %land.lhs.true75 ], [ 512, %if.then69 ], !dbg !2580
  store i64 %cond, i64* %buf_size, align 8, !dbg !2580
  store i8 0, i8* %last_write_made_hole, align 1, !dbg !2581
  store i8 0, i8* %make_holes, align 1, !dbg !2582
  %st_mode80 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 3, !dbg !2583
  %51 = load i32* %st_mode80, align 4, !dbg !2583
  %and81 = and i32 %51, 61440, !dbg !2583
  %cmp82 = icmp eq i32 %and81, 32768, !dbg !2583
  br i1 %cmp82, label %if.then84, label %if.end103, !dbg !2583

if.then84:                                        ; preds = %cond.end
  %52 = load %struct.cp_options** %x.addr, align 8, !dbg !2585
  %sparse_mode = getelementptr inbounds %struct.cp_options* %52, i32 0, i32 18, !dbg !2585
  %53 = load i32* %sparse_mode, align 4, !dbg !2585
  %cmp85 = icmp eq i32 %53, 3, !dbg !2585
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !2585

if.then87:                                        ; preds = %if.then84
  store i8 1, i8* %make_holes, align 1, !dbg !2588
  br label %if.end88, !dbg !2588

if.end88:                                         ; preds = %if.then87, %if.then84
  %54 = load %struct.cp_options** %x.addr, align 8, !dbg !2589
  %sparse_mode89 = getelementptr inbounds %struct.cp_options* %54, i32 0, i32 18, !dbg !2589
  %55 = load i32* %sparse_mode89, align 4, !dbg !2589
  %cmp90 = icmp eq i32 %55, 2, !dbg !2589
  br i1 %cmp90, label %land.lhs.true92, label %if.end103, !dbg !2589

land.lhs.true92:                                  ; preds = %if.end88
  %st_mode93 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !2589
  %56 = load i32* %st_mode93, align 4, !dbg !2589
  %and94 = and i32 %56, 61440, !dbg !2589
  %cmp95 = icmp eq i32 %and94, 32768, !dbg !2589
  br i1 %cmp95, label %land.lhs.true97, label %if.end103, !dbg !2589

land.lhs.true97:                                  ; preds = %land.lhs.true92
  %st_blocks = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 10, !dbg !2589
  %57 = load i64* %st_blocks, align 8, !dbg !2589
  %st_size98 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !2589
  %58 = load i64* %st_size98, align 8, !dbg !2589
  %int_cast_to_i64 = bitcast i64 512 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !2589
  %div = sdiv i64 %58, 512, !dbg !2589
  %cmp99 = icmp slt i64 %57, %div, !dbg !2589
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !2589

if.then101:                                       ; preds = %land.lhs.true97
  store i8 1, i8* %make_holes, align 1, !dbg !2591
  br label %if.end103, !dbg !2591

if.end103:                                        ; preds = %if.end88, %land.lhs.true92, %land.lhs.true97, %if.then101, %cond.end
  %59 = load i8* %make_holes, align 1, !dbg !2592
  %tobool104 = trunc i8 %59 to i1, !dbg !2592
  br i1 %tobool104, label %if.end147, label %if.then105, !dbg !2592

if.then105:                                       ; preds = %if.end103
  %60 = load i64* %buf_alignment_slop, align 8, !dbg !2594
  %sub106 = sub i64 9223372036854775807, %60, !dbg !2594
  store i64 %sub106, i64* %blcm_max, align 8, !dbg !2594
  %st_blksize107 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 9, !dbg !2596
  %61 = load i64* %st_blksize107, align 8, !dbg !2596
  %cmp108 = icmp slt i64 0, %61, !dbg !2596
  br i1 %cmp108, label %land.lhs.true110, label %cond.end117, !dbg !2596

land.lhs.true110:                                 ; preds = %if.then105
  %st_blksize111 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 9, !dbg !2596
  %62 = load i64* %st_blksize111, align 8, !dbg !2596
  %cmp112 = icmp ule i64 %62, 2305843009213693952, !dbg !2596
  br i1 %cmp112, label %cond.true114, label %cond.end117, !dbg !2596

cond.true114:                                     ; preds = %land.lhs.true110
  %st_blksize115 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 9, !dbg !2596
  %63 = load i64* %st_blksize115, align 8, !dbg !2596
  br label %cond.end117, !dbg !2596

cond.end117:                                      ; preds = %if.then105, %land.lhs.true110, %cond.true114
  %cond118 = phi i64 [ %63, %cond.true114 ], [ 512, %land.lhs.true110 ], [ 512, %if.then105 ], !dbg !2596
  %64 = load i64* %buf_size, align 8, !dbg !2596
  %65 = load i64* %blcm_max, align 8, !dbg !2596
  %call119 = call i64 @buffer_lcm(i64 %cond118, i64 %64, i64 %65), !dbg !2596
  store i64 %call119, i64* %blcm, align 8, !dbg !2596
  %66 = load i64* %blcm, align 8, !dbg !2597
  %cmp120 = icmp ugt i64 8192, %66, !dbg !2597
  %67 = load i64* %blcm, align 8, !dbg !2597
  %cond125 = select i1 %cmp120, i64 8192, i64 %67, !dbg !2597
  store i64 %cond125, i64* %buf_size, align 8, !dbg !2597
  %st_mode126 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !2598
  %68 = load i32* %st_mode126, align 4, !dbg !2598
  %and127 = and i32 %68, 61440, !dbg !2598
  %cmp128 = icmp eq i32 %and127, 32768, !dbg !2598
  br i1 %cmp128, label %land.lhs.true130, label %if.end137, !dbg !2598

land.lhs.true130:                                 ; preds = %cond.end117
  %st_size131 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !2598
  %69 = load i64* %st_size131, align 8, !dbg !2598
  %70 = load i64* %buf_size, align 8, !dbg !2598
  %cmp132 = icmp ult i64 %69, %70, !dbg !2598
  br i1 %cmp132, label %if.then134, label %if.end137, !dbg !2598

if.then134:                                       ; preds = %land.lhs.true130
  %st_size135 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !2600
  %71 = load i64* %st_size135, align 8, !dbg !2600
  %add136 = add nsw i64 %71, 1, !dbg !2600
  store i64 %add136, i64* %buf_size, align 8, !dbg !2600
  br label %if.end137, !dbg !2600

if.end137:                                        ; preds = %if.then134, %land.lhs.true130, %cond.end117
  %72 = load i64* %blcm, align 8, !dbg !2601
  %sub138 = sub i64 %72, 1, !dbg !2601
  %73 = load i64* %buf_size, align 8, !dbg !2601
  %add139 = add i64 %73, %sub138, !dbg !2601
  store i64 %add139, i64* %buf_size, align 8, !dbg !2601
  %74 = load i64* %buf_size, align 8, !dbg !2602
  %75 = load i64* %blcm, align 8, !dbg !2602
  %int_cast_to_i641 = bitcast i64 %75 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !2602
  %rem = urem i64 %74, %75, !dbg !2602
  %76 = load i64* %buf_size, align 8, !dbg !2602
  %sub140 = sub i64 %76, %rem, !dbg !2602
  store i64 %sub140, i64* %buf_size, align 8, !dbg !2602
  %77 = load i64* %buf_size, align 8, !dbg !2603
  %cmp141 = icmp eq i64 %77, 0, !dbg !2603
  br i1 %cmp141, label %if.then145, label %lor.lhs.false, !dbg !2603

lor.lhs.false:                                    ; preds = %if.end137
  %78 = load i64* %blcm_max, align 8, !dbg !2603
  %79 = load i64* %buf_size, align 8, !dbg !2603
  %cmp143 = icmp ult i64 %78, %79, !dbg !2603
  br i1 %cmp143, label %if.then145, label %if.end147, !dbg !2603

if.then145:                                       ; preds = %lor.lhs.false, %if.end137
  %80 = load i64* %blcm, align 8, !dbg !2605
  store i64 %80, i64* %buf_size, align 8, !dbg !2605
  br label %if.end147, !dbg !2605

if.end147:                                        ; preds = %lor.lhs.false, %if.then145, %if.end103
  %81 = load i64* %buf_size, align 8, !dbg !2606
  %82 = load i64* %buf_alignment_slop, align 8, !dbg !2606
  %add148 = add i64 %81, %82, !dbg !2606
  %call149 = call i8* @xmalloc(i64 %add148), !dbg !2606
  store i8* %call149, i8** %buf_alloc, align 8, !dbg !2606
  %83 = load i8** %buf_alloc, align 8, !dbg !2607
  %84 = load i64* %buf_alignment, align 8, !dbg !2607
  %call150 = call i8* @ptr_align(i8* %83, i64 %84), !dbg !2607
  store i8* %call150, i8** %buf, align 8, !dbg !2607
  br label %for.cond, !dbg !2608

for.cond:                                         ; preds = %if.end194, %land.lhs.true207, %if.end204, %if.then154, %if.end147
  store i64* null, i64** %wp, align 8, !dbg !2610
  %85 = load i32* %source_desc, align 4, !dbg !2612
  %86 = load i8** %buf, align 8, !dbg !2612
  %87 = load i64* %buf_size, align 8, !dbg !2612
  %call151 = call i64 @read(i32 %85, i8* %86, i64 %87), !dbg !2612
  store i64 %call151, i64* %n_read, align 8, !dbg !2612
  %88 = load i64* %n_read, align 8, !dbg !2613
  %cmp152 = icmp slt i64 %88, 0, !dbg !2613
  br i1 %cmp152, label %if.then154, label %if.end163, !dbg !2613

if.then154:                                       ; preds = %for.cond
  %call155 = call i32* @__errno_location() #1, !dbg !2615
  %89 = load i32* %call155, align 4, !dbg !2615
  %cmp156 = icmp eq i32 %89, 4, !dbg !2615
  br i1 %cmp156, label %for.cond, label %if.end159, !dbg !2615

if.end159:                                        ; preds = %if.then154
  %call160 = call i32* @__errno_location() #1, !dbg !2618
  %90 = load i32* %call160, align 4, !dbg !2618
  %conv161 = sext i32 %90 to i64, !dbg !2618
  %91 = inttoptr i64 %conv161 to i32* (...)*, !dbg !2618
  %92 = load i8** %src_name.addr, align 8, !dbg !2618
  %call162 = call i8* @quote(i8* %92), !dbg !2618
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %91, i8* getelementptr inbounds ([11 x i8]* @.str4292, i32 0, i32 0), i8* %call162), !dbg !2618
  store i8 0, i8* %return_val, align 1, !dbg !2619
  br label %close_src_and_dst_desc, !dbg !2620

if.end163:                                        ; preds = %for.cond
  %93 = load i64* %n_read, align 8, !dbg !2621
  %cmp164 = icmp eq i64 %93, 0, !dbg !2621
  br i1 %cmp164, label %for.end, label %if.end167, !dbg !2621

if.end167:                                        ; preds = %if.end163
  %94 = load i64* %n_read, align 8, !dbg !2623
  %95 = load i64* %n_read_total, align 8, !dbg !2623
  %add168 = add nsw i64 %95, %94, !dbg !2623
  store i64 %add168, i64* %n_read_total, align 8, !dbg !2623
  %96 = load i8* %make_holes, align 1, !dbg !2624
  %tobool169 = trunc i8 %96 to i1, !dbg !2624
  br i1 %tobool169, label %if.then170, label %if.end194, !dbg !2624

if.then170:                                       ; preds = %if.end167
  %97 = load i64* %n_read, align 8, !dbg !2626
  %98 = load i8** %buf, align 8, !dbg !2626
  %arrayidx = getelementptr inbounds i8* %98, i64 %97, !dbg !2626
  store i8 1, i8* %arrayidx, align 1, !dbg !2626
  %99 = load i8** %buf, align 8, !dbg !2628
  %100 = bitcast i8* %99 to i64*, !dbg !2628
  store i64* %100, i64** %wp, align 8, !dbg !2628
  br label %while.cond, !dbg !2629

while.cond:                                       ; preds = %while.cond, %if.then170
  %101 = load i64** %wp, align 8, !dbg !2629
  %incdec.ptr = getelementptr inbounds i64* %101, i32 1, !dbg !2629
  store i64* %incdec.ptr, i64** %wp, align 8, !dbg !2629
  %102 = load i64* %101, align 8, !dbg !2629
  %cmp171 = icmp eq i64 %102, 0, !dbg !2629
  br i1 %cmp171, label %while.cond, label %while.end, !dbg !2629

while.end:                                        ; preds = %while.cond
  %103 = load i64** %wp, align 8, !dbg !2630
  %add.ptr = getelementptr inbounds i64* %103, i64 -1, !dbg !2630
  %104 = bitcast i64* %add.ptr to i8*, !dbg !2630
  store i8* %104, i8** %cp, align 8, !dbg !2630
  br label %while.cond173, !dbg !2631

while.cond173:                                    ; preds = %while.cond173, %while.end
  %105 = load i8** %cp, align 8, !dbg !2631
  %incdec.ptr174 = getelementptr inbounds i8* %105, i32 1, !dbg !2631
  store i8* %incdec.ptr174, i8** %cp, align 8, !dbg !2631
  %106 = load i8* %105, align 1, !dbg !2631
  %conv175 = sext i8 %106 to i32, !dbg !2631
  %cmp176 = icmp eq i32 %conv175, 0, !dbg !2631
  br i1 %cmp176, label %while.cond173, label %while.end179, !dbg !2631

while.end179:                                     ; preds = %while.cond173
  %107 = load i8** %cp, align 8, !dbg !2632
  %108 = load i8** %buf, align 8, !dbg !2632
  %109 = load i64* %n_read, align 8, !dbg !2632
  %add.ptr180 = getelementptr inbounds i8* %108, i64 %109, !dbg !2632
  %cmp181 = icmp ule i8* %107, %add.ptr180, !dbg !2632
  br i1 %cmp181, label %if.then183, label %if.else184, !dbg !2632

if.then183:                                       ; preds = %while.end179
  store i64* null, i64** %wp, align 8, !dbg !2634
  br label %if.end194, !dbg !2634

if.else184:                                       ; preds = %while.end179
  %110 = load i32* %dest_desc, align 4, !dbg !2635
  %111 = load i64* %n_read, align 8, !dbg !2635
  %call185 = call i64 @lseek(i32 %110, i64 %111, i32 1) #6, !dbg !2635
  %cmp186 = icmp slt i64 %call185, 0, !dbg !2635
  br i1 %cmp186, label %if.then188, label %if.end192, !dbg !2635

if.then188:                                       ; preds = %if.else184
  %call189 = call i32* @__errno_location() #1, !dbg !2638
  %112 = load i32* %call189, align 4, !dbg !2638
  %conv190 = sext i32 %112 to i64, !dbg !2638
  %113 = inttoptr i64 %conv190 to i32* (...)*, !dbg !2638
  %114 = load i8** %dst_name.addr, align 8, !dbg !2638
  %call191 = call i8* @quote(i8* %114), !dbg !2638
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %113, i8* getelementptr inbounds ([16 x i8]* @.str4393, i32 0, i32 0), i8* %call191), !dbg !2638
  store i8 0, i8* %return_val, align 1, !dbg !2640
  br label %close_src_and_dst_desc, !dbg !2641

if.end192:                                        ; preds = %if.else184
  store i8 1, i8* %last_write_made_hole, align 1, !dbg !2642
  br label %if.end194

if.end194:                                        ; preds = %if.then183, %if.end192, %if.end167
  %115 = load i64** %wp, align 8, !dbg !2643
  %tobool195 = icmp ne i64* %115, null, !dbg !2643
  br i1 %tobool195, label %for.cond, label %if.then196, !dbg !2643

if.then196:                                       ; preds = %if.end194
  %116 = load i64* %n_read, align 8, !dbg !2645
  store i64 %116, i64* %n, align 8, !dbg !2645
  %117 = load i32* %dest_desc, align 4, !dbg !2647
  %118 = load i8** %buf, align 8, !dbg !2647
  %119 = load i64* %n, align 8, !dbg !2647
  %call197 = call i64 @full_write(i32 %117, i8* %118, i64 %119), !dbg !2647
  %120 = load i64* %n, align 8, !dbg !2647
  %cmp198 = icmp ne i64 %call197, %120, !dbg !2647
  br i1 %cmp198, label %if.then200, label %if.end204, !dbg !2647

if.then200:                                       ; preds = %if.then196
  %call201 = call i32* @__errno_location() #1, !dbg !2649
  %121 = load i32* %call201, align 4, !dbg !2649
  %conv202 = sext i32 %121 to i64, !dbg !2649
  %122 = inttoptr i64 %conv202 to i32* (...)*, !dbg !2649
  %123 = load i8** %dst_name.addr, align 8, !dbg !2649
  %call203 = call i8* @quote(i8* %123), !dbg !2649
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %122, i8* getelementptr inbounds ([11 x i8]* @.str4494, i32 0, i32 0), i8* %call203), !dbg !2649
  store i8 0, i8* %return_val, align 1, !dbg !2651
  br label %close_src_and_dst_desc, !dbg !2652

if.end204:                                        ; preds = %if.then196
  store i8 0, i8* %last_write_made_hole, align 1, !dbg !2653
  %124 = load i64* %n_read, align 8, !dbg !2654
  %125 = load i64* %buf_size, align 8, !dbg !2654
  %cmp205 = icmp ne i64 %124, %125, !dbg !2654
  br i1 %cmp205, label %land.lhs.true207, label %for.cond, !dbg !2654

land.lhs.true207:                                 ; preds = %if.end204
  %st_mode208 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !2654
  %126 = load i32* %st_mode208, align 4, !dbg !2654
  %and209 = and i32 %126, 61440, !dbg !2654
  %cmp210 = icmp eq i32 %and209, 32768, !dbg !2654
  br i1 %cmp210, label %for.end, label %for.cond, !dbg !2654

for.end:                                          ; preds = %land.lhs.true207, %if.end163
  %127 = load i8* %last_write_made_hole, align 1, !dbg !2656
  %tobool215 = trunc i8 %127 to i1, !dbg !2656
  br i1 %tobool215, label %cond.true217, label %if.end235, !dbg !2656

cond.true217:                                     ; preds = %for.end
  %128 = load i32* %dest_desc, align 4, !dbg !2658
  %129 = load i64* %n_read_total, align 8, !dbg !2658
  %call218 = call i32 @ftruncate(i32 %128, i64 %129) #6, !dbg !2658
  %cmp219 = icmp slt i32 %call218, 0, !dbg !2658
  br i1 %cmp219, label %if.then229, label %if.end235, !dbg !2658

if.then229:                                       ; preds = %cond.true217
  %call230 = call i32* @__errno_location() #1, !dbg !2661
  %130 = load i32* %call230, align 4, !dbg !2661
  %conv231 = sext i32 %130 to i64, !dbg !2661
  %131 = inttoptr i64 %conv231 to i32* (...)*, !dbg !2661
  %132 = load i8** %dst_name.addr, align 8, !dbg !2661
  %call232 = call i8* @quote(i8* %132), !dbg !2661
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %131, i8* getelementptr inbounds ([11 x i8]* @.str4494, i32 0, i32 0), i8* %call232), !dbg !2661
  store i8 0, i8* %return_val, align 1, !dbg !2663
  br label %close_src_and_dst_desc, !dbg !2664

if.end235:                                        ; preds = %for.end, %cond.true217, %land.lhs.true66
  %133 = load %struct.cp_options** %x.addr, align 8, !dbg !2665
  %preserve_timestamps = getelementptr inbounds %struct.cp_options* %133, i32 0, i32 12, !dbg !2665
  %134 = load i8* %preserve_timestamps, align 1, !dbg !2665
  %tobool236 = trunc i8 %134 to i1, !dbg !2665
  br i1 %tobool236, label %if.then237, label %if.end254, !dbg !2665

if.then237:                                       ; preds = %if.end235
  %arrayidx238 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i64 0, !dbg !2667
  %135 = load %struct.stat** %src_sb.addr, align 8, !dbg !2669
  %call239 = call { i64, i64 } @get_stat_atime(%struct.stat* %135), !dbg !2669
  %136 = bitcast %struct.timespec* %coerce to { i64, i64 }*, !dbg !2669
  %137 = getelementptr { i64, i64 }* %136, i32 0, i32 0, !dbg !2669
  %138 = extractvalue { i64, i64 } %call239, 0, !dbg !2669
  store i64 %138, i64* %137, align 1, !dbg !2669
  %139 = getelementptr { i64, i64 }* %136, i32 0, i32 1, !dbg !2669
  %140 = extractvalue { i64, i64 } %call239, 1, !dbg !2669
  store i64 %140, i64* %139, align 1, !dbg !2669
  %141 = bitcast %struct.timespec* %arrayidx238 to i8*, !dbg !2669
  %142 = bitcast %struct.timespec* %coerce to i8*, !dbg !2669
  %143 = call i8* @memcpy(i8* %141, i8* %142, i64 16)
  %arrayidx240 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i64 1, !dbg !2670
  %144 = load %struct.stat** %src_sb.addr, align 8, !dbg !2671
  %call241 = call { i64, i64 } @get_stat_mtime(%struct.stat* %144), !dbg !2671
  %145 = bitcast %struct.timespec* %coerce242 to { i64, i64 }*, !dbg !2671
  %146 = getelementptr { i64, i64 }* %145, i32 0, i32 0, !dbg !2671
  %147 = extractvalue { i64, i64 } %call241, 0, !dbg !2671
  store i64 %147, i64* %146, align 1, !dbg !2671
  %148 = getelementptr { i64, i64 }* %145, i32 0, i32 1, !dbg !2671
  %149 = extractvalue { i64, i64 } %call241, 1, !dbg !2671
  store i64 %149, i64* %148, align 1, !dbg !2671
  %150 = bitcast %struct.timespec* %arrayidx240 to i8*, !dbg !2671
  %151 = bitcast %struct.timespec* %coerce242 to i8*, !dbg !2671
  %152 = call i8* @memcpy(i8* %150, i8* %151, i64 16)
  %153 = load i32* %dest_desc, align 4, !dbg !2672
  %154 = load i8** %dst_name.addr, align 8, !dbg !2672
  %arraydecay = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i32 0, !dbg !2672
  %call243 = call i32 @futimens1(i32 %153, i8* %154, %struct.timespec* %arraydecay), !dbg !2672
  %cmp244 = icmp ne i32 %call243, 0, !dbg !2672
  br i1 %cmp244, label %if.then246, label %if.end254, !dbg !2672

if.then246:                                       ; preds = %if.then237
  %call247 = call i32* @__errno_location() #1, !dbg !2674
  %155 = load i32* %call247, align 4, !dbg !2674
  %conv248 = sext i32 %155 to i64, !dbg !2674
  %156 = inttoptr i64 %conv248 to i32* (...)*, !dbg !2674
  %157 = load i8** %dst_name.addr, align 8, !dbg !2674
  %call249 = call i8* @quote(i8* %157), !dbg !2674
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %156, i8* getelementptr inbounds ([24 x i8]* @.str3484, i32 0, i32 0), i8* %call249), !dbg !2674
  %158 = load %struct.cp_options** %x.addr, align 8, !dbg !2676
  %require_preserve = getelementptr inbounds %struct.cp_options* %158, i32 0, i32 14, !dbg !2676
  %159 = load i8* %require_preserve, align 1, !dbg !2676
  %tobool250 = trunc i8 %159 to i1, !dbg !2676
  br i1 %tobool250, label %if.then251, label %if.end254, !dbg !2676

if.then251:                                       ; preds = %if.then246
  store i8 0, i8* %return_val, align 1, !dbg !2678
  br label %close_src_and_dst_desc, !dbg !2680

if.end254:                                        ; preds = %if.then237, %if.then246, %if.end235
  %160 = load %struct.cp_options** %x.addr, align 8, !dbg !2681
  %preserve_ownership = getelementptr inbounds %struct.cp_options* %160, i32 0, i32 10, !dbg !2681
  %161 = load i8* %preserve_ownership, align 1, !dbg !2681
  %tobool255 = trunc i8 %161 to i1, !dbg !2681
  br i1 %tobool255, label %land.lhs.true257, label %if.end271, !dbg !2681

land.lhs.true257:                                 ; preds = %if.end254
  %162 = load %struct.stat** %src_sb.addr, align 8, !dbg !2681
  %st_uid = getelementptr inbounds %struct.stat* %162, i32 0, i32 4, !dbg !2681
  %163 = load i32* %st_uid, align 4, !dbg !2681
  %st_uid258 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 4, !dbg !2681
  %164 = load i32* %st_uid258, align 4, !dbg !2681
  %cmp259 = icmp eq i32 %163, %164, !dbg !2681
  br i1 %cmp259, label %land.lhs.true261, label %if.then265, !dbg !2681

land.lhs.true261:                                 ; preds = %land.lhs.true257
  %165 = load %struct.stat** %src_sb.addr, align 8, !dbg !2681
  %st_gid = getelementptr inbounds %struct.stat* %165, i32 0, i32 5, !dbg !2681
  %166 = load i32* %st_gid, align 4, !dbg !2681
  %st_gid262 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 5, !dbg !2681
  %167 = load i32* %st_gid262, align 4, !dbg !2681
  %cmp263 = icmp eq i32 %166, %167, !dbg !2681
  br i1 %cmp263, label %if.end271, label %if.then265, !dbg !2681

if.then265:                                       ; preds = %land.lhs.true261, %land.lhs.true257
  %168 = load %struct.cp_options** %x.addr, align 8, !dbg !2683
  %169 = load i8** %dst_name.addr, align 8, !dbg !2683
  %170 = load i32* %dest_desc, align 4, !dbg !2683
  %171 = load %struct.stat** %src_sb.addr, align 8, !dbg !2683
  %st_uid266 = getelementptr inbounds %struct.stat* %171, i32 0, i32 4, !dbg !2683
  %172 = load i32* %st_uid266, align 4, !dbg !2683
  %173 = load %struct.stat** %src_sb.addr, align 8, !dbg !2683
  %st_gid267 = getelementptr inbounds %struct.stat* %173, i32 0, i32 5, !dbg !2683
  %174 = load i32* %st_gid267, align 4, !dbg !2683
  %call268 = call i32 @set_owner(%struct.cp_options* %168, i8* %169, i32 %170, i32 %172, i32 %174), !dbg !2683
  switch i32 %call268, label %if.end271 [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb269
  ], !dbg !2683

sw.bb:                                            ; preds = %if.then265
  store i8 0, i8* %return_val, align 1, !dbg !2685
  br label %close_src_and_dst_desc, !dbg !2687

sw.bb269:                                         ; preds = %if.then265
  %175 = load i32* %src_mode, align 4, !dbg !2688
  %and270 = and i32 %175, -3585, !dbg !2688
  store i32 %and270, i32* %src_mode, align 4, !dbg !2688
  br label %if.end271, !dbg !2689

if.end271:                                        ; preds = %if.then265, %sw.bb269, %land.lhs.true261, %if.end254
  %176 = load i8** %dst_name.addr, align 8, !dbg !2690
  %177 = load i32* %dest_desc, align 4, !dbg !2690
  %178 = load %struct.stat** %src_sb.addr, align 8, !dbg !2690
  call void @set_author(i8* %176, i32 %177, %struct.stat* %178), !dbg !2690
  %179 = load %struct.cp_options** %x.addr, align 8, !dbg !2691
  %preserve_mode = getelementptr inbounds %struct.cp_options* %179, i32 0, i32 11, !dbg !2691
  %180 = load i8* %preserve_mode, align 1, !dbg !2691
  %tobool272 = trunc i8 %180 to i1, !dbg !2691
  br i1 %tobool272, label %if.then277, label %lor.lhs.false274, !dbg !2691

lor.lhs.false274:                                 ; preds = %if.end271
  %181 = load %struct.cp_options** %x.addr, align 8, !dbg !2691
  %move_mode = getelementptr inbounds %struct.cp_options* %181, i32 0, i32 7, !dbg !2691
  %182 = load i8* %move_mode, align 1, !dbg !2691
  %tobool275 = trunc i8 %182 to i1, !dbg !2691
  br i1 %tobool275, label %if.then277, label %if.else287, !dbg !2691

if.then277:                                       ; preds = %lor.lhs.false274, %if.end271
  %183 = load i8** %src_name.addr, align 8, !dbg !2693
  %184 = load i32* %source_desc, align 4, !dbg !2693
  %185 = load i8** %dst_name.addr, align 8, !dbg !2693
  %186 = load i32* %dest_desc, align 4, !dbg !2693
  %187 = load i32* %src_mode, align 4, !dbg !2693
  %call278 = call i32 @copy_acl(i8* %183, i32 %184, i8* %185, i32 %186, i32 %187), !dbg !2693
  %cmp279 = icmp ne i32 %call278, 0, !dbg !2693
  br i1 %cmp279, label %land.lhs.true281, label %close_src_and_dst_desc, !dbg !2693

land.lhs.true281:                                 ; preds = %if.then277
  %188 = load %struct.cp_options** %x.addr, align 8, !dbg !2693
  %require_preserve282 = getelementptr inbounds %struct.cp_options* %188, i32 0, i32 14, !dbg !2693
  %189 = load i8* %require_preserve282, align 1, !dbg !2693
  %tobool283 = trunc i8 %189 to i1, !dbg !2693
  br i1 %tobool283, label %if.then285, label %close_src_and_dst_desc, !dbg !2693

if.then285:                                       ; preds = %land.lhs.true281
  store i8 0, i8* %return_val, align 1, !dbg !2696
  br label %close_src_and_dst_desc, !dbg !2696

if.else287:                                       ; preds = %lor.lhs.false274
  %190 = load %struct.cp_options** %x.addr, align 8, !dbg !2697
  %set_mode = getelementptr inbounds %struct.cp_options* %190, i32 0, i32 16, !dbg !2697
  %191 = load i8* %set_mode, align 1, !dbg !2697
  %tobool288 = trunc i8 %191 to i1, !dbg !2697
  br i1 %tobool288, label %if.then289, label %if.else295, !dbg !2697

if.then289:                                       ; preds = %if.else287
  %192 = load i8** %dst_name.addr, align 8, !dbg !2699
  %193 = load i32* %dest_desc, align 4, !dbg !2699
  %194 = load %struct.cp_options** %x.addr, align 8, !dbg !2699
  %mode = getelementptr inbounds %struct.cp_options* %194, i32 0, i32 17, !dbg !2699
  %195 = load i32* %mode, align 4, !dbg !2699
  %call290 = call i32 @set_acl(i8* %192, i32 %193, i32 %195), !dbg !2699
  %cmp291 = icmp ne i32 %call290, 0, !dbg !2699
  br i1 %cmp291, label %if.then293, label %close_src_and_dst_desc, !dbg !2699

if.then293:                                       ; preds = %if.then289
  store i8 0, i8* %return_val, align 1, !dbg !2702
  br label %close_src_and_dst_desc, !dbg !2702

if.else295:                                       ; preds = %if.else287
  %196 = load i32* %omitted_permissions.addr, align 4, !dbg !2703
  %tobool296 = icmp ne i32 %196, 0, !dbg !2703
  br i1 %tobool296, label %if.then297, label %close_src_and_dst_desc, !dbg !2703

if.then297:                                       ; preds = %if.else295
  %call298 = call i32 @cached_umask(), !dbg !2705
  %neg299 = xor i32 %call298, -1, !dbg !2705
  %197 = load i32* %omitted_permissions.addr, align 4, !dbg !2705
  %and300 = and i32 %197, %neg299, !dbg !2705
  store i32 %and300, i32* %omitted_permissions.addr, align 4, !dbg !2705
  %198 = load i32* %omitted_permissions.addr, align 4, !dbg !2707
  %tobool301 = icmp ne i32 %198, 0, !dbg !2707
  br i1 %tobool301, label %land.lhs.true302, label %close_src_and_dst_desc, !dbg !2707

land.lhs.true302:                                 ; preds = %if.then297
  %199 = load i32* %dest_desc, align 4, !dbg !2709
  %200 = load i8** %dst_name.addr, align 8, !dbg !2709
  %201 = load i32* %dst_mode.addr, align 4, !dbg !2709
  %call303 = call i32 @fchmod_or_lchmod(i32 %199, i8* %200, i32 %201), !dbg !2709
  %cmp304 = icmp ne i32 %call303, 0, !dbg !2709
  br i1 %cmp304, label %if.then306, label %close_src_and_dst_desc, !dbg !2709

if.then306:                                       ; preds = %land.lhs.true302
  %call307 = call i32* @__errno_location() #1, !dbg !2710
  %202 = load i32* %call307, align 4, !dbg !2710
  %conv308 = sext i32 %202 to i64, !dbg !2710
  %203 = inttoptr i64 %conv308 to i32* (...)*, !dbg !2710
  %204 = load i8** %dst_name.addr, align 8, !dbg !2712
  %call309 = call i8* @quote(i8* %204), !dbg !2712
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %203, i8* getelementptr inbounds ([30 x i8]* @.str3585, i32 0, i32 0), i8* %call309), !dbg !2710
  %205 = load %struct.cp_options** %x.addr, align 8, !dbg !2713
  %require_preserve310 = getelementptr inbounds %struct.cp_options* %205, i32 0, i32 14, !dbg !2713
  %206 = load i8* %require_preserve310, align 1, !dbg !2713
  %tobool311 = trunc i8 %206 to i1, !dbg !2713
  br i1 %tobool311, label %if.then312, label %close_src_and_dst_desc, !dbg !2713

if.then312:                                       ; preds = %if.then306
  store i8 0, i8* %return_val, align 1, !dbg !2715
  br label %close_src_and_dst_desc, !dbg !2715

close_src_and_dst_desc:                           ; preds = %if.then285, %land.lhs.true281, %if.then277, %if.else295, %if.then306, %if.then312, %land.lhs.true302, %if.then297, %if.then289, %if.then293, %sw.bb, %if.then251, %if.then229, %if.then200, %if.t
  %207 = load i32* %dest_desc, align 4, !dbg !2716
  %call318 = call i32 @close(i32 %207), !dbg !2716
  %cmp319 = icmp slt i32 %call318, 0, !dbg !2716
  br i1 %cmp319, label %if.then321, label %close_src_desc, !dbg !2716

if.then321:                                       ; preds = %close_src_and_dst_desc
  %call322 = call i32* @__errno_location() #1, !dbg !2718
  %208 = load i32* %call322, align 4, !dbg !2718
  %conv323 = sext i32 %208 to i64, !dbg !2718
  %209 = inttoptr i64 %conv323 to i32* (...)*, !dbg !2718
  %210 = load i8** %dst_name.addr, align 8, !dbg !2718
  %call324 = call i8* @quote(i8* %210), !dbg !2718
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %209, i8* getelementptr inbounds ([11 x i8]* @.str4696, i32 0, i32 0), i8* %call324), !dbg !2718
  store i8 0, i8* %return_val, align 1, !dbg !2720
  br label %close_src_desc, !dbg !2721

close_src_desc:                                   ; preds = %close_src_and_dst_desc, %if.then321, %if.then49, %if.then31, %if.then17, %if.then6
  %211 = load i32* %source_desc, align 4, !dbg !2722
  %call326 = call i32 @close(i32 %211), !dbg !2722
  %cmp327 = icmp slt i32 %call326, 0, !dbg !2722
  br i1 %cmp327, label %if.then329, label %if.end333, !dbg !2722

if.then329:                                       ; preds = %close_src_desc
  %call330 = call i32* @__errno_location() #1, !dbg !2724
  %212 = load i32* %call330, align 4, !dbg !2724
  %conv331 = sext i32 %212 to i64, !dbg !2724
  %213 = inttoptr i64 %conv331 to i32* (...)*, !dbg !2724
  %214 = load i8** %src_name.addr, align 8, !dbg !2724
  %call332 = call i8* @quote(i8* %214), !dbg !2724
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %213, i8* getelementptr inbounds ([11 x i8]* @.str4696, i32 0, i32 0), i8* %call332), !dbg !2724
  store i8 0, i8* %return_val, align 1, !dbg !2726
  br label %if.end333, !dbg !2727

if.end333:                                        ; preds = %if.then329, %close_src_desc
  %215 = load i8** %buf_alloc, align 8, !dbg !2728
  call void @free(i8* %215) #6, !dbg !2728
  %216 = load i8* %return_val, align 1, !dbg !2729
  %tobool334 = trunc i8 %216 to i1, !dbg !2729
  store i1 %tobool334, i1* %retval, !dbg !2729
  br label %return, !dbg !2729

return:                                           ; preds = %if.end333, %if.then
  %217 = load i1* %retval, !dbg !2730
  ret i1 %217, !dbg !2730
}

; Function Attrs: nounwind uwtable
define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) #0 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  ret void, !dbg !2731
}

; Function Attrs: nounwind uwtable
define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, i32 %uid, i32 %gid) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %uid.addr = alloca i32, align 4
  %gid.addr = alloca i32, align 4
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  store i32 %uid, i32* %uid.addr, align 4
  store i32 %gid, i32* %gid.addr, align 4
  %0 = load i32* %dest_desc.addr, align 4, !dbg !2732
  %cmp = icmp ne i32 %0, -1, !dbg !2732
  br i1 %cmp, label %if.then, label %if.else, !dbg !2732

if.then:                                          ; preds = %entry
  %1 = load i32* %dest_desc.addr, align 4, !dbg !2734
  %2 = load i32* %uid.addr, align 4, !dbg !2734
  %3 = load i32* %gid.addr, align 4, !dbg !2734
  %call = call i32 @fchown(i32 %1, i32 %2, i32 %3) #6, !dbg !2734
  %cmp1 = icmp eq i32 %call, 0, !dbg !2734
  br i1 %cmp1, label %if.then2, label %if.end7, !dbg !2734

if.then2:                                         ; preds = %if.then
  store i32 1, i32* %retval, !dbg !2737
  br label %return, !dbg !2737

if.else:                                          ; preds = %entry
  %4 = load i8** %dst_name.addr, align 8, !dbg !2738
  %5 = load i32* %uid.addr, align 4, !dbg !2738
  %6 = load i32* %gid.addr, align 4, !dbg !2738
  %call3 = call i32 @chown(i8* %4, i32 %5, i32 %6) #6, !dbg !2738
  %cmp4 = icmp eq i32 %call3, 0, !dbg !2738
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !2738

if.then5:                                         ; preds = %if.else
  store i32 1, i32* %retval, !dbg !2741
  br label %return, !dbg !2741

if.end7:                                          ; preds = %if.else, %if.then
  %7 = load %struct.cp_options** %x.addr, align 8, !dbg !2742
  %call8 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %7), !dbg !2742
  br i1 %call8, label %if.end14, label %if.then9, !dbg !2742

if.then9:                                         ; preds = %if.end7
  %call10 = call i32* @__errno_location() #1, !dbg !2744
  %8 = load i32* %call10, align 4, !dbg !2744
  %conv = sext i32 %8 to i64, !dbg !2744
  %9 = inttoptr i64 %conv to i32* (...)*, !dbg !2744
  %10 = load i8** %dst_name.addr, align 8, !dbg !2746
  %call11 = call i8* @quote(i8* %10), !dbg !2746
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %9, i8* getelementptr inbounds ([36 x i8]* @.str3282, i32 0, i32 0), i8* %call11), !dbg !2744
  %11 = load %struct.cp_options** %x.addr, align 8, !dbg !2747
  %require_preserve = getelementptr inbounds %struct.cp_options* %11, i32 0, i32 14, !dbg !2747
  %12 = load i8* %require_preserve, align 1, !dbg !2747
  %tobool = trunc i8 %12 to i1, !dbg !2747
  br i1 %tobool, label %if.then12, label %if.end14, !dbg !2747

if.then12:                                        ; preds = %if.then9
  store i32 -1, i32* %retval, !dbg !2749
  br label %return, !dbg !2749

if.end14:                                         ; preds = %if.then9, %if.end7
  store i32 0, i32* %retval, !dbg !2750
  br label %return, !dbg !2750

return:                                           ; preds = %if.end14, %if.then12, %if.then5, %if.then2
  %13 = load i32* %retval, !dbg !2751
  ret i32 %13, !dbg !2751
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @get_stat_mtime(%struct.stat* %st) #8 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %0 = load %struct.stat** %st.addr, align 8, !dbg !2752
  %st_mtim = getelementptr inbounds %struct.stat* %0, i32 0, i32 12, !dbg !2752
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !2752
  %2 = bitcast %struct.timespec* %st_mtim to i8*, !dbg !2752
  %3 = call i8* @memcpy(i8* %1, i8* %2, i64 16)
  %4 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !2752
  %5 = load { i64, i64 }* %4, align 1, !dbg !2752
  ret { i64, i64 } %5, !dbg !2752
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @get_stat_atime(%struct.stat* %st) #8 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %0 = load %struct.stat** %st.addr, align 8, !dbg !2754
  %st_atim = getelementptr inbounds %struct.stat* %0, i32 0, i32 11, !dbg !2754
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !2754
  %2 = bitcast %struct.timespec* %st_atim to i8*, !dbg !2754
  %3 = call i8* @memcpy(i8* %1, i8* %2, i64 16)
  %4 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !2754
  %5 = load { i64, i64 }* %4, align 1, !dbg !2754
  ret { i64, i64 } %5, !dbg !2754
}

; Function Attrs: nounwind uwtable
define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) #0 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i32 %desc, i32* %desc.addr, align 4
  store i8* %name, i8** %name.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32* %desc.addr, align 4, !dbg !2755
  %cmp = icmp sle i32 0, %0, !dbg !2755
  br i1 %cmp, label %if.then, label %if.end, !dbg !2755

if.then:                                          ; preds = %entry
  %1 = load i32* %desc.addr, align 4, !dbg !2757
  %2 = load i32* %mode.addr, align 4, !dbg !2757
  %call = call i32 @fchmod(i32 %1, i32 %2) #6, !dbg !2757
  store i32 %call, i32* %retval, !dbg !2757
  br label %return, !dbg !2757

if.end:                                           ; preds = %entry
  %3 = load i8** %name.addr, align 8, !dbg !2758
  %4 = load i32* %mode.addr, align 4, !dbg !2758
  %call1 = call i32 @chmod(i8* %3, i32 %4) #6, !dbg !2758
  store i32 %call1, i32* %retval, !dbg !2758
  br label %return, !dbg !2758

return:                                           ; preds = %if.end, %if.then
  %5 = load i32* %retval, !dbg !2759
  ret i32 %5, !dbg !2759
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #8 {
entry:
  %ptr.addr = alloca i8*, align 8
  %alignment.addr = alloca i64, align 8
  %p0 = alloca i8*, align 8
  %p1 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  store i64 %alignment, i64* %alignment.addr, align 8
  %0 = load i8** %ptr.addr, align 8, !dbg !2760
  store i8* %0, i8** %p0, align 8, !dbg !2760
  %1 = load i8** %p0, align 8, !dbg !2762
  %2 = load i64* %alignment.addr, align 8, !dbg !2762
  %add.ptr = getelementptr inbounds i8* %1, i64 %2, !dbg !2762
  %add.ptr1 = getelementptr inbounds i8* %add.ptr, i64 -1, !dbg !2762
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !2762
  %3 = load i8** %p1, align 8, !dbg !2763
  %4 = load i8** %p1, align 8, !dbg !2763
  %5 = ptrtoint i8* %4 to i64, !dbg !2763
  %6 = load i64* %alignment.addr, align 8, !dbg !2763
  %int_cast_to_i64 = bitcast i64 %6 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !2763
  %rem = urem i64 %5, %6, !dbg !2763
  %idx.neg = sub i64 0, %rem, !dbg !2763
  %add.ptr2 = getelementptr inbounds i8* %3, i64 %idx.neg, !dbg !2763
  ret i8* %add.ptr2, !dbg !2763
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @lcm(i64 %u, i64 %v) #8 {
entry:
  %u.addr = alloca i64, align 8
  %v.addr = alloca i64, align 8
  store i64 %u, i64* %u.addr, align 8
  store i64 %v, i64* %v.addr, align 8
  %0 = load i64* %u.addr, align 8, !dbg !2764
  %1 = load i64* %v.addr, align 8, !dbg !2764
  %2 = load i64* %u.addr, align 8, !dbg !2765
  %3 = load i64* %v.addr, align 8, !dbg !2765
  %call = call i64 @gcd(i64 %2, i64 %3), !dbg !2765
  %int_cast_to_i64 = bitcast i64 %call to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !2765
  %div = udiv i64 %1, %call, !dbg !2765
  %mul = mul i64 %0, %div, !dbg !2765
  ret i64 %mul, !dbg !2765
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @gcd(i64 %u, i64 %v) #8 {
entry:
  %u.addr = alloca i64, align 8
  %v.addr = alloca i64, align 8
  %t = alloca i64, align 8
  store i64 %u, i64* %u.addr, align 8
  store i64 %v, i64* %v.addr, align 8
  br label %do.body, !dbg !2766

do.body:                                          ; preds = %do.body, %entry
  %0 = load i64* %u.addr, align 8, !dbg !2767
  %1 = load i64* %v.addr, align 8, !dbg !2767
  %int_cast_to_i64 = bitcast i64 %1 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !2767
  %rem = urem i64 %0, %1, !dbg !2767
  store i64 %rem, i64* %t, align 8, !dbg !2767
  %2 = load i64* %v.addr, align 8, !dbg !2769
  store i64 %2, i64* %u.addr, align 8, !dbg !2769
  %3 = load i64* %t, align 8, !dbg !2770
  store i64 %3, i64* %v.addr, align 8, !dbg !2770
  %4 = load i64* %v.addr, align 8, !dbg !2771
  %tobool = icmp ne i64 %4, 0, !dbg !2771
  br i1 %tobool, label %do.body, label %do.end, !dbg !2771

do.end:                                           ; preds = %do.body
  %5 = load i64* %u.addr, align 8, !dbg !2772
  ret i64 %5, !dbg !2772
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i1 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %copy_into_self) #0 {
entry:
  %retval = alloca i1, align 1
  %src_name_in.addr = alloca i8*, align 8
  %dst_name_in.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %name_space = alloca i8*, align 8
  %namep = alloca i8*, align 8
  %non_command_line_options = alloca %struct.cp_options, align 8
  %ok = alloca i8, align 1
  %local_copy_into_self = alloca i8, align 1
  %src_name = alloca i8*, align 8
  %dst_name = alloca i8*, align 8
  store i8* %src_name_in, i8** %src_name_in.addr, align 8
  store i8* %dst_name_in, i8** %dst_name_in.addr, align 8
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  %0 = load %struct.cp_options** %x.addr, align 8, !dbg !2773
  %1 = bitcast %struct.cp_options* %non_command_line_options to i8*, !dbg !2773
  %2 = bitcast %struct.cp_options* %0 to i8*, !dbg !2773
  %3 = call i8* @memcpy(i8* %1, i8* %2, i64 64)
  store i8 1, i8* %ok, align 1, !dbg !2775
  %4 = load i8** %src_name_in.addr, align 8, !dbg !2776
  %call = call i8* @savedir(i8* %4), !dbg !2776
  store i8* %call, i8** %name_space, align 8, !dbg !2776
  %5 = load i8** %name_space, align 8, !dbg !2777
  %cmp = icmp eq i8* %5, null, !dbg !2777
  br i1 %cmp, label %if.then, label %if.end, !dbg !2777

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #1, !dbg !2779
  %6 = load i32* %call1, align 4, !dbg !2779
  %conv = sext i32 %6 to i64, !dbg !2779
  %7 = inttoptr i64 %conv to i32* (...)*, !dbg !2779
  %8 = load i8** %src_name_in.addr, align 8, !dbg !2779
  %call2 = call i8* @quote(i8* %8), !dbg !2779
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error107(i32 0, i32* (...)* %7, i8* getelementptr inbounds ([17 x i8]* @.str4797, i32 0, i32 0), i8* %call2), !dbg !2779
  store i1 false, i1* %retval, !dbg !2781
  br label %return, !dbg !2781

if.end:                                           ; preds = %entry
  %9 = load %struct.cp_options** %x.addr, align 8, !dbg !2782
  %dereference = getelementptr inbounds %struct.cp_options* %9, i32 0, i32 2, !dbg !2782
  %10 = load i32* %dereference, align 4, !dbg !2782
  %cmp3 = icmp eq i32 %10, 3, !dbg !2782
  br i1 %cmp3, label %if.then5, label %if.end7, !dbg !2782

if.then5:                                         ; preds = %if.end
  %dereference6 = getelementptr inbounds %struct.cp_options* %non_command_line_options, i32 0, i32 2, !dbg !2784
  store i32 2, i32* %dereference6, align 4, !dbg !2784
  br label %if.end7, !dbg !2784

if.end7:                                          ; preds = %if.then5, %if.end
  %11 = load i8** %name_space, align 8, !dbg !2785
  store i8* %11, i8** %namep, align 8, !dbg !2785
  br label %while.cond, !dbg !2786

while.cond:                                       ; preds = %while.body, %if.end7
  %12 = load i8** %namep, align 8, !dbg !2786
  %13 = load i8* %12, align 1, !dbg !2786
  %conv8 = sext i8 %13 to i32, !dbg !2786
  %cmp9 = icmp ne i32 %conv8, 0, !dbg !2786
  br i1 %cmp9, label %while.body, label %while.end, !dbg !2786

while.body:                                       ; preds = %while.cond
  %14 = load i8** %src_name_in.addr, align 8, !dbg !2787
  %15 = load i8** %namep, align 8, !dbg !2787
  %call11 = call i8* @file_name_concat(i8* %14, i8* %15, i8** null), !dbg !2787
  store i8* %call11, i8** %src_name, align 8, !dbg !2787
  %16 = load i8** %dst_name_in.addr, align 8, !dbg !2789
  %17 = load i8** %namep, align 8, !dbg !2789
  %call12 = call i8* @file_name_concat(i8* %16, i8* %17, i8** null), !dbg !2789
  store i8* %call12, i8** %dst_name, align 8, !dbg !2789
  %18 = load i8** %src_name, align 8, !dbg !2790
  %19 = load i8** %dst_name, align 8, !dbg !2790
  %20 = load i8* %new_dst.addr, align 1, !dbg !2790
  %tobool = trunc i8 %20 to i1, !dbg !2790
  %21 = load %struct.stat** %src_sb.addr, align 8, !dbg !2790
  %st_dev = getelementptr inbounds %struct.stat* %21, i32 0, i32 0, !dbg !2790
  %22 = load i64* %st_dev, align 8, !dbg !2790
  %23 = load %struct.dir_list** %ancestors.addr, align 8, !dbg !2790
  %call13 = call zeroext i1 @copy_internal(i8* %18, i8* %19, i1 zeroext %tobool, i64 %22, %struct.dir_list* %23, %struct.cp_options* %non_command_line_options, i1 zeroext false, i8* %local_copy_into_self, i8* null), !dbg !2790
  %conv14 = zext i1 %call13 to i32, !dbg !2790
  %24 = load i8* %ok, align 1, !dbg !2790
  %tobool15 = trunc i8 %24 to i1, !dbg !2790
  %conv16 = zext i1 %tobool15 to i32, !dbg !2790
  %and = and i32 %conv16, %conv14, !dbg !2790
  %tobool17 = icmp ne i32 %and, 0, !dbg !2790
  %frombool18 = zext i1 %tobool17 to i8, !dbg !2790
  store i8 %frombool18, i8* %ok, align 1, !dbg !2790
  %25 = load i8* %local_copy_into_self, align 1, !dbg !2791
  %tobool19 = trunc i8 %25 to i1, !dbg !2791
  %conv20 = zext i1 %tobool19 to i32, !dbg !2791
  %26 = load i8** %copy_into_self.addr, align 8, !dbg !2791
  %27 = load i8* %26, align 1, !dbg !2791
  %tobool21 = trunc i8 %27 to i1, !dbg !2791
  %conv22 = zext i1 %tobool21 to i32, !dbg !2791
  %or = or i32 %conv22, %conv20, !dbg !2791
  %tobool23 = icmp ne i32 %or, 0, !dbg !2791
  %frombool24 = zext i1 %tobool23 to i8, !dbg !2791
  store i8 %frombool24, i8* %26, align 1, !dbg !2791
  %28 = load i8** %dst_name, align 8, !dbg !2792
  call void @free(i8* %28) #6, !dbg !2792
  %29 = load i8** %src_name, align 8, !dbg !2793
  call void @free(i8* %29) #6, !dbg !2793
  %30 = load i8** %namep, align 8, !dbg !2794
  %call25 = call i64 @strlen(i8* %30) #18, !dbg !2794
  %add = add i64 %call25, 1, !dbg !2794
  %31 = load i8** %namep, align 8, !dbg !2794
  %add.ptr = getelementptr inbounds i8* %31, i64 %add, !dbg !2794
  store i8* %add.ptr, i8** %namep, align 8, !dbg !2794
  br label %while.cond, !dbg !2795

while.end:                                        ; preds = %while.cond
  %32 = load i8** %name_space, align 8, !dbg !2796
  call void @free(i8* %32) #6, !dbg !2796
  %33 = load i8* %ok, align 1, !dbg !2797
  %tobool26 = trunc i8 %33 to i1, !dbg !2797
  store i1 %tobool26, i1* %retval, !dbg !2797
  br label %return, !dbg !2797

return:                                           ; preds = %while.end, %if.then
  %34 = load i1* %retval, !dbg !2798
  ret i1 %34, !dbg !2798
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) #0 {
entry:
  %retval = alloca i1, align 1
  %sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  br label %while.cond, !dbg !2799

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.dir_list** %ancestors.addr, align 8, !dbg !2799
  %cmp = icmp ne %struct.dir_list* %0, null, !dbg !2799
  br i1 %cmp, label %while.body, label %while.end, !dbg !2799

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dir_list** %ancestors.addr, align 8, !dbg !2800
  %ino = getelementptr inbounds %struct.dir_list* %1, i32 0, i32 1, !dbg !2800
  %2 = load i64* %ino, align 8, !dbg !2800
  %3 = load %struct.stat** %sb.addr, align 8, !dbg !2800
  %st_ino = getelementptr inbounds %struct.stat* %3, i32 0, i32 1, !dbg !2800
  %4 = load i64* %st_ino, align 8, !dbg !2800
  %cmp1 = icmp eq i64 %2, %4, !dbg !2800
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !2800

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.dir_list** %ancestors.addr, align 8, !dbg !2800
  %dev = getelementptr inbounds %struct.dir_list* %5, i32 0, i32 2, !dbg !2800
  %6 = load i64* %dev, align 8, !dbg !2800
  %7 = load %struct.stat** %sb.addr, align 8, !dbg !2800
  %st_dev = getelementptr inbounds %struct.stat* %7, i32 0, i32 0, !dbg !2800
  %8 = load i64* %st_dev, align 8, !dbg !2800
  %cmp2 = icmp eq i64 %6, %8, !dbg !2800
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2800

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, !dbg !2803
  br label %return, !dbg !2803

if.end:                                           ; preds = %land.lhs.true, %while.body
  %9 = load %struct.dir_list** %ancestors.addr, align 8, !dbg !2804
  %parent = getelementptr inbounds %struct.dir_list* %9, i32 0, i32 0, !dbg !2804
  %10 = load %struct.dir_list** %parent, align 8, !dbg !2804
  store %struct.dir_list* %10, %struct.dir_list** %ancestors.addr, align 8, !dbg !2804
  br label %while.cond, !dbg !2805

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, !dbg !2806
  br label %return, !dbg !2806

return:                                           ; preds = %while.end, %if.then
  %11 = load i1* %retval, !dbg !2807
  ret i1 %11, !dbg !2807
}

; Function Attrs: nounwind uwtable
define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) #0 {
entry:
  %src.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %backup_dst_name.addr = alloca i8*, align 8
  store i8* %src, i8** %src.addr, align 8
  store i8* %dst, i8** %dst.addr, align 8
  store i8* %backup_dst_name, i8** %backup_dst_name.addr, align 8
  %0 = load i8** %src.addr, align 8, !dbg !2808
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !2808
  %1 = load i8** %dst.addr, align 8, !dbg !2808
  %call1 = call i8* @quote_n(i32 1, i8* %1), !dbg !2808
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str4898, i32 0, i32 0), i8* %call, i8* %call1), !dbg !2808
  %2 = load i8** %backup_dst_name.addr, align 8, !dbg !2809
  %tobool = icmp ne i8* %2, null, !dbg !2809
  br i1 %tobool, label %if.then, label %if.end, !dbg !2809

if.then:                                          ; preds = %entry
  %3 = load i8** %backup_dst_name.addr, align 8, !dbg !2811
  %call3 = call i8* @quote(i8* %3), !dbg !2811
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str4999, i32 0, i32 0), i8* %call3), !dbg !2811
  br label %if.end, !dbg !2811

if.end:                                           ; preds = %if.then, %entry
  %call5 = call i32 @putchar_unlocked(i32 10), !dbg !2812
  ret void, !dbg !2813
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #8 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1
  store i8* %file_name, i8** %file_name.addr, align 8
  %0 = load i8** %file_name.addr, align 8, !dbg !2814
  %arrayidx = getelementptr inbounds i8* %0, i64 0, !dbg !2814
  %1 = load i8* %arrayidx, align 1, !dbg !2814
  %conv = sext i8 %1 to i32, !dbg !2814
  %cmp = icmp eq i32 %conv, 46, !dbg !2814
  br i1 %cmp, label %if.then, label %if.else, !dbg !2814

if.then:                                          ; preds = %entry
  %2 = load i8** %file_name.addr, align 8, !dbg !2817
  %arrayidx2 = getelementptr inbounds i8* %2, i64 1, !dbg !2817
  %3 = load i8* %arrayidx2, align 1, !dbg !2817
  %conv3 = sext i8 %3 to i32, !dbg !2817
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !2817
  %conv5 = zext i1 %cmp4 to i32, !dbg !2817
  %add = add nsw i32 %conv5, 1, !dbg !2817
  %idxprom = sext i32 %add to i64, !dbg !2817
  %4 = load i8** %file_name.addr, align 8, !dbg !2817
  %arrayidx6 = getelementptr inbounds i8* %4, i64 %idxprom, !dbg !2817
  %5 = load i8* %arrayidx6, align 1, !dbg !2817
  store i8 %5, i8* %sep, align 1, !dbg !2817
  %6 = load i8* %sep, align 1, !dbg !2819
  %tobool = icmp ne i8 %6, 0, !dbg !2819
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !2819

lor.rhs:                                          ; preds = %if.then
  %7 = load i8* %sep, align 1, !dbg !2819
  %conv7 = sext i8 %7 to i32, !dbg !2819
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !2819
  br label %lor.end, !dbg !2819

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, !dbg !2819
  br label %return, !dbg !2819

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, !dbg !2820
  br label %return, !dbg !2820

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1* %retval, !dbg !2821
  ret i1 %9, !dbg !2821
}

; Function Attrs: nounwind uwtable
define internal void @overwrite_prompt(i8* %dst_name, %struct.stat* %dst_sb) #0 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  %0 = load i8** %dst_name.addr, align 8, !dbg !2822
  %call = call i32 @euidaccess(i8* %0, i32 2) #6, !dbg !2822
  %cmp = icmp ne i32 %call, 0, !dbg !2822
  %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !2825
  %2 = load i8** @program_name, align 8, !dbg !2825
  %3 = load i8** %dst_name.addr, align 8, !dbg !2827
  %call1 = call i8* @quote(i8* %3), !dbg !2827
  br i1 %cmp, label %if.then, label %if.else, !dbg !2822

if.then:                                          ; preds = %entry
  %4 = load %struct.stat** %dst_sb.addr, align 8, !dbg !2825
  %st_mode = getelementptr inbounds %struct.stat* %4, i32 0, i32 3, !dbg !2825
  %5 = load i32* %st_mode, align 4, !dbg !2825
  %and = and i32 %5, 4095, !dbg !2825
  %conv = zext i32 %and to i64, !dbg !2825
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([42 x i8]* @.str50100, i32 0, i32 0), i8* %2, i8* %call1, i64 %conv), !dbg !2825
  br label %if.end, !dbg !2828

if.else:                                          ; preds = %entry
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([19 x i8]* @.str51, i32 0, i32 0), i8* %2, i8* %call1), !dbg !2829
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2831
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #0 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  %0 = load %struct.cp_options** %x.addr, align 8, !dbg !2832
  %move_mode = getelementptr inbounds %struct.cp_options* %0, i32 0, i32 7, !dbg !2832
  %1 = load i8* %move_mode, align 1, !dbg !2832
  %tobool = trunc i8 %1 to i1, !dbg !2832
  br i1 %tobool, label %cond.end, label %cond.false, !dbg !2832

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8]* @.str52, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str151, i32 0, i32 0), i32 973, i8* getelementptr inbounds ([81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i32 0, i32 0)) #17
  unreachable, !dbg !2832

cond.end:                                         ; preds = %entry
  %2 = load %struct.cp_options** %x.addr, align 8, !dbg !2833
  %interactive = getelementptr inbounds %struct.cp_options* %2, i32 0, i32 6, !dbg !2833
  %3 = load i32* %interactive, align 4, !dbg !2833
  %cmp = icmp eq i32 %3, 2, !dbg !2833
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !2833

lor.rhs:                                          ; preds = %cond.end
  %4 = load %struct.cp_options** %x.addr, align 8, !dbg !2833
  %interactive1 = getelementptr inbounds %struct.cp_options* %4, i32 0, i32 6, !dbg !2833
  %5 = load i32* %interactive1, align 4, !dbg !2833
  %cmp2 = icmp eq i32 %5, 3, !dbg !2833
  br i1 %cmp2, label %land.lhs.true10, label %lor.lhs.false, !dbg !2833

lor.lhs.false:                                    ; preds = %lor.rhs
  %6 = load %struct.cp_options** %x.addr, align 8, !dbg !2833
  %interactive3 = getelementptr inbounds %struct.cp_options* %6, i32 0, i32 6, !dbg !2833
  %7 = load i32* %interactive3, align 4, !dbg !2833
  %cmp4 = icmp eq i32 %7, 4, !dbg !2833
  br i1 %cmp4, label %land.lhs.true, label %lor.end, !dbg !2833

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.cp_options** %x.addr, align 8, !dbg !2833
  %stdin_tty = getelementptr inbounds %struct.cp_options* %8, i32 0, i32 22, !dbg !2833
  %9 = load i8* %stdin_tty, align 1, !dbg !2833
  %tobool5 = trunc i8 %9 to i1, !dbg !2833
  br i1 %tobool5, label %land.lhs.true6, label %lor.end, !dbg !2833

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load %struct.stat** %dst_sb.addr, align 8, !dbg !2833
  %st_mode = getelementptr inbounds %struct.stat* %10, i32 0, i32 3, !dbg !2833
  %11 = load i32* %st_mode, align 4, !dbg !2833
  %and = and i32 %11, 61440, !dbg !2833
  %cmp7 = icmp eq i32 %and, 40960, !dbg !2833
  br i1 %cmp7, label %lor.end, label %land.lhs.true8, !dbg !2833

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %12 = load i8** %dst_name.addr, align 8, !dbg !2834
  %call = call i32 @euidaccess(i8* %12, i32 2) #6, !dbg !2834
  %cmp9 = icmp ne i32 %call, 0, !dbg !2834
  br i1 %cmp9, label %land.lhs.true10, label %lor.end, !dbg !2834

land.lhs.true10:                                  ; preds = %land.lhs.true8, %lor.rhs
  %13 = load i8** %dst_name.addr, align 8, !dbg !2835
  %14 = load %struct.stat** %dst_sb.addr, align 8, !dbg !2835
  call void @overwrite_prompt(i8* %13, %struct.stat* %14), !dbg !2835
  %call11 = call zeroext i1 @yesno(), !dbg !2836
  %lnot = xor i1 %call11, true, !dbg !2836
  br label %lor.end

lor.end:                                          ; preds = %lor.lhs.false, %land.lhs.true, %land.lhs.true6, %land.lhs.true8, %land.lhs.true10, %cond.end
  %15 = phi i1 [ true, %cond.end ], [ false, %land.lhs.true8 ], [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %lnot, %land.lhs.true10 ]
  ret i1 %15, !dbg !2837
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now, i8* %unlink_src) #0 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %return_now.addr = alloca i8*, align 8
  %unlink_src.addr = alloca i8*, align 8
  %src_sb_link = alloca %struct.stat*, align 8
  %dst_sb_link = alloca %struct.stat*, align 8
  %tmp_dst_sb = alloca %struct.stat, align 8
  %tmp_src_sb = alloca %struct.stat, align 8
  %same_link = alloca i8, align 1
  %same = alloca i8, align 1
  store i8* %src_name, i8** %src_name.addr, align 8
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  store i8* %return_now, i8** %return_now.addr, align 8
  store i8* %unlink_src, i8** %unlink_src.addr, align 8
  %0 = load %struct.stat** %src_sb.addr, align 8, !dbg !2838
  %st_ino = getelementptr inbounds %struct.stat* %0, i32 0, i32 1, !dbg !2838
  %1 = load i64* %st_ino, align 8, !dbg !2838
  %2 = load %struct.stat** %dst_sb.addr, align 8, !dbg !2838
  %st_ino1 = getelementptr inbounds %struct.stat* %2, i32 0, i32 1, !dbg !2838
  %3 = load i64* %st_ino1, align 8, !dbg !2838
  %cmp = icmp eq i64 %1, %3, !dbg !2838
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2838

land.rhs:                                         ; preds = %entry
  %4 = load %struct.stat** %src_sb.addr, align 8, !dbg !2838
  %st_dev = getelementptr inbounds %struct.stat* %4, i32 0, i32 0, !dbg !2838
  %5 = load i64* %st_dev, align 8, !dbg !2838
  %6 = load %struct.stat** %dst_sb.addr, align 8, !dbg !2838
  %st_dev2 = getelementptr inbounds %struct.stat* %6, i32 0, i32 0, !dbg !2838
  %7 = load i64* %st_dev2, align 8, !dbg !2838
  %cmp3 = icmp eq i64 %5, %7, !dbg !2838
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ]
  %frombool = zext i1 %8 to i8
  store i8 %frombool, i8* %same, align 1
  %9 = load i8** %return_now.addr, align 8, !dbg !2839
  store i8 0, i8* %9, align 1, !dbg !2839
  %10 = load i8** %unlink_src.addr, align 8, !dbg !2840
  store i8 0, i8* %10, align 1, !dbg !2840
  %11 = load i8* %same, align 1, !dbg !2841
  %tobool = trunc i8 %11 to i1, !dbg !2841
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2841

land.lhs.true:                                    ; preds = %land.end
  %12 = load %struct.cp_options** %x.addr, align 8, !dbg !2841
  %hard_link = getelementptr inbounds %struct.cp_options* %12, i32 0, i32 5, !dbg !2841
  %13 = load i8* %hard_link, align 1, !dbg !2841
  %tobool4 = trunc i8 %13 to i1, !dbg !2841
  br i1 %tobool4, label %if.then, label %if.end, !dbg !2841

if.then:                                          ; preds = %land.lhs.true
  %14 = load i8** %return_now.addr, align 8, !dbg !2843
  store i8 1, i8* %14, align 1, !dbg !2843
  store i1 true, i1* %retval, !dbg !2845
  br label %return, !dbg !2845

if.end:                                           ; preds = %land.lhs.true, %land.end
  %15 = load %struct.cp_options** %x.addr, align 8, !dbg !2846
  %dereference = getelementptr inbounds %struct.cp_options* %15, i32 0, i32 2, !dbg !2846
  %16 = load i32* %dereference, align 4, !dbg !2846
  %cmp5 = icmp eq i32 %16, 2, !dbg !2846
  %17 = load i8* %same, align 1, !dbg !2848
  %tobool7 = trunc i8 %17 to i1, !dbg !2848
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !2846

if.then6:                                         ; preds = %if.end
  %frombool8 = zext i1 %tobool7 to i8, !dbg !2848
  store i8 %frombool8, i8* %same_link, align 1, !dbg !2848
  %18 = load %struct.stat** %src_sb.addr, align 8, !dbg !2850
  %st_mode = getelementptr inbounds %struct.stat* %18, i32 0, i32 3, !dbg !2850
  %19 = load i32* %st_mode, align 4, !dbg !2850
  %and = and i32 %19, 61440, !dbg !2850
  %cmp9 = icmp eq i32 %and, 40960, !dbg !2850
  br i1 %cmp9, label %land.lhs.true10, label %if.end15, !dbg !2850

land.lhs.true10:                                  ; preds = %if.then6
  %20 = load %struct.stat** %dst_sb.addr, align 8, !dbg !2850
  %st_mode11 = getelementptr inbounds %struct.stat* %20, i32 0, i32 3, !dbg !2850
  %21 = load i32* %st_mode11, align 4, !dbg !2850
  %and12 = and i32 %21, 61440, !dbg !2850
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !2850
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !2850

if.then14:                                        ; preds = %land.lhs.true10
  %22 = load i8** %src_name.addr, align 8, !dbg !2852
  %23 = load i8** %dst_name.addr, align 8, !dbg !2852
  %call = call zeroext i1 @same_name(i8* %22, i8* %23), !dbg !2852
  %lnot = xor i1 %call, true, !dbg !2852
  store i1 %lnot, i1* %retval, !dbg !2852
  br label %return, !dbg !2852

if.end15:                                         ; preds = %land.lhs.true10, %if.then6
  %24 = load %struct.stat** %src_sb.addr, align 8, !dbg !2853
  store %struct.stat* %24, %struct.stat** %src_sb_link, align 8, !dbg !2853
  %25 = load %struct.stat** %dst_sb.addr, align 8, !dbg !2854
  store %struct.stat* %25, %struct.stat** %dst_sb_link, align 8, !dbg !2854
  br label %if.end45, !dbg !2855

if.else:                                          ; preds = %if.end
  br i1 %tobool7, label %if.end18, label %if.then17, !dbg !2856

if.then17:                                        ; preds = %if.else
  store i1 true, i1* %retval, !dbg !2859
  br label %return, !dbg !2859

if.end18:                                         ; preds = %if.else
  %26 = load i8** %dst_name.addr, align 8, !dbg !2860
  %call19 = call i32 @lstat(i8* %26, %struct.stat* %tmp_dst_sb) #6, !dbg !2860
  %cmp20 = icmp ne i32 %call19, 0, !dbg !2860
  br i1 %cmp20, label %if.then23, label %lor.lhs.false, !dbg !2860

lor.lhs.false:                                    ; preds = %if.end18
  %27 = load i8** %src_name.addr, align 8, !dbg !2862
  %call21 = call i32 @lstat(i8* %27, %struct.stat* %tmp_src_sb) #6, !dbg !2862
  %cmp22 = icmp ne i32 %call21, 0, !dbg !2862
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !2862

if.then23:                                        ; preds = %lor.lhs.false, %if.end18
  store i1 true, i1* %retval, !dbg !2863
  br label %return, !dbg !2863

if.end24:                                         ; preds = %lor.lhs.false
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8, !dbg !2864
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8, !dbg !2865
  %28 = load %struct.stat** %src_sb_link, align 8, !dbg !2866
  %st_ino25 = getelementptr inbounds %struct.stat* %28, i32 0, i32 1, !dbg !2866
  %29 = load i64* %st_ino25, align 8, !dbg !2866
  %30 = load %struct.stat** %dst_sb_link, align 8, !dbg !2866
  %st_ino26 = getelementptr inbounds %struct.stat* %30, i32 0, i32 1, !dbg !2866
  %31 = load i64* %st_ino26, align 8, !dbg !2866
  %cmp27 = icmp eq i64 %29, %31, !dbg !2866
  br i1 %cmp27, label %land.rhs28, label %land.end32, !dbg !2866

land.rhs28:                                       ; preds = %if.end24
  %32 = load %struct.stat** %src_sb_link, align 8, !dbg !2866
  %st_dev29 = getelementptr inbounds %struct.stat* %32, i32 0, i32 0, !dbg !2866
  %33 = load i64* %st_dev29, align 8, !dbg !2866
  %34 = load %struct.stat** %dst_sb_link, align 8, !dbg !2866
  %st_dev30 = getelementptr inbounds %struct.stat* %34, i32 0, i32 0, !dbg !2866
  %35 = load i64* %st_dev30, align 8, !dbg !2866
  %cmp31 = icmp eq i64 %33, %35, !dbg !2866
  br label %land.end32

land.end32:                                       ; preds = %land.rhs28, %if.end24
  %36 = phi i1 [ false, %if.end24 ], [ %cmp31, %land.rhs28 ]
  %frombool33 = zext i1 %36 to i8
  store i8 %frombool33, i8* %same_link, align 1
  %37 = load %struct.stat** %src_sb_link, align 8, !dbg !2867
  %st_mode34 = getelementptr inbounds %struct.stat* %37, i32 0, i32 3, !dbg !2867
  %38 = load i32* %st_mode34, align 4, !dbg !2867
  %and35 = and i32 %38, 61440, !dbg !2867
  %cmp36 = icmp eq i32 %and35, 40960, !dbg !2867
  br i1 %cmp36, label %land.lhs.true37, label %if.end45, !dbg !2867

land.lhs.true37:                                  ; preds = %land.end32
  %39 = load %struct.stat** %dst_sb_link, align 8, !dbg !2867
  %st_mode38 = getelementptr inbounds %struct.stat* %39, i32 0, i32 3, !dbg !2867
  %40 = load i32* %st_mode38, align 4, !dbg !2867
  %and39 = and i32 %40, 61440, !dbg !2867
  %cmp40 = icmp eq i32 %and39, 40960, !dbg !2867
  br i1 %cmp40, label %land.lhs.true41, label %if.end45, !dbg !2867

land.lhs.true41:                                  ; preds = %land.lhs.true37
  %41 = load %struct.cp_options** %x.addr, align 8, !dbg !2867
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options* %41, i32 0, i32 3, !dbg !2867
  %42 = load i8* %unlink_dest_before_opening, align 1, !dbg !2867
  %tobool42 = trunc i8 %42 to i1, !dbg !2867
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !2867

if.then43:                                        ; preds = %land.lhs.true41
  store i1 true, i1* %retval, !dbg !2869
  br label %return, !dbg !2869

if.end45:                                         ; preds = %land.end32, %land.lhs.true37, %land.lhs.true41, %if.end15
  %43 = load %struct.cp_options** %x.addr, align 8, !dbg !2870
  %backup_type = getelementptr inbounds %struct.cp_options* %43, i32 0, i32 0, !dbg !2870
  %44 = load i32* %backup_type, align 4, !dbg !2870
  %cmp46 = icmp ne i32 %44, 0, !dbg !2870
  br i1 %cmp46, label %if.then47, label %if.end67, !dbg !2870

if.then47:                                        ; preds = %if.end45
  %45 = load i8* %same_link, align 1, !dbg !2872
  %tobool48 = trunc i8 %45 to i1, !dbg !2872
  br i1 %tobool48, label %if.end64, label %if.then49, !dbg !2872

if.then49:                                        ; preds = %if.then47
  %46 = load %struct.cp_options** %x.addr, align 8, !dbg !2875
  %move_mode = getelementptr inbounds %struct.cp_options* %46, i32 0, i32 7, !dbg !2875
  %47 = load i8* %move_mode, align 1, !dbg !2875
  %tobool50 = trunc i8 %47 to i1, !dbg !2875
  br i1 %tobool50, label %if.end63, label %land.lhs.true51, !dbg !2875

land.lhs.true51:                                  ; preds = %if.then49
  %48 = load %struct.cp_options** %x.addr, align 8, !dbg !2875
  %dereference52 = getelementptr inbounds %struct.cp_options* %48, i32 0, i32 2, !dbg !2875
  %49 = load i32* %dereference52, align 4, !dbg !2875
  %cmp53 = icmp ne i32 %49, 2, !dbg !2875
  br i1 %cmp53, label %land.lhs.true54, label %if.end63, !dbg !2875

land.lhs.true54:                                  ; preds = %land.lhs.true51
  %50 = load %struct.stat** %src_sb_link, align 8, !dbg !2875
  %st_mode55 = getelementptr inbounds %struct.stat* %50, i32 0, i32 3, !dbg !2875
  %51 = load i32* %st_mode55, align 4, !dbg !2875
  %and56 = and i32 %51, 61440, !dbg !2875
  %cmp57 = icmp eq i32 %and56, 40960, !dbg !2875
  br i1 %cmp57, label %land.lhs.true58, label %if.end63, !dbg !2875

land.lhs.true58:                                  ; preds = %land.lhs.true54
  %52 = load %struct.stat** %dst_sb_link, align 8, !dbg !2875
  %st_mode59 = getelementptr inbounds %struct.stat* %52, i32 0, i32 3, !dbg !2875
  %53 = load i32* %st_mode59, align 4, !dbg !2875
  %and60 = and i32 %53, 61440, !dbg !2875
  %cmp61 = icmp eq i32 %and60, 40960, !dbg !2875
  br i1 %cmp61, label %if.end63, label %if.then62, !dbg !2875

if.then62:                                        ; preds = %land.lhs.true58
  store i1 false, i1* %retval, !dbg !2878
  br label %return, !dbg !2878

if.end63:                                         ; preds = %land.lhs.true58, %land.lhs.true54, %land.lhs.true51, %if.then49
  store i1 true, i1* %retval, !dbg !2879
  br label %return, !dbg !2879

if.end64:                                         ; preds = %if.then47
  %54 = load i8** %src_name.addr, align 8, !dbg !2880
  %55 = load i8** %dst_name.addr, align 8, !dbg !2880
  %call65 = call zeroext i1 @same_name(i8* %54, i8* %55), !dbg !2880
  %lnot66 = xor i1 %call65, true, !dbg !2880
  store i1 %lnot66, i1* %retval, !dbg !2880
  br label %return, !dbg !2880

if.end67:                                         ; preds = %if.end45
  %56 = load %struct.cp_options** %x.addr, align 8, !dbg !2881
  %move_mode68 = getelementptr inbounds %struct.cp_options* %56, i32 0, i32 7, !dbg !2881
  %57 = load i8* %move_mode68, align 1, !dbg !2881
  %tobool69 = trunc i8 %57 to i1, !dbg !2881
  br i1 %tobool69, label %if.then73, label %lor.lhs.false70, !dbg !2881

lor.lhs.false70:                                  ; preds = %if.end67
  %58 = load %struct.cp_options** %x.addr, align 8, !dbg !2881
  %unlink_dest_before_opening71 = getelementptr inbounds %struct.cp_options* %58, i32 0, i32 3, !dbg !2881
  %59 = load i8* %unlink_dest_before_opening71, align 1, !dbg !2881
  %tobool72 = trunc i8 %59 to i1, !dbg !2881
  br i1 %tobool72, label %if.then73, label %if.end90, !dbg !2881

if.then73:                                        ; preds = %lor.lhs.false70, %if.end67
  %60 = load %struct.stat** %dst_sb_link, align 8, !dbg !2883
  %st_mode74 = getelementptr inbounds %struct.stat* %60, i32 0, i32 3, !dbg !2883
  %61 = load i32* %st_mode74, align 4, !dbg !2883
  %and75 = and i32 %61, 61440, !dbg !2883
  %cmp76 = icmp eq i32 %and75, 40960, !dbg !2883
  br i1 %cmp76, label %if.then77, label %if.end78, !dbg !2883

if.then77:                                        ; preds = %if.then73
  store i1 true, i1* %retval, !dbg !2886
  br label %return, !dbg !2886

if.end78:                                         ; preds = %if.then73
  %62 = load i8* %same_link, align 1, !dbg !2887
  %tobool79 = trunc i8 %62 to i1, !dbg !2887
  br i1 %tobool79, label %land.lhs.true80, label %if.end90, !dbg !2887

land.lhs.true80:                                  ; preds = %if.end78
  %63 = load %struct.stat** %dst_sb_link, align 8, !dbg !2887
  %st_nlink = getelementptr inbounds %struct.stat* %63, i32 0, i32 2, !dbg !2887
  %64 = load i64* %st_nlink, align 8, !dbg !2887
  %cmp81 = icmp ult i64 1, %64, !dbg !2887
  br i1 %cmp81, label %land.lhs.true82, label %if.end90, !dbg !2887

land.lhs.true82:                                  ; preds = %land.lhs.true80
  %65 = load i8** %src_name.addr, align 8, !dbg !2889
  %66 = load i8** %dst_name.addr, align 8, !dbg !2889
  %call83 = call zeroext i1 @same_name(i8* %65, i8* %66), !dbg !2889
  br i1 %call83, label %if.end90, label %if.then84, !dbg !2889

if.then84:                                        ; preds = %land.lhs.true82
  %67 = load %struct.cp_options** %x.addr, align 8, !dbg !2890
  %move_mode85 = getelementptr inbounds %struct.cp_options* %67, i32 0, i32 7, !dbg !2890
  %68 = load i8* %move_mode85, align 1, !dbg !2890
  %tobool86 = trunc i8 %68 to i1, !dbg !2890
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !2890

if.then87:                                        ; preds = %if.then84
  %69 = load i8** %unlink_src.addr, align 8, !dbg !2893
  store i8 1, i8* %69, align 1, !dbg !2893
  %70 = load i8** %return_now.addr, align 8, !dbg !2895
  store i8 1, i8* %70, align 1, !dbg !2895
  br label %if.end88, !dbg !2896

if.end88:                                         ; preds = %if.then87, %if.then84
  store i1 true, i1* %retval, !dbg !2897
  br label %return, !dbg !2897

if.end90:                                         ; preds = %if.end78, %land.lhs.true80, %land.lhs.true82, %lor.lhs.false70
  %71 = load %struct.stat** %src_sb_link, align 8, !dbg !2898
  %st_mode91 = getelementptr inbounds %struct.stat* %71, i32 0, i32 3, !dbg !2898
  %72 = load i32* %st_mode91, align 4, !dbg !2898
  %and92 = and i32 %72, 61440, !dbg !2898
  %cmp93 = icmp eq i32 %and92, 40960, !dbg !2898
  br i1 %cmp93, label %if.end112, label %land.lhs.true94, !dbg !2898

land.lhs.true94:                                  ; preds = %if.end90
  %73 = load %struct.stat** %dst_sb_link, align 8, !dbg !2898
  %st_mode95 = getelementptr inbounds %struct.stat* %73, i32 0, i32 3, !dbg !2898
  %74 = load i32* %st_mode95, align 4, !dbg !2898
  %and96 = and i32 %74, 61440, !dbg !2898
  %cmp97 = icmp eq i32 %and96, 40960, !dbg !2898
  br i1 %cmp97, label %if.end112, label %if.then98, !dbg !2898

if.then98:                                        ; preds = %land.lhs.true94
  %75 = load %struct.stat** %src_sb_link, align 8, !dbg !2900
  %st_ino99 = getelementptr inbounds %struct.stat* %75, i32 0, i32 1, !dbg !2900
  %76 = load i64* %st_ino99, align 8, !dbg !2900
  %77 = load %struct.stat** %dst_sb_link, align 8, !dbg !2900
  %st_ino100 = getelementptr inbounds %struct.stat* %77, i32 0, i32 1, !dbg !2900
  %78 = load i64* %st_ino100, align 8, !dbg !2900
  %cmp101 = icmp eq i64 %76, %78, !dbg !2900
  br i1 %cmp101, label %land.lhs.true102, label %if.then106, !dbg !2900

land.lhs.true102:                                 ; preds = %if.then98
  %79 = load %struct.stat** %src_sb_link, align 8, !dbg !2900
  %st_dev103 = getelementptr inbounds %struct.stat* %79, i32 0, i32 0, !dbg !2900
  %80 = load i64* %st_dev103, align 8, !dbg !2900
  %81 = load %struct.stat** %dst_sb_link, align 8, !dbg !2900
  %st_dev104 = getelementptr inbounds %struct.stat* %81, i32 0, i32 0, !dbg !2900
  %82 = load i64* %st_dev104, align 8, !dbg !2900
  %cmp105 = icmp eq i64 %80, %82, !dbg !2900
  br i1 %cmp105, label %if.end107, label %if.then106, !dbg !2900

if.then106:                                       ; preds = %land.lhs.true102, %if.then98
  store i1 true, i1* %retval, !dbg !2903
  br label %return, !dbg !2903

if.end107:                                        ; preds = %land.lhs.true102
  %83 = load %struct.cp_options** %x.addr, align 8, !dbg !2904
  %hard_link108 = getelementptr inbounds %struct.cp_options* %83, i32 0, i32 5, !dbg !2904
  %84 = load i8* %hard_link108, align 1, !dbg !2904
  %tobool109 = trunc i8 %84 to i1, !dbg !2904
  br i1 %tobool109, label %if.then110, label %if.end112, !dbg !2904

if.then110:                                       ; preds = %if.end107
  %85 = load i8** %return_now.addr, align 8, !dbg !2906
  store i8 1, i8* %85, align 1, !dbg !2906
  store i1 true, i1* %retval, !dbg !2908
  br label %return, !dbg !2908

if.end112:                                        ; preds = %if.end107, %land.lhs.true94, %if.end90
  %86 = load %struct.cp_options** %x.addr, align 8, !dbg !2909
  %unlink_dest_before_opening113 = getelementptr inbounds %struct.cp_options* %86, i32 0, i32 3, !dbg !2909
  %87 = load i8* %unlink_dest_before_opening113, align 1, !dbg !2909
  %tobool114 = trunc i8 %87 to i1, !dbg !2909
  br i1 %tobool114, label %land.lhs.true115, label %if.end123, !dbg !2909

land.lhs.true115:                                 ; preds = %if.end112
  %88 = load %struct.stat** %dst_sb_link, align 8, !dbg !2909
  %st_mode116 = getelementptr inbounds %struct.stat* %88, i32 0, i32 3, !dbg !2909
  %89 = load i32* %st_mode116, align 4, !dbg !2909
  %and117 = and i32 %89, 61440, !dbg !2909
  %cmp118 = icmp eq i32 %and117, 40960, !dbg !2909
  br i1 %cmp118, label %if.then119, label %if.end123, !dbg !2909

if.then119:                                       ; preds = %land.lhs.true115
  %90 = load %struct.stat** %dst_sb_link, align 8, !dbg !2911
  %st_dev120 = getelementptr inbounds %struct.stat* %90, i32 0, i32 0, !dbg !2911
  %91 = load i64* %st_dev120, align 8, !dbg !2911
  %92 = load %struct.stat** %src_sb_link, align 8, !dbg !2911
  %st_dev121 = getelementptr inbounds %struct.stat* %92, i32 0, i32 0, !dbg !2911
  %93 = load i64* %st_dev121, align 8, !dbg !2911
  %cmp122 = icmp eq i64 %91, %93, !dbg !2911
  store i1 %cmp122, i1* %retval, !dbg !2911
  br label %return, !dbg !2911

if.end123:                                        ; preds = %land.lhs.true115, %if.end112
  %94 = load %struct.cp_options** %x.addr, align 8, !dbg !2912
  %dereference124 = getelementptr inbounds %struct.cp_options* %94, i32 0, i32 2, !dbg !2912
  %95 = load i32* %dereference124, align 4, !dbg !2912
  %cmp125 = icmp eq i32 %95, 2, !dbg !2912
  br i1 %cmp125, label %if.then126, label %if.end160, !dbg !2912

if.then126:                                       ; preds = %if.end123
  %96 = load %struct.stat** %src_sb_link, align 8, !dbg !2914
  %st_mode127 = getelementptr inbounds %struct.stat* %96, i32 0, i32 3, !dbg !2914
  %97 = load i32* %st_mode127, align 4, !dbg !2914
  %and128 = and i32 %97, 61440, !dbg !2914
  %cmp129 = icmp eq i32 %and128, 40960, !dbg !2914
  br i1 %cmp129, label %if.else131, label %if.then130, !dbg !2914

if.then130:                                       ; preds = %if.then126
  %98 = load %struct.stat** %src_sb_link, align 8, !dbg !2917
  %99 = bitcast %struct.stat* %tmp_src_sb to i8*, !dbg !2917
  %100 = bitcast %struct.stat* %98 to i8*, !dbg !2917
  %101 = call i8* @memcpy(i8* %99, i8* %100, i64 144)
  br label %if.end136, !dbg !2917

if.else131:                                       ; preds = %if.then126
  %102 = load i8** %src_name.addr, align 8, !dbg !2918
  %call132 = call i32 @stat(i8* %102, %struct.stat* %tmp_src_sb) #6, !dbg !2918
  %cmp133 = icmp ne i32 %call132, 0, !dbg !2918
  br i1 %cmp133, label %if.then134, label %if.end136, !dbg !2918

if.then134:                                       ; preds = %if.else131
  store i1 true, i1* %retval, !dbg !2920
  br label %return, !dbg !2920

if.end136:                                        ; preds = %if.else131, %if.then130
  %103 = load %struct.stat** %dst_sb_link, align 8, !dbg !2921
  %st_mode137 = getelementptr inbounds %struct.stat* %103, i32 0, i32 3, !dbg !2921
  %104 = load i32* %st_mode137, align 4, !dbg !2921
  %and138 = and i32 %104, 61440, !dbg !2921
  %cmp139 = icmp eq i32 %and138, 40960, !dbg !2921
  br i1 %cmp139, label %if.else141, label %if.then140, !dbg !2921

if.then140:                                       ; preds = %if.end136
  %105 = load %struct.stat** %dst_sb_link, align 8, !dbg !2923
  %106 = bitcast %struct.stat* %tmp_dst_sb to i8*, !dbg !2923
  %107 = bitcast %struct.stat* %105 to i8*, !dbg !2923
  %108 = call i8* @memcpy(i8* %106, i8* %107, i64 144)
  br label %if.end146, !dbg !2923

if.else141:                                       ; preds = %if.end136
  %109 = load i8** %dst_name.addr, align 8, !dbg !2924
  %call142 = call i32 @stat(i8* %109, %struct.stat* %tmp_dst_sb) #6, !dbg !2924
  %cmp143 = icmp ne i32 %call142, 0, !dbg !2924
  br i1 %cmp143, label %if.then144, label %if.end146, !dbg !2924

if.then144:                                       ; preds = %if.else141
  store i1 true, i1* %retval, !dbg !2926
  br label %return, !dbg !2926

if.end146:                                        ; preds = %if.else141, %if.then140
  %st_ino147 = getelementptr inbounds %struct.stat* %tmp_src_sb, i32 0, i32 1, !dbg !2927
  %110 = load i64* %st_ino147, align 8, !dbg !2927
  %st_ino148 = getelementptr inbounds %struct.stat* %tmp_dst_sb, i32 0, i32 1, !dbg !2927
  %111 = load i64* %st_ino148, align 8, !dbg !2927
  %cmp149 = icmp eq i64 %110, %111, !dbg !2927
  br i1 %cmp149, label %land.lhs.true150, label %if.then154, !dbg !2927

land.lhs.true150:                                 ; preds = %if.end146
  %st_dev151 = getelementptr inbounds %struct.stat* %tmp_src_sb, i32 0, i32 0, !dbg !2927
  %112 = load i64* %st_dev151, align 8, !dbg !2927
  %st_dev152 = getelementptr inbounds %struct.stat* %tmp_dst_sb, i32 0, i32 0, !dbg !2927
  %113 = load i64* %st_dev152, align 8, !dbg !2927
  %cmp153 = icmp eq i64 %112, %113, !dbg !2927
  br i1 %cmp153, label %if.end155, label %if.then154, !dbg !2927

if.then154:                                       ; preds = %land.lhs.true150, %if.end146
  store i1 true, i1* %retval, !dbg !2929
  br label %return, !dbg !2929

if.end155:                                        ; preds = %land.lhs.true150
  %114 = load %struct.cp_options** %x.addr, align 8, !dbg !2930
  %hard_link156 = getelementptr inbounds %struct.cp_options* %114, i32 0, i32 5, !dbg !2930
  %115 = load i8* %hard_link156, align 1, !dbg !2930
  %tobool157 = trunc i8 %115 to i1, !dbg !2930
  br i1 %tobool157, label %if.then158, label %if.end160, !dbg !2930

if.then158:                                       ; preds = %if.end155
  %116 = load i8** %return_now.addr, align 8, !dbg !2932
  store i8 1, i8* %116, align 1, !dbg !2932
  store i1 true, i1* %retval, !dbg !2934
  br label %return, !dbg !2934

if.end160:                                        ; preds = %if.end155, %if.end123
  store i1 false, i1* %retval, !dbg !2935
  br label %return, !dbg !2935

return:                                           ; preds = %if.end160, %if.then158, %if.then154, %if.then144, %if.then134, %if.then119, %if.then110, %if.then106, %if.end88, %if.then77, %if.end64, %if.end63, %if.then62, %if.then43, %if.then23, %if.then17
  %117 = load i1* %retval, !dbg !2936
  ret i1 %117, !dbg !2936
}

; Function Attrs: nounwind uwtable
define internal void @record_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #0 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8
  %sb = alloca %struct.stat, align 8
  %ent_from_table = alloca %struct.F_triple*, align 8
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  store i8* %file, i8** %file.addr, align 8
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  %0 = load %struct.hash_table** %ht.addr, align 8, !dbg !2937
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !2937
  br i1 %cmp, label %if.end20, label %if.end, !dbg !2937

if.end:                                           ; preds = %entry
  %call = call i8* @xmalloc(i64 24), !dbg !2939
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !2939
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !2939
  %2 = load i8** %file.addr, align 8, !dbg !2940
  %call1 = call i8* @xstrdup(i8* %2), !dbg !2940
  %3 = load %struct.F_triple** %ent, align 8, !dbg !2940
  %name = getelementptr inbounds %struct.F_triple* %3, i32 0, i32 0, !dbg !2940
  store i8* %call1, i8** %name, align 8, !dbg !2940
  %4 = load %struct.stat** %stats.addr, align 8, !dbg !2941
  %tobool = icmp ne %struct.stat* %4, null, !dbg !2941
  br i1 %tobool, label %if.then2, label %if.else, !dbg !2941

if.then2:                                         ; preds = %if.end
  %5 = load %struct.stat** %stats.addr, align 8, !dbg !2943
  %st_ino = getelementptr inbounds %struct.stat* %5, i32 0, i32 1, !dbg !2943
  %6 = load i64* %st_ino, align 8, !dbg !2943
  %7 = load %struct.F_triple** %ent, align 8, !dbg !2943
  %st_ino3 = getelementptr inbounds %struct.F_triple* %7, i32 0, i32 1, !dbg !2943
  store i64 %6, i64* %st_ino3, align 8, !dbg !2943
  %8 = load %struct.stat** %stats.addr, align 8, !dbg !2945
  %st_dev = getelementptr inbounds %struct.stat* %8, i32 0, i32 0, !dbg !2945
  %9 = load i64* %st_dev, align 8, !dbg !2945
  %10 = load %struct.F_triple** %ent, align 8, !dbg !2945
  %st_dev4 = getelementptr inbounds %struct.F_triple* %10, i32 0, i32 2, !dbg !2945
  store i64 %9, i64* %st_dev4, align 8, !dbg !2945
  br label %if.end13, !dbg !2946

if.else:                                          ; preds = %if.end
  %11 = load i8** %file.addr, align 8, !dbg !2947
  %call5 = call i32 @lstat(i8* %11, %struct.stat* %sb) #6, !dbg !2947
  %cmp6 = icmp ne i32 %call5, 0, !dbg !2947
  br i1 %cmp6, label %if.end20, label %if.end8, !dbg !2947

if.end8:                                          ; preds = %if.else
  %st_ino9 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 1, !dbg !2950
  %12 = load i64* %st_ino9, align 8, !dbg !2950
  %13 = load %struct.F_triple** %ent, align 8, !dbg !2950
  %st_ino10 = getelementptr inbounds %struct.F_triple* %13, i32 0, i32 1, !dbg !2950
  store i64 %12, i64* %st_ino10, align 8, !dbg !2950
  %st_dev11 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 0, !dbg !2951
  %14 = load i64* %st_dev11, align 8, !dbg !2951
  %15 = load %struct.F_triple** %ent, align 8, !dbg !2951
  %st_dev12 = getelementptr inbounds %struct.F_triple* %15, i32 0, i32 2, !dbg !2951
  store i64 %14, i64* %st_dev12, align 8, !dbg !2951
  br label %if.end13

if.end13:                                         ; preds = %if.end8, %if.then2
  %16 = load %struct.hash_table** %ht.addr, align 8, !dbg !2952
  %17 = load %struct.F_triple** %ent, align 8, !dbg !2952
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !2952
  %call14 = call i8* @hash_insert(%struct.hash_table* %16, i8* %18), !dbg !2952
  %19 = bitcast i8* %call14 to %struct.F_triple*, !dbg !2952
  store %struct.F_triple* %19, %struct.F_triple** %ent_from_table, align 8, !dbg !2952
  %20 = load %struct.F_triple** %ent_from_table, align 8, !dbg !2954
  %cmp15 = icmp eq %struct.F_triple* %20, null, !dbg !2954
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !2954

if.then16:                                        ; preds = %if.end13
  call void @xalloc_die() #19, !dbg !2956
  unreachable, !dbg !2956

if.end17:                                         ; preds = %if.end13
  %21 = load %struct.F_triple** %ent_from_table, align 8, !dbg !2958
  %22 = load %struct.F_triple** %ent, align 8, !dbg !2958
  %cmp18 = icmp ne %struct.F_triple* %21, %22, !dbg !2958
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !2958

if.then19:                                        ; preds = %if.end17
  %23 = load %struct.F_triple** %ent, align 8, !dbg !2960
  %24 = bitcast %struct.F_triple* %23 to i8*, !dbg !2960
  call void @triple_free(i8* %24), !dbg !2960
  br label %if.end20, !dbg !2962

if.end20:                                         ; preds = %if.else, %entry, %if.then19, %if.end17
  ret void, !dbg !2963
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #0 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  store i8* %file, i8** %file.addr, align 8
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  %0 = load %struct.hash_table** %ht.addr, align 8, !dbg !2964
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !2964
  br i1 %cmp, label %if.then, label %if.end, !dbg !2964

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, !dbg !2966
  br label %return, !dbg !2966

if.end:                                           ; preds = %entry
  %1 = load i8** %file.addr, align 8, !dbg !2967
  %name = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !2967
  store i8* %1, i8** %name, align 8, !dbg !2967
  %2 = load %struct.stat** %stats.addr, align 8, !dbg !2968
  %st_ino = getelementptr inbounds %struct.stat* %2, i32 0, i32 1, !dbg !2968
  %3 = load i64* %st_ino, align 8, !dbg !2968
  %st_ino1 = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !2968
  store i64 %3, i64* %st_ino1, align 8, !dbg !2968
  %4 = load %struct.stat** %stats.addr, align 8, !dbg !2969
  %st_dev = getelementptr inbounds %struct.stat* %4, i32 0, i32 0, !dbg !2969
  %5 = load i64* %st_dev, align 8, !dbg !2969
  %st_dev2 = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !2969
  store i64 %5, i64* %st_dev2, align 8, !dbg !2969
  %6 = load %struct.hash_table** %ht.addr, align 8, !dbg !2970
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !2970
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !2970
  %tobool = icmp ne i8* %call, null, !dbg !2970
  %lnot = xor i1 %tobool, true, !dbg !2970
  %lnot3 = xor i1 %lnot, true, !dbg !2970
  store i1 %lnot3, i1* %retval, !dbg !2970
  br label %return, !dbg !2970

return:                                           ; preds = %if.end, %if.then
  %8 = load i1* %retval, !dbg !2971
  ret i1 %8, !dbg !2971
}

; Function Attrs: nounwind uwtable
define internal void @klee_compatible_error107(i32 %status, i32* (...)* %__errno_location, i8* %format, ...) #0 {
entry:
  %status.addr = alloca i32, align 4
  %__errno_location.addr = alloca i32* (...)*, align 8
  %format.addr = alloca i8*, align 8
  %err_args = alloca [1 x %struct.__va_list_tag], align 16
  store i32 %status, i32* %status.addr, align 4
  store i32* (...)* %__errno_location, i32* (...)** %__errno_location.addr, align 8
  store i8* %format, i8** %format.addr, align 8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !2972
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !2972
  call void @llvm.va_start(i8* %arraydecay1), !dbg !2972
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !2973
  %1 = load i8** %format.addr, align 8, !dbg !2973
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !2973
  %call = call i32 @vfprintf(%struct._IO_FILE* %0, i8* %1, %struct.__va_list_tag* %arraydecay2), !dbg !2973
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !2974
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !2974
  call void @llvm.va_end(i8* %arraydecay34), !dbg !2974
  %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !2975
  %call5 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %2), !dbg !2975
  %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !2976
  %call6 = call i32 @fflush_unlocked(%struct._IO_FILE* %3), !dbg !2976
  %4 = load i32* %status.addr, align 4, !dbg !2977
  %tobool = icmp ne i32 %4, 0, !dbg !2977
  br i1 %tobool, label %if.then, label %if.end, !dbg !2977

if.then:                                          ; preds = %entry
  %5 = load i32* %status.addr, align 4, !dbg !2979
  call void @exit(i32 %5) #17, !dbg !2979
  unreachable, !dbg !2979

if.end:                                           ; preds = %entry
  ret void, !dbg !2981
}

; Function Attrs: nounwind uwtable
define void @forget_created(i64 %ino, i64 %dev) #0 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %probe = alloca %struct.Src_to_dest, align 8
  %ent = alloca %struct.Src_to_dest*, align 8
  store i64 %ino, i64* %ino.addr, align 8
  store i64 %dev, i64* %dev.addr, align 8
  %0 = load i64* %ino.addr, align 8, !dbg !2982
  %st_ino = getelementptr inbounds %struct.Src_to_dest* %probe, i32 0, i32 0, !dbg !2982
  store i64 %0, i64* %st_ino, align 8, !dbg !2982
  %1 = load i64* %dev.addr, align 8, !dbg !2983
  %st_dev = getelementptr inbounds %struct.Src_to_dest* %probe, i32 0, i32 1, !dbg !2983
  store i64 %1, i64* %st_dev, align 8, !dbg !2983
  %name = getelementptr inbounds %struct.Src_to_dest* %probe, i32 0, i32 2, !dbg !2984
  store i8* null, i8** %name, align 8, !dbg !2984
  %2 = load %struct.hash_table** @src_to_dest, align 8, !dbg !2985
  %3 = bitcast %struct.Src_to_dest* %probe to i8*, !dbg !2985
  %call = call i8* @hash_delete(%struct.hash_table* %2, i8* %3), !dbg !2985
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !2985
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %ent, align 8, !dbg !2985
  %5 = load %struct.Src_to_dest** %ent, align 8, !dbg !2986
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !2986
  br i1 %tobool, label %if.then, label %if.end, !dbg !2986

if.then:                                          ; preds = %entry
  %6 = load %struct.Src_to_dest** %ent, align 8, !dbg !2988
  %7 = bitcast %struct.Src_to_dest* %6 to i8*, !dbg !2988
  call void @src_to_dest_free(i8* %7), !dbg !2988
  br label %if.end, !dbg !2988

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2989
}

; Function Attrs: nounwind uwtable
define zeroext i1 @remember_created(i8* %file) #0 {
entry:
  %retval = alloca i1, align 1
  %file.addr = alloca i8*, align 8
  %sb = alloca %struct.stat, align 8
  store i8* %file, i8** %file.addr, align 8
  %0 = load i8** %file.addr, align 8, !dbg !2990
  %call = call i32 @stat(i8* %0, %struct.stat* %sb) #6, !dbg !2990
  %cmp = icmp slt i32 %call, 0, !dbg !2990
  br i1 %cmp, label %if.then, label %if.end, !dbg !2990

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #1, !dbg !2992
  %1 = load i32* %call1, align 4, !dbg !2992
  %2 = load i8** %file.addr, align 8, !dbg !2992
  %call2 = call i8* @quote(i8* %2), !dbg !2992
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 %1, i8* getelementptr inbounds ([3 x i8]* @.str108, i32 0, i32 0), i8* %call2), !dbg !2992
  store i1 false, i1* %retval, !dbg !2994
  br label %return, !dbg !2994

if.end:                                           ; preds = %entry
  %3 = load i8** %file.addr, align 8, !dbg !2995
  %st_ino = getelementptr inbounds %struct.stat* %sb, i32 0, i32 1, !dbg !2995
  %4 = load i64* %st_ino, align 8, !dbg !2995
  %st_dev = getelementptr inbounds %struct.stat* %sb, i32 0, i32 0, !dbg !2995
  %5 = load i64* %st_dev, align 8, !dbg !2995
  %call3 = call i8* @remember_copied(i8* %3, i64 %4, i64 %5), !dbg !2995
  store i1 true, i1* %retval, !dbg !2996
  br label %return, !dbg !2996

return:                                           ; preds = %if.end, %if.then
  %6 = load i1* %retval, !dbg !2997
  ret i1 %6, !dbg !2997
}

declare void @error(i32, i32, i8*, ...) #2

; Function Attrs: nounwind uwtable
define i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) #0 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest*, align 8
  %ent_from_table = alloca %struct.Src_to_dest*, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %ino, i64* %ino.addr, align 8
  store i64 %dev, i64* %dev.addr, align 8
  %call = call i8* @xmalloc(i64 24), !dbg !2998
  %0 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !2998
  store %struct.Src_to_dest* %0, %struct.Src_to_dest** %ent, align 8, !dbg !2998
  %1 = load i8** %name.addr, align 8, !dbg !2999
  %call1 = call i8* @xstrdup(i8* %1), !dbg !2999
  %2 = load %struct.Src_to_dest** %ent, align 8, !dbg !2999
  %name2 = getelementptr inbounds %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !2999
  store i8* %call1, i8** %name2, align 8, !dbg !2999
  %3 = load i64* %ino.addr, align 8, !dbg !3000
  %4 = load %struct.Src_to_dest** %ent, align 8, !dbg !3000
  %st_ino = getelementptr inbounds %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !3000
  store i64 %3, i64* %st_ino, align 8, !dbg !3000
  %5 = load i64* %dev.addr, align 8, !dbg !3001
  %6 = load %struct.Src_to_dest** %ent, align 8, !dbg !3001
  %st_dev = getelementptr inbounds %struct.Src_to_dest* %6, i32 0, i32 1, !dbg !3001
  store i64 %5, i64* %st_dev, align 8, !dbg !3001
  %7 = load %struct.hash_table** @src_to_dest, align 8, !dbg !3002
  %8 = load %struct.Src_to_dest** %ent, align 8, !dbg !3002
  %9 = bitcast %struct.Src_to_dest* %8 to i8*, !dbg !3002
  %call3 = call i8* @hash_insert(%struct.hash_table* %7, i8* %9), !dbg !3002
  %10 = bitcast i8* %call3 to %struct.Src_to_dest*, !dbg !3002
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !3002
  %11 = load %struct.Src_to_dest** %ent_from_table, align 8, !dbg !3003
  %cmp = icmp eq %struct.Src_to_dest* %11, null, !dbg !3003
  br i1 %cmp, label %if.then, label %if.end, !dbg !3003

if.then:                                          ; preds = %entry
  call void @xalloc_die() #19, !dbg !3005
  unreachable, !dbg !3005

if.end:                                           ; preds = %entry
  %12 = load %struct.Src_to_dest** %ent_from_table, align 8, !dbg !3007
  %13 = load %struct.Src_to_dest** %ent, align 8, !dbg !3007
  %cmp4 = icmp ne %struct.Src_to_dest* %12, %13, !dbg !3007
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !3007

if.then5:                                         ; preds = %if.end
  %14 = load %struct.Src_to_dest** %ent, align 8, !dbg !3009
  %15 = bitcast %struct.Src_to_dest* %14 to i8*, !dbg !3009
  call void @src_to_dest_free(i8* %15), !dbg !3009
  %16 = load %struct.Src_to_dest** %ent_from_table, align 8, !dbg !3011
  %name6 = getelementptr inbounds %struct.Src_to_dest* %16, i32 0, i32 2, !dbg !3011
  %17 = load i8** %name6, align 8, !dbg !3011
  store i8* %17, i8** %retval, !dbg !3011
  br label %return, !dbg !3011

if.end7:                                          ; preds = %if.end
  store i8* null, i8** %retval, !dbg !3012
  br label %return, !dbg !3012

return:                                           ; preds = %if.end7, %if.then5
  %18 = load i8** %retval, !dbg !3013
  ret i8* %18, !dbg !3013
}

; Function Attrs: nounwind uwtable
define i8* @src_to_dest_lookup(i64 %ino, i64 %dev) #0 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest, align 8
  %e = alloca %struct.Src_to_dest*, align 8
  store i64 %ino, i64* %ino.addr, align 8
  store i64 %dev, i64* %dev.addr, align 8
  %0 = load i64* %ino.addr, align 8, !dbg !3014
  %st_ino = getelementptr inbounds %struct.Src_to_dest* %ent, i32 0, i32 0, !dbg !3014
  store i64 %0, i64* %st_ino, align 8, !dbg !3014
  %1 = load i64* %dev.addr, align 8, !dbg !3015
  %st_dev = getelementptr inbounds %struct.Src_to_dest* %ent, i32 0, i32 1, !dbg !3015
  store i64 %1, i64* %st_dev, align 8, !dbg !3015
  %2 = load %struct.hash_table** @src_to_dest, align 8, !dbg !3016
  %3 = bitcast %struct.Src_to_dest* %ent to i8*, !dbg !3016
  %call = call i8* @hash_lookup(%struct.hash_table* %2, i8* %3), !dbg !3016
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !3016
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %e, align 8, !dbg !3016
  %5 = load %struct.Src_to_dest** %e, align 8, !dbg !3017
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !3017
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3017

cond.true:                                        ; preds = %entry
  %6 = load %struct.Src_to_dest** %e, align 8, !dbg !3017
  %name = getelementptr inbounds %struct.Src_to_dest* %6, i32 0, i32 2, !dbg !3017
  %7 = load i8** %name, align 8, !dbg !3017
  br label %cond.end, !dbg !3017

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %entry ], !dbg !3017
  ret i8* %cond, !dbg !3017
}

; Function Attrs: nounwind uwtable
define void @hash_init() #0 {
entry:
  %call = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free), !dbg !3018
  store %struct.hash_table* %call, %struct.hash_table** @src_to_dest, align 8, !dbg !3018
  %0 = load %struct.hash_table** @src_to_dest, align 8, !dbg !3019
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !3019
  br i1 %cmp, label %if.then, label %if.end, !dbg !3019

if.then:                                          ; preds = %entry
  call void @xalloc_die() #19, !dbg !3021
  unreachable, !dbg !3021

if.end:                                           ; preds = %entry
  ret void, !dbg !3022
}

; Function Attrs: nounwind uwtable
define void @forget_all() #0 {
entry:
  %0 = load %struct.hash_table** @src_to_dest, align 8, !dbg !3023
  call void @hash_free(%struct.hash_table* %0), !dbg !3023
  ret void, !dbg !3024
}

; Function Attrs: nounwind uwtable
define internal void @src_to_dest_free(i8* %x) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8
  store i8* %x, i8** %x.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !3025
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !3025
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !3025
  %2 = load %struct.Src_to_dest** %a, align 8, !dbg !3026
  %name = getelementptr inbounds %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !3026
  %3 = load i8** %name, align 8, !dbg !3026
  call void @free(i8* %3) #6, !dbg !3026
  %4 = load i8** %x.addr, align 8, !dbg !3027
  call void @free(i8* %4) #6, !dbg !3027
  ret void, !dbg !3028
}

; Function Attrs: nounwind uwtable
define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.Src_to_dest*, align 8
  store i8* %x, i8** %x.addr, align 8
  store i64 %table_size, i64* %table_size.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !3029
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !3029
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %p, align 8, !dbg !3029
  %2 = load %struct.Src_to_dest** %p, align 8, !dbg !3030
  %st_ino = getelementptr inbounds %struct.Src_to_dest* %2, i32 0, i32 0, !dbg !3030
  %3 = load i64* %st_ino, align 8, !dbg !3030
  %4 = load i64* %table_size.addr, align 8, !dbg !3030
  %int_cast_to_i64 = bitcast i64 %4 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !3030
  %rem = urem i64 %3, %4, !dbg !3030
  ret i64 %rem, !dbg !3030
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %x, i8* %y) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8
  %b = alloca %struct.Src_to_dest*, align 8
  store i8* %x, i8** %x.addr, align 8
  store i8* %y, i8** %y.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !3031
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !3031
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !3031
  %2 = load i8** %y.addr, align 8, !dbg !3032
  %3 = bitcast i8* %2 to %struct.Src_to_dest*, !dbg !3032
  store %struct.Src_to_dest* %3, %struct.Src_to_dest** %b, align 8, !dbg !3032
  %4 = load %struct.Src_to_dest** %a, align 8, !dbg !3033
  %st_ino = getelementptr inbounds %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !3033
  %5 = load i64* %st_ino, align 8, !dbg !3033
  %6 = load %struct.Src_to_dest** %b, align 8, !dbg !3033
  %st_ino1 = getelementptr inbounds %struct.Src_to_dest* %6, i32 0, i32 0, !dbg !3033
  %7 = load i64* %st_ino1, align 8, !dbg !3033
  %cmp = icmp eq i64 %5, %7, !dbg !3033
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3033

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Src_to_dest** %a, align 8, !dbg !3033
  %st_dev = getelementptr inbounds %struct.Src_to_dest* %8, i32 0, i32 1, !dbg !3033
  %9 = load i64* %st_dev, align 8, !dbg !3033
  %10 = load %struct.Src_to_dest** %b, align 8, !dbg !3033
  %st_dev2 = getelementptr inbounds %struct.Src_to_dest* %10, i32 0, i32 1, !dbg !3033
  %11 = load i64* %st_dev2, align 8, !dbg !3033
  %cmp3 = icmp eq i64 %9, %11, !dbg !3033
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ]
  %cond = select i1 %12, i32 1, i32 0
  %tobool = icmp ne i32 %cond, 0
  ret i1 %tobool, !dbg !3034
}

; Function Attrs: nounwind uwtable
define i64 @klee_change(i64 %x, i64 %y) #0 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %file = alloca i8*, align 8
  %marker_file = alloca i8*, align 8
  %f = alloca %struct._IO_FILE*, align 8
  store i64 %x, i64* %x.addr, align 8
  store i64 %y, i64* %y.addr, align 8
  %0 = load i64* %x.addr, align 8, !dbg !3035
  %1 = load i64* %y.addr, align 8, !dbg !3035
  %cmp = icmp eq i64 %0, %1, !dbg !3035
  br i1 %cmp, label %if.then, label %if.else, !dbg !3035

if.then:                                          ; preds = %entry
  %2 = load i64* %x.addr, align 8, !dbg !3037
  store i64 %2, i64* %retval, !dbg !3037
  br label %return, !dbg !3037

if.else:                                          ; preds = %entry
  %3 = load i32* @after_divergence, align 4, !dbg !3038
  %tobool = icmp ne i32 %3, 0, !dbg !3038
  br i1 %tobool, label %if.end29, label %if.then1, !dbg !3038

if.then1:                                         ; preds = %if.else
  %4 = load i8** @klee_div_file_env, align 8, !dbg !3041
  %call = call i8* @getenv(i8* %4) #6, !dbg !3041
  store i8* %call, i8** %file, align 8, !dbg !3041
  %5 = load i8** @klee_div_marker_file_env, align 8, !dbg !3043
  %call2 = call i8* @getenv(i8* %5) #6, !dbg !3043
  store i8* %call2, i8** %marker_file, align 8, !dbg !3043
  %6 = load i8** %file, align 8, !dbg !3044
  %tobool3 = icmp ne i8* %6, null, !dbg !3044
  br i1 %tobool3, label %if.then4, label %if.else26, !dbg !3044

if.then4:                                         ; preds = %if.then1
  %7 = load i8** %file, align 8, !dbg !3046
  %call5 = call %struct._IO_FILE* @fopen(i8* %7, i8* getelementptr inbounds ([2 x i8]* @.str2119, i32 0, i32 0)), !dbg !3046
  store %struct._IO_FILE* %call5, %struct._IO_FILE** %f, align 8, !dbg !3046
  %8 = load %struct._IO_FILE** %f, align 8, !dbg !3048
  %tobool6 = icmp ne %struct._IO_FILE* %8, null, !dbg !3048
  br i1 %tobool6, label %if.then7, label %if.else11, !dbg !3048

if.then7:                                         ; preds = %if.then4
  %9 = load %struct._IO_FILE** %f, align 8, !dbg !3050
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([3 x i8]* @.str3120, i32 0, i32 0)), !dbg !3050
  %10 = load %struct._IO_FILE** %f, align 8, !dbg !3052
  %call9 = call i32 @fflush_unlocked(%struct._IO_FILE* %10), !dbg !3052
  %11 = load %struct._IO_FILE** %f, align 8, !dbg !3053
  %call10 = call i32 @fclose(%struct._IO_FILE* %11), !dbg !3053
  br label %if.end, !dbg !3054

if.else11:                                        ; preds = %if.then4
  %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !3055
  %13 = load i8** %file, align 8, !dbg !3055
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([26 x i8]* @.str4121, i32 0, i32 0), i8* %13), !dbg !3055
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then7
  %14 = load i8** %marker_file, align 8, !dbg !3057
  %tobool13 = icmp ne i8* %14, null, !dbg !3057
  br i1 %tobool13, label %if.then14, label %if.else23, !dbg !3057

if.then14:                                        ; preds = %if.end
  %15 = load i8** %marker_file, align 8, !dbg !3059
  %call15 = call %struct._IO_FILE* @fopen(i8* %15, i8* getelementptr inbounds ([2 x i8]* @.str5122, i32 0, i32 0)), !dbg !3059
  store %struct._IO_FILE* %call15, %struct._IO_FILE** %f, align 8, !dbg !3059
  %16 = load %struct._IO_FILE** %f, align 8, !dbg !3061
  %tobool16 = icmp ne %struct._IO_FILE* %16, null, !dbg !3061
  br i1 %tobool16, label %if.then17, label %if.else20, !dbg !3061

if.then17:                                        ; preds = %if.then14
  %17 = load %struct._IO_FILE** %f, align 8, !dbg !3063
  %call18 = call i32 @fflush_unlocked(%struct._IO_FILE* %17), !dbg !3063
  %18 = load %struct._IO_FILE** %f, align 8, !dbg !3065
  %call19 = call i32 @fclose(%struct._IO_FILE* %18), !dbg !3065
  br label %if.end28, !dbg !3066

if.else20:                                        ; preds = %if.then14
  %19 = load %struct._IO_FILE** @stderr, align 8, !dbg !3067
  %20 = load i8** %file, align 8, !dbg !3067
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([26 x i8]* @.str4121, i32 0, i32 0), i8* %20), !dbg !3067
  br label %if.end28

if.else23:                                        ; preds = %if.end
  %21 = load %struct._IO_FILE** @stderr, align 8, !dbg !3069
  %22 = load i8** @klee_div_marker_file_env, align 8, !dbg !3069
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([26 x i8]* @.str6123, i32 0, i32 0), i8* %22), !dbg !3069
  br label %if.end28

if.else26:                                        ; preds = %if.then1
  %23 = load %struct._IO_FILE** @stderr, align 8, !dbg !3071
  %24 = load i8** @klee_div_file_env, align 8, !dbg !3071
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([26 x i8]* @.str6123, i32 0, i32 0), i8* %24), !dbg !3071
  br label %if.end28

if.end28:                                         ; preds = %if.else23, %if.else20, %if.then17, %if.else26
  store i32 1, i32* @after_divergence, align 4, !dbg !3073
  br label %if.end29, !dbg !3074

if.end29:                                         ; preds = %if.end28, %if.else
  %25 = load i64* %y.addr, align 8, !dbg !3075
  store i64 %25, i64* %retval, !dbg !3075
  br label %return, !dbg !3075

return:                                           ; preds = %if.end29, %if.then
  %26 = load i64* %retval, !dbg !3076
  ret i64 %26, !dbg !3076
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define i32 @klee_get_true() #9 {
entry:
  ret i32 1, !dbg !3077
}

; Function Attrs: noinline nounwind uwtable
define i32 @klee_get_false() #9 {
entry:
  ret i32 0, !dbg !3079
}

; Function Attrs: nounwind uwtable
define i32 @rm(i64 %n_files, i8** %file, %struct.rm_options* %x) #0 {
entry:
  %n_files.addr = alloca i64, align 8
  %file.addr = alloca i8**, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %status = alloca i32, align 4
  %ds = alloca %struct.dirstack_state*, align 8
  %cwd_errno = alloca i32, align 4
  %i = alloca i64, align 8
  %s = alloca i32, align 4
  store i64 %n_files, i64* %n_files.addr, align 8
  store i8** %file, i8*** %file.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32 2, i32* %status, align 4, !dbg !3080
  %call = call %struct.dirstack_state* @ds_init(), !dbg !3082
  store %struct.dirstack_state* %call, %struct.dirstack_state** %ds, align 8, !dbg !3082
  store i32 0, i32* %cwd_errno, align 4, !dbg !3083
  store i64 0, i64* %i, align 8, !dbg !3084
  br label %for.cond, !dbg !3084

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64* %i, align 8, !dbg !3084
  %1 = load i64* %n_files.addr, align 8, !dbg !3084
  %cmp = icmp ult i64 %0, %1, !dbg !3084
  br i1 %cmp, label %for.body, label %for.end, !dbg !3084

for.body:                                         ; preds = %for.cond
  %2 = load i32* %cwd_errno, align 4, !dbg !3086
  %tobool = icmp ne i32 %2, 0, !dbg !3086
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !3086

land.lhs.true:                                    ; preds = %for.body
  %3 = load i64* %i, align 8, !dbg !3086
  %4 = load i8*** %file.addr, align 8, !dbg !3086
  %arrayidx = getelementptr inbounds i8** %4, i64 %3, !dbg !3086
  %5 = load i8** %arrayidx, align 8, !dbg !3086
  %arrayidx1 = getelementptr inbounds i8* %5, i64 0, !dbg !3086
  %6 = load i8* %arrayidx1, align 1, !dbg !3086
  %conv = sext i8 %6 to i32, !dbg !3086
  %cmp2 = icmp eq i32 %conv, 47, !dbg !3086
  br i1 %cmp2, label %if.else, label %if.then, !dbg !3086

if.then:                                          ; preds = %land.lhs.true
  %7 = load i64* %i, align 8, !dbg !3089
  %8 = load i8*** %file.addr, align 8, !dbg !3089
  %arrayidx4 = getelementptr inbounds i8** %8, i64 %7, !dbg !3089
  %9 = load i8** %arrayidx4, align 8, !dbg !3089
  %call5 = call i8* @quote(i8* %9), !dbg !3089
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* null, i8* getelementptr inbounds ([32 x i8]* @.str7124, i32 0, i32 0), i8* %call5), !dbg !3089
  store i32 4, i32* %status, align 4, !dbg !3091
  br label %for.inc, !dbg !3092

if.else:                                          ; preds = %land.lhs.true, %for.body
  %10 = load %struct.dirstack_state** %ds, align 8, !dbg !3093
  %11 = load i64* %i, align 8, !dbg !3093
  %12 = load i8*** %file.addr, align 8, !dbg !3093
  %arrayidx6 = getelementptr inbounds i8** %12, i64 %11, !dbg !3093
  %13 = load i8** %arrayidx6, align 8, !dbg !3093
  %14 = load %struct.rm_options** %x.addr, align 8, !dbg !3093
  %call7 = call i32 @rm_1(%struct.dirstack_state* %10, i8* %13, %struct.rm_options* %14, i32* %cwd_errno), !dbg !3093
  store i32 %call7, i32* %s, align 4, !dbg !3093
  %15 = load i32* %s, align 4, !dbg !3095
  %cmp8 = icmp eq i32 %15, 2, !dbg !3095
  %16 = load i32* %s, align 4, !dbg !3095
  %cmp10 = icmp eq i32 %16, 3, !dbg !3095
  %or.cond = or i1 %cmp8, %cmp10, !dbg !3095
  %17 = load i32* %s, align 4, !dbg !3095
  %cmp13 = icmp eq i32 %17, 4, !dbg !3095
  %or.cond1 = or i1 %or.cond, %cmp13, !dbg !3095
  br i1 %or.cond1, label %do.body, label %cond.false, !dbg !3095

cond.false:                                       ; preds = %if.else
  call void @__assert_fail(i8* getelementptr inbounds ([61 x i8]* @.str8125, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 1648, i8* getelementptr inbounds ([74 x i8]* @__PRETTY_FUNCTION__.rm, i32 0, i32 0)) #17, !dbg
  unreachable, !dbg !3095

do.body:                                          ; preds = %if.else
  %18 = load i32* %s, align 4, !dbg !3096
  %cmp15 = icmp eq i32 %18, 4, !dbg !3096
  br i1 %cmp15, label %if.then23, label %lor.lhs.false17, !dbg !3096

lor.lhs.false17:                                  ; preds = %do.body
  %19 = load i32* %s, align 4, !dbg !3096
  %cmp18 = icmp eq i32 %19, 3, !dbg !3096
  %20 = load i32* %status, align 4, !dbg !3096
  %cmp21 = icmp eq i32 %20, 2, !dbg !3096
  %or.cond2 = and i1 %cmp18, %cmp21, !dbg !3096
  br i1 %or.cond2, label %if.then23, label %for.inc, !dbg !3096

if.then23:                                        ; preds = %lor.lhs.false17, %do.body
  %21 = load i32* %s, align 4, !dbg !3096
  store i32 %21, i32* %status, align 4, !dbg !3096
  br label %for.inc, !dbg !3096

for.inc:                                          ; preds = %if.then, %lor.lhs.false17, %if.then23
  %22 = load i64* %i, align 8, !dbg !3084
  %inc = add i64 %22, 1, !dbg !3084
  store i64 %inc, i64* %i, align 8, !dbg !3084
  br label %for.cond, !dbg !3084

for.end:                                          ; preds = %for.cond
  %23 = load %struct.rm_options** %x.addr, align 8, !dbg !3099
  %require_restore_cwd = getelementptr inbounds %struct.rm_options* %23, i32 0, i32 7, !dbg !3099
  %24 = load i8* %require_restore_cwd, align 1, !dbg !3099
  %tobool25 = trunc i8 %24 to i1, !dbg !3099
  %25 = load i32* %cwd_errno, align 4, !dbg !3099
  %tobool28 = icmp ne i32 %25, 0, !dbg !3099
  %or.cond3 = and i1 %tobool25, %tobool28, !dbg !3099
  br i1 %or.cond3, label %if.then29, label %if.end31, !dbg !3099

if.then29:                                        ; preds = %for.end
  %26 = load i32* %cwd_errno, align 4, !dbg !3101
  %conv30 = sext i32 %26 to i64, !dbg !3101
  %27 = inttoptr i64 %conv30 to i32* (...)*, !dbg !3101
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %27, i8* getelementptr inbounds ([41 x i8]* @.str10127, i32 0, i32 0)), !dbg !3101
  store i32 4, i32* %status, align 4, !dbg !3103
  br label %if.end31, !dbg !3104

if.end31:                                         ; preds = %if.then29, %for.end
  %28 = load %struct.dirstack_state** %ds, align 8, !dbg !3105
  call void @ds_free(%struct.dirstack_state* %28), !dbg !3105
  %29 = load i32* %status, align 4, !dbg !3106
  ret i32 %29, !dbg !3106
}

declare void @obstack_free(%struct.obstack*, i8*) #2

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) #10

declare void @_obstack_newchunk(%struct.obstack*, i32) #2

; Function Attrs: nounwind
declare i32 @unlinkat(i32, i8*, i32) #4

; Function Attrs: nounwind
declare i32 @dirfd(%struct.__dirstream*) #4

declare %struct.__dirstream* @fdopendir(i32) #2

; Function Attrs: noreturn nounwind
declare void @longjmp(%struct.__jmp_buf_tag*, i32) #3

declare i32 @closedir(%struct.__dirstream*) #2

declare i32 @openat(i32, i8*, i32, ...) #2

declare %struct.dirent* @readdir(%struct.__dirstream*) #2

; Function Attrs: noreturn nounwind
declare void @abort() #3

; Function Attrs: nounwind
declare void @rewinddir(%struct.__dirstream*) #4

declare i32 @fcntl(i32, i32, ...) #2

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #4

; Function Attrs: nounwind
declare i32 @fstatat(i32, i8*, %struct.stat*, i32) #4

declare i32 @_obstack_begin(%struct.obstack*, i32, i32, i8* (i64)*, void (i8*)*) #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

; Function Attrs: nounwind uwtable
define internal %struct.dirstack_state* @ds_init() #0 {
entry:
  %ds = alloca %struct.dirstack_state*, align 8
  %call = call i8* @xmalloc(i64 496), !dbg !3107
  %0 = bitcast i8* %call to %struct.dirstack_state*, !dbg !3107
  store %struct.dirstack_state* %0, %struct.dirstack_state** %ds, align 8, !dbg !3107
  %1 = load %struct.dirstack_state** %ds, align 8, !dbg !3108
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %1, i32 0, i32 0, !dbg !3108
  %call1 = call i32 @_obstack_begin(%struct.obstack* %dir_stack, i32 0, i32 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !3108
  %2 = load %struct.dirstack_state** %ds, align 8, !dbg !3109
  %len_stack = getelementptr inbounds %struct.dirstack_state* %2, i32 0, i32 1, !dbg !3109
  %call2 = call i32 @_obstack_begin(%struct.obstack* %len_stack, i32 0, i32 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !3109
  %3 = load %struct.dirstack_state** %ds, align 8, !dbg !3110
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %3, i32 0, i32 2, !dbg !3110
  %call3 = call i32 @_obstack_begin(%struct.obstack* %Active_dir, i32 0, i32 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !3110
  %4 = load %struct.dirstack_state** %ds, align 8, !dbg !3111
  ret %struct.dirstack_state* %4, !dbg !3111
}

; Function Attrs: nounwind uwtable
define internal void @klee_compatible_error171(i32 %status, i32* (...)* %__errno_location, i8* %format, ...) #0 {
entry:
  %status.addr = alloca i32, align 4
  %__errno_location.addr = alloca i32* (...)*, align 8
  %format.addr = alloca i8*, align 8
  %err_args = alloca [1 x %struct.__va_list_tag], align 16
  store i32 %status, i32* %status.addr, align 4
  store i32* (...)* %__errno_location, i32* (...)** %__errno_location.addr, align 8
  store i8* %format, i8** %format.addr, align 8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !3112
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !3112
  call void @llvm.va_start(i8* %arraydecay1), !dbg !3112
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !3114
  %1 = load i8** %format.addr, align 8, !dbg !3114
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !3114
  %call = call i32 @vfprintf(%struct._IO_FILE* %0, i8* %1, %struct.__va_list_tag* %arraydecay2), !dbg !3114
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !3115
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !3115
  call void @llvm.va_end(i8* %arraydecay34), !dbg !3115
  %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !3116
  %call5 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %2), !dbg !3116
  %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !3117
  %call6 = call i32 @fflush_unlocked(%struct._IO_FILE* %3), !dbg !3117
  %4 = load i32* %status.addr, align 4, !dbg !3118
  %tobool = icmp ne i32 %4, 0, !dbg !3118
  br i1 %tobool, label %if.then, label %if.end, !dbg !3118

if.then:                                          ; preds = %entry
  %5 = load i32* %status.addr, align 4, !dbg !3120
  call void @exit(i32 %5) #17, !dbg !3120
  unreachable, !dbg !3120

if.end:                                           ; preds = %entry
  ret void, !dbg !3122
}

; Function Attrs: nounwind uwtable
define internal i32 @rm_1(%struct.dirstack_state* %ds, i8* %filename, %struct.rm_options* %x, i32* %cwd_errno) #0 {
entry:
  %retval = alloca i32, align 4
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %filename.addr = alloca i8*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %cwd_errno.addr = alloca i32*, align 8
  %base = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  %status29 = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32* %cwd_errno, i32** %cwd_errno.addr, align 8
  %0 = load i8** %filename.addr, align 8, !dbg !3123
  %call = call i8* @last_component(i8* %0), !dbg !3123
  store i8* %call, i8** %base, align 8, !dbg !3123
  %1 = load i8** %base, align 8, !dbg !3124
  %call1 = call zeroext i1 @dot_or_dotdot172(i8* %1), !dbg !3124
  br i1 %call1, label %if.then, label %if.end, !dbg !3124

if.then:                                          ; preds = %entry
  %2 = load i8** %base, align 8, !dbg !3126
  %3 = load i8** %filename.addr, align 8, !dbg !3126
  %cmp = icmp eq i8* %2, %3, !dbg !3126
  %cond = select i1 %cmp, i8* getelementptr inbounds ([27 x i8]* @.str11128, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @.str12129, i32 0, i32 0), !dbg !3126
  %4 = load i8** %base, align 8, !dbg !3128
  %call2 = call i8* @quote_n(i32 0, i8* %4), !dbg !3128
  %5 = load i8** %filename.addr, align 8, !dbg !3128
  %call3 = call i8* @quote_n(i32 1, i8* %5), !dbg !3128
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* null, i8* %cond, i8* %call2, i8* %call3), !dbg !3126
  store i32 4, i32* %retval, !dbg !3129
  br label %return, !dbg !3129

if.end:                                           ; preds = %entry
  %call4 = call %struct.stat* @cache_stat_init(%struct.stat* %st), !dbg !3130
  %6 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3131
  %cycle_check_state = getelementptr inbounds %struct.dirstack_state* %6, i32 0, i32 3, !dbg !3131
  call void @cycle_check_init(%struct.cycle_check_state* %cycle_check_state), !dbg !3131
  %7 = load %struct.rm_options** %x.addr, align 8, !dbg !3132
  %root_dev_ino = getelementptr inbounds %struct.rm_options* %7, i32 0, i32 4, !dbg !3132
  %8 = load %struct.dev_ino** %root_dev_ino, align 8, !dbg !3132
  %tobool = icmp ne %struct.dev_ino* %8, null, !dbg !3132
  br i1 %tobool, label %if.then5, label %if.end27, !dbg !3132

if.then5:                                         ; preds = %if.end
  %9 = load i8** %filename.addr, align 8, !dbg !3134
  %call6 = call i32 @cache_fstatat(i32 -100, i8* %9, %struct.stat* %st, i32 256), !dbg !3134
  %cmp7 = icmp ne i32 %call6, 0, !dbg !3134
  br i1 %cmp7, label %if.then8, label %if.end15, !dbg !3134

if.then8:                                         ; preds = %if.then5
  %10 = load %struct.rm_options** %x.addr, align 8, !dbg !3137
  %call9 = call i32* @__errno_location() #1, !dbg !3140
  %11 = load i32* %call9, align 4, !dbg !3140
  %call10 = call zeroext i1 @ignorable_missing(%struct.rm_options* %10, i32 %11), !dbg !3137
  br i1 %call10, label %if.then11, label %if.end12, !dbg !3137

if.then11:                                        ; preds = %if.then8
  store i32 2, i32* %retval, !dbg !3141
  br label %return, !dbg !3141

if.end12:                                         ; preds = %if.then8
  %call13 = call i32* @__errno_location() #1, !dbg !3142
  %12 = load i32* %call13, align 4, !dbg !3142
  %conv = sext i32 %12 to i64, !dbg !3142
  %13 = inttoptr i64 %conv to i32* (...)*, !dbg !3142
  %14 = load i8** %filename.addr, align 8, !dbg !3142
  %call14 = call i8* @quote(i8* %14), !dbg !3142
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %13, i8* getelementptr inbounds ([17 x i8]* @.str13130, i32 0, i32 0), i8* %call14), !dbg !3142
  store i32 4, i32* %retval, !dbg !3143
  br label %return, !dbg !3143

if.end15:                                         ; preds = %if.then5
  %st_ino = getelementptr inbounds %struct.stat* %st, i32 0, i32 1, !dbg !3144
  %15 = load i64* %st_ino, align 8, !dbg !3144
  %16 = load %struct.rm_options** %x.addr, align 8, !dbg !3144
  %root_dev_ino16 = getelementptr inbounds %struct.rm_options* %16, i32 0, i32 4, !dbg !3144
  %17 = load %struct.dev_ino** %root_dev_ino16, align 8, !dbg !3144
  %st_ino17 = getelementptr inbounds %struct.dev_ino* %17, i32 0, i32 0, !dbg !3144
  %18 = load i64* %st_ino17, align 8, !dbg !3144
  %cmp18 = icmp eq i64 %15, %18, !dbg !3144
  br i1 %cmp18, label %land.lhs.true, label %if.end27, !dbg !3144

land.lhs.true:                                    ; preds = %if.end15
  %st_dev = getelementptr inbounds %struct.stat* %st, i32 0, i32 0, !dbg !3144
  %19 = load i64* %st_dev, align 8, !dbg !3144
  %20 = load %struct.rm_options** %x.addr, align 8, !dbg !3144
  %root_dev_ino20 = getelementptr inbounds %struct.rm_options* %20, i32 0, i32 4, !dbg !3144
  %21 = load %struct.dev_ino** %root_dev_ino20, align 8, !dbg !3144
  %st_dev21 = getelementptr inbounds %struct.dev_ino* %21, i32 0, i32 1, !dbg !3144
  %22 = load i64* %st_dev21, align 8, !dbg !3144
  %cmp22 = icmp eq i64 %19, %22, !dbg !3144
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !3144

if.then24:                                        ; preds = %land.lhs.true
  %23 = load i8** %filename.addr, align 8, !dbg !3146
  %call25 = call i8* @quote(i8* %23), !dbg !3146
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* null, i8* getelementptr inbounds ([32 x i8]* @.str14131, i32 0, i32 0), i8* %call25), !dbg !3146
  store i32 4, i32* %retval, !dbg !3148
  br label %return, !dbg !3148

if.end27:                                         ; preds = %if.end15, %land.lhs.true, %if.end
  %24 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3149
  call void @AD_push_initial(%struct.dirstack_state* %24), !dbg !3149
  %25 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3150
  %call28 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %25), !dbg !3150
  %status = getelementptr inbounds %struct.AD_ent* %call28, i32 0, i32 1, !dbg !3150
  store i32 2, i32* %status, align 4, !dbg !3150
  %26 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3152
  %27 = load i8** %filename.addr, align 8, !dbg !3152
  %28 = load %struct.rm_options** %x.addr, align 8, !dbg !3152
  %call30 = call i32 @remove_entry(i32 -100, %struct.dirstack_state* %26, i8* %27, %struct.stat* %st, %struct.rm_options* %28, %struct.dirent* null), !dbg !3152
  store i32 %call30, i32* %status29, align 4, !dbg !3152
  %29 = load i32* %status29, align 4, !dbg !3153
  %cmp31 = icmp eq i32 %29, 5, !dbg !3153
  br i1 %cmp31, label %if.then33, label %if.end39, !dbg !3153

if.then33:                                        ; preds = %if.end27
  %30 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3155
  %current_arg_jumpbuf = getelementptr inbounds %struct.dirstack_state* %30, i32 0, i32 4, !dbg !3155
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag]* %current_arg_jumpbuf, i32 0, i32 0, !dbg !3155
  %call34 = call i32 @_setjmp(%struct.__jmp_buf_tag* %arraydecay) #20, !dbg !3155
  %tobool35 = icmp ne i32 %call34, 0, !dbg !3155
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !3155

if.then36:                                        ; preds = %if.then33
  store i32 4, i32* %status29, align 4, !dbg !3158
  br label %if.end38, !dbg !3158

if.else:                                          ; preds = %if.then33
  %31 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3159
  %32 = load i8** %filename.addr, align 8, !dbg !3159
  %33 = load %struct.rm_options** %x.addr, align 8, !dbg !3159
  %34 = load i32** %cwd_errno.addr, align 8, !dbg !3159
  %call37 = call i32 @remove_dir(i32 -100, %struct.dirstack_state* %31, i8* %32, %struct.stat* %st, %struct.rm_options* %33, i32* %34), !dbg !3159
  store i32 %call37, i32* %status29, align 4, !dbg !3159
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then36
  %35 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3160
  call void @AD_stack_clear(%struct.dirstack_state* %35), !dbg !3160
  br label %if.end39, !dbg !3161

if.end39:                                         ; preds = %if.end38, %if.end27
  %36 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3162
  call void @ds_clear(%struct.dirstack_state* %36), !dbg !3162
  %37 = load i32* %status29, align 4, !dbg !3163
  store i32 %37, i32* %retval, !dbg !3163
  br label %return, !dbg !3163

return:                                           ; preds = %if.end39, %if.then24, %if.end12, %if.then11, %if.then
  %38 = load i32* %retval, !dbg !3164
  ret i32 %38, !dbg !3164
}

; Function Attrs: nounwind uwtable
define internal void @ds_free(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__obj = alloca i8*, align 8
  %__o2 = alloca %struct.obstack*, align 8
  %__obj3 = alloca i8*, align 8
  %__o14 = alloca %struct.obstack*, align 8
  %__obj15 = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3165
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 0, !dbg !3165
  store %struct.obstack* %dir_stack, %struct.obstack** %__o, align 8, !dbg !3165
  store i8* null, i8** %__obj, align 8, !dbg !3165
  %1 = load i8** %__obj, align 8, !dbg !3167
  %2 = load %struct.obstack** %__o, align 8, !dbg !3167
  %chunk = getelementptr inbounds %struct.obstack* %2, i32 0, i32 1, !dbg !3167
  %3 = load %struct._obstack_chunk** %chunk, align 8, !dbg !3167
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !3167
  %cmp = icmp ugt i8* %1, %4, !dbg !3167
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3167

land.lhs.true:                                    ; preds = %entry
  %5 = load i8** %__obj, align 8, !dbg !3167
  %6 = load %struct.obstack** %__o, align 8, !dbg !3167
  %chunk_limit = getelementptr inbounds %struct.obstack* %6, i32 0, i32 4, !dbg !3167
  %7 = load i8** %chunk_limit, align 8, !dbg !3167
  %cmp1 = icmp ult i8* %5, %7, !dbg !3167
  br i1 %cmp1, label %if.then, label %if.else, !dbg !3167

if.then:                                          ; preds = %land.lhs.true
  %8 = load i8** %__obj, align 8, !dbg !3167
  %9 = load %struct.obstack** %__o, align 8, !dbg !3167
  %object_base = getelementptr inbounds %struct.obstack* %9, i32 0, i32 2, !dbg !3167
  store i8* %8, i8** %object_base, align 8, !dbg !3167
  %10 = load %struct.obstack** %__o, align 8, !dbg !3167
  %next_free = getelementptr inbounds %struct.obstack* %10, i32 0, i32 3, !dbg !3167
  store i8* %8, i8** %next_free, align 8, !dbg !3167
  br label %if.end, !dbg !3167

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.obstack** %__o, align 8, !dbg !3167
  %12 = load i8** %__obj, align 8, !dbg !3167
  call void @obstack_free(%struct.obstack* %11, i8* %12), !dbg !3167
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3169
  %len_stack = getelementptr inbounds %struct.dirstack_state* %13, i32 0, i32 1, !dbg !3169
  store %struct.obstack* %len_stack, %struct.obstack** %__o2, align 8, !dbg !3169
  store i8* null, i8** %__obj3, align 8, !dbg !3169
  %14 = load i8** %__obj3, align 8, !dbg !3171
  %15 = load %struct.obstack** %__o2, align 8, !dbg !3171
  %chunk4 = getelementptr inbounds %struct.obstack* %15, i32 0, i32 1, !dbg !3171
  %16 = load %struct._obstack_chunk** %chunk4, align 8, !dbg !3171
  %17 = bitcast %struct._obstack_chunk* %16 to i8*, !dbg !3171
  %cmp5 = icmp ugt i8* %14, %17, !dbg !3171
  br i1 %cmp5, label %land.lhs.true6, label %if.else12, !dbg !3171

land.lhs.true6:                                   ; preds = %if.end
  %18 = load i8** %__obj3, align 8, !dbg !3171
  %19 = load %struct.obstack** %__o2, align 8, !dbg !3171
  %chunk_limit7 = getelementptr inbounds %struct.obstack* %19, i32 0, i32 4, !dbg !3171
  %20 = load i8** %chunk_limit7, align 8, !dbg !3171
  %cmp8 = icmp ult i8* %18, %20, !dbg !3171
  br i1 %cmp8, label %if.then9, label %if.else12, !dbg !3171

if.then9:                                         ; preds = %land.lhs.true6
  %21 = load i8** %__obj3, align 8, !dbg !3171
  %22 = load %struct.obstack** %__o2, align 8, !dbg !3171
  %object_base10 = getelementptr inbounds %struct.obstack* %22, i32 0, i32 2, !dbg !3171
  store i8* %21, i8** %object_base10, align 8, !dbg !3171
  %23 = load %struct.obstack** %__o2, align 8, !dbg !3171
  %next_free11 = getelementptr inbounds %struct.obstack* %23, i32 0, i32 3, !dbg !3171
  store i8* %21, i8** %next_free11, align 8, !dbg !3171
  br label %if.end13, !dbg !3171

if.else12:                                        ; preds = %land.lhs.true6, %if.end
  %24 = load %struct.obstack** %__o2, align 8, !dbg !3171
  %25 = load i8** %__obj3, align 8, !dbg !3171
  call void @obstack_free(%struct.obstack* %24, i8* %25), !dbg !3171
  br label %if.end13

if.end13:                                         ; preds = %if.else12, %if.then9
  %26 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3173
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %26, i32 0, i32 2, !dbg !3173
  store %struct.obstack* %Active_dir, %struct.obstack** %__o14, align 8, !dbg !3173
  store i8* null, i8** %__obj15, align 8, !dbg !3173
  %27 = load i8** %__obj15, align 8, !dbg !3175
  %28 = load %struct.obstack** %__o14, align 8, !dbg !3175
  %chunk16 = getelementptr inbounds %struct.obstack* %28, i32 0, i32 1, !dbg !3175
  %29 = load %struct._obstack_chunk** %chunk16, align 8, !dbg !3175
  %30 = bitcast %struct._obstack_chunk* %29 to i8*, !dbg !3175
  %cmp17 = icmp ugt i8* %27, %30, !dbg !3175
  br i1 %cmp17, label %land.lhs.true18, label %if.else24, !dbg !3175

land.lhs.true18:                                  ; preds = %if.end13
  %31 = load i8** %__obj15, align 8, !dbg !3175
  %32 = load %struct.obstack** %__o14, align 8, !dbg !3175
  %chunk_limit19 = getelementptr inbounds %struct.obstack* %32, i32 0, i32 4, !dbg !3175
  %33 = load i8** %chunk_limit19, align 8, !dbg !3175
  %cmp20 = icmp ult i8* %31, %33, !dbg !3175
  br i1 %cmp20, label %if.then21, label %if.else24, !dbg !3175

if.then21:                                        ; preds = %land.lhs.true18
  %34 = load i8** %__obj15, align 8, !dbg !3175
  %35 = load %struct.obstack** %__o14, align 8, !dbg !3175
  %object_base22 = getelementptr inbounds %struct.obstack* %35, i32 0, i32 2, !dbg !3175
  store i8* %34, i8** %object_base22, align 8, !dbg !3175
  %36 = load %struct.obstack** %__o14, align 8, !dbg !3175
  %next_free23 = getelementptr inbounds %struct.obstack* %36, i32 0, i32 3, !dbg !3175
  store i8* %34, i8** %next_free23, align 8, !dbg !3175
  br label %if.end25, !dbg !3175

if.else24:                                        ; preds = %land.lhs.true18, %if.end13
  %37 = load %struct.obstack** %__o14, align 8, !dbg !3175
  %38 = load i8** %__obj15, align 8, !dbg !3175
  call void @obstack_free(%struct.obstack* %37, i8* %38), !dbg !3175
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then21
  %39 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3177
  %40 = bitcast %struct.dirstack_state* %39 to i8*, !dbg !3177
  call void @free(i8* %40) #6, !dbg !3177
  ret void, !dbg !3178
}

; Function Attrs: nounwind uwtable
define internal void @ds_clear(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__obj = alloca i8*, align 8
  %__o1 = alloca %struct.obstack*, align 8
  %__value = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %__o32 = alloca %struct.obstack*, align 8
  %__obj34 = alloca i8*, align 8
  %__o136 = alloca %struct.obstack*, align 8
  %__value39 = alloca i8*, align 8
  %tmp80 = alloca i8*, align 8
  %__o96 = alloca %struct.obstack*, align 8
  %__obj98 = alloca i8*, align 8
  %__o1100 = alloca %struct.obstack*, align 8
  %__value103 = alloca i8*, align 8
  %tmp144 = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3179
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 0, !dbg !3179
  store %struct.obstack* %dir_stack, %struct.obstack** %__o, align 8, !dbg !3179
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3181
  %dir_stack1 = getelementptr inbounds %struct.dirstack_state* %1, i32 0, i32 0, !dbg !3181
  store %struct.obstack* %dir_stack1, %struct.obstack** %__o1, align 8, !dbg !3181
  %2 = load %struct.obstack** %__o1, align 8, !dbg !3181
  %object_base = getelementptr inbounds %struct.obstack* %2, i32 0, i32 2, !dbg !3181
  %3 = load i8** %object_base, align 8, !dbg !3181
  store i8* %3, i8** %__value, align 8, !dbg !3181
  %4 = load %struct.obstack** %__o1, align 8, !dbg !3183
  %next_free = getelementptr inbounds %struct.obstack* %4, i32 0, i32 3, !dbg !3183
  %5 = load i8** %next_free, align 8, !dbg !3183
  %6 = load i8** %__value, align 8, !dbg !3183
  %cmp = icmp eq i8* %5, %6, !dbg !3183
  br i1 %cmp, label %if.then, label %if.end, !dbg !3183

if.then:                                          ; preds = %entry
  %7 = load %struct.obstack** %__o1, align 8, !dbg !3183
  %maybe_empty_object = getelementptr inbounds %struct.obstack* %7, i32 0, i32 10, !dbg !3183
  %bf.load = load i8* %maybe_empty_object, align 8, !dbg !3183
  %bf.clear = and i8 %bf.load, -3, !dbg !3183
  %bf.set = or i8 %bf.clear, 2, !dbg !3183
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !3183
  br label %if.end, !dbg !3183

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.obstack** %__o1, align 8, !dbg !3181
  %next_free2 = getelementptr inbounds %struct.obstack* %8, i32 0, i32 3, !dbg !3181
  %9 = load i8** %next_free2, align 8, !dbg !3181
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i64, !dbg !3181
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, 0, !dbg !3181
  %10 = load %struct.obstack** %__o1, align 8, !dbg !3181
  %alignment_mask = getelementptr inbounds %struct.obstack* %10, i32 0, i32 6, !dbg !3181
  %11 = load i32* %alignment_mask, align 4, !dbg !3181
  %conv = sext i32 %11 to i64, !dbg !3181
  %add = add nsw i64 %sub.ptr.sub, %conv, !dbg !3181
  %12 = load %struct.obstack** %__o1, align 8, !dbg !3181
  %alignment_mask3 = getelementptr inbounds %struct.obstack* %12, i32 0, i32 6, !dbg !3181
  %13 = load i32* %alignment_mask3, align 4, !dbg !3181
  %neg = xor i32 %13, -1, !dbg !3181
  %conv4 = sext i32 %neg to i64, !dbg !3181
  %and = and i64 %add, %conv4, !dbg !3181
  %add.ptr = getelementptr inbounds i8* null, i64 %and, !dbg !3181
  %14 = load %struct.obstack** %__o1, align 8, !dbg !3181
  %next_free5 = getelementptr inbounds %struct.obstack* %14, i32 0, i32 3, !dbg !3181
  store i8* %add.ptr, i8** %next_free5, align 8, !dbg !3181
  %15 = load %struct.obstack** %__o1, align 8, !dbg !3185
  %next_free6 = getelementptr inbounds %struct.obstack* %15, i32 0, i32 3, !dbg !3185
  %16 = load i8** %next_free6, align 8, !dbg !3185
  %17 = load %struct.obstack** %__o1, align 8, !dbg !3185
  %chunk = getelementptr inbounds %struct.obstack* %17, i32 0, i32 1, !dbg !3185
  %18 = load %struct._obstack_chunk** %chunk, align 8, !dbg !3185
  %19 = bitcast %struct._obstack_chunk* %18 to i8*, !dbg !3185
  %sub.ptr.lhs.cast7 = ptrtoint i8* %16 to i64, !dbg !3185
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !3185
  %sub.ptr.sub8 = sub i64 %sub.ptr.lhs.cast7, %sub.ptr.rhs.cast, !dbg !3185
  %20 = load %struct.obstack** %__o1, align 8, !dbg !3185
  %chunk_limit = getelementptr inbounds %struct.obstack* %20, i32 0, i32 4, !dbg !3185
  %21 = load i8** %chunk_limit, align 8, !dbg !3185
  %22 = load %struct.obstack** %__o1, align 8, !dbg !3185
  %chunk9 = getelementptr inbounds %struct.obstack* %22, i32 0, i32 1, !dbg !3185
  %23 = load %struct._obstack_chunk** %chunk9, align 8, !dbg !3185
  %24 = bitcast %struct._obstack_chunk* %23 to i8*, !dbg !3185
  %sub.ptr.lhs.cast10 = ptrtoint i8* %21 to i64, !dbg !3185
  %sub.ptr.rhs.cast11 = ptrtoint i8* %24 to i64, !dbg !3185
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !3185
  %cmp13 = icmp sgt i64 %sub.ptr.sub8, %sub.ptr.sub12, !dbg !3185
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !3185

if.then15:                                        ; preds = %if.end
  %25 = load %struct.obstack** %__o1, align 8, !dbg !3185
  %chunk_limit16 = getelementptr inbounds %struct.obstack* %25, i32 0, i32 4, !dbg !3185
  %26 = load i8** %chunk_limit16, align 8, !dbg !3185
  %27 = load %struct.obstack** %__o1, align 8, !dbg !3185
  %next_free17 = getelementptr inbounds %struct.obstack* %27, i32 0, i32 3, !dbg !3185
  store i8* %26, i8** %next_free17, align 8, !dbg !3185
  br label %if.end18, !dbg !3185

if.end18:                                         ; preds = %if.then15, %if.end
  %28 = load %struct.obstack** %__o1, align 8, !dbg !3181
  %next_free19 = getelementptr inbounds %struct.obstack* %28, i32 0, i32 3, !dbg !3181
  %29 = load i8** %next_free19, align 8, !dbg !3181
  %30 = load %struct.obstack** %__o1, align 8, !dbg !3181
  %object_base20 = getelementptr inbounds %struct.obstack* %30, i32 0, i32 2, !dbg !3181
  store i8* %29, i8** %object_base20, align 8, !dbg !3181
  %31 = load i8** %__value, align 8, !dbg !3181
  store i8* %31, i8** %tmp, !dbg !3181
  %32 = load i8** %tmp, !dbg !3181
  store i8* %32, i8** %__obj, align 8, !dbg !3181
  %33 = load i8** %__obj, align 8, !dbg !3187
  %34 = load %struct.obstack** %__o, align 8, !dbg !3187
  %chunk21 = getelementptr inbounds %struct.obstack* %34, i32 0, i32 1, !dbg !3187
  %35 = load %struct._obstack_chunk** %chunk21, align 8, !dbg !3187
  %36 = bitcast %struct._obstack_chunk* %35 to i8*, !dbg !3187
  %cmp22 = icmp ugt i8* %33, %36, !dbg !3187
  br i1 %cmp22, label %land.lhs.true, label %if.else, !dbg !3187

land.lhs.true:                                    ; preds = %if.end18
  %37 = load i8** %__obj, align 8, !dbg !3187
  %38 = load %struct.obstack** %__o, align 8, !dbg !3187
  %chunk_limit24 = getelementptr inbounds %struct.obstack* %38, i32 0, i32 4, !dbg !3187
  %39 = load i8** %chunk_limit24, align 8, !dbg !3187
  %cmp25 = icmp ult i8* %37, %39, !dbg !3187
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !3187

if.then27:                                        ; preds = %land.lhs.true
  %40 = load i8** %__obj, align 8, !dbg !3187
  %41 = load %struct.obstack** %__o, align 8, !dbg !3187
  %object_base28 = getelementptr inbounds %struct.obstack* %41, i32 0, i32 2, !dbg !3187
  store i8* %40, i8** %object_base28, align 8, !dbg !3187
  %42 = load %struct.obstack** %__o, align 8, !dbg !3187
  %next_free29 = getelementptr inbounds %struct.obstack* %42, i32 0, i32 3, !dbg !3187
  store i8* %40, i8** %next_free29, align 8, !dbg !3187
  br label %if.end30, !dbg !3187

if.else:                                          ; preds = %land.lhs.true, %if.end18
  %43 = load %struct.obstack** %__o, align 8, !dbg !3187
  %44 = load i8** %__obj, align 8, !dbg !3187
  call void @obstack_free(%struct.obstack* %43, i8* %44), !dbg !3187
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then27
  %45 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3189
  %len_stack = getelementptr inbounds %struct.dirstack_state* %45, i32 0, i32 1, !dbg !3189
  store %struct.obstack* %len_stack, %struct.obstack** %__o32, align 8, !dbg !3189
  %46 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3191
  %len_stack37 = getelementptr inbounds %struct.dirstack_state* %46, i32 0, i32 1, !dbg !3191
  store %struct.obstack* %len_stack37, %struct.obstack** %__o136, align 8, !dbg !3191
  %47 = load %struct.obstack** %__o136, align 8, !dbg !3191
  %object_base40 = getelementptr inbounds %struct.obstack* %47, i32 0, i32 2, !dbg !3191
  %48 = load i8** %object_base40, align 8, !dbg !3191
  store i8* %48, i8** %__value39, align 8, !dbg !3191
  %49 = load %struct.obstack** %__o136, align 8, !dbg !3193
  %next_free41 = getelementptr inbounds %struct.obstack* %49, i32 0, i32 3, !dbg !3193
  %50 = load i8** %next_free41, align 8, !dbg !3193
  %51 = load i8** %__value39, align 8, !dbg !3193
  %cmp42 = icmp eq i8* %50, %51, !dbg !3193
  br i1 %cmp42, label %if.then44, label %if.end49, !dbg !3193

if.then44:                                        ; preds = %if.end30
  %52 = load %struct.obstack** %__o136, align 8, !dbg !3193
  %maybe_empty_object45 = getelementptr inbounds %struct.obstack* %52, i32 0, i32 10, !dbg !3193
  %bf.load46 = load i8* %maybe_empty_object45, align 8, !dbg !3193
  %bf.clear47 = and i8 %bf.load46, -3, !dbg !3193
  %bf.set48 = or i8 %bf.clear47, 2, !dbg !3193
  store i8 %bf.set48, i8* %maybe_empty_object45, align 8, !dbg !3193
  br label %if.end49, !dbg !3193

if.end49:                                         ; preds = %if.then44, %if.end30
  %53 = load %struct.obstack** %__o136, align 8, !dbg !3191
  %next_free50 = getelementptr inbounds %struct.obstack* %53, i32 0, i32 3, !dbg !3191
  %54 = load i8** %next_free50, align 8, !dbg !3191
  %sub.ptr.lhs.cast51 = ptrtoint i8* %54 to i64, !dbg !3191
  %sub.ptr.sub52 = sub i64 %sub.ptr.lhs.cast51, 0, !dbg !3191
  %55 = load %struct.obstack** %__o136, align 8, !dbg !3191
  %alignment_mask53 = getelementptr inbounds %struct.obstack* %55, i32 0, i32 6, !dbg !3191
  %56 = load i32* %alignment_mask53, align 4, !dbg !3191
  %conv54 = sext i32 %56 to i64, !dbg !3191
  %add55 = add nsw i64 %sub.ptr.sub52, %conv54, !dbg !3191
  %57 = load %struct.obstack** %__o136, align 8, !dbg !3191
  %alignment_mask56 = getelementptr inbounds %struct.obstack* %57, i32 0, i32 6, !dbg !3191
  %58 = load i32* %alignment_mask56, align 4, !dbg !3191
  %neg57 = xor i32 %58, -1, !dbg !3191
  %conv58 = sext i32 %neg57 to i64, !dbg !3191
  %and59 = and i64 %add55, %conv58, !dbg !3191
  %add.ptr60 = getelementptr inbounds i8* null, i64 %and59, !dbg !3191
  %59 = load %struct.obstack** %__o136, align 8, !dbg !3191
  %next_free61 = getelementptr inbounds %struct.obstack* %59, i32 0, i32 3, !dbg !3191
  store i8* %add.ptr60, i8** %next_free61, align 8, !dbg !3191
  %60 = load %struct.obstack** %__o136, align 8, !dbg !3195
  %next_free62 = getelementptr inbounds %struct.obstack* %60, i32 0, i32 3, !dbg !3195
  %61 = load i8** %next_free62, align 8, !dbg !3195
  %62 = load %struct.obstack** %__o136, align 8, !dbg !3195
  %chunk63 = getelementptr inbounds %struct.obstack* %62, i32 0, i32 1, !dbg !3195
  %63 = load %struct._obstack_chunk** %chunk63, align 8, !dbg !3195
  %64 = bitcast %struct._obstack_chunk* %63 to i8*, !dbg !3195
  %sub.ptr.lhs.cast64 = ptrtoint i8* %61 to i64, !dbg !3195
  %sub.ptr.rhs.cast65 = ptrtoint i8* %64 to i64, !dbg !3195
  %sub.ptr.sub66 = sub i64 %sub.ptr.lhs.cast64, %sub.ptr.rhs.cast65, !dbg !3195
  %65 = load %struct.obstack** %__o136, align 8, !dbg !3195
  %chunk_limit67 = getelementptr inbounds %struct.obstack* %65, i32 0, i32 4, !dbg !3195
  %66 = load i8** %chunk_limit67, align 8, !dbg !3195
  %67 = load %struct.obstack** %__o136, align 8, !dbg !3195
  %chunk68 = getelementptr inbounds %struct.obstack* %67, i32 0, i32 1, !dbg !3195
  %68 = load %struct._obstack_chunk** %chunk68, align 8, !dbg !3195
  %69 = bitcast %struct._obstack_chunk* %68 to i8*, !dbg !3195
  %sub.ptr.lhs.cast69 = ptrtoint i8* %66 to i64, !dbg !3195
  %sub.ptr.rhs.cast70 = ptrtoint i8* %69 to i64, !dbg !3195
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !3195
  %cmp72 = icmp sgt i64 %sub.ptr.sub66, %sub.ptr.sub71, !dbg !3195
  br i1 %cmp72, label %if.then74, label %if.end77, !dbg !3195

if.then74:                                        ; preds = %if.end49
  %70 = load %struct.obstack** %__o136, align 8, !dbg !3195
  %chunk_limit75 = getelementptr inbounds %struct.obstack* %70, i32 0, i32 4, !dbg !3195
  %71 = load i8** %chunk_limit75, align 8, !dbg !3195
  %72 = load %struct.obstack** %__o136, align 8, !dbg !3195
  %next_free76 = getelementptr inbounds %struct.obstack* %72, i32 0, i32 3, !dbg !3195
  store i8* %71, i8** %next_free76, align 8, !dbg !3195
  br label %if.end77, !dbg !3195

if.end77:                                         ; preds = %if.then74, %if.end49
  %73 = load %struct.obstack** %__o136, align 8, !dbg !3191
  %next_free78 = getelementptr inbounds %struct.obstack* %73, i32 0, i32 3, !dbg !3191
  %74 = load i8** %next_free78, align 8, !dbg !3191
  %75 = load %struct.obstack** %__o136, align 8, !dbg !3191
  %object_base79 = getelementptr inbounds %struct.obstack* %75, i32 0, i32 2, !dbg !3191
  store i8* %74, i8** %object_base79, align 8, !dbg !3191
  %76 = load i8** %__value39, align 8, !dbg !3191
  store i8* %76, i8** %tmp80, !dbg !3191
  %77 = load i8** %tmp80, !dbg !3191
  store i8* %77, i8** %__obj34, align 8, !dbg !3191
  %78 = load i8** %__obj34, align 8, !dbg !3197
  %79 = load %struct.obstack** %__o32, align 8, !dbg !3197
  %chunk81 = getelementptr inbounds %struct.obstack* %79, i32 0, i32 1, !dbg !3197
  %80 = load %struct._obstack_chunk** %chunk81, align 8, !dbg !3197
  %81 = bitcast %struct._obstack_chunk* %80 to i8*, !dbg !3197
  %cmp82 = icmp ugt i8* %78, %81, !dbg !3197
  br i1 %cmp82, label %land.lhs.true84, label %if.else91, !dbg !3197

land.lhs.true84:                                  ; preds = %if.end77
  %82 = load i8** %__obj34, align 8, !dbg !3197
  %83 = load %struct.obstack** %__o32, align 8, !dbg !3197
  %chunk_limit85 = getelementptr inbounds %struct.obstack* %83, i32 0, i32 4, !dbg !3197
  %84 = load i8** %chunk_limit85, align 8, !dbg !3197
  %cmp86 = icmp ult i8* %82, %84, !dbg !3197
  br i1 %cmp86, label %if.then88, label %if.else91, !dbg !3197

if.then88:                                        ; preds = %land.lhs.true84
  %85 = load i8** %__obj34, align 8, !dbg !3197
  %86 = load %struct.obstack** %__o32, align 8, !dbg !3197
  %object_base89 = getelementptr inbounds %struct.obstack* %86, i32 0, i32 2, !dbg !3197
  store i8* %85, i8** %object_base89, align 8, !dbg !3197
  %87 = load %struct.obstack** %__o32, align 8, !dbg !3197
  %next_free90 = getelementptr inbounds %struct.obstack* %87, i32 0, i32 3, !dbg !3197
  store i8* %85, i8** %next_free90, align 8, !dbg !3197
  br label %while.cond, !dbg !3197

if.else91:                                        ; preds = %land.lhs.true84, %if.end77
  %88 = load %struct.obstack** %__o32, align 8, !dbg !3197
  %89 = load i8** %__obj34, align 8, !dbg !3197
  call void @obstack_free(%struct.obstack* %88, i8* %89), !dbg !3197
  br label %while.cond

while.cond:                                       ; preds = %if.then88, %if.else91, %while.body
  %90 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3199
  %call = call i64 @AD_stack_height(%struct.dirstack_state* %90), !dbg !3199
  %cmp93 = icmp ult i64 0, %call, !dbg !3199
  %91 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3200
  br i1 %cmp93, label %while.body, label %while.end, !dbg !3199

while.body:                                       ; preds = %while.cond
  call void @AD_stack_pop(%struct.dirstack_state* %91), !dbg !3200
  br label %while.cond, !dbg !3200

while.end:                                        ; preds = %while.cond
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %91, i32 0, i32 2, !dbg !3201
  store %struct.obstack* %Active_dir, %struct.obstack** %__o96, align 8, !dbg !3201
  %92 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3203
  %Active_dir101 = getelementptr inbounds %struct.dirstack_state* %92, i32 0, i32 2, !dbg !3203
  store %struct.obstack* %Active_dir101, %struct.obstack** %__o1100, align 8, !dbg !3203
  %93 = load %struct.obstack** %__o1100, align 8, !dbg !3203
  %object_base104 = getelementptr inbounds %struct.obstack* %93, i32 0, i32 2, !dbg !3203
  %94 = load i8** %object_base104, align 8, !dbg !3203
  store i8* %94, i8** %__value103, align 8, !dbg !3203
  %95 = load %struct.obstack** %__o1100, align 8, !dbg !3205
  %next_free105 = getelementptr inbounds %struct.obstack* %95, i32 0, i32 3, !dbg !3205
  %96 = load i8** %next_free105, align 8, !dbg !3205
  %97 = load i8** %__value103, align 8, !dbg !3205
  %cmp106 = icmp eq i8* %96, %97, !dbg !3205
  br i1 %cmp106, label %if.then108, label %if.end113, !dbg !3205

if.then108:                                       ; preds = %while.end
  %98 = load %struct.obstack** %__o1100, align 8, !dbg !3205
  %maybe_empty_object109 = getelementptr inbounds %struct.obstack* %98, i32 0, i32 10, !dbg !3205
  %bf.load110 = load i8* %maybe_empty_object109, align 8, !dbg !3205
  %bf.clear111 = and i8 %bf.load110, -3, !dbg !3205
  %bf.set112 = or i8 %bf.clear111, 2, !dbg !3205
  store i8 %bf.set112, i8* %maybe_empty_object109, align 8, !dbg !3205
  br label %if.end113, !dbg !3205

if.end113:                                        ; preds = %if.then108, %while.end
  %99 = load %struct.obstack** %__o1100, align 8, !dbg !3203
  %next_free114 = getelementptr inbounds %struct.obstack* %99, i32 0, i32 3, !dbg !3203
  %100 = load i8** %next_free114, align 8, !dbg !3203
  %sub.ptr.lhs.cast115 = ptrtoint i8* %100 to i64, !dbg !3203
  %sub.ptr.sub116 = sub i64 %sub.ptr.lhs.cast115, 0, !dbg !3203
  %101 = load %struct.obstack** %__o1100, align 8, !dbg !3203
  %alignment_mask117 = getelementptr inbounds %struct.obstack* %101, i32 0, i32 6, !dbg !3203
  %102 = load i32* %alignment_mask117, align 4, !dbg !3203
  %conv118 = sext i32 %102 to i64, !dbg !3203
  %add119 = add nsw i64 %sub.ptr.sub116, %conv118, !dbg !3203
  %103 = load %struct.obstack** %__o1100, align 8, !dbg !3203
  %alignment_mask120 = getelementptr inbounds %struct.obstack* %103, i32 0, i32 6, !dbg !3203
  %104 = load i32* %alignment_mask120, align 4, !dbg !3203
  %neg121 = xor i32 %104, -1, !dbg !3203
  %conv122 = sext i32 %neg121 to i64, !dbg !3203
  %and123 = and i64 %add119, %conv122, !dbg !3203
  %add.ptr124 = getelementptr inbounds i8* null, i64 %and123, !dbg !3203
  %105 = load %struct.obstack** %__o1100, align 8, !dbg !3203
  %next_free125 = getelementptr inbounds %struct.obstack* %105, i32 0, i32 3, !dbg !3203
  store i8* %add.ptr124, i8** %next_free125, align 8, !dbg !3203
  %106 = load %struct.obstack** %__o1100, align 8, !dbg !3207
  %next_free126 = getelementptr inbounds %struct.obstack* %106, i32 0, i32 3, !dbg !3207
  %107 = load i8** %next_free126, align 8, !dbg !3207
  %108 = load %struct.obstack** %__o1100, align 8, !dbg !3207
  %chunk127 = getelementptr inbounds %struct.obstack* %108, i32 0, i32 1, !dbg !3207
  %109 = load %struct._obstack_chunk** %chunk127, align 8, !dbg !3207
  %110 = bitcast %struct._obstack_chunk* %109 to i8*, !dbg !3207
  %sub.ptr.lhs.cast128 = ptrtoint i8* %107 to i64, !dbg !3207
  %sub.ptr.rhs.cast129 = ptrtoint i8* %110 to i64, !dbg !3207
  %sub.ptr.sub130 = sub i64 %sub.ptr.lhs.cast128, %sub.ptr.rhs.cast129, !dbg !3207
  %111 = load %struct.obstack** %__o1100, align 8, !dbg !3207
  %chunk_limit131 = getelementptr inbounds %struct.obstack* %111, i32 0, i32 4, !dbg !3207
  %112 = load i8** %chunk_limit131, align 8, !dbg !3207
  %113 = load %struct.obstack** %__o1100, align 8, !dbg !3207
  %chunk132 = getelementptr inbounds %struct.obstack* %113, i32 0, i32 1, !dbg !3207
  %114 = load %struct._obstack_chunk** %chunk132, align 8, !dbg !3207
  %115 = bitcast %struct._obstack_chunk* %114 to i8*, !dbg !3207
  %sub.ptr.lhs.cast133 = ptrtoint i8* %112 to i64, !dbg !3207
  %sub.ptr.rhs.cast134 = ptrtoint i8* %115 to i64, !dbg !3207
  %sub.ptr.sub135 = sub i64 %sub.ptr.lhs.cast133, %sub.ptr.rhs.cast134, !dbg !3207
  %cmp136 = icmp sgt i64 %sub.ptr.sub130, %sub.ptr.sub135, !dbg !3207
  br i1 %cmp136, label %if.then138, label %if.end141, !dbg !3207

if.then138:                                       ; preds = %if.end113
  %116 = load %struct.obstack** %__o1100, align 8, !dbg !3207
  %chunk_limit139 = getelementptr inbounds %struct.obstack* %116, i32 0, i32 4, !dbg !3207
  %117 = load i8** %chunk_limit139, align 8, !dbg !3207
  %118 = load %struct.obstack** %__o1100, align 8, !dbg !3207
  %next_free140 = getelementptr inbounds %struct.obstack* %118, i32 0, i32 3, !dbg !3207
  store i8* %117, i8** %next_free140, align 8, !dbg !3207
  br label %if.end141, !dbg !3207

if.end141:                                        ; preds = %if.then138, %if.end113
  %119 = load %struct.obstack** %__o1100, align 8, !dbg !3203
  %next_free142 = getelementptr inbounds %struct.obstack* %119, i32 0, i32 3, !dbg !3203
  %120 = load i8** %next_free142, align 8, !dbg !3203
  %121 = load %struct.obstack** %__o1100, align 8, !dbg !3203
  %object_base143 = getelementptr inbounds %struct.obstack* %121, i32 0, i32 2, !dbg !3203
  store i8* %120, i8** %object_base143, align 8, !dbg !3203
  %122 = load i8** %__value103, align 8, !dbg !3203
  store i8* %122, i8** %tmp144, !dbg !3203
  %123 = load i8** %tmp144, !dbg !3203
  store i8* %123, i8** %__obj98, align 8, !dbg !3203
  %124 = load i8** %__obj98, align 8, !dbg !3209
  %125 = load %struct.obstack** %__o96, align 8, !dbg !3209
  %chunk145 = getelementptr inbounds %struct.obstack* %125, i32 0, i32 1, !dbg !3209
  %126 = load %struct._obstack_chunk** %chunk145, align 8, !dbg !3209
  %127 = bitcast %struct._obstack_chunk* %126 to i8*, !dbg !3209
  %cmp146 = icmp ugt i8* %124, %127, !dbg !3209
  br i1 %cmp146, label %land.lhs.true148, label %if.else155, !dbg !3209

land.lhs.true148:                                 ; preds = %if.end141
  %128 = load i8** %__obj98, align 8, !dbg !3209
  %129 = load %struct.obstack** %__o96, align 8, !dbg !3209
  %chunk_limit149 = getelementptr inbounds %struct.obstack* %129, i32 0, i32 4, !dbg !3209
  %130 = load i8** %chunk_limit149, align 8, !dbg !3209
  %cmp150 = icmp ult i8* %128, %130, !dbg !3209
  br i1 %cmp150, label %if.then152, label %if.else155, !dbg !3209

if.then152:                                       ; preds = %land.lhs.true148
  %131 = load i8** %__obj98, align 8, !dbg !3209
  %132 = load %struct.obstack** %__o96, align 8, !dbg !3209
  %object_base153 = getelementptr inbounds %struct.obstack* %132, i32 0, i32 2, !dbg !3209
  store i8* %131, i8** %object_base153, align 8, !dbg !3209
  %133 = load %struct.obstack** %__o96, align 8, !dbg !3209
  %next_free154 = getelementptr inbounds %struct.obstack* %133, i32 0, i32 3, !dbg !3209
  store i8* %131, i8** %next_free154, align 8, !dbg !3209
  br label %if.end156, !dbg !3209

if.else155:                                       ; preds = %land.lhs.true148, %if.end141
  %134 = load %struct.obstack** %__o96, align 8, !dbg !3209
  %135 = load i8** %__obj98, align 8, !dbg !3209
  call void @obstack_free(%struct.obstack* %134, i8* %135), !dbg !3209
  br label %if.end156

if.end156:                                        ; preds = %if.else155, %if.then152
  ret void, !dbg !3211
}

; Function Attrs: nounwind uwtable
define internal void @AD_stack_pop(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %top = alloca %struct.AD_ent*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3212
  %call = call i64 @AD_stack_height(%struct.dirstack_state* %0), !dbg !3212
  %cmp = icmp ult i64 0, %call, !dbg !3212
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !3212

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8]* @.str15132, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 389, i8* getelementptr inbounds ([36 x i8]* @__PRETTY_FUNCTION__.AD_stack_pop, i32 0, i32 0))
  unreachable, !dbg !3212

cond.end:                                         ; preds = %entry
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3213
  %call1 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %1), !dbg !3213
  store %struct.AD_ent* %call1, %struct.AD_ent** %top, align 8, !dbg !3213
  %2 = load %struct.AD_ent** %top, align 8, !dbg !3214
  %unremovable = getelementptr inbounds %struct.AD_ent* %2, i32 0, i32 0, !dbg !3214
  %3 = load %struct.hash_table** %unremovable, align 8, !dbg !3214
  %tobool = icmp ne %struct.hash_table* %3, null, !dbg !3214
  br i1 %tobool, label %if.then, label %if.end, !dbg !3214

if.then:                                          ; preds = %cond.end
  %4 = load %struct.AD_ent** %top, align 8, !dbg !3216
  %unremovable2 = getelementptr inbounds %struct.AD_ent* %4, i32 0, i32 0, !dbg !3216
  %5 = load %struct.hash_table** %unremovable2, align 8, !dbg !3216
  call void @hash_free(%struct.hash_table* %5), !dbg !3216
  br label %if.end, !dbg !3216

if.end:                                           ; preds = %if.then, %cond.end
  %6 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3217
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %6, i32 0, i32 2, !dbg !3217
  store %struct.obstack* %Active_dir, %struct.obstack** %__o, align 8, !dbg !3217
  store i32 -32, i32* %__len, align 4, !dbg !3217
  %7 = load %struct.obstack** %__o, align 8, !dbg !3219
  %chunk_limit = getelementptr inbounds %struct.obstack* %7, i32 0, i32 4, !dbg !3219
  %8 = load i8** %chunk_limit, align 8, !dbg !3219
  %9 = load %struct.obstack** %__o, align 8, !dbg !3219
  %next_free = getelementptr inbounds %struct.obstack* %9, i32 0, i32 3, !dbg !3219
  %10 = load i8** %next_free, align 8, !dbg !3219
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !3219
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64, !dbg !3219
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3219
  %11 = load i32* %__len, align 4, !dbg !3219
  %conv = sext i32 %11 to i64, !dbg !3219
  %cmp3 = icmp slt i64 %sub.ptr.sub, %conv, !dbg !3219
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !3219

if.then5:                                         ; preds = %if.end
  %12 = load %struct.obstack** %__o, align 8, !dbg !3219
  %13 = load i32* %__len, align 4, !dbg !3219
  call void @_obstack_newchunk(%struct.obstack* %12, i32 %13), !dbg !3219
  br label %if.end6, !dbg !3219

if.end6:                                          ; preds = %if.then5, %if.end
  %14 = load i32* %__len, align 4, !dbg !3217
  %15 = load %struct.obstack** %__o, align 8, !dbg !3217
  %next_free7 = getelementptr inbounds %struct.obstack* %15, i32 0, i32 3, !dbg !3217
  %16 = load i8** %next_free7, align 8, !dbg !3217
  %idx.ext = sext i32 %14 to i64, !dbg !3217
  %add.ptr = getelementptr inbounds i8* %16, i64 %idx.ext, !dbg !3217
  store i8* %add.ptr, i8** %next_free7, align 8, !dbg !3217
  ret void, !dbg !3221
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @AD_stack_height(%struct.dirstack_state* %ds) #8 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %__o = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3222
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 2, !dbg !3222
  store %struct.obstack* %Active_dir, %struct.obstack** %__o, align 8, !dbg !3222
  %1 = load %struct.obstack** %__o, align 8, !dbg !3222
  %next_free = getelementptr inbounds %struct.obstack* %1, i32 0, i32 3, !dbg !3222
  %2 = load i8** %next_free, align 8, !dbg !3222
  %3 = load %struct.obstack** %__o, align 8, !dbg !3222
  %object_base = getelementptr inbounds %struct.obstack* %3, i32 0, i32 2, !dbg !3222
  %4 = load i8** %object_base, align 8, !dbg !3222
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !3222
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !3222
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3222
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3222
  store i32 %conv, i32* %tmp, !dbg !3222
  %5 = load i32* %tmp, !dbg !3222
  %conv1 = zext i32 %5 to i64, !dbg !3222
  %int_cast_to_i64 = bitcast i64 32 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !3222
  %div = udiv i64 %conv1, 32, !dbg !3222
  ret i64 %div, !dbg !3222
}

; Function Attrs: nounwind uwtable
define internal void @AD_stack_clear(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  br label %while.cond, !dbg !3224

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3225
  %call = call i64 @AD_stack_height(%struct.dirstack_state* %0), !dbg !3225
  %cmp = icmp ult i64 0, %call, !dbg !3225
  br i1 %cmp, label %while.body, label %while.end, !dbg !3225

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3226
  call void @AD_stack_pop(%struct.dirstack_state* %1), !dbg !3226
  br label %while.cond, !dbg !3228

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3229
}

; Function Attrs: nounwind uwtable
define internal i32 @remove_dir(i32 %fd_cwd, %struct.dirstack_state* %ds, i8* %dir, %struct.stat* %dir_st, %struct.rm_options* %x, i32* %cwd_errno) #0 {
entry:
  %retval = alloca i32, align 4
  %fd_cwd.addr = alloca i32, align 4
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %dir.addr = alloca i8*, align 8
  %dir_st.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %cwd_errno.addr = alloca i32*, align 8
  %status = alloca i32, align 4
  %current_dev = alloca i64, align 8
  %dirp = alloca %struct.__dirstream*, align 8
  %saved_errno = alloca i32, align 4
  %subdir = alloca i8*, align 8
  %subdir_sb = alloca %struct.stat, align 8
  %tmp_status = alloca i32, align 4
  %fd = alloca i32, align 4
  %empty_dir = alloca i8*, align 8
  %empty_st = alloca %struct.stat, align 8
  %is_empty = alloca i32, align 4
  %s = alloca i32, align 4
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %dir, i8** %dir.addr, align 8
  store %struct.stat* %dir_st, %struct.stat** %dir_st.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32* %cwd_errno, i32** %cwd_errno.addr, align 8
  %0 = load %struct.stat** %dir_st.addr, align 8, !dbg !3230
  %st_dev = getelementptr inbounds %struct.stat* %0, i32 0, i32 0, !dbg !3230
  %1 = load i64* %st_dev, align 8, !dbg !3230
  store i64 %1, i64* %current_dev, align 8, !dbg !3230
  %2 = load i32* %fd_cwd.addr, align 4, !dbg !3231
  %3 = load i8** %dir.addr, align 8, !dbg !3231
  %4 = load %struct.rm_options** %x.addr, align 8, !dbg !3231
  %5 = load %struct.stat** %dir_st.addr, align 8, !dbg !3231
  %6 = load i32** %cwd_errno.addr, align 8, !dbg !3231
  %call = call %struct.__dirstream* @fd_to_subdirp(i32 %2, i8* %3, %struct.rm_options* %4, i32 0, %struct.stat* %5, i32* %6), !dbg !3231
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !3231
  %7 = load %struct.__dirstream** %dirp, align 8, !dbg !3232
  %cmp = icmp eq %struct.__dirstream* %7, null, !dbg !3232
  %8 = load %struct.rm_options** %x.addr, align 8, !dbg !3234
  br i1 %cmp, label %if.then, label %if.end11, !dbg !3232

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #1, !dbg !3237
  %9 = load i32* %call1, align 4, !dbg !3237
  %call2 = call zeroext i1 @ignorable_missing(%struct.rm_options* %8, i32 %9), !dbg !3234
  br i1 %call2, label %if.end10, label %if.else, !dbg !3234

if.else:                                          ; preds = %if.then
  %call4 = call i32* @__errno_location() #1, !dbg !3238
  %10 = load i32* %call4, align 4, !dbg !3238
  store i32 %10, i32* %saved_errno, align 4, !dbg !3238
  %11 = load i32* %fd_cwd.addr, align 4, !dbg !3240
  %12 = load i8** %dir.addr, align 8, !dbg !3240
  %call5 = call i32 @unlinkat(i32 %11, i8* %12, i32 512) #6, !dbg !3240
  %cmp6 = icmp eq i32 %call5, 0, !dbg !3240
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !3240

if.then7:                                         ; preds = %if.else
  store i32 2, i32* %retval, !dbg !3242
  br label %return, !dbg !3242

if.end:                                           ; preds = %if.else
  %13 = load i32* %saved_errno, align 4, !dbg !3243
  %conv = sext i32 %13 to i64, !dbg !3243
  %14 = inttoptr i64 %conv to i32* (...)*, !dbg !3243
  %15 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3243
  %16 = load i8** %dir.addr, align 8, !dbg !3243
  %call8 = call i8* @full_filename_(%struct.dirstack_state* %15, i8* %16), !dbg !3243
  %call9 = call i8* @quote(i8* %call8), !dbg !3243
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %14, i8* getelementptr inbounds ([17 x i8]* @.str13130, i32 0, i32 0), i8* %call9), !dbg !3243
  br label %if.end10

if.end10:                                         ; preds = %if.then, %if.end
  store i32 4, i32* %retval, !dbg !3244
  br label %return, !dbg !3244

if.end11:                                         ; preds = %entry
  %root_dev_ino = getelementptr inbounds %struct.rm_options* %8, i32 0, i32 4, !dbg !3245
  %17 = load %struct.dev_ino** %root_dev_ino, align 8, !dbg !3245
  %tobool = icmp ne %struct.dev_ino* %17, null, !dbg !3245
  br i1 %tobool, label %land.lhs.true, label %if.end35, !dbg !3245

land.lhs.true:                                    ; preds = %if.end11
  %18 = load %struct.stat** %dir_st.addr, align 8, !dbg !3245
  %st_ino = getelementptr inbounds %struct.stat* %18, i32 0, i32 1, !dbg !3245
  %19 = load i64* %st_ino, align 8, !dbg !3245
  %20 = load %struct.rm_options** %x.addr, align 8, !dbg !3245
  %root_dev_ino12 = getelementptr inbounds %struct.rm_options* %20, i32 0, i32 4, !dbg !3245
  %21 = load %struct.dev_ino** %root_dev_ino12, align 8, !dbg !3245
  %st_ino13 = getelementptr inbounds %struct.dev_ino* %21, i32 0, i32 0, !dbg !3245
  %22 = load i64* %st_ino13, align 8, !dbg !3245
  %cmp14 = icmp eq i64 %19, %22, !dbg !3245
  br i1 %cmp14, label %land.lhs.true16, label %if.end35, !dbg !3245

land.lhs.true16:                                  ; preds = %land.lhs.true
  %23 = load %struct.stat** %dir_st.addr, align 8, !dbg !3245
  %st_dev17 = getelementptr inbounds %struct.stat* %23, i32 0, i32 0, !dbg !3245
  %24 = load i64* %st_dev17, align 8, !dbg !3245
  %25 = load %struct.rm_options** %x.addr, align 8, !dbg !3245
  %root_dev_ino18 = getelementptr inbounds %struct.rm_options* %25, i32 0, i32 4, !dbg !3245
  %26 = load %struct.dev_ino** %root_dev_ino18, align 8, !dbg !3245
  %st_dev19 = getelementptr inbounds %struct.dev_ino* %26, i32 0, i32 1, !dbg !3245
  %27 = load i64* %st_dev19, align 8, !dbg !3245
  %cmp20 = icmp eq i64 %24, %27, !dbg !3245
  br i1 %cmp20, label %do.body, label %if.end35, !dbg !3245

do.body:                                          ; preds = %land.lhs.true16
  %28 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3247
  %29 = load i8** %dir.addr, align 8, !dbg !3247
  %call23 = call i8* @full_filename_(%struct.dirstack_state* %28, i8* %29), !dbg !3247
  %call24 = call i32 @strcmp(i8* %call23, i8* getelementptr inbounds ([2 x i8]* @.str16133, i32 0, i32 0)) #18, !dbg !3247
  %cmp25 = icmp eq i32 %call24, 0, !dbg !3247
  %30 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3247
  %31 = load i8** %dir.addr, align 8, !dbg !3247
  %call28 = call i8* @full_filename_(%struct.dirstack_state* %30, i8* %31), !dbg !3247
  br i1 %cmp25, label %if.then27, label %if.else30, !dbg !3247

if.then27:                                        ; preds = %do.body
  %call29 = call i8* @quote(i8* %call28), !dbg !3247
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 0, i8* getelementptr inbounds ([45 x i8]* @.str17134, i32 0, i32 0), i8* %call29), !dbg !3247
  br label %if.end34, !dbg !3247

if.else30:                                        ; preds = %do.body
  %call32 = call i8* @quote_n(i32 0, i8* %call28), !dbg !3247
  %call33 = call i8* @quote_n(i32 1, i8* getelementptr inbounds ([2 x i8]* @.str16133, i32 0, i32 0)), !dbg !3247
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 0, i8* getelementptr inbounds ([58 x i8]* @.str18135, i32 0, i32 0), i8* %call32, i8* %call33), !dbg !3247
  br label %if.end34

if.end34:                                         ; preds = %if.else30, %if.then27
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 0, i8* getelementptr inbounds ([49 x i8]* @.str19136, i32 0, i32 0)), !dbg !3251
  store i32 4, i32* %status, align 4, !dbg !3252
  br label %closedir_and_return, !dbg !3253

if.end35:                                         ; preds = %land.lhs.true16, %land.lhs.true, %if.end11
  %32 = load %struct.__dirstream** %dirp, align 8, !dbg !3254
  %call36 = call i32 @dirfd(%struct.__dirstream* %32) #6, !dbg !3254
  %33 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3254
  %34 = load i8** %dir.addr, align 8, !dbg !3254
  %35 = load %struct.stat** %dir_st.addr, align 8, !dbg !3254
  call void @AD_push(i32 %call36, %struct.dirstack_state* %33, i8* %34, %struct.stat* %35), !dbg !3254
  %36 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3255
  %call38 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %36), !dbg !3255
  %status39 = getelementptr inbounds %struct.AD_ent* %call38, i32 0, i32 1, !dbg !3255
  store i32 2, i32* %status39, align 4, !dbg !3255
  store i32 2, i32* %status, align 4, !dbg !3257
  br label %while.body, !dbg !3258

while.body:                                       ; preds = %if.end143, %if.then64, %if.end35
  store i8* null, i8** %subdir, align 8, !dbg !3259
  %37 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3261
  %38 = load %struct.rm_options** %x.addr, align 8, !dbg !3261
  %call41 = call i32 @remove_cwd_entries(%struct.__dirstream** %dirp, %struct.dirstack_state* %37, i8** %subdir, %struct.stat* %subdir_sb, %struct.rm_options* %38), !dbg !3261
  store i32 %call41, i32* %tmp_status, align 4, !dbg !3261
  %39 = load i32* %tmp_status, align 4, !dbg !3262
  %cmp42 = icmp ne i32 %39, 2, !dbg !3262
  br i1 %cmp42, label %do.body45, label %if.end56, !dbg !3262

do.body45:                                        ; preds = %while.body
  %40 = load i32* %tmp_status, align 4, !dbg !3264
  %cmp46 = icmp eq i32 %40, 4, !dbg !3264
  br i1 %cmp46, label %if.then53, label %lor.lhs.false, !dbg !3264

lor.lhs.false:                                    ; preds = %do.body45
  %41 = load i32* %tmp_status, align 4, !dbg !3264
  %cmp48 = icmp eq i32 %41, 3, !dbg !3264
  %42 = load i32* %status, align 4, !dbg !3264
  %cmp51 = icmp eq i32 %42, 2, !dbg !3264
  %or.cond = and i1 %cmp48, %cmp51, !dbg !3264
  br i1 %or.cond, label %if.then53, label %do.end55, !dbg !3264

if.then53:                                        ; preds = %lor.lhs.false, %do.body45
  %43 = load i32* %tmp_status, align 4, !dbg !3264
  store i32 %43, i32* %status, align 4, !dbg !3264
  br label %do.end55, !dbg !3264

do.end55:                                         ; preds = %lor.lhs.false, %if.then53
  %44 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3268
  call void @AD_mark_current_as_unremovable(%struct.dirstack_state* %44), !dbg !3268
  br label %if.end56, !dbg !3269

if.end56:                                         ; preds = %do.end55, %while.body
  %45 = load i8** %subdir, align 8, !dbg !3270
  %tobool57 = icmp ne i8* %45, null, !dbg !3270
  br i1 %tobool57, label %if.then58, label %if.end85, !dbg !3270

if.then58:                                        ; preds = %if.end56
  %46 = load %struct.rm_options** %x.addr, align 8, !dbg !3272
  %one_file_system = getelementptr inbounds %struct.rm_options* %46, i32 0, i32 2, !dbg !3272
  %47 = load i8* %one_file_system, align 1, !dbg !3272
  %tobool59 = trunc i8 %47 to i1, !dbg !3272
  br i1 %tobool59, label %lor.lhs.false60, label %if.then64, !dbg !3272

lor.lhs.false60:                                  ; preds = %if.then58
  %st_dev61 = getelementptr inbounds %struct.stat* %subdir_sb, i32 0, i32 0, !dbg !3272
  %48 = load i64* %st_dev61, align 8, !dbg !3272
  %49 = load i64* %current_dev, align 8, !dbg !3272
  %cmp62 = icmp eq i64 %48, %49, !dbg !3272
  br i1 %cmp62, label %if.then64, label %if.end70, !dbg !3272

if.then64:                                        ; preds = %lor.lhs.false60, %if.then58
  %50 = load %struct.__dirstream** %dirp, align 8, !dbg !3275
  %call65 = call i32 @dirfd(%struct.__dirstream* %50) #6, !dbg !3275
  %51 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3275
  %52 = load i8** %subdir, align 8, !dbg !3275
  call void @AD_push(i32 %call65, %struct.dirstack_state* %51, i8* %52, %struct.stat* %subdir_sb), !dbg !3275
  %53 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3277
  %call67 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %53), !dbg !3277
  %status68 = getelementptr inbounds %struct.AD_ent* %call67, i32 0, i32 1, !dbg !3277
  store i32 2, i32* %status68, align 4, !dbg !3277
  %54 = load i8** %subdir, align 8, !dbg !3279
  call void @free(i8* %54) #6, !dbg !3279
  br label %while.body, !dbg !3280

if.end70:                                         ; preds = %lor.lhs.false60
  %55 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3281
  %56 = load i8** %subdir, align 8, !dbg !3281
  %call71 = call i8* @full_filename_(%struct.dirstack_state* %55, i8* %56), !dbg !3281
  %call72 = call i8* @quote(i8* %call71), !dbg !3281
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* null, i8* getelementptr inbounds ([46 x i8]* @.str20137, i32 0, i32 0), i8* %call72), !dbg !3281
  %57 = load i8** %subdir, align 8, !dbg !3282
  call void @free(i8* %57) #6, !dbg !3282
  %58 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3283
  call void @AD_mark_current_as_unremovable(%struct.dirstack_state* %58), !dbg !3283
  store i32 4, i32* %tmp_status, align 4, !dbg !3284
  %59 = load i32* %tmp_status, align 4, !dbg !3285
  %cmp74 = icmp eq i32 %59, 4, !dbg !3285
  br i1 %cmp74, label %if.then82, label %lor.lhs.false76, !dbg !3285

lor.lhs.false76:                                  ; preds = %if.end70
  %60 = load i32* %tmp_status, align 4, !dbg !3285
  %cmp77 = icmp eq i32 %60, 3, !dbg !3285
  %61 = load i32* %status, align 4, !dbg !3285
  %cmp80 = icmp eq i32 %61, 2, !dbg !3285
  %or.cond1 = and i1 %cmp77, %cmp80, !dbg !3285
  br i1 %or.cond1, label %if.then82, label %if.end85, !dbg !3285

if.then82:                                        ; preds = %lor.lhs.false76, %if.end70
  %62 = load i32* %tmp_status, align 4, !dbg !3285
  store i32 %62, i32* %status, align 4, !dbg !3285
  br label %if.end85, !dbg !3285

if.end85:                                         ; preds = %if.then82, %lor.lhs.false76, %if.end56
  %63 = load %struct.__dirstream** %dirp, align 8, !dbg !3288
  %64 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3288
  %call86 = call i8* @AD_pop_and_chdir(%struct.__dirstream* %63, i32* %fd, %struct.dirstack_state* %64), !dbg !3288
  store i8* %call86, i8** %empty_dir, align 8, !dbg !3288
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !3290
  %65 = load i32* %fd, align 4, !dbg !3291
  %cmp87 = icmp ne i32 %65, -100, !dbg !3291
  br i1 %cmp87, label %cond.end, label %lor.lhs.false89, !dbg !3291

lor.lhs.false89:                                  ; preds = %if.end85
  %66 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3291
  %call90 = call i64 @AD_stack_height(%struct.dirstack_state* %66), !dbg !3291
  %cmp91 = icmp eq i64 %call90, 1, !dbg !3291
  br i1 %cmp91, label %cond.end, label %cond.false, !dbg !3291

cond.false:                                       ; preds = %lor.lhs.false89
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8]* @.str21138, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 1477, i8* getelementptr inbounds ([112 x i8]* @__PRETTY_FUNCTION__.remove_dir, i32 0, i32 0))
  unreachable, !dbg !3291

cond.end:                                         ; preds = %if.end85, %lor.lhs.false89
  %67 = load i32* %tmp_status, align 4, !dbg !3292
  %cmp93 = icmp eq i32 %67, 2, !dbg !3292
  br i1 %cmp93, label %if.then95, label %if.end139, !dbg !3292

if.then95:                                        ; preds = %cond.end
  %68 = load i32* %fd, align 4, !dbg !3294
  %69 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3294
  %70 = load i8** %empty_dir, align 8, !dbg !3294
  %call96 = call %struct.stat* @cache_stat_init(%struct.stat* %empty_st), !dbg !3296
  %71 = load %struct.rm_options** %x.addr, align 8, !dbg !3294
  %call97 = call i32 @prompt(i32 %68, %struct.dirstack_state* %69, i8* %70, %struct.stat* %call96, %struct.rm_options* %71, i32 3, i32* %is_empty), !dbg !3294
  store i32 %call97, i32* %s, align 4, !dbg !3294
  %72 = load i32* %s, align 4, !dbg !3297
  %cmp98 = icmp ne i32 %72, 2, !dbg !3297
  br i1 %cmp98, label %if.then100, label %if.end106, !dbg !3297

if.then100:                                       ; preds = %if.then95
  %73 = load i8** %empty_dir, align 8, !dbg !3299
  call void @free(i8* %73) #6, !dbg !3299
  %74 = load i32* %s, align 4, !dbg !3301
  store i32 %74, i32* %status, align 4, !dbg !3301
  %75 = load i32* %fd, align 4, !dbg !3302
  %cmp101 = icmp ne i32 %75, -100, !dbg !3302
  br i1 %cmp101, label %if.then103, label %closedir_and_return, !dbg !3302

if.then103:                                       ; preds = %if.then100
  %76 = load i32* %fd, align 4, !dbg !3304
  %call104 = call i32 @close(i32 %76), !dbg !3304
  br label %closedir_and_return, !dbg !3304

if.end106:                                        ; preds = %if.then95
  %77 = load i32* %fd, align 4, !dbg !3305
  %78 = load i8** %empty_dir, align 8, !dbg !3305
  %call107 = call i32 @unlinkat(i32 %77, i8* %78, i32 512) #6, !dbg !3305
  %cmp108 = icmp eq i32 %call107, 0, !dbg !3305
  br i1 %cmp108, label %if.then110, label %if.else117, !dbg !3305

if.then110:                                       ; preds = %if.end106
  %79 = load %struct.rm_options** %x.addr, align 8, !dbg !3307
  %verbose = getelementptr inbounds %struct.rm_options* %79, i32 0, i32 6, !dbg !3307
  %80 = load i8* %verbose, align 1, !dbg !3307
  %tobool111 = trunc i8 %80 to i1, !dbg !3307
  br i1 %tobool111, label %if.then112, label %if.end139, !dbg !3307

if.then112:                                       ; preds = %if.then110
  %81 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3310
  %82 = load i8** %empty_dir, align 8, !dbg !3310
  %call113 = call i8* @full_filename_(%struct.dirstack_state* %81, i8* %82), !dbg !3310
  %call114 = call i8* @quote(i8* %call113), !dbg !3310
  %call115 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str22139, i32 0, i32 0), i8* %call114), !dbg !3311
  br label %if.end139, !dbg !3311

if.else117:                                       ; preds = %if.end106
  %call118 = call i32* @__errno_location() #1, !dbg !3312
  %83 = load i32* %call118, align 4, !dbg !3312
  %conv119 = sext i32 %83 to i64, !dbg !3312
  %84 = inttoptr i64 %conv119 to i32* (...)*, !dbg !3312
  %85 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3312
  %86 = load i8** %empty_dir, align 8, !dbg !3312
  %call120 = call i8* @full_filename_(%struct.dirstack_state* %85, i8* %86), !dbg !3312
  %call121 = call i8* @quote(i8* %call120), !dbg !3312
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %84, i8* getelementptr inbounds ([27 x i8]* @.str11128, i32 0, i32 0), i8* %call121), !dbg !3312
  %87 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3314
  %88 = load i8** %empty_dir, align 8, !dbg !3314
  call void @AD_mark_as_unremovable(%struct.dirstack_state* %87, i8* %88), !dbg !3314
  store i32 4, i32* %status, align 4, !dbg !3315
  %89 = load i32* %status, align 4, !dbg !3316
  %cmp123 = icmp eq i32 %89, 4, !dbg !3316
  br i1 %cmp123, label %if.then133, label %lor.lhs.false125, !dbg !3316

lor.lhs.false125:                                 ; preds = %if.else117
  %90 = load i32* %status, align 4, !dbg !3316
  %cmp126 = icmp eq i32 %90, 3, !dbg !3316
  br i1 %cmp126, label %land.lhs.true128, label %if.end139, !dbg !3316

land.lhs.true128:                                 ; preds = %lor.lhs.false125
  %91 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3316
  %call129 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %91), !dbg !3316
  %status130 = getelementptr inbounds %struct.AD_ent* %call129, i32 0, i32 1, !dbg !3316
  %92 = load i32* %status130, align 4, !dbg !3316
  %cmp131 = icmp eq i32 %92, 2, !dbg !3316
  br i1 %cmp131, label %if.then133, label %if.end139, !dbg !3316

if.then133:                                       ; preds = %land.lhs.true128, %if.else117
  %93 = load i32* %status, align 4, !dbg !3316
  %94 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3316
  %call134 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %94), !dbg !3316
  %status135 = getelementptr inbounds %struct.AD_ent* %call134, i32 0, i32 1, !dbg !3316
  store i32 %93, i32* %status135, align 4, !dbg !3316
  br label %if.end139, !dbg !3316

if.end139:                                        ; preds = %if.then112, %if.then110, %lor.lhs.false125, %land.lhs.true128, %if.then133, %cond.end
  %95 = load i8** %empty_dir, align 8, !dbg !3319
  call void @free(i8* %95) #6, !dbg !3319
  %96 = load i32* %fd, align 4, !dbg !3320
  %cmp140 = icmp eq i32 %96, -100, !dbg !3320
  br i1 %cmp140, label %while.end, label %if.end143, !dbg !3320

if.end143:                                        ; preds = %if.end139
  %97 = load i32* %fd, align 4, !dbg !3322
  %call144 = call %struct.__dirstream* @fdopendir(i32 %97), !dbg !3322
  store %struct.__dirstream* %call144, %struct.__dirstream** %dirp, align 8, !dbg !3322
  %98 = load %struct.__dirstream** %dirp, align 8, !dbg !3323
  %cmp145 = icmp eq %struct.__dirstream* %98, null, !dbg !3323
  br i1 %cmp145, label %if.then147, label %while.body, !dbg !3323

if.then147:                                       ; preds = %if.end143
  %call148 = call i32* @__errno_location() #1, !dbg !3325
  %99 = load i32* %call148, align 4, !dbg !3325
  %conv149 = sext i32 %99 to i64, !dbg !3325
  %100 = inttoptr i64 %conv149 to i32* (...)*, !dbg !3325
  %101 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3325
  %call150 = call i8* @full_filename_(%struct.dirstack_state* %101, i8* getelementptr inbounds ([2 x i8]* @.str24141, i32 0, i32 0)), !dbg !3325
  %call151 = call i8* @quote(i8* %call150), !dbg !3325
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %100, i8* getelementptr inbounds ([35 x i8]* @.str23140, i32 0, i32 0), i8* %call151), !dbg !3325
  %102 = load i32* %fd, align 4, !dbg !3327
  %call152 = call i32 @close(i32 %102), !dbg !3327
  %103 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3328
  %current_arg_jumpbuf = getelementptr inbounds %struct.dirstack_state* %103, i32 0, i32 4, !dbg !3328
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag]* %current_arg_jumpbuf, i32 0, i32 0, !dbg !3328
  call void @longjmp(%struct.__jmp_buf_tag* %arraydecay, i32 1) #17, !dbg !3328
  unreachable, !dbg !3328

while.end:                                        ; preds = %if.end139
  %104 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3329
  call void @AD_stack_pop(%struct.dirstack_state* %104), !dbg !3329
  br label %closedir_and_return, !dbg !3329

closedir_and_return:                              ; preds = %if.then100, %if.then103, %while.end, %if.end34
  %105 = load %struct.__dirstream** %dirp, align 8, !dbg !3330
  %cmp154 = icmp ne %struct.__dirstream* %105, null, !dbg !3330
  br i1 %cmp154, label %land.lhs.true156, label %if.end163, !dbg !3330

land.lhs.true156:                                 ; preds = %closedir_and_return
  %106 = load %struct.__dirstream** %dirp, align 8, !dbg !3330
  %call157 = call i32 @closedir(%struct.__dirstream* %106), !dbg !3330
  %cmp158 = icmp ne i32 %call157, 0, !dbg !3330
  br i1 %cmp158, label %if.then160, label %if.end163, !dbg !3330

if.then160:                                       ; preds = %land.lhs.true156
  %107 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3332
  %call161 = call i8* @full_filename_(%struct.dirstack_state* %107, i8* getelementptr inbounds ([2 x i8]* @.str24141, i32 0, i32 0)), !dbg !3332
  %call162 = call i8* @quote(i8* %call161), !dbg !3332
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* null, i8* getelementptr inbounds ([29 x i8]* @.str25142, i32 0, i32 0), i8* %call162), !dbg !3332
  store i32 4, i32* %status, align 4, !dbg !3334
  br label %if.end163, !dbg !3335

if.end163:                                        ; preds = %if.then160, %land.lhs.true156, %closedir_and_return
  %108 = load i32* %status, align 4, !dbg !3336
  store i32 %108, i32* %retval, !dbg !3336
  br label %return, !dbg !3336

return:                                           ; preds = %if.end163, %if.end10, %if.then7
  %109 = load i32* %retval, !dbg !3337
  ret i32 %109, !dbg !3337
}

; Function Attrs: nounwind uwtable
define internal void @AD_mark_as_unremovable(%struct.dirstack_state* %ds, i8* %filename) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %filename.addr = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3338
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %0), !dbg !3338
  %unremovable = getelementptr inbounds %struct.AD_ent* %call, i32 0, i32 0, !dbg !3338
  %1 = load i8** %filename.addr, align 8, !dbg !3339
  %call1 = call i8* @xstrdup(i8* %1), !dbg !3339
  call void @AD_mark_helper(%struct.hash_table** %unremovable, i8* %call1), !dbg !3339
  ret void, !dbg !3340
}

; Function Attrs: nounwind uwtable
define internal void @AD_mark_helper(%struct.hash_table** %ht, i8* %filename) #0 {
entry:
  %ht.addr = alloca %struct.hash_table**, align 8
  %filename.addr = alloca i8*, align 8
  %ent = alloca i8*, align 8
  store %struct.hash_table** %ht, %struct.hash_table*** %ht.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load %struct.hash_table*** %ht.addr, align 8, !dbg !3341
  %call = call %struct.hash_table* @AD_ensure_initialized(%struct.hash_table** %0), !dbg !3341
  %1 = load i8** %filename.addr, align 8, !dbg !3341
  %call1 = call i8* @hash_insert(%struct.hash_table* %call, i8* %1), !dbg !3341
  store i8* %call1, i8** %ent, align 8, !dbg !3341
  %2 = load i8** %ent, align 8, !dbg !3342
  %cmp = icmp eq i8* %2, null, !dbg !3342
  br i1 %cmp, label %if.then, label %if.else, !dbg !3342

if.then:                                          ; preds = %entry
  call void @xalloc_die() #19, !dbg !3344
  unreachable, !dbg !3344

if.else:                                          ; preds = %entry
  %3 = load i8** %ent, align 8, !dbg !3345
  %4 = load i8** %filename.addr, align 8, !dbg !3345
  %cmp2 = icmp ne i8* %3, %4, !dbg !3345
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3345

if.then3:                                         ; preds = %if.else
  %5 = load i8** %filename.addr, align 8, !dbg !3348
  call void @free(i8* %5) #6, !dbg !3348
  br label %if.end4, !dbg !3348

if.end4:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !3349
}

; Function Attrs: nounwind uwtable
define internal %struct.hash_table* @AD_ensure_initialized(%struct.hash_table** %ht) #0 {
entry:
  %ht.addr = alloca %struct.hash_table**, align 8
  store %struct.hash_table** %ht, %struct.hash_table*** %ht.addr, align 8
  %0 = load %struct.hash_table*** %ht.addr, align 8, !dbg !3350
  %1 = load %struct.hash_table** %0, align 8, !dbg !3350
  %cmp = icmp eq %struct.hash_table* %1, null, !dbg !3350
  br i1 %cmp, label %if.then, label %if.end3, !dbg !3350

if.then:                                          ; preds = %entry
  %call = call %struct.hash_table* @hash_initialize(i64 13, %struct.hash_tuning* null, i64 (i8*, i64)* @hash_pjw, i1 (i8*, i8*)* @hash_compare_strings, void (i8*)* @hash_freer), !dbg !3352
  %2 = load %struct.hash_table*** %ht.addr, align 8, !dbg !3352
  store %struct.hash_table* %call, %struct.hash_table** %2, align 8, !dbg !3352
  %3 = load %struct.hash_table*** %ht.addr, align 8, !dbg !3354
  %4 = load %struct.hash_table** %3, align 8, !dbg !3354
  %cmp1 = icmp eq %struct.hash_table* %4, null, !dbg !3354
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3354

if.then2:                                         ; preds = %if.then
  call void @xalloc_die() #19, !dbg !3356
  unreachable, !dbg !3356

if.end3:                                          ; preds = %if.then, %entry
  %5 = load %struct.hash_table*** %ht.addr, align 8, !dbg !3357
  %6 = load %struct.hash_table** %5, align 8, !dbg !3357
  ret %struct.hash_table* %6, !dbg !3357
}

; Function Attrs: nounwind uwtable
define internal void @hash_freer(i8* %x) #0 {
entry:
  %x.addr = alloca i8*, align 8
  store i8* %x, i8** %x.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !3358
  call void @free(i8* %0) #6, !dbg !3358
  ret void, !dbg !3359
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @hash_compare_strings(i8* %x, i8* %y) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  store i8* %x, i8** %x.addr, align 8
  store i8* %y, i8** %y.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !3360
  %1 = load i8** %y.addr, align 8, !dbg !3360
  %call = call i32 @strcmp(i8* %0, i8* %1) #18, !dbg !3360
  %cmp = icmp eq i32 %call, 0, !dbg !3360
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !3360
  %tobool = icmp ne i32 %cond, 0, !dbg !3360
  ret i1 %tobool, !dbg !3360
}

; Function Attrs: nounwind uwtable
define internal i32 @prompt(i32 %fd_cwd, %struct.dirstack_state* %ds, i8* %filename, %struct.stat* %sbuf, %struct.rm_options* %x, i32 %mode, i32* %is_empty) #0 {
entry:
  %retval = alloca i32, align 4
  %fd_cwd.addr = alloca i32, align 4
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %filename.addr = alloca i8*, align 8
  %sbuf.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %mode.addr = alloca i32, align 4
  %is_empty.addr = alloca i32*, align 8
  %write_protected = alloca i8, align 1
  %quoted_name = alloca i8*, align 8
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store %struct.stat* %sbuf, %struct.stat** %sbuf.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store i32* %is_empty, i32** %is_empty.addr, align 8
  store i8 0, i8* %write_protected, align 1, !dbg !3361
  %0 = load i32** %is_empty.addr, align 8, !dbg !3362
  store i32 2, i32* %0, align 4, !dbg !3362
  %call6 = call i32 @klee_get_false(), !dbg !3363
  %conv7 = sext i32 %call6 to i64, !dbg !3363
  %1 = load %struct.rm_options** %x.addr, align 8, !dbg !3363
  %interactive8 = getelementptr inbounds %struct.rm_options* %1, i32 0, i32 1, !dbg !3363
  %2 = load i32* %interactive8, align 4, !dbg !3363
  %cmp9 = icmp eq i32 %2, 5, !dbg !3363
  %conv10 = zext i1 %cmp9 to i32, !dbg !3363
  %conv11 = sext i32 %conv10 to i64, !dbg !3363
  %call12 = call i64 @klee_change(i64 %conv7, i64 %conv11), !dbg !3363
  %tobool13 = icmp ne i64 %call12, 0, !dbg !3363
  br i1 %tobool13, label %if.then, label %if.end, !dbg !3363

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, !dbg !3365
  br label %return, !dbg !3365

if.end:                                           ; preds = %entry
  %3 = load %struct.rm_options** %x.addr, align 8, !dbg !3366
  %ignore_missing_files = getelementptr inbounds %struct.rm_options* %3, i32 0, i32 0, !dbg !3366
  %4 = load i8* %ignore_missing_files, align 1, !dbg !3366
  %tobool14 = trunc i8 %4 to i1, !dbg !3366
  %lnot = xor i1 %tobool14, true, !dbg !3366
  %lnot.ext = zext i1 %lnot to i32, !dbg !3366
  %conv15 = sext i32 %lnot.ext to i64, !dbg !3366
  %5 = load %struct.rm_options** %x.addr, align 8, !dbg !3366
  %interactive16 = getelementptr inbounds %struct.rm_options* %5, i32 0, i32 1, !dbg !3366
  %6 = load i32* %interactive16, align 4, !dbg !3366
  %cmp17 = icmp eq i32 %6, 1, !dbg !3366
  %conv18 = zext i1 %cmp17 to i32, !dbg !3366
  %conv19 = sext i32 %conv18 to i64, !dbg !3366
  %7 = load %struct.rm_options** %x.addr, align 8, !dbg !3366
  %interactive20 = getelementptr inbounds %struct.rm_options* %7, i32 0, i32 1, !dbg !3366
  %8 = load i32* %interactive20, align 4, !dbg !3366
  %cmp21 = icmp eq i32 %8, 3, !dbg !3366
  %conv22 = zext i1 %cmp21 to i32, !dbg !3366
  %conv23 = sext i32 %conv22 to i64, !dbg !3366
  %call24 = call i64 @klee_change(i64 %conv19, i64 %conv23), !dbg !3366
  %9 = load %struct.rm_options** %x.addr, align 8, !dbg !3366
  %stdin_tty = getelementptr inbounds %struct.rm_options* %9, i32 0, i32 5, !dbg !3366
  %10 = load i8* %stdin_tty, align 1, !dbg !3366
  %tobool25 = trunc i8 %10 to i1, !dbg !3366
  %conv26 = zext i1 %tobool25 to i64, !dbg !3366
  %or = or i64 %call24, %conv26, !dbg !3366
  %and = and i64 %conv15, %or, !dbg !3366
  %tobool27 = icmp ne i64 %and, 0, !dbg !3366
  br i1 %tobool27, label %land.lhs.true, label %cond.false43, !dbg !3366

land.lhs.true:                                    ; preds = %if.end
  %11 = load i32* %fd_cwd.addr, align 4, !dbg !3368
  %12 = load i8** %filename.addr, align 8, !dbg !3368
  %13 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3368
  %14 = load %struct.stat** %sbuf.addr, align 8, !dbg !3368
  %call28 = call zeroext i1 @write_protected_non_symlink(i32 %11, i8* %12, %struct.dirstack_state* %13, %struct.stat* %14), !dbg !3368
  %frombool = zext i1 %call28 to i8, !dbg !3368
  store i8 %frombool, i8* %write_protected, align 1, !dbg !3368
  br i1 %call28, label %if.then54, label %cond.false43, !dbg !3368

cond.false43:                                     ; preds = %land.lhs.true, %if.end
  %15 = load %struct.rm_options** %x.addr, align 8, !dbg !3369
  %interactive44 = getelementptr inbounds %struct.rm_options* %15, i32 0, i32 1, !dbg !3369
  %16 = load i32* %interactive44, align 4, !dbg !3369
  %cmp45 = icmp eq i32 %16, 1, !dbg !3369
  %conv46 = zext i1 %cmp45 to i32, !dbg !3369
  %conv47 = sext i32 %conv46 to i64, !dbg !3369
  %17 = load %struct.rm_options** %x.addr, align 8, !dbg !3369
  %interactive48 = getelementptr inbounds %struct.rm_options* %17, i32 0, i32 1, !dbg !3369
  %18 = load i32* %interactive48, align 4, !dbg !3369
  %cmp49 = icmp eq i32 %18, 3, !dbg !3369
  %conv50 = zext i1 %cmp49 to i32, !dbg !3369
  %conv51 = sext i32 %conv50 to i64, !dbg !3369
  %call52 = call i64 @klee_change(i64 %conv47, i64 %conv51), !dbg !3369
  %tobool53 = icmp ne i64 %call52, 0, !dbg !3369
  br i1 %tobool53, label %if.then54, label %if.end137, !dbg !3369

if.then54:                                        ; preds = %cond.false43, %land.lhs.true
  %19 = load i32* %fd_cwd.addr, align 4, !dbg !3370
  %20 = load i8** %filename.addr, align 8, !dbg !3370
  %21 = load %struct.stat** %sbuf.addr, align 8, !dbg !3370
  %call55 = call i32 @cache_fstatat(i32 %19, i8* %20, %struct.stat* %21, i32 256), !dbg !3370
  %cmp56 = icmp ne i32 %call55, 0, !dbg !3370
  br i1 %cmp56, label %if.then58, label %if.end63, !dbg !3370

if.then58:                                        ; preds = %if.then54
  %call59 = call i32* @__errno_location() #1, !dbg !3373
  %22 = load i32* %call59, align 4, !dbg !3373
  %conv60 = sext i32 %22 to i64, !dbg !3373
  %23 = inttoptr i64 %conv60 to i32* (...)*, !dbg !3373
  %24 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3373
  %25 = load i8** %filename.addr, align 8, !dbg !3373
  %call61 = call i8* @full_filename_(%struct.dirstack_state* %24, i8* %25), !dbg !3373
  %call62 = call i8* @quote(i8* %call61), !dbg !3373
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %23, i8* getelementptr inbounds ([17 x i8]* @.str13130, i32 0, i32 0), i8* %call62), !dbg !3373
  store i32 4, i32* %retval, !dbg !3375
  br label %return, !dbg !3375

if.end63:                                         ; preds = %if.then54
  %26 = load %struct.stat** %sbuf.addr, align 8, !dbg !3376
  %st_mode = getelementptr inbounds %struct.stat* %26, i32 0, i32 3, !dbg !3376
  %27 = load i32* %st_mode, align 4, !dbg !3376
  %and64 = and i32 %27, 61440, !dbg !3376
  %cmp65 = icmp eq i32 %and64, 16384, !dbg !3376
  br i1 %cmp65, label %land.lhs.true67, label %if.end72, !dbg !3376

land.lhs.true67:                                  ; preds = %if.end63
  %28 = load %struct.rm_options** %x.addr, align 8, !dbg !3376
  %recursive = getelementptr inbounds %struct.rm_options* %28, i32 0, i32 3, !dbg !3376
  %29 = load i8* %recursive, align 1, !dbg !3376
  %tobool68 = trunc i8 %29 to i1, !dbg !3376
  br i1 %tobool68, label %if.end72, label %if.then69, !dbg !3376

if.then69:                                        ; preds = %land.lhs.true67
  %30 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3378
  %31 = load i8** %filename.addr, align 8, !dbg !3378
  %call70 = call i8* @full_filename_(%struct.dirstack_state* %30, i8* %31), !dbg !3378
  %call71 = call i8* @quote(i8* %call70), !dbg !3378
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* inttoptr (i64 21 to i32* (...)*), i8* getelementptr inbounds ([17 x i8]* @.str13130, i32 0, i32 0), i8* %call71), !dbg !3378
  store i32 4, i32* %retval, !dbg !3380
  br label %return, !dbg !3380

if.end72:                                         ; preds = %land.lhs.true67, %if.end63
  %32 = load %struct.stat** %sbuf.addr, align 8, !dbg !3381
  %st_mode73 = getelementptr inbounds %struct.stat* %32, i32 0, i32 3, !dbg !3381
  %33 = load i32* %st_mode73, align 4, !dbg !3381
  %and74 = and i32 %33, 61440, !dbg !3381
  %cmp75 = icmp eq i32 %and74, 40960, !dbg !3381
  br i1 %cmp75, label %cond.false91, label %if.end104, !dbg !3381

cond.false91:                                     ; preds = %if.end72
  %34 = load %struct.rm_options** %x.addr, align 8, !dbg !3383
  %interactive92 = getelementptr inbounds %struct.rm_options* %34, i32 0, i32 1, !dbg !3383
  %35 = load i32* %interactive92, align 4, !dbg !3383
  %cmp93 = icmp eq i32 %35, 0, !dbg !3383
  %conv94 = zext i1 %cmp93 to i32, !dbg !3383
  %conv95 = sext i32 %conv94 to i64, !dbg !3383
  %36 = load %struct.rm_options** %x.addr, align 8, !dbg !3383
  %interactive96 = getelementptr inbounds %struct.rm_options* %36, i32 0, i32 1, !dbg !3383
  %37 = load i32* %interactive96, align 4, !dbg !3383
  %cmp97 = icmp ne i32 %37, 3, !dbg !3383
  %conv98 = zext i1 %cmp97 to i32, !dbg !3383
  %conv99 = sext i32 %conv98 to i64, !dbg !3383
  %call100 = call i64 @klee_change(i64 %conv95, i64 %conv99), !dbg !3383
  %tobool101 = icmp ne i64 %call100, 0, !dbg !3383
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !3383

if.then102:                                       ; preds = %cond.false91
  store i32 2, i32* %retval, !dbg !3386
  br label %return, !dbg !3386

if.end103:                                        ; preds = %cond.false91
  store i8 0, i8* %write_protected, align 1, !dbg !3387
  br label %if.end104, !dbg !3388

if.end104:                                        ; preds = %if.end103, %if.end72
  %38 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3389
  %39 = load i8** %filename.addr, align 8, !dbg !3389
  %call105 = call i8* @full_filename_(%struct.dirstack_state* %38, i8* %39), !dbg !3389
  %call106 = call i8* @quote(i8* %call105), !dbg !3389
  store i8* %call106, i8** %quoted_name, align 8, !dbg !3389
  %40 = load %struct.stat** %sbuf.addr, align 8, !dbg !3391
  %st_mode107 = getelementptr inbounds %struct.stat* %40, i32 0, i32 3, !dbg !3391
  %41 = load i32* %st_mode107, align 4, !dbg !3391
  %and108 = and i32 %41, 61440, !dbg !3391
  %cmp109 = icmp eq i32 %and108, 16384, !dbg !3391
  br i1 %cmp109, label %land.lhs.true111, label %if.else, !dbg !3391

land.lhs.true111:                                 ; preds = %if.end104
  %42 = load %struct.rm_options** %x.addr, align 8, !dbg !3391
  %recursive112 = getelementptr inbounds %struct.rm_options* %42, i32 0, i32 3, !dbg !3391
  %43 = load i8* %recursive112, align 1, !dbg !3391
  %tobool113 = trunc i8 %43 to i1, !dbg !3391
  %44 = load i32* %mode.addr, align 4, !dbg !3391
  %cmp116 = icmp eq i32 %44, 2, !dbg !3391
  %or.cond = and i1 %tobool113, %cmp116, !dbg !3391
  br i1 %or.cond, label %land.lhs.true118, label %if.else, !dbg !3391

land.lhs.true118:                                 ; preds = %land.lhs.true111
  %45 = load i32* %fd_cwd.addr, align 4, !dbg !3393
  %46 = load i8** %filename.addr, align 8, !dbg !3393
  %call119 = call zeroext i1 @is_empty_dir(i32 %45, i8* %46), !dbg !3393
  %cond = select i1 %call119, i32 4, i32 3, !dbg !3393
  %47 = load i32** %is_empty.addr, align 8, !dbg !3393
  store i32 %cond, i32* %47, align 4, !dbg !3393
  %cmp121 = icmp eq i32 %cond, 3, !dbg !3393
  br i1 %cmp121, label %if.then123, label %if.else, !dbg !3393

if.then123:                                       ; preds = %land.lhs.true118
  %48 = load %struct._IO_FILE** @stderr, align 8, !dbg !3394
  %49 = load i8* %write_protected, align 1, !dbg !3394
  %tobool124 = trunc i8 %49 to i1, !dbg !3394
  %cond126 = select i1 %tobool124, i8* getelementptr inbounds ([48 x i8]* @.str26143, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str27144, i32 0, i32 0), !dbg !3394
  %50 = load i8** @program_name, align 8, !dbg !3394
  %51 = load i8** %quoted_name, align 8, !dbg !3394
  %call127 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %48, i8* %cond126, i8* %50, i8* %51), !dbg !3394
  br label %if.end133, !dbg !3394

if.else:                                          ; preds = %land.lhs.true118, %land.lhs.true111, %if.end104
  %52 = load %struct._IO_FILE** @stderr, align 8, !dbg !3395
  %53 = load i8* %write_protected, align 1, !dbg !3395
  %tobool128 = trunc i8 %53 to i1, !dbg !3395
  %cond130 = select i1 %tobool128, i8* getelementptr inbounds ([35 x i8]* @.str28145, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str29146, i32 0, i32 0), !dbg !3395
  %54 = load i8** @program_name, align 8, !dbg !3395
  %55 = load %struct.stat** %sbuf.addr, align 8, !dbg !3397
  %call131 = call i8* @file_type(%struct.stat* %55), !dbg !3397
  %56 = load i8** %quoted_name, align 8, !dbg !3395
  %call132 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %52, i8* %cond130, i8* %54, i8* %call131, i8* %56), !dbg !3395
  br label %if.end133

if.end133:                                        ; preds = %if.else, %if.then123
  %call134 = call zeroext i1 @yesno(), !dbg !3398
  br i1 %call134, label %if.end137, label %if.then135, !dbg !3398

if.then135:                                       ; preds = %if.end133
  store i32 3, i32* %retval, !dbg !3400
  br label %return, !dbg !3400

if.end137:                                        ; preds = %if.end133, %cond.false43
  store i32 2, i32* %retval, !dbg !3401
  br label %return, !dbg !3401

return:                                           ; preds = %if.end137, %if.then135, %if.then102, %if.then69, %if.then58, %if.then
  %57 = load i32* %retval, !dbg !3402
  ret i32 %57, !dbg !3402
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @is_empty_dir(i32 %fd_cwd, i8* %dir) #0 {
entry:
  %retval = alloca i1, align 1
  %fd_cwd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %dirp = alloca %struct.__dirstream*, align 8
  %dp = alloca %struct.dirent*, align 8
  %saved_errno = alloca i32, align 4
  %fd = alloca i32, align 4
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store i8* %dir, i8** %dir.addr, align 8
  %0 = load i32* %fd_cwd.addr, align 4, !dbg !3403
  %1 = load i8** %dir.addr, align 8, !dbg !3403
  %call = call i32 (i32, i8*, i32, ...)* @openat(i32 %0, i8* %1, i32 198912), !dbg !3403
  store i32 %call, i32* %fd, align 4, !dbg !3403
  %2 = load i32* %fd, align 4, !dbg !3404
  %cmp = icmp slt i32 %2, 0, !dbg !3404
  br i1 %cmp, label %if.then, label %if.end, !dbg !3404

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, !dbg !3406
  br label %return, !dbg !3406

if.end:                                           ; preds = %entry
  %3 = load i32* %fd, align 4, !dbg !3407
  %call1 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !3407
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !3407
  %4 = load %struct.__dirstream** %dirp, align 8, !dbg !3408
  %cmp2 = icmp eq %struct.__dirstream* %4, null, !dbg !3408
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !3408

if.then3:                                         ; preds = %if.end
  %5 = load i32* %fd, align 4, !dbg !3410
  %call4 = call i32 @close(i32 %5), !dbg !3410
  store i1 false, i1* %retval, !dbg !3412
  br label %return, !dbg !3412

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #1, !dbg !3413
  store i32 0, i32* %call6, align 4, !dbg !3413
  %6 = load %struct.__dirstream** %dirp, align 8, !dbg !3414
  %call7 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %6), !dbg !3414
  store %struct.dirent* %call7, %struct.dirent** %dp, align 8, !dbg !3414
  %call8 = call i32* @__errno_location() #1, !dbg !3415
  %7 = load i32* %call8, align 4, !dbg !3415
  store i32 %7, i32* %saved_errno, align 4, !dbg !3415
  %8 = load %struct.__dirstream** %dirp, align 8, !dbg !3416
  %call9 = call i32 @closedir(%struct.__dirstream* %8), !dbg !3416
  %9 = load %struct.dirent** %dp, align 8, !dbg !3417
  %cmp10 = icmp ne %struct.dirent* %9, null, !dbg !3417
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3417

if.then11:                                        ; preds = %if.end5
  store i1 false, i1* %retval, !dbg !3419
  br label %return, !dbg !3419

if.end12:                                         ; preds = %if.end5
  %10 = load i32* %saved_errno, align 4, !dbg !3420
  %cmp13 = icmp eq i32 %10, 0, !dbg !3420
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !3420
  %tobool = icmp ne i32 %cond, 0, !dbg !3420
  store i1 %tobool, i1* %retval, !dbg !3420
  br label %return, !dbg !3420

return:                                           ; preds = %if.end12, %if.then11, %if.then3, %if.then
  %11 = load i1* %retval, !dbg !3421
  ret i1 %11, !dbg !3421
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %dirp) #8 {
entry:
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %dp = alloca %struct.dirent*, align 8
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8
  br label %while.body, !dbg !3422

while.body:                                       ; preds = %lor.lhs.false, %entry
  %0 = load %struct.__dirstream** %dirp.addr, align 8, !dbg !3424
  %call = call %struct.dirent* @readdir(%struct.__dirstream* %0), !dbg !3424
  store %struct.dirent* %call, %struct.dirent** %dp, align 8, !dbg !3424
  %1 = load %struct.dirent** %dp, align 8, !dbg !3426
  %cmp = icmp eq %struct.dirent* %1, null, !dbg !3426
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3426

lor.lhs.false:                                    ; preds = %while.body
  %2 = load %struct.dirent** %dp, align 8, !dbg !3428
  %d_name = getelementptr inbounds %struct.dirent* %2, i32 0, i32 4, !dbg !3428
  %arraydecay = getelementptr inbounds [256 x i8]* %d_name, i32 0, i32 0, !dbg !3428
  %call1 = call zeroext i1 @dot_or_dotdot172(i8* %arraydecay), !dbg !3428
  br i1 %call1, label %while.body, label %if.then, !dbg !3428

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %3 = load %struct.dirent** %dp, align 8, !dbg !3429
  ret %struct.dirent* %3, !dbg !3429
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @write_protected_non_symlink(i32 %fd_cwd, i8* %file, %struct.dirstack_state* %ds, %struct.stat* %buf) #0 {
entry:
  %retval = alloca i1, align 1
  %fd_cwd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %buf.addr = alloca %struct.stat*, align 8
  %file_name_len = alloca i64, align 8
  %__o = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store i8* %file, i8** %file.addr, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store %struct.stat* %buf, %struct.stat** %buf.addr, align 8
  %0 = load i32* %fd_cwd.addr, align 4, !dbg !3430
  %1 = load i8** %file.addr, align 8, !dbg !3430
  %2 = load %struct.stat** %buf.addr, align 8, !dbg !3430
  %call = call i32 @cache_fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256), !dbg !3430
  %cmp = icmp ne i32 %call, 0, !dbg !3430
  br i1 %cmp, label %if.then, label %if.end, !dbg !3430

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, !dbg !3433
  br label %return, !dbg !3433

if.end:                                           ; preds = %entry
  %3 = load %struct.stat** %buf.addr, align 8, !dbg !3434
  %st_mode = getelementptr inbounds %struct.stat* %3, i32 0, i32 3, !dbg !3434
  %4 = load i32* %st_mode, align 4, !dbg !3434
  %and = and i32 %4, 61440, !dbg !3434
  %cmp1 = icmp eq i32 %and, 40960, !dbg !3434
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3434

if.then2:                                         ; preds = %if.end
  store i1 false, i1* %retval, !dbg !3436
  br label %return, !dbg !3436

if.end3:                                          ; preds = %if.end
  %5 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3437
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %5, i32 0, i32 0, !dbg !3437
  store %struct.obstack* %dir_stack, %struct.obstack** %__o, align 8, !dbg !3437
  %6 = load %struct.obstack** %__o, align 8, !dbg !3437
  %next_free = getelementptr inbounds %struct.obstack* %6, i32 0, i32 3, !dbg !3437
  %7 = load i8** %next_free, align 8, !dbg !3437
  %8 = load %struct.obstack** %__o, align 8, !dbg !3437
  %object_base = getelementptr inbounds %struct.obstack* %8, i32 0, i32 2, !dbg !3437
  %9 = load i8** %object_base, align 8, !dbg !3437
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64, !dbg !3437
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !3437
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3437
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3437
  store i32 %conv, i32* %tmp, !dbg !3437
  %10 = load i32* %tmp, !dbg !3437
  %conv4 = zext i32 %10 to i64, !dbg !3437
  %11 = load i8** %file.addr, align 8, !dbg !3440
  %call5 = call i64 @strlen(i8* %11) #18, !dbg !3440
  %add = add i64 %conv4, %call5, !dbg !3440
  store i64 %add, i64* %file_name_len, align 8, !dbg !3440
  %12 = load i64* %file_name_len, align 8, !dbg !3441
  %cmp6 = icmp ult i64 %12, 4096, !dbg !3441
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !3441

cond.true:                                        ; preds = %if.end3
  %13 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3442
  %14 = load i8** %file.addr, align 8, !dbg !3442
  %call8 = call i8* @full_filename_(%struct.dirstack_state* %13, i8* %14), !dbg !3442
  %call9 = call i32 @euidaccess(i8* %call8, i32 2) #6, !dbg !3442
  %cmp10 = icmp ne i32 %call9, 0, !dbg !3442
  br i1 %cmp10, label %land.rhs, label %cond.end, !dbg !3442

land.rhs:                                         ; preds = %cond.true
  %call12 = call i32* @__errno_location() #1, !dbg !3442
  %15 = load i32* %call12, align 4, !dbg !3442
  %cmp13 = icmp eq i32 %15, 13, !dbg !3442
  br label %cond.end

cond.false:                                       ; preds = %if.end3
  %16 = load %struct.stat** %buf.addr, align 8, !dbg !3443
  %call15 = call zeroext i1 @euidaccess_stat(%struct.stat* %16, i32 2), !dbg !3443
  %conv16 = zext i1 %call15 to i32, !dbg !3443
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !3443
  br label %cond.end, !dbg !3443

cond.end:                                         ; preds = %cond.true, %land.rhs, %cond.false
  %.sink = phi i1 [ %cmp17, %cond.false ], [ false, %cond.true ], [ %cmp13, %land.rhs ]
  %land.ext = zext i1 %.sink to i32
  %tobool = icmp ne i32 %land.ext, 0, !dbg !3443
  store i1 %tobool, i1* %retval, !dbg !3443
  br label %return, !dbg !3443

return:                                           ; preds = %cond.end, %if.then2, %if.then
  %17 = load i1* %retval, !dbg !3444
  ret i1 %17, !dbg !3444
}

; Function Attrs: nounwind uwtable
define internal i8* @AD_pop_and_chdir(%struct.__dirstream* %dirp, i32* %fdp, %struct.dirstack_state* %ds) #0 {
entry:
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %fdp.addr = alloca i32*, align 8
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %leaf_dir_ent = alloca %struct.AD_ent*, align 8
  %leaf_dev_ino = alloca %struct.dev_ino, align 8
  %old_status = alloca i32, align 4
  %top = alloca %struct.AD_ent*, align 8
  %prev_dir = alloca i8*, align 8
  %sb = alloca %struct.stat, align 8
  %fd = alloca i32, align 4
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8
  store i32* %fdp, i32** %fdp.addr, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3445
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %0), !dbg !3445
  store %struct.AD_ent* %call, %struct.AD_ent** %leaf_dir_ent, align 8, !dbg !3445
  %1 = load %struct.AD_ent** %leaf_dir_ent, align 8, !dbg !3446
  %dev_ino = getelementptr inbounds %struct.AD_ent* %1, i32 0, i32 2, !dbg !3446
  %2 = bitcast %struct.dev_ino* %leaf_dev_ino to i8*, !dbg !3446
  %3 = bitcast %struct.dev_ino* %dev_ino to i8*, !dbg !3446
  %4 = call i8* @memcpy(i8* %2, i8* %3, i64 16)
  %5 = load %struct.AD_ent** %leaf_dir_ent, align 8, !dbg !3447
  %status = getelementptr inbounds %struct.AD_ent* %5, i32 0, i32 1, !dbg !3447
  %6 = load i32* %status, align 4, !dbg !3447
  store i32 %6, i32* %old_status, align 4, !dbg !3447
  %7 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3448
  %call1 = call i8* @top_dir(%struct.dirstack_state* %7), !dbg !3448
  store i8* %call1, i8** %prev_dir, align 8, !dbg !3448
  %8 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3449
  call void @AD_stack_pop(%struct.dirstack_state* %8), !dbg !3449
  %9 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3450
  call void @pop_dir(%struct.dirstack_state* %9), !dbg !3450
  %10 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3451
  %call2 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %10), !dbg !3451
  store %struct.AD_ent* %call2, %struct.AD_ent** %top, align 8, !dbg !3451
  %11 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3452
  %cycle_check_state = getelementptr inbounds %struct.dirstack_state* %11, i32 0, i32 3, !dbg !3452
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state* %cycle_check_state, i32 0, i32 1, !dbg !3452
  %12 = load i64* %chdir_counter, align 8, !dbg !3452
  %cmp = icmp eq i64 %12, 0, !dbg !3452
  br i1 %cmp, label %if.then, label %if.end, !dbg !3452

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !3452
  unreachable, !dbg !3452

if.end:                                           ; preds = %entry
  %13 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3455
  %cycle_check_state3 = getelementptr inbounds %struct.dirstack_state* %13, i32 0, i32 3, !dbg !3455
  %dev_ino4 = getelementptr inbounds %struct.cycle_check_state* %cycle_check_state3, i32 0, i32 0, !dbg !3455
  %st_ino = getelementptr inbounds %struct.dev_ino* %dev_ino4, i32 0, i32 0, !dbg !3455
  %14 = load i64* %st_ino, align 8, !dbg !3455
  %st_ino5 = getelementptr inbounds %struct.dev_ino* %leaf_dev_ino, i32 0, i32 0, !dbg !3455
  %15 = load i64* %st_ino5, align 8, !dbg !3455
  %cmp6 = icmp eq i64 %14, %15, !dbg !3455
  br i1 %cmp6, label %land.lhs.true, label %do.body23, !dbg !3455

land.lhs.true:                                    ; preds = %if.end
  %16 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3455
  %cycle_check_state7 = getelementptr inbounds %struct.dirstack_state* %16, i32 0, i32 3, !dbg !3455
  %dev_ino8 = getelementptr inbounds %struct.cycle_check_state* %cycle_check_state7, i32 0, i32 0, !dbg !3455
  %st_dev = getelementptr inbounds %struct.dev_ino* %dev_ino8, i32 0, i32 1, !dbg !3455
  %17 = load i64* %st_dev, align 8, !dbg !3455
  %st_dev9 = getelementptr inbounds %struct.dev_ino* %leaf_dev_ino, i32 0, i32 1, !dbg !3455
  %18 = load i64* %st_dev9, align 8, !dbg !3455
  %cmp10 = icmp eq i64 %17, %18, !dbg !3455
  br i1 %cmp10, label %if.then11, label %do.body23, !dbg !3455

if.then11:                                        ; preds = %land.lhs.true
  %19 = load %struct.AD_ent** %top, align 8, !dbg !3457
  %dev_ino12 = getelementptr inbounds %struct.AD_ent* %19, i32 0, i32 2, !dbg !3457
  %st_dev13 = getelementptr inbounds %struct.dev_ino* %dev_ino12, i32 0, i32 1, !dbg !3457
  %20 = load i64* %st_dev13, align 8, !dbg !3457
  %21 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3457
  %cycle_check_state14 = getelementptr inbounds %struct.dirstack_state* %21, i32 0, i32 3, !dbg !3457
  %dev_ino15 = getelementptr inbounds %struct.cycle_check_state* %cycle_check_state14, i32 0, i32 0, !dbg !3457
  %st_dev16 = getelementptr inbounds %struct.dev_ino* %dev_ino15, i32 0, i32 1, !dbg !3457
  store i64 %20, i64* %st_dev16, align 8, !dbg !3457
  %22 = load %struct.AD_ent** %top, align 8, !dbg !3457
  %dev_ino17 = getelementptr inbounds %struct.AD_ent* %22, i32 0, i32 2, !dbg !3457
  %st_ino18 = getelementptr inbounds %struct.dev_ino* %dev_ino17, i32 0, i32 0, !dbg !3457
  %23 = load i64* %st_ino18, align 8, !dbg !3457
  %24 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3457
  %cycle_check_state19 = getelementptr inbounds %struct.dirstack_state* %24, i32 0, i32 3, !dbg !3457
  %dev_ino20 = getelementptr inbounds %struct.cycle_check_state* %cycle_check_state19, i32 0, i32 0, !dbg !3457
  %st_ino21 = getelementptr inbounds %struct.dev_ino* %dev_ino20, i32 0, i32 0, !dbg !3457
  store i64 %23, i64* %st_ino21, align 8, !dbg !3457
  br label %do.body23, !dbg !3457

do.body23:                                        ; preds = %if.then11, %land.lhs.true, %if.end
  %25 = load i32* %old_status, align 4, !dbg !3459
  %cmp24 = icmp eq i32 %25, 4, !dbg !3459
  br i1 %cmp24, label %if.then29, label %lor.lhs.false, !dbg !3459

lor.lhs.false:                                    ; preds = %do.body23
  %26 = load i32* %old_status, align 4, !dbg !3459
  %cmp25 = icmp eq i32 %26, 3, !dbg !3459
  br i1 %cmp25, label %land.lhs.true26, label %do.end32, !dbg !3459

land.lhs.true26:                                  ; preds = %lor.lhs.false
  %27 = load %struct.AD_ent** %top, align 8, !dbg !3459
  %status27 = getelementptr inbounds %struct.AD_ent* %27, i32 0, i32 1, !dbg !3459
  %28 = load i32* %status27, align 4, !dbg !3459
  %cmp28 = icmp eq i32 %28, 2, !dbg !3459
  br i1 %cmp28, label %if.then29, label %do.end32, !dbg !3459

if.then29:                                        ; preds = %land.lhs.true26, %do.body23
  %29 = load i32* %old_status, align 4, !dbg !3459
  %30 = load %struct.AD_ent** %top, align 8, !dbg !3459
  %status30 = getelementptr inbounds %struct.AD_ent* %30, i32 0, i32 1, !dbg !3459
  store i32 %29, i32* %status30, align 4, !dbg !3459
  br label %do.end32, !dbg !3459

do.end32:                                         ; preds = %lor.lhs.false, %land.lhs.true26, %if.then29
  %31 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3462
  %call33 = call i64 @AD_stack_height(%struct.dirstack_state* %31), !dbg !3462
  %tobool = icmp ne i64 %call33, 0, !dbg !3462
  br i1 %tobool, label %cond.end, label %cond.false, !dbg !3462

cond.false:                                       ; preds = %do.end32
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8]* @.str30147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 489, i8* getelementptr inbounds ([55 x i8]* @__PRETTY_FUNCTION__.AD_pop_and_chdir, i32 0, i32
  unreachable, !dbg !3462

cond.end:                                         ; preds = %do.end32
  %32 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3463
  %call34 = call i64 @AD_stack_height(%struct.dirstack_state* %32), !dbg !3463
  %cmp35 = icmp ult i64 1, %call34, !dbg !3463
  %33 = load %struct.__dirstream** %dirp.addr, align 8, !dbg !3465
  br i1 %cmp35, label %if.then36, label %if.else, !dbg !3463

if.then36:                                        ; preds = %cond.end
  %call37 = call i32 @dirfd(%struct.__dirstream* %33) #6, !dbg !3465
  %call38 = call i32 (i32, i8*, i32, ...)* @openat(i32 %call37, i8* getelementptr inbounds ([3 x i8]* @.str31148, i32 0, i32 0), i32 0), !dbg !3465
  store i32 %call38, i32* %fd, align 4, !dbg !3465
  %34 = load %struct.__dirstream** %dirp.addr, align 8, !dbg !3467
  %call39 = call i32 @closedir(%struct.__dirstream* %34), !dbg !3467
  %cmp40 = icmp ne i32 %call39, 0, !dbg !3467
  br i1 %cmp40, label %if.then41, label %if.end45, !dbg !3467

if.then41:                                        ; preds = %if.then36
  %call42 = call i32* @__errno_location() #1, !dbg !3469
  %35 = load i32* %call42, align 4, !dbg !3469
  %conv = sext i32 %35 to i64, !dbg !3469
  %36 = inttoptr i64 %conv to i32* (...)*, !dbg !3469
  %37 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3469
  %38 = load i8** %prev_dir, align 8, !dbg !3469
  %call43 = call i8* @full_filename_(%struct.dirstack_state* %37, i8* %38), !dbg !3469
  %call44 = call i8* @quote(i8* %call43), !dbg !3469
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %36, i8* getelementptr inbounds ([36 x i8]* @.str32149, i32 0, i32 0), i8* %call44), !dbg !3469
  br label %next_cmdline_arg, !dbg !3471

if.end45:                                         ; preds = %if.then36
  %39 = load i32* %fd, align 4, !dbg !3472
  %cmp46 = icmp slt i32 %39, 0, !dbg !3472
  br i1 %cmp46, label %if.then48, label %if.end51, !dbg !3472

if.then48:                                        ; preds = %if.end45
  %40 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3474
  %call49 = call i8* @full_filename_(%struct.dirstack_state* %40, i8* getelementptr inbounds ([2 x i8]* @.str24141, i32 0, i32 0)), !dbg !3474
  %call50 = call i32 (i32, i8*, i32, ...)* @openat(i32 -100, i8* %call49, i32 0), !dbg !3474
  store i32 %call50, i32* %fd, align 4, !dbg !3474
  br label %if.end51, !dbg !3474

if.end51:                                         ; preds = %if.then48, %if.end45
  %41 = load i32* %fd, align 4, !dbg !3475
  %cmp52 = icmp slt i32 %41, 0, !dbg !3475
  br i1 %cmp52, label %if.then54, label %if.end59, !dbg !3475

if.then54:                                        ; preds = %if.end51
  %call55 = call i32* @__errno_location() #1, !dbg !3477
  %42 = load i32* %call55, align 4, !dbg !3477
  %conv56 = sext i32 %42 to i64, !dbg !3477
  %43 = inttoptr i64 %conv56 to i32* (...)*, !dbg !3477
  %44 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3477
  %45 = load i8** %prev_dir, align 8, !dbg !3477
  %call57 = call i8* @full_filename_(%struct.dirstack_state* %44, i8* %45), !dbg !3477
  %call58 = call i8* @quote(i8* %call57), !dbg !3477
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %43, i8* getelementptr inbounds ([30 x i8]* @.str33150, i32 0, i32 0), i8* %call58), !dbg !3477
  br label %next_cmdline_arg, !dbg !3479

if.end59:                                         ; preds = %if.end51
  %46 = load i32* %fd, align 4, !dbg !3480
  %call60 = call i32 @fstat(i32 %46, %struct.stat* %sb) #6, !dbg !3480
  %tobool61 = icmp ne i32 %call60, 0, !dbg !3480
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !3480

if.then62:                                        ; preds = %if.end59
  %call63 = call i32* @__errno_location() #1, !dbg !3482
  %47 = load i32* %call63, align 4, !dbg !3482
  %conv64 = sext i32 %47 to i64, !dbg !3482
  %48 = inttoptr i64 %conv64 to i32* (...)*, !dbg !3482
  %49 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3482
  %call65 = call i8* @full_filename_(%struct.dirstack_state* %49, i8* getelementptr inbounds ([2 x i8]* @.str24141, i32 0, i32 0)), !dbg !3482
  %call66 = call i8* @quote(i8* %call65), !dbg !3482
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %48, i8* getelementptr inbounds ([53 x i8]* @.str34151, i32 0, i32 0), i8* %call66), !dbg !3482
  br label %close_and_next, !dbg !3484

if.end67:                                         ; preds = %if.end59
  %st_ino68 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 1, !dbg !3485
  %50 = load i64* %st_ino68, align 8, !dbg !3485
  %51 = load %struct.AD_ent** %top, align 8, !dbg !3485
  %dev_ino69 = getelementptr inbounds %struct.AD_ent* %51, i32 0, i32 2, !dbg !3485
  %st_ino70 = getelementptr inbounds %struct.dev_ino* %dev_ino69, i32 0, i32 0, !dbg !3485
  %52 = load i64* %st_ino70, align 8, !dbg !3485
  %cmp71 = icmp eq i64 %50, %52, !dbg !3485
  br i1 %cmp71, label %land.lhs.true73, label %if.then79, !dbg !3485

land.lhs.true73:                                  ; preds = %if.end67
  %st_dev74 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 0, !dbg !3485
  %53 = load i64* %st_dev74, align 8, !dbg !3485
  %54 = load %struct.AD_ent** %top, align 8, !dbg !3485
  %dev_ino75 = getelementptr inbounds %struct.AD_ent* %54, i32 0, i32 2, !dbg !3485
  %st_dev76 = getelementptr inbounds %struct.dev_ino* %dev_ino75, i32 0, i32 1, !dbg !3485
  %55 = load i64* %st_dev76, align 8, !dbg !3485
  %cmp77 = icmp eq i64 %53, %55, !dbg !3485
  br i1 %cmp77, label %if.end83, label %if.then79, !dbg !3485

if.then79:                                        ; preds = %land.lhs.true73, %if.end67
  %56 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3487
  %call80 = call i8* @full_filename_(%struct.dirstack_state* %56, i8* getelementptr inbounds ([2 x i8]* @.str24141, i32 0, i32 0)), !dbg !3487
  %call81 = call i8* @quote(i8* %call80), !dbg !3487
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* null, i8* getelementptr inbounds ([36 x i8]* @.str35152, i32 0, i32 0), i8* %call81), !dbg !3487
  br label %close_and_next, !dbg !3487

close_and_next:                                   ; preds = %if.then79, %if.then62
  %57 = load i32* %fd, align 4, !dbg !3489
  %call82 = call i32 @close(i32 %57), !dbg !3489
  br label %next_cmdline_arg, !dbg !3489

next_cmdline_arg:                                 ; preds = %if.then87, %close_and_next, %if.then54, %if.then41
  %58 = load i8** %prev_dir, align 8, !dbg !3490
  call void @free(i8* %58) #6, !dbg !3490
  %59 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3491
  %current_arg_jumpbuf = getelementptr inbounds %struct.dirstack_state* %59, i32 0, i32 4, !dbg !3491
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag]* %current_arg_jumpbuf, i32 0, i32 0, !dbg !3491
  call void @longjmp(%struct.__jmp_buf_tag* %arraydecay, i32 1) #17, !dbg !3491
  unreachable, !dbg !3491

if.end83:                                         ; preds = %land.lhs.true73
  %60 = load i32* %fd, align 4, !dbg !3492
  %61 = load i32** %fdp.addr, align 8, !dbg !3492
  store i32 %60, i32* %61, align 4, !dbg !3492
  br label %if.end93, !dbg !3493

if.else:                                          ; preds = %cond.end
  %call84 = call i32 @closedir(%struct.__dirstream* %33), !dbg !3494
  %cmp85 = icmp ne i32 %call84, 0, !dbg !3494
  br i1 %cmp85, label %if.then87, label %if.end92, !dbg !3494

if.then87:                                        ; preds = %if.else
  %call88 = call i32* @__errno_location() #1, !dbg !3497
  %62 = load i32* %call88, align 4, !dbg !3497
  %conv89 = sext i32 %62 to i64, !dbg !3497
  %63 = inttoptr i64 %conv89 to i32* (...)*, !dbg !3497
  %64 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3497
  %65 = load i8** %prev_dir, align 8, !dbg !3497
  %call90 = call i8* @full_filename_(%struct.dirstack_state* %64, i8* %65), !dbg !3497
  %call91 = call i8* @quote(i8* %call90), !dbg !3497
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %63, i8* getelementptr inbounds ([36 x i8]* @.str32149, i32 0, i32 0), i8* %call91), !dbg !3497
  br label %next_cmdline_arg, !dbg !3499

if.end92:                                         ; preds = %if.else
  %66 = load i32** %fdp.addr, align 8, !dbg !3500
  store i32 -100, i32* %66, align 4, !dbg !3500
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.end83
  %67 = load i8** %prev_dir, align 8, !dbg !3501
  ret i8* %67, !dbg !3501
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pop_dir(%struct.dirstack_state* %ds) #8 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %n_lengths = alloca i64, align 8
  %__o = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  %length = alloca i64*, align 8
  %top_len = alloca i64, align 8
  %__o13 = alloca %struct.obstack*, align 8
  %tmp14 = alloca i32, align 4
  %__o28 = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %__o42 = alloca %struct.obstack*, align 8
  %tmp44 = alloca i32, align 4
  %__o58 = alloca %struct.obstack*, align 8
  %__len61 = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3502
  %len_stack = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 1, !dbg !3502
  store %struct.obstack* %len_stack, %struct.obstack** %__o, align 8, !dbg !3502
  %1 = load %struct.obstack** %__o, align 8, !dbg !3502
  %next_free = getelementptr inbounds %struct.obstack* %1, i32 0, i32 3, !dbg !3502
  %2 = load i8** %next_free, align 8, !dbg !3502
  %3 = load %struct.obstack** %__o, align 8, !dbg !3502
  %object_base = getelementptr inbounds %struct.obstack* %3, i32 0, i32 2, !dbg !3502
  %4 = load i8** %object_base, align 8, !dbg !3502
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !3502
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !3502
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3502
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3502
  store i32 %conv, i32* %tmp, !dbg !3502
  %5 = load i32* %tmp, !dbg !3502
  %conv1 = zext i32 %5 to i64, !dbg !3502
  %int_cast_to_i64 = bitcast i64 8 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !3502
  %div = udiv i64 %conv1, 8, !dbg !3502
  store i64 %div, i64* %n_lengths, align 8, !dbg !3502
  %6 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3504
  %len_stack3 = getelementptr inbounds %struct.dirstack_state* %6, i32 0, i32 1, !dbg !3504
  %object_base4 = getelementptr inbounds %struct.obstack* %len_stack3, i32 0, i32 2, !dbg !3504
  %7 = load i8** %object_base4, align 8, !dbg !3504
  %8 = bitcast i8* %7 to i64*, !dbg !3504
  store i64* %8, i64** %length, align 8, !dbg !3504
  %9 = load i64* %n_lengths, align 8, !dbg !3505
  %cmp = icmp ugt i64 %9, 0, !dbg !3505
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !3505

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str36153, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([31 x i8]* @__PRETTY_FUNCTION__.pop_dir, i32 0, i32 0)) #17,
  unreachable, !dbg !3505

cond.end:                                         ; preds = %entry
  %10 = load i64* %n_lengths, align 8, !dbg !3506
  %sub = sub i64 %10, 1, !dbg !3506
  %11 = load i64** %length, align 8, !dbg !3506
  %arrayidx = getelementptr inbounds i64* %11, i64 %sub, !dbg !3506
  %12 = load i64* %arrayidx, align 8, !dbg !3506
  store i64 %12, i64* %top_len, align 8, !dbg !3506
  %13 = load i64* %top_len, align 8, !dbg !3507
  %cmp7 = icmp uge i64 %13, 2, !dbg !3507
  br i1 %cmp7, label %cond.end11, label %cond.false10, !dbg !3507

cond.false10:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8]* @.str37154, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 258, i8* getelementptr inbounds ([31 x i8]* @__PRETTY_FUNCTION__.pop_dir, i32 0, i32 0)) #17,
  unreachable, !dbg !3507

cond.end11:                                       ; preds = %cond.end
  %14 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3508
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %14, i32 0, i32 0, !dbg !3508
  store %struct.obstack* %dir_stack, %struct.obstack** %__o13, align 8, !dbg !3508
  %15 = load %struct.obstack** %__o13, align 8, !dbg !3508
  %next_free15 = getelementptr inbounds %struct.obstack* %15, i32 0, i32 3, !dbg !3508
  %16 = load i8** %next_free15, align 8, !dbg !3508
  %17 = load %struct.obstack** %__o13, align 8, !dbg !3508
  %object_base16 = getelementptr inbounds %struct.obstack* %17, i32 0, i32 2, !dbg !3508
  %18 = load i8** %object_base16, align 8, !dbg !3508
  %sub.ptr.lhs.cast17 = ptrtoint i8* %16 to i64, !dbg !3508
  %sub.ptr.rhs.cast18 = ptrtoint i8* %18 to i64, !dbg !3508
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18, !dbg !3508
  %conv20 = trunc i64 %sub.ptr.sub19 to i32, !dbg !3508
  store i32 %conv20, i32* %tmp14, !dbg !3508
  %19 = load i32* %tmp14, !dbg !3508
  %conv21 = zext i32 %19 to i64, !dbg !3508
  %20 = load i64* %top_len, align 8, !dbg !3508
  %cmp22 = icmp uge i64 %conv21, %20, !dbg !3508
  br i1 %cmp22, label %cond.end26, label %cond.false25, !dbg !3508

cond.false25:                                     ; preds = %cond.end11
  call void @__assert_fail(i8* getelementptr inbounds ([125 x i8]* @.str38155, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 261, i8* getelementptr inbounds ([31 x i8]* @__PRETTY_FUNCTION__.pop_dir, i32 0, i32 0)) #17
  unreachable, !dbg !3510

cond.end26:                                       ; preds = %cond.end11
  %21 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3511
  %dir_stack29 = getelementptr inbounds %struct.dirstack_state* %21, i32 0, i32 0, !dbg !3511
  store %struct.obstack* %dir_stack29, %struct.obstack** %__o28, align 8, !dbg !3511
  %22 = load i64* %top_len, align 8, !dbg !3511
  %sub31 = sub i64 0, %22, !dbg !3511
  %conv32 = trunc i64 %sub31 to i32, !dbg !3511
  store i32 %conv32, i32* %__len, align 4, !dbg !3511
  %23 = load %struct.obstack** %__o28, align 8, !dbg !3513
  %chunk_limit = getelementptr inbounds %struct.obstack* %23, i32 0, i32 4, !dbg !3513
  %24 = load i8** %chunk_limit, align 8, !dbg !3513
  %25 = load %struct.obstack** %__o28, align 8, !dbg !3513
  %next_free33 = getelementptr inbounds %struct.obstack* %25, i32 0, i32 3, !dbg !3513
  %26 = load i8** %next_free33, align 8, !dbg !3513
  %sub.ptr.lhs.cast34 = ptrtoint i8* %24 to i64, !dbg !3513
  %sub.ptr.rhs.cast35 = ptrtoint i8* %26 to i64, !dbg !3513
  %sub.ptr.sub36 = sub i64 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast35, !dbg !3513
  %27 = load i32* %__len, align 4, !dbg !3513
  %conv37 = sext i32 %27 to i64, !dbg !3513
  %cmp38 = icmp slt i64 %sub.ptr.sub36, %conv37, !dbg !3513
  br i1 %cmp38, label %if.then, label %if.end, !dbg !3513

if.then:                                          ; preds = %cond.end26
  %28 = load %struct.obstack** %__o28, align 8, !dbg !3513
  %29 = load i32* %__len, align 4, !dbg !3513
  call void @_obstack_newchunk(%struct.obstack* %28, i32 %29), !dbg !3513
  br label %if.end, !dbg !3513

if.end:                                           ; preds = %if.then, %cond.end26
  %30 = load i32* %__len, align 4, !dbg !3511
  %31 = load %struct.obstack** %__o28, align 8, !dbg !3511
  %next_free40 = getelementptr inbounds %struct.obstack* %31, i32 0, i32 3, !dbg !3511
  %32 = load i8** %next_free40, align 8, !dbg !3511
  %idx.ext = sext i32 %30 to i64, !dbg !3511
  %add.ptr = getelementptr inbounds i8* %32, i64 %idx.ext, !dbg !3511
  store i8* %add.ptr, i8** %next_free40, align 8, !dbg !3511
  %33 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3515
  %len_stack43 = getelementptr inbounds %struct.dirstack_state* %33, i32 0, i32 1, !dbg !3515
  store %struct.obstack* %len_stack43, %struct.obstack** %__o42, align 8, !dbg !3515
  %34 = load %struct.obstack** %__o42, align 8, !dbg !3515
  %next_free45 = getelementptr inbounds %struct.obstack* %34, i32 0, i32 3, !dbg !3515
  %35 = load i8** %next_free45, align 8, !dbg !3515
  %36 = load %struct.obstack** %__o42, align 8, !dbg !3515
  %object_base46 = getelementptr inbounds %struct.obstack* %36, i32 0, i32 2, !dbg !3515
  %37 = load i8** %object_base46, align 8, !dbg !3515
  %sub.ptr.lhs.cast47 = ptrtoint i8* %35 to i64, !dbg !3515
  %sub.ptr.rhs.cast48 = ptrtoint i8* %37 to i64, !dbg !3515
  %sub.ptr.sub49 = sub i64 %sub.ptr.lhs.cast47, %sub.ptr.rhs.cast48, !dbg !3515
  %conv50 = trunc i64 %sub.ptr.sub49 to i32, !dbg !3515
  store i32 %conv50, i32* %tmp44, !dbg !3515
  %38 = load i32* %tmp44, !dbg !3515
  %conv51 = zext i32 %38 to i64, !dbg !3515
  %cmp52 = icmp uge i64 %conv51, 8, !dbg !3515
  br i1 %cmp52, label %cond.end56, label %cond.false55, !dbg !3515

cond.false55:                                     ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([133 x i8]* @.str39156, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 265, i8* getelementptr inbounds ([31 x i8]* @__PRETTY_FUNCTION__.pop_dir, i32 0, i32 0)) #17
  unreachable, !dbg !3517

cond.end56:                                       ; preds = %if.end
  %39 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3518
  %len_stack59 = getelementptr inbounds %struct.dirstack_state* %39, i32 0, i32 1, !dbg !3518
  store %struct.obstack* %len_stack59, %struct.obstack** %__o58, align 8, !dbg !3518
  store i32 -8, i32* %__len61, align 4, !dbg !3518
  %40 = load %struct.obstack** %__o58, align 8, !dbg !3520
  %chunk_limit62 = getelementptr inbounds %struct.obstack* %40, i32 0, i32 4, !dbg !3520
  %41 = load i8** %chunk_limit62, align 8, !dbg !3520
  %42 = load %struct.obstack** %__o58, align 8, !dbg !3520
  %next_free63 = getelementptr inbounds %struct.obstack* %42, i32 0, i32 3, !dbg !3520
  %43 = load i8** %next_free63, align 8, !dbg !3520
  %sub.ptr.lhs.cast64 = ptrtoint i8* %41 to i64, !dbg !3520
  %sub.ptr.rhs.cast65 = ptrtoint i8* %43 to i64, !dbg !3520
  %sub.ptr.sub66 = sub i64 %sub.ptr.lhs.cast64, %sub.ptr.rhs.cast65, !dbg !3520
  %44 = load i32* %__len61, align 4, !dbg !3520
  %conv67 = sext i32 %44 to i64, !dbg !3520
  %cmp68 = icmp slt i64 %sub.ptr.sub66, %conv67, !dbg !3520
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !3520

if.then70:                                        ; preds = %cond.end56
  %45 = load %struct.obstack** %__o58, align 8, !dbg !3520
  %46 = load i32* %__len61, align 4, !dbg !3520
  call void @_obstack_newchunk(%struct.obstack* %45, i32 %46), !dbg !3520
  br label %if.end71, !dbg !3520

if.end71:                                         ; preds = %if.then70, %cond.end56
  %47 = load i32* %__len61, align 4, !dbg !3518
  %48 = load %struct.obstack** %__o58, align 8, !dbg !3518
  %next_free72 = getelementptr inbounds %struct.obstack* %48, i32 0, i32 3, !dbg !3518
  %49 = load i8** %next_free72, align 8, !dbg !3518
  %idx.ext73 = sext i32 %47 to i64, !dbg !3518
  %add.ptr74 = getelementptr inbounds i8* %49, i64 %idx.ext73, !dbg !3518
  store i8* %add.ptr74, i8** %next_free72, align 8, !dbg !3518
  ret void, !dbg !3522
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @top_dir(%struct.dirstack_state* %ds) #8 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %n_lengths = alloca i64, align 8
  %__o = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  %length = alloca i64*, align 8
  %top_len = alloca i64, align 8
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3523
  %len_stack = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 1, !dbg !3523
  store %struct.obstack* %len_stack, %struct.obstack** %__o, align 8, !dbg !3523
  %1 = load %struct.obstack** %__o, align 8, !dbg !3523
  %next_free = getelementptr inbounds %struct.obstack* %1, i32 0, i32 3, !dbg !3523
  %2 = load i8** %next_free, align 8, !dbg !3523
  %3 = load %struct.obstack** %__o, align 8, !dbg !3523
  %object_base = getelementptr inbounds %struct.obstack* %3, i32 0, i32 2, !dbg !3523
  %4 = load i8** %object_base, align 8, !dbg !3523
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !3523
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !3523
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3523
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3523
  store i32 %conv, i32* %tmp, !dbg !3523
  %5 = load i32* %tmp, !dbg !3523
  %conv1 = zext i32 %5 to i64, !dbg !3523
  %int_cast_to_i64 = bitcast i64 8 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !3523
  %div = udiv i64 %conv1, 8, !dbg !3523
  store i64 %div, i64* %n_lengths, align 8, !dbg !3523
  %6 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3525
  %len_stack3 = getelementptr inbounds %struct.dirstack_state* %6, i32 0, i32 1, !dbg !3525
  %object_base4 = getelementptr inbounds %struct.obstack* %len_stack3, i32 0, i32 2, !dbg !3525
  %7 = load i8** %object_base4, align 8, !dbg !3525
  %8 = bitcast i8* %7 to i64*, !dbg !3525
  store i64* %8, i64** %length, align 8, !dbg !3525
  %9 = load i64* %n_lengths, align 8, !dbg !3526
  %sub = sub i64 %9, 1, !dbg !3526
  %10 = load i64** %length, align 8, !dbg !3526
  %arrayidx = getelementptr inbounds i64* %10, i64 %sub, !dbg !3526
  %11 = load i64* %arrayidx, align 8, !dbg !3526
  store i64 %11, i64* %top_len, align 8, !dbg !3526
  %12 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3527
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %12, i32 0, i32 0, !dbg !3527
  %next_free7 = getelementptr inbounds %struct.obstack* %dir_stack, i32 0, i32 3, !dbg !3527
  %13 = load i8** %next_free7, align 8, !dbg !3527
  %14 = load i64* %top_len, align 8, !dbg !3527
  %idx.neg = sub i64 0, %14, !dbg !3527
  %add.ptr = getelementptr inbounds i8* %13, i64 %idx.neg, !dbg !3527
  store i8* %add.ptr, i8** %p, align 8, !dbg !3527
  %15 = load i64* %top_len, align 8, !dbg !3528
  %call = call i8* @xmalloc(i64 %15), !dbg !3528
  store i8* %call, i8** %q, align 8, !dbg !3528
  %16 = load i8** %q, align 8, !dbg !3529
  %17 = load i8** %p, align 8, !dbg !3529
  %18 = load i64* %top_len, align 8, !dbg !3529
  %sub9 = sub i64 %18, 1, !dbg !3529
  %19 = call i8* @memcpy(i8* %16, i8* %17, i64 %sub9)
  %20 = load i64* %top_len, align 8, !dbg !3530
  %sub10 = sub i64 %20, 1, !dbg !3530
  %21 = load i8** %q, align 8, !dbg !3530
  %arrayidx11 = getelementptr inbounds i8* %21, i64 %sub10, !dbg !3530
  store i8 0, i8* %arrayidx11, align 1, !dbg !3530
  %22 = load i8** %q, align 8, !dbg !3531
  ret i8* %22, !dbg !3531
}

; Function Attrs: nounwind uwtable
define internal void @AD_mark_current_as_unremovable(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %top = alloca %struct.AD_ent*, align 8
  %curr = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3532
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %0), !dbg !3532
  store %struct.AD_ent* %call, %struct.AD_ent** %top, align 8, !dbg !3532
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3533
  %call1 = call i8* @top_dir(%struct.dirstack_state* %1), !dbg !3533
  store i8* %call1, i8** %curr, align 8, !dbg !3533
  %2 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3534
  %call2 = call i64 @AD_stack_height(%struct.dirstack_state* %2), !dbg !3534
  %cmp = icmp ult i64 1, %call2, !dbg !3534
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !3534

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8]* @.str40157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 613, i8* getelementptr inbounds ([54 x i8]* @__PRETTY_FUNCTION__.AD_mark_current_as_unremovab
  unreachable, !dbg !3534

cond.end:                                         ; preds = %entry
  %3 = load %struct.AD_ent** %top, align 8, !dbg !3535
  %incdec.ptr = getelementptr inbounds %struct.AD_ent* %3, i32 -1, !dbg !3535
  store %struct.AD_ent* %incdec.ptr, %struct.AD_ent** %top, align 8, !dbg !3535
  %4 = load %struct.AD_ent** %top, align 8, !dbg !3536
  %unremovable = getelementptr inbounds %struct.AD_ent* %4, i32 0, i32 0, !dbg !3536
  %5 = load i8** %curr, align 8, !dbg !3536
  call void @AD_mark_helper(%struct.hash_table** %unremovable, i8* %5), !dbg !3536
  ret void, !dbg !3537
}

; Function Attrs: nounwind uwtable
define internal i32 @remove_cwd_entries(%struct.__dirstream** %dirp, %struct.dirstack_state* %ds, i8** %subdir, %struct.stat* %subdir_sb, %struct.rm_options* %x) #0 {
entry:
  %dirp.addr = alloca %struct.__dirstream**, align 8
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %subdir.addr = alloca i8**, align 8
  %subdir_sb.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %top = alloca %struct.AD_ent*, align 8
  %status = alloca i32, align 4
  %n_unlinked_since_opendir_or_last_rewind = alloca i64, align 8
  %dp = alloca %struct.dirent*, align 8
  %tmp_status = alloca i32, align 4
  %f = alloca i8*, align 8
  %subdir_dirp = alloca %struct.__dirstream*, align 8
  %saved_errno = alloca i32, align 4
  store %struct.__dirstream** %dirp, %struct.__dirstream*** %dirp.addr, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8** %subdir, i8*** %subdir.addr, align 8
  store %struct.stat* %subdir_sb, %struct.stat** %subdir_sb.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3538
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %0), !dbg !3538
  store %struct.AD_ent* %call, %struct.AD_ent** %top, align 8, !dbg !3538
  %1 = load %struct.AD_ent** %top, align 8, !dbg !3539
  %status1 = getelementptr inbounds %struct.AD_ent* %1, i32 0, i32 1, !dbg !3539
  %2 = load i32* %status1, align 4, !dbg !3539
  store i32 %2, i32* %status, align 4, !dbg !3539
  store i64 0, i64* %n_unlinked_since_opendir_or_last_rewind, align 8, !dbg !3540
  %3 = load i32* %status, align 4, !dbg !3541
  %cmp = icmp eq i32 %3, 2, !dbg !3541
  %4 = load i32* %status, align 4, !dbg !3541
  %cmp2 = icmp eq i32 %4, 3, !dbg !3541
  %or.cond = or i1 %cmp, %cmp2, !dbg !3541
  %5 = load i32* %status, align 4, !dbg !3541
  %cmp4 = icmp eq i32 %5, 4, !dbg !3541
  %or.cond1 = or i1 %or.cond, %cmp4, !dbg !3541
  br i1 %or.cond1, label %cond.end, label %cond.false, !dbg !3541

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([76 x i8]* @.str41158, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 1231, i8* getelementptr inbounds ([111 x i8]* @__PRETTY_FUNCTION__.remove_cwd_entries, i32 0,
  unreachable, !dbg !3541

cond.end:                                         ; preds = %entry
  %6 = load i8*** %subdir.addr, align 8, !dbg !3542
  store i8* null, i8** %6, align 8, !dbg !3542
  br label %while.body, !dbg !3543

while.body:                                       ; preds = %do.end73, %if.end13, %if.then11, %cond.end
  %call5 = call i32* @__errno_location() #1, !dbg !3544
  store i32 0, i32* %call5, align 4, !dbg !3544
  %7 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !3546
  %8 = load %struct.__dirstream** %7, align 8, !dbg !3546
  %call6 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %8), !dbg !3546
  store %struct.dirent* %call6, %struct.dirent** %dp, align 8, !dbg !3546
  %9 = load %struct.dirent** %dp, align 8, !dbg !3547
  %cmp7 = icmp eq %struct.dirent* %9, null, !dbg !3547
  br i1 %cmp7, label %if.then, label %if.end13, !dbg !3547

if.then:                                          ; preds = %while.body
  %call8 = call i32* @__errno_location() #1, !dbg !3549
  %10 = load i32* %call8, align 4, !dbg !3549
  %tobool = icmp eq i32 %10, 0, !dbg !3549
  %11 = load i64* %n_unlinked_since_opendir_or_last_rewind, align 8, !dbg !3552
  %cmp10 = icmp ule i64 10, %11, !dbg !3552
  %or.cond3 = and i1 %tobool, %cmp10, !dbg !3549
  br i1 %or.cond3, label %if.then11, label %while.end, !dbg !3549

if.then11:                                        ; preds = %if.then
  %12 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !3554
  %13 = load %struct.__dirstream** %12, align 8, !dbg !3554
  call void @rewinddir(%struct.__dirstream* %13) #6, !dbg !3554
  store i64 0, i64* %n_unlinked_since_opendir_or_last_rewind, align 8, !dbg !3556
  br label %while.body, !dbg !3557

if.end13:                                         ; preds = %while.body
  %14 = load %struct.dirent** %dp, align 8, !dbg !3558
  %d_name = getelementptr inbounds %struct.dirent* %14, i32 0, i32 4, !dbg !3558
  %arraydecay = getelementptr inbounds [256 x i8]* %d_name, i32 0, i32 0, !dbg !3558
  store i8* %arraydecay, i8** %f, align 8, !dbg !3558
  %15 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3559
  %16 = load i8** %f, align 8, !dbg !3559
  %call14 = call zeroext i1 @AD_is_removable(%struct.dirstack_state* %15, i8* %16), !dbg !3559
  br i1 %call14, label %if.end16, label %while.body, !dbg !3559

if.end16:                                         ; preds = %if.end13
  %17 = load %struct.stat** %subdir_sb.addr, align 8, !dbg !3561
  %call17 = call %struct.stat* @cache_stat_init(%struct.stat* %17), !dbg !3561
  %18 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !3562
  %19 = load %struct.__dirstream** %18, align 8, !dbg !3562
  %call18 = call i32 @dirfd(%struct.__dirstream* %19) #6, !dbg !3562
  %20 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3562
  %21 = load i8** %f, align 8, !dbg !3562
  %22 = load %struct.stat** %subdir_sb.addr, align 8, !dbg !3562
  %23 = load %struct.rm_options** %x.addr, align 8, !dbg !3562
  %24 = load %struct.dirent** %dp, align 8, !dbg !3562
  %call19 = call i32 @remove_entry(i32 %call18, %struct.dirstack_state* %20, i8* %21, %struct.stat* %22, %struct.rm_options* %23, %struct.dirent* %24), !dbg !3562
  store i32 %call19, i32* %tmp_status, align 4, !dbg !3562
  %25 = load i32* %tmp_status, align 4, !dbg !3563
  switch i32 %25, label %do.body60 [
    i32 2, label %sw.bb
    i32 4, label %sw.bb20
    i32 3, label %sw.bb20
    i32 5, label %sw.bb27
  ], !dbg !3563

sw.bb:                                            ; preds = %if.end16
  %26 = load i64* %n_unlinked_since_opendir_or_last_rewind, align 8, !dbg !3564
  %inc = add i64 %26, 1, !dbg !3564
  store i64 %inc, i64* %n_unlinked_since_opendir_or_last_rewind, align 8, !dbg !3564
  br label %do.body60, !dbg !3566

sw.bb20:                                          ; preds = %if.end16, %if.end16
  %27 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3567
  %28 = load i8** %f, align 8, !dbg !3567
  call void @AD_mark_as_unremovable(%struct.dirstack_state* %27, i8* %28), !dbg !3567
  %29 = load i32* %tmp_status, align 4, !dbg !3568
  %cmp21 = icmp eq i32 %29, 4, !dbg !3568
  br i1 %cmp21, label %if.then25, label %lor.lhs.false22, !dbg !3568

lor.lhs.false22:                                  ; preds = %sw.bb20
  %30 = load i32* %tmp_status, align 4, !dbg !3568
  %cmp23 = icmp eq i32 %30, 3, !dbg !3568
  %31 = load i32* %status, align 4, !dbg !3568
  %cmp24 = icmp eq i32 %31, 2, !dbg !3568
  %or.cond2 = and i1 %cmp23, %cmp24, !dbg !3568
  br i1 %or.cond2, label %if.then25, label %do.body60, !dbg !3568

if.then25:                                        ; preds = %lor.lhs.false22, %sw.bb20
  %32 = load i32* %tmp_status, align 4, !dbg !3568
  store i32 %32, i32* %status, align 4, !dbg !3568
  br label %do.body60, !dbg !3568

sw.bb27:                                          ; preds = %if.end16
  %33 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !3571
  %34 = load %struct.__dirstream** %33, align 8, !dbg !3571
  %call28 = call i32 @dirfd(%struct.__dirstream* %34) #6, !dbg !3571
  %35 = load i8** %f, align 8, !dbg !3571
  %36 = load %struct.rm_options** %x.addr, align 8, !dbg !3571
  %call29 = call i32* @__errno_location() #1, !dbg !3573
  %37 = load i32* %call29, align 4, !dbg !3573
  %38 = load %struct.stat** %subdir_sb.addr, align 8, !dbg !3571
  %call30 = call %struct.__dirstream* @fd_to_subdirp(i32 %call28, i8* %35, %struct.rm_options* %36, i32 %37, %struct.stat* %38, i32* null), !dbg !3571
  store %struct.__dirstream* %call30, %struct.__dirstream** %subdir_dirp, align 8, !dbg !3571
  %39 = load %struct.__dirstream** %subdir_dirp, align 8, !dbg !3574
  %cmp31 = icmp eq %struct.__dirstream* %39, null, !dbg !3574
  br i1 %cmp31, label %if.then32, label %if.end51, !dbg !3574

if.then32:                                        ; preds = %sw.bb27
  store i32 4, i32* %status, align 4, !dbg !3576
  %40 = load %struct.rm_options** %x.addr, align 8, !dbg !3578
  %call33 = call i32* @__errno_location() #1, !dbg !3580
  %41 = load i32* %call33, align 4, !dbg !3580
  %call34 = call zeroext i1 @ignorable_missing(%struct.rm_options* %40, i32 %41), !dbg !3578
  br i1 %call34, label %if.end46, label %if.else36, !dbg !3578

if.else36:                                        ; preds = %if.then32
  %call37 = call i32* @__errno_location() #1, !dbg !3581
  %42 = load i32* %call37, align 4, !dbg !3581
  store i32 %42, i32* %saved_errno, align 4, !dbg !3581
  %43 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !3583
  %44 = load %struct.__dirstream** %43, align 8, !dbg !3583
  %call38 = call i32 @dirfd(%struct.__dirstream* %44) #6, !dbg !3583
  %45 = load i8** %f, align 8, !dbg !3583
  %call39 = call i32 @unlinkat(i32 %call38, i8* %45, i32 512) #6, !dbg !3583
  %cmp40 = icmp eq i32 %call39, 0, !dbg !3583
  br i1 %cmp40, label %if.then41, label %if.else42, !dbg !3583

if.then41:                                        ; preds = %if.else36
  store i32 2, i32* %status, align 4, !dbg !3585
  br label %if.end46, !dbg !3585

if.else42:                                        ; preds = %if.else36
  %46 = load i32* %saved_errno, align 4, !dbg !3586
  %conv = sext i32 %46 to i64, !dbg !3586
  %47 = inttoptr i64 %conv to i32* (...)*, !dbg !3586
  %48 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3586
  %49 = load i8** %f, align 8, !dbg !3586
  %call43 = call i8* @full_filename_(%struct.dirstack_state* %48, i8* %49), !dbg !3586
  %call44 = call i8* @quote(i8* %call43), !dbg !3586
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %47, i8* getelementptr inbounds ([17 x i8]* @.str13130, i32 0, i32 0), i8* %call44), !dbg !3586
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %if.else42, %if.then32
  %50 = load i32* %status, align 4, !dbg !3588
  %cmp47 = icmp eq i32 %50, 4, !dbg !3588
  br i1 %cmp47, label %if.then49, label %do.body60, !dbg !3588

if.then49:                                        ; preds = %if.end46
  %51 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3590
  %52 = load i8** %f, align 8, !dbg !3590
  call void @AD_mark_as_unremovable(%struct.dirstack_state* %51, i8* %52), !dbg !3590
  br label %do.body60, !dbg !3590

if.end51:                                         ; preds = %sw.bb27
  %53 = load i8** %f, align 8, !dbg !3591
  %call52 = call i8* @xstrdup(i8* %53), !dbg !3591
  %54 = load i8*** %subdir.addr, align 8, !dbg !3591
  store i8* %call52, i8** %54, align 8, !dbg !3591
  %55 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !3592
  %56 = load %struct.__dirstream** %55, align 8, !dbg !3592
  %call53 = call i32 @closedir(%struct.__dirstream* %56), !dbg !3592
  %cmp54 = icmp ne i32 %call53, 0, !dbg !3592
  br i1 %cmp54, label %if.then56, label %if.end59, !dbg !3592

if.then56:                                        ; preds = %if.end51
  %57 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3594
  %call57 = call i8* @full_filename_(%struct.dirstack_state* %57, i8* getelementptr inbounds ([2 x i8]* @.str24141, i32 0, i32 0)), !dbg !3594
  %call58 = call i8* @quote(i8* %call57), !dbg !3594
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* null, i8* getelementptr inbounds ([29 x i8]* @.str25142, i32 0, i32 0), i8* %call58), !dbg !3594
  store i32 4, i32* %status, align 4, !dbg !3596
  br label %if.end59, !dbg !3597

if.end59:                                         ; preds = %if.then56, %if.end51
  %58 = load %struct.__dirstream** %subdir_dirp, align 8, !dbg !3598
  %59 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !3598
  store %struct.__dirstream* %58, %struct.__dirstream** %59, align 8, !dbg !3598
  br label %do.body60, !dbg !3599

do.body60:                                        ; preds = %if.end16, %sw.bb, %if.end59, %lor.lhs.false22, %if.then25, %if.then49, %if.end46
  %60 = load i32* %status, align 4, !dbg !3600
  %cmp61 = icmp eq i32 %60, 4, !dbg !3600
  br i1 %cmp61, label %if.then70, label %lor.lhs.false63, !dbg !3600

lor.lhs.false63:                                  ; preds = %do.body60
  %61 = load i32* %status, align 4, !dbg !3600
  %cmp64 = icmp eq i32 %61, 3, !dbg !3600
  br i1 %cmp64, label %land.lhs.true66, label %do.end73, !dbg !3600

land.lhs.true66:                                  ; preds = %lor.lhs.false63
  %62 = load %struct.AD_ent** %top, align 8, !dbg !3600
  %status67 = getelementptr inbounds %struct.AD_ent* %62, i32 0, i32 1, !dbg !3600
  %63 = load i32* %status67, align 4, !dbg !3600
  %cmp68 = icmp eq i32 %63, 2, !dbg !3600
  br i1 %cmp68, label %if.then70, label %do.end73, !dbg !3600

if.then70:                                        ; preds = %land.lhs.true66, %do.body60
  %64 = load i32* %status, align 4, !dbg !3600
  %65 = load %struct.AD_ent** %top, align 8, !dbg !3600
  %status71 = getelementptr inbounds %struct.AD_ent* %65, i32 0, i32 1, !dbg !3600
  store i32 %64, i32* %status71, align 4, !dbg !3600
  br label %do.end73, !dbg !3600

do.end73:                                         ; preds = %lor.lhs.false63, %land.lhs.true66, %if.then70
  %66 = load i8*** %subdir.addr, align 8, !dbg !3603
  %67 = load i8** %66, align 8, !dbg !3603
  %tobool74 = icmp ne i8* %67, null, !dbg !3603
  br i1 %tobool74, label %while.end, label %while.body, !dbg !3603

while.end:                                        ; preds = %if.then, %do.end73
  %68 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !3605
  %69 = load %struct.__dirstream** %68, align 8, !dbg !3605
  %cmp77 = icmp ne %struct.__dirstream* %69, null, !dbg !3605
  br i1 %cmp77, label %cond.end81, label %cond.false80, !dbg !3605

cond.false80:                                     ; preds = %while.end
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8]* @.str42159, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 1349, i8* getelementptr inbounds ([111 x i8]* @__PRETTY_FUNCTION__.remove_cwd_entries, i32 0,
  unreachable, !dbg !3605

cond.end81:                                       ; preds = %while.end
  %70 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !3606
  %71 = load %struct.__dirstream** %70, align 8, !dbg !3606
  %call82 = call i32 @dirfd(%struct.__dirstream* %71) #6, !dbg !3606
  %call83 = call i32 (i32, i32, ...)* @fcntl(i32 %call82, i32 1), !dbg !3606
  %cmp84 = icmp sle i32 0, %call83, !dbg !3606
  br i1 %cmp84, label %cond.end88, label %cond.false87, !dbg !3606

cond.false87:                                     ; preds = %cond.end81
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8]* @.str43160, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 1350, i8* getelementptr inbounds ([111 x i8]* @__PRETTY_FUNCTION__.remove_cwd_entries, i32 0,
  unreachable, !dbg !3606

cond.end88:                                       ; preds = %cond.end81
  %72 = load i32* %status, align 4, !dbg !3607
  ret i32 %72, !dbg !3607
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @AD_is_removable(%struct.dirstack_state* %ds, i8* %file) #8 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %file.addr = alloca i8*, align 8
  %top = alloca %struct.AD_ent*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %file, i8** %file.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3608
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %0), !dbg !3608
  store %struct.AD_ent* %call, %struct.AD_ent** %top, align 8, !dbg !3608
  %1 = load %struct.AD_ent** %top, align 8, !dbg !3609
  %unremovable = getelementptr inbounds %struct.AD_ent* %1, i32 0, i32 0, !dbg !3609
  %2 = load %struct.hash_table** %unremovable, align 8, !dbg !3609
  %tobool = icmp ne %struct.hash_table* %2, null, !dbg !3609
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3609

land.rhs:                                         ; preds = %entry
  %3 = load %struct.AD_ent** %top, align 8, !dbg !3609
  %unremovable1 = getelementptr inbounds %struct.AD_ent* %3, i32 0, i32 0, !dbg !3609
  %4 = load %struct.hash_table** %unremovable1, align 8, !dbg !3609
  %5 = load i8** %file.addr, align 8, !dbg !3609
  %call2 = call i8* @hash_lookup(%struct.hash_table* %4, i8* %5), !dbg !3609
  %tobool3 = icmp ne i8* %call2, null, !dbg !3609
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %tobool3, %land.rhs ]
  %lnot = xor i1 %6, true
  ret i1 %lnot, !dbg !3610
}

; Function Attrs: nounwind uwtable
define internal void @AD_push(i32 %fd_cwd, %struct.dirstack_state* %ds, i8* %dir, %struct.stat* %dir_sb_from_parent) #0 {
entry:
  %fd_cwd.addr = alloca i32, align 4
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %dir.addr = alloca i8*, align 8
  %dir_sb_from_parent.addr = alloca %struct.stat*, align 8
  %top = alloca %struct.AD_ent*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %__o8 = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %dir, i8** %dir.addr, align 8
  store %struct.stat* %dir_sb_from_parent, %struct.stat** %dir_sb_from_parent.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3611
  %1 = load i8** %dir.addr, align 8, !dbg !3611
  call void @push_dir(%struct.dirstack_state* %0, i8* %1), !dbg !3611
  %2 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3612
  %cycle_check_state = getelementptr inbounds %struct.dirstack_state* %2, i32 0, i32 3, !dbg !3612
  %3 = load %struct.stat** %dir_sb_from_parent.addr, align 8, !dbg !3612
  %call = call zeroext i1 @cycle_check(%struct.cycle_check_state* %cycle_check_state, %struct.stat* %3), !dbg !3612
  %4 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3614
  br i1 %call, label %if.then, label %if.end, !dbg !3612

if.then:                                          ; preds = %entry
  %call1 = call i8* @full_filename_(%struct.dirstack_state* %4, i8* getelementptr inbounds ([2 x i8]* @.str24141, i32 0, i32 0)), !dbg !3614
  %call2 = call i8* @quote(i8* %call1), !dbg !3614
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* null, i8* getelementptr inbounds ([186 x i8]* @.str44161, i32 0, i32 0), i8* %call2), !dbg !3616
  %5 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3617
  %current_arg_jumpbuf = getelementptr inbounds %struct.dirstack_state* %5, i32 0, i32 4, !dbg !3617
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag]* %current_arg_jumpbuf, i32 0, i32 0, !dbg !3617
  call void @longjmp(%struct.__jmp_buf_tag* %arraydecay, i32 1) #17, !dbg !3617
  unreachable, !dbg !3617

if.end:                                           ; preds = %entry
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %4, i32 0, i32 2, !dbg !3618
  store %struct.obstack* %Active_dir, %struct.obstack** %__o, align 8, !dbg !3618
  store i32 32, i32* %__len, align 4, !dbg !3618
  %6 = load %struct.obstack** %__o, align 8, !dbg !3620
  %chunk_limit = getelementptr inbounds %struct.obstack* %6, i32 0, i32 4, !dbg !3620
  %7 = load i8** %chunk_limit, align 8, !dbg !3620
  %8 = load %struct.obstack** %__o, align 8, !dbg !3620
  %next_free = getelementptr inbounds %struct.obstack* %8, i32 0, i32 3, !dbg !3620
  %9 = load i8** %next_free, align 8, !dbg !3620
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64, !dbg !3620
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !3620
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3620
  %10 = load i32* %__len, align 4, !dbg !3620
  %conv = sext i32 %10 to i64, !dbg !3620
  %cmp = icmp slt i64 %sub.ptr.sub, %conv, !dbg !3620
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !3620

if.then4:                                         ; preds = %if.end
  %11 = load %struct.obstack** %__o, align 8, !dbg !3620
  %12 = load i32* %__len, align 4, !dbg !3620
  call void @_obstack_newchunk(%struct.obstack* %11, i32 %12), !dbg !3620
  br label %if.end5, !dbg !3620

if.end5:                                          ; preds = %if.then4, %if.end
  %13 = load i32* %__len, align 4, !dbg !3618
  %14 = load %struct.obstack** %__o, align 8, !dbg !3618
  %next_free6 = getelementptr inbounds %struct.obstack* %14, i32 0, i32 3, !dbg !3618
  %15 = load i8** %next_free6, align 8, !dbg !3618
  %idx.ext = sext i32 %13 to i64, !dbg !3618
  %add.ptr = getelementptr inbounds i8* %15, i64 %idx.ext, !dbg !3618
  store i8* %add.ptr, i8** %next_free6, align 8, !dbg !3618
  %16 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3622
  %call7 = call i64 @AD_stack_height(%struct.dirstack_state* %16), !dbg !3622
  %17 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3623
  %len_stack = getelementptr inbounds %struct.dirstack_state* %17, i32 0, i32 1, !dbg !3623
  store %struct.obstack* %len_stack, %struct.obstack** %__o8, align 8, !dbg !3623
  %18 = load %struct.obstack** %__o8, align 8, !dbg !3623
  %next_free9 = getelementptr inbounds %struct.obstack* %18, i32 0, i32 3, !dbg !3623
  %19 = load i8** %next_free9, align 8, !dbg !3623
  %20 = load %struct.obstack** %__o8, align 8, !dbg !3623
  %object_base = getelementptr inbounds %struct.obstack* %20, i32 0, i32 2, !dbg !3623
  %21 = load i8** %object_base, align 8, !dbg !3623
  %sub.ptr.lhs.cast10 = ptrtoint i8* %19 to i64, !dbg !3623
  %sub.ptr.rhs.cast11 = ptrtoint i8* %21 to i64, !dbg !3623
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !3623
  %conv13 = trunc i64 %sub.ptr.sub12 to i32, !dbg !3623
  store i32 %conv13, i32* %tmp, !dbg !3623
  %22 = load i32* %tmp, !dbg !3623
  %conv14 = zext i32 %22 to i64, !dbg !3623
  %int_cast_to_i64 = bitcast i64 8 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !3623
  %div = udiv i64 %conv14, 8, !dbg !3623
  %add = add i64 1, %div, !dbg !3623
  %cmp15 = icmp eq i64 %call7, %add, !dbg !3623
  br i1 %cmp15, label %cond.end, label %cond.false, !dbg !3623

cond.false:                                       ; preds = %if.end5
  call void @__assert_fail(i8* getelementptr inbounds ([160 x i8]* @.str45162, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 706, i8* getelementptr inbounds ([71 x i8]* @__PRETTY_FUNCTION__.AD_push, i32 0, i32 0)) #17
  unreachable, !dbg !3622

cond.end:                                         ; preds = %if.end5
  %23 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3625
  %call17 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %23), !dbg !3625
  store %struct.AD_ent* %call17, %struct.AD_ent** %top, align 8, !dbg !3625
  %24 = load %struct.stat** %dir_sb_from_parent.addr, align 8, !dbg !3626
  %st_dev = getelementptr inbounds %struct.stat* %24, i32 0, i32 0, !dbg !3626
  %25 = load i64* %st_dev, align 8, !dbg !3626
  %26 = load %struct.AD_ent** %top, align 8, !dbg !3626
  %dev_ino = getelementptr inbounds %struct.AD_ent* %26, i32 0, i32 2, !dbg !3626
  %st_dev18 = getelementptr inbounds %struct.dev_ino* %dev_ino, i32 0, i32 1, !dbg !3626
  store i64 %25, i64* %st_dev18, align 8, !dbg !3626
  %27 = load %struct.stat** %dir_sb_from_parent.addr, align 8, !dbg !3627
  %st_ino = getelementptr inbounds %struct.stat* %27, i32 0, i32 1, !dbg !3627
  %28 = load i64* %st_ino, align 8, !dbg !3627
  %29 = load %struct.AD_ent** %top, align 8, !dbg !3627
  %dev_ino19 = getelementptr inbounds %struct.AD_ent* %29, i32 0, i32 2, !dbg !3627
  %st_ino20 = getelementptr inbounds %struct.dev_ino* %dev_ino19, i32 0, i32 0, !dbg !3627
  store i64 %28, i64* %st_ino20, align 8, !dbg !3627
  %30 = load %struct.AD_ent** %top, align 8, !dbg !3628
  %unremovable = getelementptr inbounds %struct.AD_ent* %30, i32 0, i32 0, !dbg !3628
  store %struct.hash_table* null, %struct.hash_table** %unremovable, align 8, !dbg !3628
  ret void, !dbg !3629
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @push_dir(%struct.dirstack_state* %ds, i8* %rm_dir_name) #8 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %rm_dir_name.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %__o7 = alloca %struct.obstack*, align 8
  %__o17 = alloca %struct.obstack*, align 8
  %__len18 = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %rm_dir_name, i8** %rm_dir_name.addr, align 8
  %0 = load i8** %rm_dir_name.addr, align 8, !dbg !3630
  %call = call i64 @strlen(i8* %0) #18, !dbg !3630
  store i64 %call, i64* %len, align 8, !dbg !3630
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3631
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %1, i32 0, i32 0, !dbg !3631
  store %struct.obstack* %dir_stack, %struct.obstack** %__o, align 8, !dbg !3631
  %2 = load i64* %len, align 8, !dbg !3631
  %conv = trunc i64 %2 to i32, !dbg !3631
  store i32 %conv, i32* %__len, align 4, !dbg !3631
  %3 = load %struct.obstack** %__o, align 8, !dbg !3633
  %next_free = getelementptr inbounds %struct.obstack* %3, i32 0, i32 3, !dbg !3633
  %4 = load i8** %next_free, align 8, !dbg !3633
  %5 = load i32* %__len, align 4, !dbg !3633
  %idx.ext = sext i32 %5 to i64, !dbg !3633
  %add.ptr = getelementptr inbounds i8* %4, i64 %idx.ext, !dbg !3633
  %6 = load %struct.obstack** %__o, align 8, !dbg !3633
  %chunk_limit = getelementptr inbounds %struct.obstack* %6, i32 0, i32 4, !dbg !3633
  %7 = load i8** %chunk_limit, align 8, !dbg !3633
  %cmp = icmp ugt i8* %add.ptr, %7, !dbg !3633
  br i1 %cmp, label %if.then, label %if.end, !dbg !3633

if.then:                                          ; preds = %entry
  %8 = load %struct.obstack** %__o, align 8, !dbg !3633
  %9 = load i32* %__len, align 4, !dbg !3633
  call void @_obstack_newchunk(%struct.obstack* %8, i32 %9), !dbg !3633
  br label %if.end, !dbg !3633

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.obstack** %__o, align 8, !dbg !3631
  %next_free2 = getelementptr inbounds %struct.obstack* %10, i32 0, i32 3, !dbg !3631
  %11 = load i8** %next_free2, align 8, !dbg !3631
  %12 = load i8** %rm_dir_name.addr, align 8, !dbg !3631
  %13 = load i32* %__len, align 4, !dbg !3631
  %conv3 = sext i32 %13 to i64, !dbg !3631
  %14 = call i8* @memcpy(i8* %11, i8* %12, i64 %conv3)
  %15 = load i32* %__len, align 4, !dbg !3631
  %16 = load %struct.obstack** %__o, align 8, !dbg !3631
  %next_free4 = getelementptr inbounds %struct.obstack* %16, i32 0, i32 3, !dbg !3631
  %17 = load i8** %next_free4, align 8, !dbg !3631
  %idx.ext5 = sext i32 %15 to i64, !dbg !3631
  %add.ptr6 = getelementptr inbounds i8* %17, i64 %idx.ext5, !dbg !3631
  store i8* %add.ptr6, i8** %next_free4, align 8, !dbg !3631
  %18 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3635
  %dir_stack8 = getelementptr inbounds %struct.dirstack_state* %18, i32 0, i32 0, !dbg !3635
  store %struct.obstack* %dir_stack8, %struct.obstack** %__o7, align 8, !dbg !3635
  %19 = load %struct.obstack** %__o7, align 8, !dbg !3637
  %next_free9 = getelementptr inbounds %struct.obstack* %19, i32 0, i32 3, !dbg !3637
  %20 = load i8** %next_free9, align 8, !dbg !3637
  %add.ptr10 = getelementptr inbounds i8* %20, i64 1, !dbg !3637
  %21 = load %struct.obstack** %__o7, align 8, !dbg !3637
  %chunk_limit11 = getelementptr inbounds %struct.obstack* %21, i32 0, i32 4, !dbg !3637
  %22 = load i8** %chunk_limit11, align 8, !dbg !3637
  %cmp12 = icmp ugt i8* %add.ptr10, %22, !dbg !3637
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !3637

if.then14:                                        ; preds = %if.end
  %23 = load %struct.obstack** %__o7, align 8, !dbg !3637
  call void @_obstack_newchunk(%struct.obstack* %23, i32 1), !dbg !3637
  br label %if.end15, !dbg !3637

if.end15:                                         ; preds = %if.then14, %if.end
  %24 = load %struct.obstack** %__o7, align 8, !dbg !3635
  %next_free16 = getelementptr inbounds %struct.obstack* %24, i32 0, i32 3, !dbg !3635
  %25 = load i8** %next_free16, align 8, !dbg !3635
  %incdec.ptr = getelementptr inbounds i8* %25, i32 1, !dbg !3635
  store i8* %incdec.ptr, i8** %next_free16, align 8, !dbg !3635
  store i8 47, i8* %25, align 1, !dbg !3635
  %26 = load i64* %len, align 8, !dbg !3639
  %inc = add i64 %26, 1, !dbg !3639
  store i64 %inc, i64* %len, align 8, !dbg !3639
  %27 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3640
  %len_stack = getelementptr inbounds %struct.dirstack_state* %27, i32 0, i32 1, !dbg !3640
  store %struct.obstack* %len_stack, %struct.obstack** %__o17, align 8, !dbg !3640
  store i32 8, i32* %__len18, align 4, !dbg !3640
  %28 = load %struct.obstack** %__o17, align 8, !dbg !3642
  %next_free19 = getelementptr inbounds %struct.obstack* %28, i32 0, i32 3, !dbg !3642
  %29 = load i8** %next_free19, align 8, !dbg !3642
  %30 = load i32* %__len18, align 4, !dbg !3642
  %idx.ext20 = sext i32 %30 to i64, !dbg !3642
  %add.ptr21 = getelementptr inbounds i8* %29, i64 %idx.ext20, !dbg !3642
  %31 = load %struct.obstack** %__o17, align 8, !dbg !3642
  %chunk_limit22 = getelementptr inbounds %struct.obstack* %31, i32 0, i32 4, !dbg !3642
  %32 = load i8** %chunk_limit22, align 8, !dbg !3642
  %cmp23 = icmp ugt i8* %add.ptr21, %32, !dbg !3642
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !3642

if.then25:                                        ; preds = %if.end15
  %33 = load %struct.obstack** %__o17, align 8, !dbg !3642
  %34 = load i32* %__len18, align 4, !dbg !3642
  call void @_obstack_newchunk(%struct.obstack* %33, i32 %34), !dbg !3642
  br label %if.end26, !dbg !3642

if.end26:                                         ; preds = %if.then25, %if.end15
  %35 = load %struct.obstack** %__o17, align 8, !dbg !3640
  %next_free27 = getelementptr inbounds %struct.obstack* %35, i32 0, i32 3, !dbg !3640
  %36 = load i8** %next_free27, align 8, !dbg !3640
  %37 = bitcast i64* %len to i8*, !dbg !3640
  %38 = load i32* %__len18, align 4, !dbg !3640
  %conv28 = sext i32 %38 to i64, !dbg !3640
  %39 = call i8* @memcpy(i8* %36, i8* %37, i64 %conv28)
  %40 = load i32* %__len18, align 4, !dbg !3640
  %41 = load %struct.obstack** %__o17, align 8, !dbg !3640
  %next_free29 = getelementptr inbounds %struct.obstack* %41, i32 0, i32 3, !dbg !3640
  %42 = load i8** %next_free29, align 8, !dbg !3640
  %idx.ext30 = sext i32 %40 to i64, !dbg !3640
  %add.ptr31 = getelementptr inbounds i8* %42, i64 %idx.ext30, !dbg !3640
  store i8* %add.ptr31, i8** %next_free29, align 8, !dbg !3640
  ret void, !dbg !3644
}

; Function Attrs: nounwind uwtable
define internal i8* @full_filename_(%struct.dirstack_state* %ds, i8* %filename) #0 {
entry:
  %retval = alloca i8*, align 8
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %filename.addr = alloca i8*, align 8
  %rm_dir_len = alloca i64, align 8
  %__o = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  %rm_dir_name = alloca i8*, align 8
  %n_bytes_needed = alloca i64, align 8
  %filename_len = alloca i64, align 8
  %new_buf = alloca i8*, align 8
  %truncated = alloca i8, align 1
  %len = alloca i64, align 8
  %p = alloca i8*, align 8
  %p32 = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3645
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 0, !dbg !3645
  store %struct.obstack* %dir_stack, %struct.obstack** %__o, align 8, !dbg !3645
  %1 = load %struct.obstack** %__o, align 8, !dbg !3645
  %next_free = getelementptr inbounds %struct.obstack* %1, i32 0, i32 3, !dbg !3645
  %2 = load i8** %next_free, align 8, !dbg !3645
  %3 = load %struct.obstack** %__o, align 8, !dbg !3645
  %object_base = getelementptr inbounds %struct.obstack* %3, i32 0, i32 2, !dbg !3645
  %4 = load i8** %object_base, align 8, !dbg !3645
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !3645
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !3645
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3645
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3645
  store i32 %conv, i32* %tmp, !dbg !3645
  %5 = load i32* %tmp, !dbg !3645
  %conv1 = zext i32 %5 to i64, !dbg !3645
  store i64 %conv1, i64* %rm_dir_len, align 8, !dbg !3645
  %6 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3647
  %dir_stack3 = getelementptr inbounds %struct.dirstack_state* %6, i32 0, i32 0, !dbg !3647
  %object_base4 = getelementptr inbounds %struct.obstack* %dir_stack3, i32 0, i32 2, !dbg !3647
  %7 = load i8** %object_base4, align 8, !dbg !3647
  store i8* %7, i8** %rm_dir_name, align 8, !dbg !3647
  %8 = load i8** %filename.addr, align 8, !dbg !3648
  %call = call i64 @strlen(i8* %8) #18, !dbg !3648
  store i64 %call, i64* %filename_len, align 8, !dbg !3648
  %9 = load i64* %rm_dir_len, align 8, !dbg !3649
  %10 = load i64* %filename_len, align 8, !dbg !3649
  %add = add i64 %9, %10, !dbg !3649
  %add7 = add i64 %add, 1, !dbg !3649
  store i64 %add7, i64* %n_bytes_needed, align 8, !dbg !3649
  %11 = load i64* @full_filename_.n_allocated, align 8, !dbg !3650
  %12 = load i64* %n_bytes_needed, align 8, !dbg !3650
  %cmp = icmp ult i64 %11, %12, !dbg !3650
  br i1 %cmp, label %if.then, label %if.end22, !dbg !3650

if.then:                                          ; preds = %entry
  %13 = load i8** @full_filename_.buf, align 8, !dbg !3652
  %14 = load i64* %n_bytes_needed, align 8, !dbg !3652
  %call10 = call i8* @realloc(i8* %13, i64 %14) #6, !dbg !3652
  store i8* %call10, i8** %new_buf, align 8, !dbg !3652
  %15 = load i64* %n_bytes_needed, align 8, !dbg !3654
  store i64 %15, i64* @full_filename_.n_allocated, align 8, !dbg !3654
  %16 = load i8** %new_buf, align 8, !dbg !3655
  %cmp11 = icmp eq i8* %16, null, !dbg !3655
  br i1 %cmp11, label %if.then13, label %if.end21, !dbg !3655

if.then13:                                        ; preds = %if.then
  %17 = load i8** @full_filename_.buf, align 8, !dbg !3657
  call void @free(i8* %17) #6, !dbg !3657
  %18 = load i8** %filename.addr, align 8, !dbg !3659
  %19 = load i64* %filename_len, align 8, !dbg !3659
  %add17 = add i64 %19, 1, !dbg !3659
  %call18 = call i64 @right_justify(i8* getelementptr inbounds ([512 x i8]* @full_filename_.static_buf, i32 0, i32 0), i64 512, i8* %18, i64 %add17, i8** %p, i8* %truncated), !dbg !3659
  store i64 %call18, i64* %len, align 8, !dbg !3659
  %20 = load i64* %len, align 8, !dbg !3660
  %21 = load i8** %rm_dir_name, align 8, !dbg !3660
  %22 = load i64* %rm_dir_len, align 8, !dbg !3660
  %call19 = call i64 @right_justify(i8* getelementptr inbounds ([512 x i8]* @full_filename_.static_buf, i32 0, i32 0), i64 %20, i8* %21, i64 %22, i8** %p, i8* %truncated), !dbg !3660
  %23 = load i8* %truncated, align 1, !dbg !3661
  %tobool = trunc i8 %23 to i1, !dbg !3661
  br i1 %tobool, label %if.then20, label %if.end, !dbg !3661

if.then20:                                        ; preds = %if.then13
  %24 = call i8* @memcpy(i8* getelementptr inbounds ([512 x i8]* @full_filename_.static_buf, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str46163, i32 0, i32 0), i64 5)
  br label %if.end, !dbg !3663

if.end:                                           ; preds = %if.then20, %if.then13
  %25 = load i8** %p, align 8, !dbg !3665
  store i8* %25, i8** %retval, !dbg !3665
  br label %return, !dbg !3665

if.end21:                                         ; preds = %if.then
  %26 = load i8** %new_buf, align 8, !dbg !3666
  store i8* %26, i8** @full_filename_.buf, align 8, !dbg !3666
  br label %if.end22, !dbg !3667

if.end22:                                         ; preds = %if.end21, %entry
  %27 = load i64* %filename_len, align 8, !dbg !3668
  %cmp23 = icmp eq i64 %27, 1, !dbg !3668
  br i1 %cmp23, label %land.lhs.true, label %if.else, !dbg !3668

land.lhs.true:                                    ; preds = %if.end22
  %28 = load i8** %filename.addr, align 8, !dbg !3668
  %29 = load i8* %28, align 1, !dbg !3668
  %conv25 = sext i8 %29 to i32, !dbg !3668
  %cmp26 = icmp eq i32 %conv25, 46, !dbg !3668
  %30 = load i64* %rm_dir_len, align 8, !dbg !3668
  %tobool29 = icmp ne i64 %30, 0, !dbg !3668
  %or.cond = and i1 %cmp26, %tobool29, !dbg !3668
  br i1 %or.cond, label %if.then30, label %if.else, !dbg !3668

if.then30:                                        ; preds = %land.lhs.true
  %31 = load i8** @full_filename_.buf, align 8, !dbg !3670
  %32 = load i8** %rm_dir_name, align 8, !dbg !3670
  %33 = load i64* %rm_dir_len, align 8, !dbg !3670
  %sub = sub i64 %33, 1, !dbg !3670
  %call33 = call i8* @mempcpy(i8* %31, i8* %32, i64 %sub) #6, !dbg !3670
  store i8* %call33, i8** %p32, align 8, !dbg !3670
  %34 = load i8** %p32, align 8, !dbg !3672
  store i8 0, i8* %34, align 1, !dbg !3672
  br label %if.end40, !dbg !3673

if.else:                                          ; preds = %land.lhs.true, %if.end22
  %35 = load i8** @full_filename_.buf, align 8, !dbg !3674
  %36 = load i8** %rm_dir_name, align 8, !dbg !3674
  %37 = load i64* %rm_dir_len, align 8, !dbg !3674
  %call34 = call i8* @mempcpy(i8* %35, i8* %36, i64 %37) #6, !dbg !3674
  %38 = load i8** %filename.addr, align 8, !dbg !3674
  %39 = load i64* %filename_len, align 8, !dbg !3674
  %add35 = add i64 %39, 1, !dbg !3674
  %40 = call i8* @memcpy(i8* %call34, i8* %38, i64 %add35)
  %41 = load i8** @full_filename_.buf, align 8, !dbg !3676
  %call36 = call i64 @strlen(i8* %41) #18, !dbg !3676
  %add37 = add i64 %call36, 1, !dbg !3676
  %42 = load i64* %n_bytes_needed, align 8, !dbg !3676
  %cmp38 = icmp eq i64 %add37, %42, !dbg !3676
  br i1 %cmp38, label %if.end40, label %cond.false, !dbg !3676

cond.false:                                       ; preds = %if.else
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8]* @.str47164, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 367, i8* getelementptr inbounds ([59 x i8]* @__PRETTY_FUNCTION__.full_filename_, i32 0, i32 0
  unreachable, !dbg !3676

if.end40:                                         ; preds = %if.else, %if.then30
  %43 = load i8** @full_filename_.buf, align 8, !dbg !3677
  store i8* %43, i8** %retval, !dbg !3677
  br label %return, !dbg !3677

return:                                           ; preds = %if.end40, %if.end
  %44 = load i8** %retval, !dbg !3678
  ret i8* %44, !dbg !3678
}

; Function Attrs: nounwind uwtable
define internal i64 @right_justify(i8* %dst, i64 %dst_len, i8* %src, i64 %src_len, i8** %result, i8* %truncated) #0 {
entry:
  %dst.addr = alloca i8*, align 8
  %dst_len.addr = alloca i64, align 8
  %src.addr = alloca i8*, align 8
  %src_len.addr = alloca i64, align 8
  %result.addr = alloca i8**, align 8
  %truncated.addr = alloca i8*, align 8
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  store i64 %dst_len, i64* %dst_len.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %src_len, i64* %src_len.addr, align 8
  store i8** %result, i8*** %result.addr, align 8
  store i8* %truncated, i8** %truncated.addr, align 8
  %0 = load i64* %src_len.addr, align 8, !dbg !3679
  %1 = load i64* %dst_len.addr, align 8, !dbg !3679
  %cmp = icmp ule i64 %0, %1, !dbg !3679
  %2 = load i8** %src.addr, align 8, !dbg !3681
  br i1 %cmp, label %if.then, label %if.else, !dbg !3679

if.then:                                          ; preds = %entry
  store i8* %2, i8** %sp, align 8, !dbg !3681
  %3 = load i8** %dst.addr, align 8, !dbg !3683
  %4 = load i64* %dst_len.addr, align 8, !dbg !3683
  %5 = load i64* %src_len.addr, align 8, !dbg !3683
  %sub = sub i64 %4, %5, !dbg !3683
  %add.ptr = getelementptr inbounds i8* %3, i64 %sub, !dbg !3683
  store i8* %add.ptr, i8** %dp, align 8, !dbg !3683
  %6 = load i8** %truncated.addr, align 8, !dbg !3684
  store i8 0, i8* %6, align 1, !dbg !3684
  br label %if.end, !dbg !3685

if.else:                                          ; preds = %entry
  %7 = load i64* %src_len.addr, align 8, !dbg !3686
  %8 = load i64* %dst_len.addr, align 8, !dbg !3686
  %sub1 = sub i64 %7, %8, !dbg !3686
  %add.ptr2 = getelementptr inbounds i8* %2, i64 %sub1, !dbg !3686
  store i8* %add.ptr2, i8** %sp, align 8, !dbg !3686
  %9 = load i8** %dst.addr, align 8, !dbg !3688
  store i8* %9, i8** %dp, align 8, !dbg !3688
  %10 = load i64* %dst_len.addr, align 8, !dbg !3689
  store i64 %10, i64* %src_len.addr, align 8, !dbg !3689
  %11 = load i8** %truncated.addr, align 8, !dbg !3690
  store i8 1, i8* %11, align 1, !dbg !3690
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load i8** %dp, align 8, !dbg !3691
  %13 = load i8** %sp, align 8, !dbg !3691
  %14 = load i64* %src_len.addr, align 8, !dbg !3691
  %15 = call i8* @memcpy(i8* %12, i8* %13, i64 %14)
  %16 = load i8*** %result.addr, align 8, !dbg !3691
  store i8* %12, i8** %16, align 8, !dbg !3691
  %17 = load i64* %dst_len.addr, align 8, !dbg !3692
  %18 = load i64* %src_len.addr, align 8, !dbg !3692
  %sub3 = sub i64 %17, %18, !dbg !3692
  ret i64 %sub3, !dbg !3692
}

; Function Attrs: nounwind uwtable
define internal %struct.__dirstream* @fd_to_subdirp(i32 %fd_cwd, i8* %f, %struct.rm_options* %x, i32 %prev_errno, %struct.stat* %subdir_sb, i32* %cwd_errno) #0 {
entry:
  %retval = alloca %struct.__dirstream*, align 8
  %fd_cwd.addr = alloca i32, align 4
  %f.addr = alloca i8*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %prev_errno.addr = alloca i32, align 4
  %subdir_sb.addr = alloca %struct.stat*, align 8
  %cwd_errno.addr = alloca i32*, align 8
  %open_flags = alloca i32, align 4
  %fd_sub = alloca i32, align 4
  %saved_errno = alloca i32, align 4
  %subdir_dirp = alloca %struct.__dirstream*, align 8
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store i8* %f, i8** %f.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32 %prev_errno, i32* %prev_errno.addr, align 4
  store %struct.stat* %subdir_sb, %struct.stat** %subdir_sb.addr, align 8
  store i32* %cwd_errno, i32** %cwd_errno.addr, align 8
  store i32 133376, i32* %open_flags, align 4, !dbg !3693
  %0 = load i32* %fd_cwd.addr, align 4, !dbg !3694
  %1 = load i8** %f.addr, align 8, !dbg !3694
  %2 = load i32* %open_flags, align 4, !dbg !3694
  %call = call i32 (i32, i8*, i32, ...)* @openat(i32 %0, i8* %1, i32 %2, i32 0), !dbg !3694
  store i32 %call, i32* %fd_sub, align 4, !dbg !3694
  %3 = load i32* %fd_sub, align 4, !dbg !3695
  %cmp = icmp slt i32 %3, 0, !dbg !3695
  br i1 %cmp, label %if.then, label %if.else, !dbg !3695

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, !dbg !3697
  br label %return, !dbg !3697

if.else:                                          ; preds = %entry
  %4 = load i32* %fd_sub, align 4, !dbg !3698
  %5 = load %struct.stat** %subdir_sb.addr, align 8, !dbg !3698
  %call1 = call i32 @fstat(i32 %4, %struct.stat* %5) #6, !dbg !3698
  %cmp2 = icmp ne i32 %call1, 0, !dbg !3698
  br i1 %cmp2, label %if.then3, label %if.else5, !dbg !3698

if.then3:                                         ; preds = %if.else
  %call4 = call i32* @__errno_location() #1, !dbg !3700
  %6 = load i32* %call4, align 4, !dbg !3700
  store i32 %6, i32* %saved_errno, align 4, !dbg !3700
  br label %if.end15, !dbg !3700

if.else5:                                         ; preds = %if.else
  %7 = load %struct.stat** %subdir_sb.addr, align 8, !dbg !3701
  %st_mode = getelementptr inbounds %struct.stat* %7, i32 0, i32 3, !dbg !3701
  %8 = load i32* %st_mode, align 4, !dbg !3701
  %and = and i32 %8, 61440, !dbg !3701
  %cmp6 = icmp eq i32 %and, 16384, !dbg !3701
  br i1 %cmp6, label %if.then7, label %if.else11, !dbg !3701

if.then7:                                         ; preds = %if.else5
  %9 = load i32* %fd_sub, align 4, !dbg !3703
  %call8 = call %struct.__dirstream* @fdopendir(i32 %9), !dbg !3703
  store %struct.__dirstream* %call8, %struct.__dirstream** %subdir_dirp, align 8, !dbg !3703
  %10 = load %struct.__dirstream** %subdir_dirp, align 8, !dbg !3705
  %tobool = icmp ne %struct.__dirstream* %10, null, !dbg !3705
  br i1 %tobool, label %if.then9, label %if.end, !dbg !3705

if.then9:                                         ; preds = %if.then7
  %11 = load %struct.__dirstream** %subdir_dirp, align 8, !dbg !3707
  store %struct.__dirstream* %11, %struct.__dirstream** %retval, !dbg !3707
  br label %return, !dbg !3707

if.end:                                           ; preds = %if.then7
  %call10 = call i32* @__errno_location() #1, !dbg !3708
  %12 = load i32* %call10, align 4, !dbg !3708
  store i32 %12, i32* %saved_errno, align 4, !dbg !3708
  br label %if.end15, !dbg !3709

if.else11:                                        ; preds = %if.else5
  %13 = load i32* %prev_errno.addr, align 4, !dbg !3710
  %tobool12 = icmp ne i32 %13, 0, !dbg !3710
  %14 = load i32* %prev_errno.addr, align 4, !dbg !3710
  %cond = select i1 %tobool12, i32 %14, i32 20, !dbg !3710
  store i32 %cond, i32* %saved_errno, align 4, !dbg !3710
  br label %if.end15

if.end15:                                         ; preds = %if.then3, %if.else11, %if.end
  %15 = load i32* %fd_sub, align 4, !dbg !3711
  %call16 = call i32 @close(i32 %15), !dbg !3711
  %16 = load i32* %saved_errno, align 4, !dbg !3712
  %call17 = call i32* @__errno_location() #1, !dbg !3712
  store i32 %16, i32* %call17, align 4, !dbg !3712
  store %struct.__dirstream* null, %struct.__dirstream** %retval, !dbg !3713
  br label %return, !dbg !3713

return:                                           ; preds = %if.end15, %if.then9, %if.then
  %17 = load %struct.__dirstream** %retval, !dbg !3714
  ret %struct.__dirstream* %17, !dbg !3714
}

; Function Attrs: nounwind uwtable
define internal i32 @remove_entry(i32 %fd_cwd, %struct.dirstack_state* %ds, i8* %filename, %struct.stat* %st, %struct.rm_options* %x, %struct.dirent* %dp) #0 {
entry:
  %retval = alloca i32, align 4
  %fd_cwd.addr = alloca i32, align 4
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %filename.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %dp.addr = alloca %struct.dirent*, align 8
  %is_empty_directory = alloca i32, align 4
  %s = alloca i32, align 4
  %known_to_be_dir = alloca i8, align 1
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store %struct.dirent* %dp, %struct.dirent** %dp.addr, align 8
  %0 = load i32* %fd_cwd.addr, align 4, !dbg !3715
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3715
  %2 = load i8** %filename.addr, align 8, !dbg !3715
  %3 = load %struct.stat** %st.addr, align 8, !dbg !3715
  %4 = load %struct.rm_options** %x.addr, align 8, !dbg !3715
  %call = call i32 @prompt(i32 %0, %struct.dirstack_state* %1, i8* %2, %struct.stat* %3, %struct.rm_options* %4, i32 2, i32* %is_empty_directory), !dbg !3715
  store i32 %call, i32* %s, align 4, !dbg !3715
  %5 = load %struct.stat** %st.addr, align 8, !dbg !3716
  %call1 = call zeroext i1 @cache_stat_ok(%struct.stat* %5), !dbg !3716
  br i1 %call1, label %land.rhs, label %land.end, !dbg !3716

land.rhs:                                         ; preds = %entry
  %6 = load %struct.stat** %st.addr, align 8, !dbg !3716
  %st_mode = getelementptr inbounds %struct.stat* %6, i32 0, i32 3, !dbg !3716
  %7 = load i32* %st_mode, align 4, !dbg !3716
  %and = and i32 %7, 61440, !dbg !3716
  %cmp = icmp eq i32 %and, 16384, !dbg !3716
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ]
  %frombool = zext i1 %8 to i8
  store i8 %frombool, i8* %known_to_be_dir, align 1
  %9 = load i32* %s, align 4, !dbg !3717
  %cmp2 = icmp ne i32 %9, 2, !dbg !3717
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3717

if.then:                                          ; preds = %land.end
  %10 = load i32* %s, align 4, !dbg !3719
  store i32 %10, i32* %retval, !dbg !3719
  br label %return, !dbg !3719

if.end:                                           ; preds = %land.end
  %11 = load i8* %known_to_be_dir, align 1, !dbg !3720
  %tobool = trunc i8 %11 to i1, !dbg !3720
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !3720

land.lhs.true:                                    ; preds = %if.end
  %12 = load %struct.rm_options** %x.addr, align 8, !dbg !3720
  %recursive = getelementptr inbounds %struct.rm_options* %12, i32 0, i32 3, !dbg !3720
  %13 = load i8* %recursive, align 1, !dbg !3720
  %tobool3 = trunc i8 %13 to i1, !dbg !3720
  br i1 %tobool3, label %if.end7, label %if.then4, !dbg !3720

if.then4:                                         ; preds = %land.lhs.true
  %14 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3724
  %15 = load i8** %filename.addr, align 8, !dbg !3724
  %call5 = call i8* @full_filename_(%struct.dirstack_state* %14, i8* %15), !dbg !3724
  %call6 = call i8* @quote(i8* %call5), !dbg !3724
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* inttoptr (i64 21 to i32* (...)*), i8* getelementptr inbounds ([17 x i8]* @.str13130, i32 0, i32 0), i8* %call6), !dbg !3724
  store i32 4, i32* %retval, !dbg !3726
  br label %return, !dbg !3726

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %16 = load i32* %is_empty_directory, align 4, !dbg !3727
  %cmp8 = icmp eq i32 %16, 4, !dbg !3727
  br i1 %cmp8, label %do.body, label %if.end30, !dbg !3727

do.body:                                          ; preds = %if.end7
  %17 = load i32* %fd_cwd.addr, align 4, !dbg !3729
  %18 = load i8** %filename.addr, align 8, !dbg !3729
  %call10 = call i32 @unlinkat(i32 %17, i8* %18, i32 512) #6, !dbg !3729
  %cmp11 = icmp eq i32 %call10, 0, !dbg !3729
  %19 = load %struct.rm_options** %x.addr, align 8, !dbg !3732
  br i1 %cmp11, label %if.then12, label %if.end19, !dbg !3729

if.then12:                                        ; preds = %do.body
  %verbose = getelementptr inbounds %struct.rm_options* %19, i32 0, i32 6, !dbg !3732
  %20 = load i8* %verbose, align 1, !dbg !3732
  %tobool13 = trunc i8 %20 to i1, !dbg !3732
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !3732

if.then14:                                        ; preds = %if.then12
  %21 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3732
  %22 = load i8** %filename.addr, align 8, !dbg !3732
  %call15 = call i8* @full_filename_(%struct.dirstack_state* %21, i8* %22), !dbg !3732
  %call16 = call i8* @quote(i8* %call15), !dbg !3732
  %call17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str22139, i32 0, i32 0), i8* %call16), !dbg !3732
  br label %if.end18, !dbg !3732

if.end18:                                         ; preds = %if.then14, %if.then12
  store i32 2, i32* %retval, !dbg !3735
  br label %return, !dbg !3735

if.end19:                                         ; preds = %do.body
  %call20 = call i32* @__errno_location() #1, !dbg !3736
  %23 = load i32* %call20, align 4, !dbg !3736
  %call21 = call zeroext i1 @ignorable_missing(%struct.rm_options* %19, i32 %23), !dbg !3736
  br i1 %call21, label %if.then22, label %if.end23, !dbg !3736

if.then22:                                        ; preds = %if.end19
  store i32 2, i32* %retval, !dbg !3736
  br label %return, !dbg !3736

if.end23:                                         ; preds = %if.end19
  %call24 = call i32* @__errno_location() #1, !dbg !3738
  %24 = load i32* %call24, align 4, !dbg !3738
  %cmp25 = icmp eq i32 %24, 39, !dbg !3738
  br i1 %cmp25, label %if.then28, label %lor.lhs.false, !dbg !3738

lor.lhs.false:                                    ; preds = %if.end23
  %call26 = call i32* @__errno_location() #1, !dbg !3738
  %25 = load i32* %call26, align 4, !dbg !3738
  %cmp27 = icmp eq i32 %25, 17, !dbg !3738
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !3738

if.then28:                                        ; preds = %lor.lhs.false, %if.end23
  store i32 5, i32* %retval, !dbg !3738
  br label %return, !dbg !3738

if.end30:                                         ; preds = %lor.lhs.false, %if.end7
  %26 = load %struct.dirent** %dp.addr, align 8, !dbg !3740
  %tobool31 = icmp ne %struct.dirent* %26, null, !dbg !3740
  br i1 %tobool31, label %land.lhs.true32, label %lor.lhs.false35, !dbg !3740

land.lhs.true32:                                  ; preds = %if.end30
  %27 = load %struct.dirent** %dp.addr, align 8, !dbg !3740
  %d_type = getelementptr inbounds %struct.dirent* %27, i32 0, i32 3, !dbg !3740
  %28 = load i8* %d_type, align 1, !dbg !3740
  %conv = zext i8 %28 to i32, !dbg !3740
  %cmp33 = icmp eq i32 %conv, 4, !dbg !3740
  br i1 %cmp33, label %if.then38, label %lor.lhs.false35, !dbg !3740

lor.lhs.false35:                                  ; preds = %land.lhs.true32, %if.end30
  %29 = load i8* %known_to_be_dir, align 1, !dbg !3740
  %tobool36 = trunc i8 %29 to i1, !dbg !3740
  br i1 %tobool36, label %if.then38, label %do.body40, !dbg !3740

if.then38:                                        ; preds = %lor.lhs.false35, %land.lhs.true32
  store i32 5, i32* %retval, !dbg !3742
  br label %return, !dbg !3742

do.body40:                                        ; preds = %lor.lhs.false35
  %30 = load i32* %fd_cwd.addr, align 4, !dbg !3743
  %31 = load i8** %filename.addr, align 8, !dbg !3743
  %call41 = call i32 @unlinkat(i32 %30, i8* %31, i32 0) #6, !dbg !3743
  %cmp42 = icmp eq i32 %call41, 0, !dbg !3743
  %32 = load %struct.rm_options** %x.addr, align 8, !dbg !3746
  br i1 %cmp42, label %if.then44, label %if.end52, !dbg !3743

if.then44:                                        ; preds = %do.body40
  %verbose45 = getelementptr inbounds %struct.rm_options* %32, i32 0, i32 6, !dbg !3746
  %33 = load i8* %verbose45, align 1, !dbg !3746
  %tobool46 = trunc i8 %33 to i1, !dbg !3746
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !3746

if.then47:                                        ; preds = %if.then44
  %34 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3746
  %35 = load i8** %filename.addr, align 8, !dbg !3746
  %call48 = call i8* @full_filename_(%struct.dirstack_state* %34, i8* %35), !dbg !3746
  %call49 = call i8* @quote(i8* %call48), !dbg !3746
  %call50 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str48165, i32 0, i32 0), i8* %call49), !dbg !3746
  br label %if.end51, !dbg !3746

if.end51:                                         ; preds = %if.then47, %if.then44
  store i32 2, i32* %retval, !dbg !3749
  br label %return, !dbg !3749

if.end52:                                         ; preds = %do.body40
  %call53 = call i32* @__errno_location() #1, !dbg !3750
  %36 = load i32* %call53, align 4, !dbg !3750
  %call54 = call zeroext i1 @ignorable_missing(%struct.rm_options* %32, i32 %36), !dbg !3750
  br i1 %call54, label %if.then55, label %do.end57, !dbg !3750

if.then55:                                        ; preds = %if.end52
  store i32 2, i32* %retval, !dbg !3750
  br label %return, !dbg !3750

do.end57:                                         ; preds = %if.end52
  %37 = load %struct.rm_options** %x.addr, align 8, !dbg !3752
  %recursive58 = getelementptr inbounds %struct.rm_options* %37, i32 0, i32 3, !dbg !3752
  %38 = load i8* %recursive58, align 1, !dbg !3752
  %tobool59 = trunc i8 %38 to i1, !dbg !3752
  br i1 %tobool59, label %if.end69, label %land.lhs.true60, !dbg !3752

land.lhs.true60:                                  ; preds = %do.end57
  %call61 = call i32* @__errno_location() #1, !dbg !3752
  %39 = load i32* %call61, align 4, !dbg !3752
  %cmp62 = icmp eq i32 %39, 1, !dbg !3752
  br i1 %cmp62, label %land.lhs.true64, label %if.end69, !dbg !3752

land.lhs.true64:                                  ; preds = %land.lhs.true60
  %40 = load i8** %filename.addr, align 8, !dbg !3754
  %41 = load %struct.stat** %st.addr, align 8, !dbg !3754
  %call65 = call zeroext i1 @is_dir_lstat(i8* %40, %struct.stat* %41), !dbg !3754
  br i1 %call65, label %if.then67, label %if.end69, !dbg !3754

if.then67:                                        ; preds = %land.lhs.true64
  %call68 = call i32* @__errno_location() #1, !dbg !3755
  store i32 21, i32* %call68, align 4, !dbg !3755
  br label %if.end69, !dbg !3755

if.end69:                                         ; preds = %if.then67, %land.lhs.true64, %land.lhs.true60, %do.end57
  %42 = load %struct.rm_options** %x.addr, align 8, !dbg !3756
  %recursive70 = getelementptr inbounds %struct.rm_options* %42, i32 0, i32 3, !dbg !3756
  %43 = load i8* %recursive70, align 1, !dbg !3756
  %tobool71 = trunc i8 %43 to i1, !dbg !3756
  br i1 %tobool71, label %lor.lhs.false72, label %if.then80, !dbg !3756

lor.lhs.false72:                                  ; preds = %if.end69
  %44 = load %struct.stat** %st.addr, align 8, !dbg !3758
  %call73 = call zeroext i1 @cache_stat_ok(%struct.stat* %44), !dbg !3758
  br i1 %call73, label %land.lhs.true75, label %if.end89, !dbg !3758

land.lhs.true75:                                  ; preds = %lor.lhs.false72
  %45 = load %struct.stat** %st.addr, align 8, !dbg !3758
  %st_mode76 = getelementptr inbounds %struct.stat* %45, i32 0, i32 3, !dbg !3758
  %46 = load i32* %st_mode76, align 4, !dbg !3758
  %and77 = and i32 %46, 61440, !dbg !3758
  %cmp78 = icmp eq i32 %and77, 16384, !dbg !3758
  br i1 %cmp78, label %if.end89, label %if.then80, !dbg !3758

if.then80:                                        ; preds = %land.lhs.true75, %if.end69
  %47 = load %struct.rm_options** %x.addr, align 8, !dbg !3759
  %call81 = call i32* @__errno_location() #1, !dbg !3762
  %48 = load i32* %call81, align 4, !dbg !3762
  %call82 = call zeroext i1 @ignorable_missing(%struct.rm_options* %47, i32 %48), !dbg !3759
  br i1 %call82, label %if.then83, label %if.end84, !dbg !3759

if.then83:                                        ; preds = %if.then80
  store i32 2, i32* %retval, !dbg !3763
  br label %return, !dbg !3763

if.end84:                                         ; preds = %if.then80
  %call85 = call i32* @__errno_location() #1, !dbg !3764
  %49 = load i32* %call85, align 4, !dbg !3764
  %conv86 = sext i32 %49 to i64, !dbg !3764
  %50 = inttoptr i64 %conv86 to i32* (...)*, !dbg !3764
  %51 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3764
  %52 = load i8** %filename.addr, align 8, !dbg !3764
  %call87 = call i8* @full_filename_(%struct.dirstack_state* %51, i8* %52), !dbg !3764
  %call88 = call i8* @quote(i8* %call87), !dbg !3764
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error171(i32 0, i32* (...)* %50, i8* getelementptr inbounds ([17 x i8]* @.str13130, i32 0, i32 0), i8* %call88), !dbg !3764
  store i32 4, i32* %retval, !dbg !3765
  br label %return, !dbg !3765

if.end89:                                         ; preds = %land.lhs.true75, %lor.lhs.false72
  %53 = load %struct.stat** %st.addr, align 8, !dbg !3766
  %call90 = call zeroext i1 @cache_stat_ok(%struct.stat* %53), !dbg !3766
  br i1 %call90, label %lor.lhs.false91, label %cond.end, !dbg !3766

lor.lhs.false91:                                  ; preds = %if.end89
  %54 = load %struct.stat** %st.addr, align 8, !dbg !3766
  %st_mode92 = getelementptr inbounds %struct.stat* %54, i32 0, i32 3, !dbg !3766
  %55 = load i32* %st_mode92, align 4, !dbg !3766
  %and93 = and i32 %55, 61440, !dbg !3766
  %cmp94 = icmp eq i32 %and93, 16384, !dbg !3766
  br i1 %cmp94, label %cond.end, label %cond.false, !dbg !3766

cond.false:                                       ; preds = %lor.lhs.false91
  call void @__assert_fail(i8* getelementptr inbounds ([66 x i8]* @.str49166, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9126, i32 0, i32 0), i32 1094, i8* getelementptr inbounds ([136 x i8]* @__PRETTY_FUNCTION__.remove_entry, i32 0, i32 0
  unreachable, !dbg !3766

cond.end:                                         ; preds = %if.end89, %lor.lhs.false91
  store i32 5, i32* %retval, !dbg !3767
  br label %return, !dbg !3767

return:                                           ; preds = %cond.end, %if.end84, %if.then83, %if.then55, %if.end51, %if.then38, %if.then28, %if.then22, %if.end18, %if.then4, %if.then
  %56 = load i32* %retval, !dbg !3768
  ret i32 %56, !dbg !3768
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @is_dir_lstat(i8* %filename, %struct.stat* %st) #8 {
entry:
  %filename.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %saved_errno = alloca i32, align 4
  %is_dir = alloca i8, align 1
  store i8* %filename, i8** %filename.addr, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %call = call i32* @__errno_location() #1, !dbg !3769
  %0 = load i32* %call, align 4, !dbg !3769
  store i32 %0, i32* %saved_errno, align 4, !dbg !3769
  %1 = load i8** %filename.addr, align 8, !dbg !3770
  %2 = load %struct.stat** %st.addr, align 8, !dbg !3770
  %call1 = call i32 @cache_fstatat(i32 -100, i8* %1, %struct.stat* %2, i32 256), !dbg !3770
  %cmp = icmp eq i32 %call1, 0, !dbg !3770
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3770

land.rhs:                                         ; preds = %entry
  %3 = load %struct.stat** %st.addr, align 8, !dbg !3770
  %st_mode = getelementptr inbounds %struct.stat* %3, i32 0, i32 3, !dbg !3770
  %4 = load i32* %st_mode, align 4, !dbg !3770
  %and = and i32 %4, 61440, !dbg !3770
  %cmp2 = icmp eq i32 %and, 16384, !dbg !3770
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ]
  %frombool = zext i1 %5 to i8
  store i8 %frombool, i8* %is_dir, align 1
  %6 = load i32* %saved_errno, align 4, !dbg !3771
  %call3 = call i32* @__errno_location() #1, !dbg !3771
  store i32 %6, i32* %call3, align 4, !dbg !3771
  %7 = load i8* %is_dir, align 1, !dbg !3772
  %tobool = trunc i8 %7 to i1, !dbg !3772
  ret i1 %tobool, !dbg !3772
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @cache_stat_ok(%struct.stat* %st) #8 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %0 = load %struct.stat** %st.addr, align 8, !dbg !3773
  %st_size = getelementptr inbounds %struct.stat* %0, i32 0, i32 8, !dbg !3773
  %1 = load i64* %st_size, align 8, !dbg !3773
  %cmp = icmp sle i64 0, %1, !dbg !3773
  ret i1 %cmp, !dbg !3773
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %ds) #8 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3774
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 2, !dbg !3774
  %next_free = getelementptr inbounds %struct.obstack* %Active_dir, i32 0, i32 3, !dbg !3774
  %1 = load i8** %next_free, align 8, !dbg !3774
  %add.ptr = getelementptr inbounds i8* %1, i64 -32, !dbg !3774
  %2 = bitcast i8* %add.ptr to %struct.AD_ent*, !dbg !3774
  ret %struct.AD_ent* %2, !dbg !3774
}

; Function Attrs: nounwind uwtable
define internal void @AD_push_initial(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %top = alloca %struct.AD_ent*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3775
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 2, !dbg !3775
  store %struct.obstack* %Active_dir, %struct.obstack** %__o, align 8, !dbg !3775
  store i32 32, i32* %__len, align 4, !dbg !3775
  %1 = load %struct.obstack** %__o, align 8, !dbg !3777
  %chunk_limit = getelementptr inbounds %struct.obstack* %1, i32 0, i32 4, !dbg !3777
  %2 = load i8** %chunk_limit, align 8, !dbg !3777
  %3 = load %struct.obstack** %__o, align 8, !dbg !3777
  %next_free = getelementptr inbounds %struct.obstack* %3, i32 0, i32 3, !dbg !3777
  %4 = load i8** %next_free, align 8, !dbg !3777
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !3777
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !3777
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3777
  %5 = load i32* %__len, align 4, !dbg !3777
  %conv = sext i32 %5 to i64, !dbg !3777
  %cmp = icmp slt i64 %sub.ptr.sub, %conv, !dbg !3777
  br i1 %cmp, label %if.then, label %if.end, !dbg !3777

if.then:                                          ; preds = %entry
  %6 = load %struct.obstack** %__o, align 8, !dbg !3777
  %7 = load i32* %__len, align 4, !dbg !3777
  call void @_obstack_newchunk(%struct.obstack* %6, i32 %7), !dbg !3777
  br label %if.end, !dbg !3777

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32* %__len, align 4, !dbg !3775
  %9 = load %struct.obstack** %__o, align 8, !dbg !3775
  %next_free2 = getelementptr inbounds %struct.obstack* %9, i32 0, i32 3, !dbg !3775
  %10 = load i8** %next_free2, align 8, !dbg !3775
  %idx.ext = sext i32 %8 to i64, !dbg !3775
  %add.ptr = getelementptr inbounds i8* %10, i64 %idx.ext, !dbg !3775
  store i8* %add.ptr, i8** %next_free2, align 8, !dbg !3775
  %11 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !3779
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %11), !dbg !3779
  store %struct.AD_ent* %call, %struct.AD_ent** %top, align 8, !dbg !3779
  %12 = load %struct.AD_ent** %top, align 8, !dbg !3780
  %unremovable = getelementptr inbounds %struct.AD_ent* %12, i32 0, i32 0, !dbg !3780
  store %struct.hash_table* null, %struct.hash_table** %unremovable, align 8, !dbg !3780
  %13 = load %struct.AD_ent** %top, align 8, !dbg !3781
  %dev_ino = getelementptr inbounds %struct.AD_ent* %13, i32 0, i32 2, !dbg !3781
  %st_dev = getelementptr inbounds %struct.dev_ino* %dev_ino, i32 0, i32 1, !dbg !3781
  store i64 -1, i64* %st_dev, align 8, !dbg !3781
  %14 = load %struct.AD_ent** %top, align 8, !dbg !3782
  %dev_ino3 = getelementptr inbounds %struct.AD_ent* %14, i32 0, i32 2, !dbg !3782
  %st_ino = getelementptr inbounds %struct.dev_ino* %dev_ino3, i32 0, i32 0, !dbg !3782
  store i64 -1, i64* %st_ino, align 8, !dbg !3782
  ret void, !dbg !3783
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @ignorable_missing(%struct.rm_options* %x, i32 %errnum) #8 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  %errnum.addr = alloca i32, align 4
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32 %errnum, i32* %errnum.addr, align 4
  %0 = load %struct.rm_options** %x.addr, align 8, !dbg !3784
  %ignore_missing_files = getelementptr inbounds %struct.rm_options* %0, i32 0, i32 0, !dbg !3784
  %1 = load i8* %ignore_missing_files, align 1, !dbg !3784
  %tobool = trunc i8 %1 to i1, !dbg !3784
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3784

land.rhs:                                         ; preds = %entry
  %2 = load i32* %errnum.addr, align 4, !dbg !3785
  %call = call zeroext i1 @nonexistent_file_errno(i32 %2), !dbg !3785
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %call, %land.rhs ]
  ret i1 %3, !dbg !3786
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @nonexistent_file_errno(i32 %errnum) #8 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4
  %0 = load i32* %errnum.addr, align 4, !dbg !3787
  switch i32 %0, label %sw.default [
    i32 2, label %sw.bb
    i32 20, label %sw.bb
  ], !dbg !3787

sw.bb:                                            ; preds = %entry, %entry
  store i1 true, i1* %retval, !dbg !3788
  br label %return, !dbg !3788

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, !dbg !3790
  br label %return, !dbg !3790

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1* %retval, !dbg !3791
  ret i1 %1, !dbg !3791
}

; Function Attrs: nounwind uwtable
define internal i32 @cache_fstatat(i32 %fd, i8* %file, %struct.stat* %st, i32 %flag) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %flag.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i8* %file, i8** %file.addr, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  store i32 %flag, i32* %flag.addr, align 4
  %0 = load %struct.stat** %st.addr, align 8, !dbg !3792
  %st_size = getelementptr inbounds %struct.stat* %0, i32 0, i32 8, !dbg !3792
  %1 = load i64* %st_size, align 8, !dbg !3792
  %cmp = icmp eq i64 %1, -1, !dbg !3792
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3792

land.lhs.true:                                    ; preds = %entry
  %2 = load i32* %fd.addr, align 4, !dbg !3792
  %3 = load i8** %file.addr, align 8, !dbg !3792
  %4 = load %struct.stat** %st.addr, align 8, !dbg !3792
  %5 = load i32* %flag.addr, align 4, !dbg !3792
  %call = call i32 @fstatat(i32 %2, i8* %3, %struct.stat* %4, i32 %5) #6, !dbg !3792
  %cmp1 = icmp ne i32 %call, 0, !dbg !3792
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3792

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #1, !dbg !3794
  %6 = load i32* %call2, align 4, !dbg !3794
  %sub = sub nsw i32 -1, %6, !dbg !3794
  %conv = sext i32 %sub to i64, !dbg !3794
  %7 = load %struct.stat** %st.addr, align 8, !dbg !3794
  %st_size3 = getelementptr inbounds %struct.stat* %7, i32 0, i32 8, !dbg !3794
  store i64 %conv, i64* %st_size3, align 8, !dbg !3794
  br label %if.end, !dbg !3794

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load %struct.stat** %st.addr, align 8, !dbg !3795
  %st_size4 = getelementptr inbounds %struct.stat* %8, i32 0, i32 8, !dbg !3795
  %9 = load i64* %st_size4, align 8, !dbg !3795
  %cmp5 = icmp sle i64 0, %9, !dbg !3795
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !3795

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, !dbg !3797
  br label %return, !dbg !3797

if.end8:                                          ; preds = %if.end
  %10 = load %struct.stat** %st.addr, align 8, !dbg !3798
  %st_size9 = getelementptr inbounds %struct.stat* %10, i32 0, i32 8, !dbg !3798
  %11 = load i64* %st_size9, align 8, !dbg !3798
  %sub10 = sub nsw i64 -1, %11, !dbg !3798
  %conv11 = trunc i64 %sub10 to i32, !dbg !3798
  %call12 = call i32* @__errno_location() #1, !dbg !3798
  store i32 %conv11, i32* %call12, align 4, !dbg !3798
  store i32 -1, i32* %retval, !dbg !3799
  br label %return, !dbg !3799

return:                                           ; preds = %if.end8, %if.then7
  %12 = load i32* %retval, !dbg !3800
  ret i32 %12, !dbg !3800
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.stat* @cache_stat_init(%struct.stat* %st) #8 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %0 = load %struct.stat** %st.addr, align 8, !dbg !3801
  %st_size = getelementptr inbounds %struct.stat* %0, i32 0, i32 8, !dbg !3801
  store i64 -1, i64* %st_size, align 8, !dbg !3801
  %1 = load %struct.stat** %st.addr, align 8, !dbg !3802
  ret %struct.stat* %1, !dbg !3802
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @dot_or_dotdot172(i8* %file_name) #8 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1
  store i8* %file_name, i8** %file_name.addr, align 8
  %0 = load i8** %file_name.addr, align 8, !dbg !3803
  %arrayidx = getelementptr inbounds i8* %0, i64 0, !dbg !3803
  %1 = load i8* %arrayidx, align 1, !dbg !3803
  %conv = sext i8 %1 to i32, !dbg !3803
  %cmp = icmp eq i32 %conv, 46, !dbg !3803
  br i1 %cmp, label %if.then, label %if.else, !dbg !3803

if.then:                                          ; preds = %entry
  %2 = load i8** %file_name.addr, align 8, !dbg !3806
  %arrayidx2 = getelementptr inbounds i8* %2, i64 1, !dbg !3806
  %3 = load i8* %arrayidx2, align 1, !dbg !3806
  %conv3 = sext i8 %3 to i32, !dbg !3806
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !3806
  %conv5 = zext i1 %cmp4 to i32, !dbg !3806
  %add = add nsw i32 %conv5, 1, !dbg !3806
  %idxprom = sext i32 %add to i64, !dbg !3806
  %4 = load i8** %file_name.addr, align 8, !dbg !3806
  %arrayidx6 = getelementptr inbounds i8* %4, i64 %idxprom, !dbg !3806
  %5 = load i8* %arrayidx6, align 1, !dbg !3806
  store i8 %5, i8* %sep, align 1, !dbg !3806
  %6 = load i8* %sep, align 1, !dbg !3808
  %tobool = icmp ne i8 %6, 0, !dbg !3808
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3808

lor.rhs:                                          ; preds = %if.then
  %7 = load i8* %sep, align 1, !dbg !3808
  %conv7 = sext i8 %7 to i32, !dbg !3808
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !3808
  br label %lor.end, !dbg !3808

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, !dbg !3808
  br label %return, !dbg !3808

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, !dbg !3809
  br label %return, !dbg !3809

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1* %retval, !dbg !3810
  ret i1 %9, !dbg !3810
}

; Function Attrs: nounwind uwtable
define i64 @full_write(i32 %fd, i8* %buf, i64 %count) #0 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8
  %ptr = alloca i8*, align 8
  %n_rw = alloca i64, align 8
  store i32 %fd, i32* %fd.addr, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i64 %count, i64* %count.addr, align 8
  store i64 0, i64* %total, align 8, !dbg !3811
  %0 = load i8** %buf.addr, align 8, !dbg !3812
  store i8* %0, i8** %ptr, align 8, !dbg !3812
  br label %while.cond, !dbg !3813

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64* %count.addr, align 8, !dbg !3813
  %cmp = icmp ugt i64 %1, 0, !dbg !3813
  br i1 %cmp, label %while.body, label %while.end, !dbg !3813

while.body:                                       ; preds = %while.cond
  %2 = load i32* %fd.addr, align 4, !dbg !3814
  %3 = load i8** %ptr, align 8, !dbg !3814
  %4 = load i64* %count.addr, align 8, !dbg !3814
  %call = call i64 @safe_write(i32 %2, i8* %3, i64 %4), !dbg !3814
  store i64 %call, i64* %n_rw, align 8, !dbg !3814
  %5 = load i64* %n_rw, align 8, !dbg !3816
  %cmp1 = icmp eq i64 %5, -1, !dbg !3816
  br i1 %cmp1, label %while.end, label %if.end, !dbg !3816

if.end:                                           ; preds = %while.body
  %6 = load i64* %n_rw, align 8, !dbg !3818
  %cmp2 = icmp eq i64 %6, 0, !dbg !3818
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !3818

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #1, !dbg !3820
  store i32 28, i32* %call4, align 4, !dbg !3820
  br label %while.end, !dbg !3822

if.end5:                                          ; preds = %if.end
  %7 = load i64* %n_rw, align 8, !dbg !3823
  %8 = load i64* %total, align 8, !dbg !3823
  %add = add i64 %8, %7, !dbg !3823
  store i64 %add, i64* %total, align 8, !dbg !3823
  %9 = load i64* %n_rw, align 8, !dbg !3824
  %10 = load i8** %ptr, align 8, !dbg !3824
  %add.ptr = getelementptr inbounds i8* %10, i64 %9, !dbg !3824
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !3824
  %11 = load i64* %n_rw, align 8, !dbg !3825
  %12 = load i64* %count.addr, align 8, !dbg !3825
  %sub = sub i64 %12, %11, !dbg !3825
  store i64 %sub, i64* %count.addr, align 8, !dbg !3825
  br label %while.cond, !dbg !3826

while.end:                                        ; preds = %while.body, %if.then3, %while.cond
  %13 = load i64* %total, align 8, !dbg !3827
  ret i64 %13, !dbg !3827
}

; Function Attrs: nounwind uwtable
define i64 @hash_pjw(i8* %x, i64 %tablesize) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8
  %h = alloca i64, align 8
  store i8* %x, i8** %x.addr, align 8
  store i64 %tablesize, i64* %tablesize.addr, align 8
  store i64 0, i64* %h, align 8, !dbg !3828
  %0 = load i8** %x.addr, align 8, !dbg !3829
  store i8* %0, i8** %s, align 8, !dbg !3829
  br label %for.cond, !dbg !3829

for.cond:                                         ; preds = %for.body, %entry
  %1 = load i8** %s, align 8, !dbg !3829
  %2 = load i8* %1, align 1, !dbg !3829
  %tobool = icmp ne i8 %2, 0, !dbg !3829
  br i1 %tobool, label %for.body, label %for.end, !dbg !3829

for.body:                                         ; preds = %for.cond
  %3 = load i8** %s, align 8, !dbg !3831
  %4 = load i8* %3, align 1, !dbg !3831
  %conv = sext i8 %4 to i64, !dbg !3831
  %5 = load i64* %h, align 8, !dbg !3831
  %int_cast_to_i641 = bitcast i64 9 to i64
  call void @klee_overshift_check(i64 64, i64 %int_cast_to_i641), !dbg !3831
  %shl = shl i64 %5, 9, !dbg !3831
  %6 = load i64* %h, align 8, !dbg !3831
  %int_cast_to_i642 = bitcast i64 55 to i64
  call void @klee_overshift_check(i64 64, i64 %int_cast_to_i642), !dbg !3831
  %shr = lshr i64 %6, 55, !dbg !3831
  %or = or i64 %shl, %shr, !dbg !3831
  %add = add i64 %conv, %or, !dbg !3831
  store i64 %add, i64* %h, align 8, !dbg !3831
  %7 = load i8** %s, align 8, !dbg !3829
  %incdec.ptr = getelementptr inbounds i8* %7, i32 1, !dbg !3829
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !3829
  br label %for.cond, !dbg !3829

for.end:                                          ; preds = %for.cond
  %8 = load i64* %h, align 8, !dbg !3832
  %9 = load i64* %tablesize.addr, align 8, !dbg !3832
  %int_cast_to_i64 = bitcast i64 %9 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !3832
  %rem = urem i64 %8, %9, !dbg !3832
  ret i64 %rem, !dbg !3832
}

; Function Attrs: nounwind uwtable
define void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #0 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8
  %tmp_authors = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  store i8* %command_name, i8** %command_name.addr, align 8
  store i8* %package, i8** %package.addr, align 8
  store i8* %version, i8** %version.addr, align 8
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %tmp_authors, i32 0, i32 0, !dbg !3833
  %0 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3833
  %1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !3833
  %2 = bitcast %struct.__va_list_tag* %0 to i8*, !dbg !3833
  %vacopy.cast.dst = bitcast i8* %1 to i64*
  %vacopy.cast.src = bitcast i8* %2 to i64*
  %3 = load i64* %vacopy.cast.src
  store i64 %3, i64* %vacopy.cast.dst
  %4 = getelementptr i64* %vacopy.cast.dst, i64 1
  %5 = getelementptr i64* %vacopy.cast.src, i64 1
  %6 = load i64* %5
  store i64 %6, i64* %4
  %7 = getelementptr i64* %4, i64 1
  %8 = getelementptr i64* %5, i64 1
  %9 = load i64* %8
  store i64 %9, i64* %7
  store i64 0, i64* %n_authors, align 8, !dbg !3835
  br label %while.cond, !dbg !3836

while.cond:                                       ; preds = %while.body, %entry
  %arraydecay1 = getelementptr inbounds [1 x %struct.__va_list_tag]* %tmp_authors, i32 0, i32 0, !dbg !3836
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag* %arraydecay1, i32 0, i32 0, !dbg !3836
  %gp_offset = load i32* %gp_offset_p, !dbg !3836
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !3836
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !3836

vaarg.in_reg:                                     ; preds = %while.cond
  %10 = getelementptr inbounds %struct.__va_list_tag* %arraydecay1, i32 0, i32 3, !dbg !3836
  %reg_save_area = load i8** %10, !dbg !3836
  %11 = getelementptr i8* %reg_save_area, i32 %gp_offset, !dbg !3836
  %12 = bitcast i8* %11 to i8**, !dbg !3836
  %13 = add i32 %gp_offset, 8, !dbg !3836
  store i32 %13, i32* %gp_offset_p, !dbg !3836
  br label %vaarg.end, !dbg !3836

vaarg.in_mem:                                     ; preds = %while.cond
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag* %arraydecay1, i32 0, i32 2, !dbg !3836
  %overflow_arg_area = load i8** %overflow_arg_area_p, !dbg !3836
  %14 = bitcast i8* %overflow_arg_area to i8**, !dbg !3836
  %overflow_arg_area.next = getelementptr i8* %overflow_arg_area, i32 8, !dbg !3836
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, !dbg !3836
  br label %vaarg.end, !dbg !3836

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %12, %vaarg.in_reg ], [ %14, %vaarg.in_mem ], !dbg !3836
  %15 = load i8** %vaarg.addr, !dbg !3836
  %cmp = icmp ne i8* %15, null, !dbg !3836
  br i1 %cmp, label %while.body, label %while.end, !dbg !3836

while.body:                                       ; preds = %vaarg.end
  %16 = load i64* %n_authors, align 8, !dbg !3837
  %inc = add i64 %16, 1, !dbg !3837
  store i64 %inc, i64* %n_authors, align 8, !dbg !3837
  br label %while.cond, !dbg !3837

while.end:                                        ; preds = %vaarg.end
  %17 = load i8** %command_name.addr, align 8, !dbg !3838
  %tobool = icmp ne i8* %17, null, !dbg !3838
  %18 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3840
  br i1 %tobool, label %if.then, label %if.else, !dbg !3838

if.then:                                          ; preds = %while.end
  %19 = load i8** %command_name.addr, align 8, !dbg !3840
  %20 = load i8** %package.addr, align 8, !dbg !3840
  %21 = load i8** %version.addr, align 8, !dbg !3840
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([12 x i8]* @.str177, i32 0, i32 0), i8* %19, i8* %20, i8* %21), !dbg !3840
  br label %if.end, !dbg !3840

if.else:                                          ; preds = %while.end
  %22 = load i8** %package.addr, align 8, !dbg !3841
  %23 = load i8** %version.addr, align 8, !dbg !3841
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([7 x i8]* @.str1178, i32 0, i32 0), i8* %22, i8* %23), !dbg !3841
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3842
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([47 x i8]* @version_etc_copyright, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str2179, i32 0, i32 0), i32 2006), !dbg !3842
  %25 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3843
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([205 x i8]* @.str3180, i32 0, i32 0), %struct._IO_FILE* %25), !dbg !3843
  %26 = load i64* %n_authors, align 8, !dbg !3844
  switch i64 %26, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb5
    i64 2, label %sw.bb7
    i64 3, label %sw.bb9
    i64 4, label %sw.bb11
    i64 5, label %sw.bb13
    i64 6, label %sw.bb15
    i64 7, label %sw.bb17
    i64 8, label %sw.bb19
    i64 9, label %sw.bb21
  ], !dbg !3844

sw.bb:                                            ; preds = %if.end
  call void @abort() #17, !dbg !3845
  unreachable, !dbg !3845

sw.bb5:                                           ; preds = %if.end
  %27 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3847
  %28 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3847
  %call6 = call i32 @vfprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([16 x i8]* @.str4181, i32 0, i32 0), %struct.__va_list_tag* %28), !dbg !3847
  br label %sw.epilog, !dbg !3848

sw.bb7:                                           ; preds = %if.end
  %29 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3849
  %30 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3849
  %call8 = call i32 @vfprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([23 x i8]* @.str5182, i32 0, i32 0), %struct.__va_list_tag* %30), !dbg !3849
  br label %sw.epilog, !dbg !3850

sw.bb9:                                           ; preds = %if.end
  %31 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3851
  %32 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3851
  %call10 = call i32 @vfprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([28 x i8]* @.str6183, i32 0, i32 0), %struct.__va_list_tag* %32), !dbg !3851
  br label %sw.epilog, !dbg !3852

sw.bb11:                                          ; preds = %if.end
  %33 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3853
  %34 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3853
  %call12 = call i32 @vfprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([32 x i8]* @.str7184, i32 0, i32 0), %struct.__va_list_tag* %34), !dbg !3853
  br label %sw.epilog, !dbg !3854

sw.bb13:                                          ; preds = %if.end
  %35 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3855
  %36 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3855
  %call14 = call i32 @vfprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([36 x i8]* @.str8185, i32 0, i32 0), %struct.__va_list_tag* %36), !dbg !3855
  br label %sw.epilog, !dbg !3856

sw.bb15:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3857
  %38 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3857
  %call16 = call i32 @vfprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([40 x i8]* @.str9186, i32 0, i32 0), %struct.__va_list_tag* %38), !dbg !3857
  br label %sw.epilog, !dbg !3858

sw.bb17:                                          ; preds = %if.end
  %39 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3859
  %40 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3859
  %call18 = call i32 @vfprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([44 x i8]* @.str10187, i32 0, i32 0), %struct.__va_list_tag* %40), !dbg !3859
  br label %sw.epilog, !dbg !3860

sw.bb19:                                          ; preds = %if.end
  %41 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3861
  %42 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3861
  %call20 = call i32 @vfprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([48 x i8]* @.str11188, i32 0, i32 0), %struct.__va_list_tag* %42), !dbg !3861
  br label %sw.epilog, !dbg !3862

sw.bb21:                                          ; preds = %if.end
  %43 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3863
  %44 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3863
  %call22 = call i32 @vfprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([52 x i8]* @.str12189, i32 0, i32 0), %struct.__va_list_tag* %44), !dbg !3863
  br label %sw.epilog, !dbg !3864

sw.default:                                       ; preds = %if.end
  %45 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3865
  %46 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3865
  %call23 = call i32 @vfprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([60 x i8]* @.str13190, i32 0, i32 0), %struct.__va_list_tag* %46), !dbg !3865
  br label %sw.epilog, !dbg !3866

sw.epilog:                                        ; preds = %sw.default, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5
  %47 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !3867
  %48 = bitcast %struct.__va_list_tag* %47 to i8*, !dbg !3867
  call void @llvm.va_end(i8* %48), !dbg !3867
  ret void, !dbg !3868
}

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #6

; Function Attrs: nounwind uwtable
define void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #0 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  store i8* %command_name, i8** %command_name.addr, align 8
  store i8* %package, i8** %package.addr, align 8
  store i8* %version, i8** %version.addr, align 8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %authors, i32 0, i32 0, !dbg !3869
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !3869
  call void @llvm.va_start(i8* %arraydecay1), !dbg !3869
  %0 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3870
  %1 = load i8** %command_name.addr, align 8, !dbg !3870
  %2 = load i8** %package.addr, align 8, !dbg !3870
  %3 = load i8** %version.addr, align 8, !dbg !3870
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %authors, i32 0, i32 0, !dbg !3870
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !3870
  ret void, !dbg !3871
}

; Function Attrs: noreturn nounwind uwtable
define void @xalloc_die() #11 {
entry:
  %0 = load volatile i32* @exit_failure, align 4, !dbg !3872
  call void (i32, i32, i8*, ...)* @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8]* @.str195, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str1196, i32 0, i32 0)), !dbg !3872
  call void @abort() #17, !dbg !3873
  unreachable, !dbg !3873
}

; Function Attrs: nounwind uwtable
define i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) #0 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %lcm_max.addr = alloca i64, align 8
  %size = alloca i64, align 8
  %lcm = alloca i64, align 8
  %m = alloca i64, align 8
  %n = alloca i64, align 8
  %q = alloca i64, align 8
  %r = alloca i64, align 8
  store i64 %a, i64* %a.addr, align 8
  store i64 %b, i64* %b.addr, align 8
  store i64 %lcm_max, i64* %lcm_max.addr, align 8
  %0 = load i64* %a.addr, align 8, !dbg !3874
  %tobool = icmp ne i64 %0, 0, !dbg !3874
  %1 = load i64* %b.addr, align 8, !dbg !3876
  %tobool2 = icmp ne i64 %1, 0, !dbg !3876
  br i1 %tobool, label %if.else, label %if.then, !dbg !3874

if.then:                                          ; preds = %entry
  %2 = load i64* %b.addr, align 8, !dbg !3879
  %cond = select i1 %tobool2, i64 %2, i64 8192, !dbg !3879
  store i64 %cond, i64* %size, align 8, !dbg !3879
  br label %if.end9, !dbg !3879

if.else:                                          ; preds = %entry
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !3876

if.then3:                                         ; preds = %if.else
  %3 = load i64* %a.addr, align 8, !dbg !3880
  store i64 %3, i64* %m, align 8, !dbg !3880
  %4 = load i64* %b.addr, align 8, !dbg !3880
  store i64 %4, i64* %n, align 8, !dbg !3880
  br label %for.cond, !dbg !3880

for.cond:                                         ; preds = %for.inc, %if.then3
  %5 = load i64* %m, align 8, !dbg !3880
  %6 = load i64* %n, align 8, !dbg !3880
  %int_cast_to_i64 = bitcast i64 %6 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !3880
  %rem = urem i64 %5, %6, !dbg !3880
  store i64 %rem, i64* %r, align 8, !dbg !3880
  %cmp = icmp ne i64 %rem, 0, !dbg !3880
  br i1 %cmp, label %for.inc, label %for.end, !dbg !3880

for.inc:                                          ; preds = %for.cond
  %7 = load i64* %n, align 8, !dbg !3880
  store i64 %7, i64* %m, align 8, !dbg !3880
  %8 = load i64* %r, align 8, !dbg !3880
  store i64 %8, i64* %n, align 8, !dbg !3880
  br label %for.cond, !dbg !3880

for.end:                                          ; preds = %for.cond
  %9 = load i64* %a.addr, align 8, !dbg !3883
  %10 = load i64* %n, align 8, !dbg !3883
  %int_cast_to_i641 = bitcast i64 %10 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !3883
  %div = udiv i64 %9, %10, !dbg !3883
  store i64 %div, i64* %q, align 8, !dbg !3883
  %11 = load i64* %q, align 8, !dbg !3884
  %12 = load i64* %b.addr, align 8, !dbg !3884
  %mul = mul i64 %11, %12, !dbg !3884
  store i64 %mul, i64* %lcm, align 8, !dbg !3884
  %13 = load i64* %lcm, align 8, !dbg !3885
  %14 = load i64* %lcm_max.addr, align 8, !dbg !3885
  %cmp4 = icmp ule i64 %13, %14, !dbg !3885
  br i1 %cmp4, label %land.lhs.true, label %if.end8, !dbg !3885

land.lhs.true:                                    ; preds = %for.end
  %15 = load i64* %lcm, align 8, !dbg !3885
  %16 = load i64* %b.addr, align 8, !dbg !3885
  %int_cast_to_i642 = bitcast i64 %16 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i642), !dbg !3885
  %div5 = udiv i64 %15, %16, !dbg !3885
  %17 = load i64* %q, align 8, !dbg !3885
  %cmp6 = icmp eq i64 %div5, %17, !dbg !3885
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3885

if.then7:                                         ; preds = %land.lhs.true
  %18 = load i64* %lcm, align 8, !dbg !3887
  store i64 %18, i64* %retval, !dbg !3887
  br label %return, !dbg !3887

if.end8:                                          ; preds = %for.end, %land.lhs.true, %if.else
  %19 = load i64* %a.addr, align 8, !dbg !3888
  store i64 %19, i64* %size, align 8, !dbg !3888
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then
  %20 = load i64* %size, align 8, !dbg !3889
  %21 = load i64* %lcm_max.addr, align 8, !dbg !3889
  %cmp10 = icmp ule i64 %20, %21, !dbg !3889
  %22 = load i64* %size, align 8, !dbg !3889
  %23 = load i64* %lcm_max.addr, align 8, !dbg !3889
  %cond14 = select i1 %cmp10, i64 %22, i64 %23, !dbg !3889
  store i64 %cond14, i64* %retval, !dbg !3889
  br label %return, !dbg !3889

return:                                           ; preds = %if.end9, %if.then7
  %24 = load i64* %retval, !dbg !3890
  ret i64 %24, !dbg !3890
}

; Function Attrs: nounwind uwtable
define i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i32 %desc, i32* %desc.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32* %desc.addr, align 4, !dbg !3891
  %cmp = icmp ne i32 %0, -1, !dbg !3891
  br i1 %cmp, label %if.then, label %if.else, !dbg !3891

if.then:                                          ; preds = %entry
  %1 = load i32* %desc.addr, align 4, !dbg !3893
  %2 = load i32* %mode.addr, align 4, !dbg !3893
  %call = call i32 @fchmod(i32 %1, i32 %2) #6, !dbg !3893
  store i32 %call, i32* %retval, !dbg !3893
  br label %return, !dbg !3893

if.else:                                          ; preds = %entry
  %3 = load i8** %name.addr, align 8, !dbg !3894
  %4 = load i32* %mode.addr, align 4, !dbg !3894
  %call1 = call i32 @chmod(i8* %3, i32 %4) #6, !dbg !3894
  store i32 %call1, i32* %retval, !dbg !3894
  br label %return, !dbg !3894

return:                                           ; preds = %if.else, %if.then
  %5 = load i32* %retval, !dbg !3895
  ret i32 %5, !dbg !3895
}

; Function Attrs: nounwind uwtable
define i32 @file_has_acl(i8* %name, %struct.stat* %sb) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  store i8* %name, i8** %name.addr, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  ret i32 0, !dbg !3896
}

; Function Attrs: nounwind uwtable
define i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #0 {
entry:
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store i8* %src_name, i8** %src_name.addr, align 8
  store i32 %source_desc, i32* %source_desc.addr, align 4
  store i8* %dst_name, i8** %dst_name.addr, align 8
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i8** %dst_name.addr, align 8, !dbg !3897
  %1 = load i32* %dest_desc.addr, align 4, !dbg !3897
  %2 = load i32* %mode.addr, align 4, !dbg !3897
  %call = call i32 @chmod_or_fchmod(i8* %0, i32 %1, i32 %2), !dbg !3897
  store i32 %call, i32* %ret, align 4, !dbg !3897
  %3 = load i32* %ret, align 4, !dbg !3898
  %cmp = icmp ne i32 %3, 0, !dbg !3898
  br i1 %cmp, label %if.then, label %if.end, !dbg !3898

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #1, !dbg !3900
  %4 = load i32* %call1, align 4, !dbg !3900
  %5 = load i8** %dst_name.addr, align 8, !dbg !3900
  %call2 = call i8* @quote(i8* %5), !dbg !3900
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 %4, i8* getelementptr inbounds ([30 x i8]* @.str201, i32 0, i32 0), i8* %call2), !dbg !3900
  br label %if.end, !dbg !3900

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32* %ret, align 4, !dbg !3901
  ret i32 %6, !dbg !3901
}

; Function Attrs: nounwind uwtable
define i32 @set_acl(i8* %name, i32 %desc, i32 %mode) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i32 %desc, i32* %desc.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i8** %name.addr, align 8, !dbg !3902
  %1 = load i32* %desc.addr, align 4, !dbg !3902
  %2 = load i32* %mode.addr, align 4, !dbg !3902
  %call = call i32 @chmod_or_fchmod(i8* %0, i32 %1, i32 %2), !dbg !3902
  store i32 %call, i32* %ret, align 4, !dbg !3902
  %3 = load i32* %ret, align 4, !dbg !3903
  %tobool = icmp ne i32 %3, 0, !dbg !3903
  br i1 %tobool, label %if.then, label %if.end, !dbg !3903

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #1, !dbg !3905
  %4 = load i32* %call1, align 4, !dbg !3905
  %5 = load i8** %name.addr, align 8, !dbg !3905
  %call2 = call i8* @quote(i8* %5), !dbg !3905
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 %4, i8* getelementptr inbounds ([27 x i8]* @.str1202, i32 0, i32 0), i8* %call2), !dbg !3905
  br label %if.end, !dbg !3905

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32* %ret, align 4, !dbg !3906
  ret i32 %6, !dbg !3906
}

; Function Attrs: nounwind uwtable
define i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #0 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %arglen = alloca i64, align 8
  %matchind = alloca i64, align 8
  %ambiguous = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8
  store i8** %arglist, i8*** %arglist.addr, align 8
  store i8* %vallist, i8** %vallist.addr, align 8
  store i64 %valsize, i64* %valsize.addr, align 8
  store i64 -1, i64* %matchind, align 8, !dbg !3907
  store i8 0, i8* %ambiguous, align 1, !dbg !3908
  %0 = load i8** %arg.addr, align 8, !dbg !3909
  %call = call i64 @strlen(i8* %0) #18, !dbg !3909
  store i64 %call, i64* %arglen, align 8, !dbg !3909
  store i64 0, i64* %i, align 8, !dbg !3910
  br label %for.cond, !dbg !3910

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64* %i, align 8, !dbg !3910
  %2 = load i8*** %arglist.addr, align 8, !dbg !3910
  %arrayidx = getelementptr inbounds i8** %2, i64 %1, !dbg !3910
  %3 = load i8** %arrayidx, align 8, !dbg !3910
  %tobool = icmp ne i8* %3, null, !dbg !3910
  br i1 %tobool, label %for.body, label %for.end, !dbg !3910

for.body:                                         ; preds = %for.cond
  %4 = load i64* %i, align 8, !dbg !3912
  %5 = load i8*** %arglist.addr, align 8, !dbg !3912
  %arrayidx1 = getelementptr inbounds i8** %5, i64 %4, !dbg !3912
  %6 = load i8** %arrayidx1, align 8, !dbg !3912
  %7 = load i8** %arg.addr, align 8, !dbg !3912
  %8 = load i64* %arglen, align 8, !dbg !3912
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #18, !dbg !3912
  %tobool3 = icmp ne i32 %call2, 0, !dbg !3912
  br i1 %tobool3, label %for.inc, label %if.then, !dbg !3912

if.then:                                          ; preds = %for.body
  %9 = load i64* %i, align 8, !dbg !3915
  %10 = load i8*** %arglist.addr, align 8, !dbg !3915
  %arrayidx4 = getelementptr inbounds i8** %10, i64 %9, !dbg !3915
  %11 = load i8** %arrayidx4, align 8, !dbg !3915
  %call5 = call i64 @strlen(i8* %11) #18, !dbg !3915
  %12 = load i64* %arglen, align 8, !dbg !3915
  %cmp = icmp eq i64 %call5, %12, !dbg !3915
  br i1 %cmp, label %if.then6, label %if.else, !dbg !3915

if.then6:                                         ; preds = %if.then
  %13 = load i64* %i, align 8, !dbg !3918
  store i64 %13, i64* %retval, !dbg !3918
  br label %return, !dbg !3918

if.else:                                          ; preds = %if.then
  %14 = load i64* %matchind, align 8, !dbg !3919
  %cmp7 = icmp eq i64 %14, -1, !dbg !3919
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !3919

if.then8:                                         ; preds = %if.else
  %15 = load i64* %i, align 8, !dbg !3921
  store i64 %15, i64* %matchind, align 8, !dbg !3921
  br label %for.inc, !dbg !3921

if.else9:                                         ; preds = %if.else
  %16 = load i8** %vallist.addr, align 8, !dbg !3922
  %cmp10 = icmp eq i8* %16, null, !dbg !3922
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !3922

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8** %vallist.addr, align 8, !dbg !3925
  %18 = load i64* %valsize.addr, align 8, !dbg !3925
  %19 = load i64* %matchind, align 8, !dbg !3925
  %mul = mul i64 %18, %19, !dbg !3925
  %add.ptr = getelementptr inbounds i8* %17, i64 %mul, !dbg !3925
  %20 = load i8** %vallist.addr, align 8, !dbg !3925
  %21 = load i64* %valsize.addr, align 8, !dbg !3925
  %22 = load i64* %i, align 8, !dbg !3925
  %mul11 = mul i64 %21, %22, !dbg !3925
  %add.ptr12 = getelementptr inbounds i8* %20, i64 %mul11, !dbg !3925
  %23 = load i64* %valsize.addr, align 8, !dbg !3925
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #18, !dbg !3925
  %tobool14 = icmp ne i32 %call13, 0, !dbg !3925
  br i1 %tobool14, label %if.then15, label %for.inc, !dbg !3925

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !3926
  br label %for.inc, !dbg !3928

for.inc:                                          ; preds = %for.body, %if.then8, %if.then15, %lor.lhs.false
  %24 = load i64* %i, align 8, !dbg !3910
  %inc = add i64 %24, 1, !dbg !3910
  store i64 %inc, i64* %i, align 8, !dbg !3910
  br label %for.cond, !dbg !3910

for.end:                                          ; preds = %for.cond
  %25 = load i8* %ambiguous, align 1, !dbg !3929
  %tobool19 = trunc i8 %25 to i1, !dbg !3929
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !3929

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, !dbg !3931
  br label %return, !dbg !3931

if.else21:                                        ; preds = %for.end
  %26 = load i64* %matchind, align 8, !dbg !3932
  store i64 %26, i64* %retval, !dbg !3932
  br label %return, !dbg !3932

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64* %retval, !dbg !3933
  ret i64 %27, !dbg !3933
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind uwtable
define void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #0 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  store i8* %value, i8** %value.addr, align 8
  store i64 %problem, i64* %problem.addr, align 8
  %0 = load i64* %problem.addr, align 8, !dbg !3934
  %cmp = icmp eq i64 %0, -1, !dbg !3934
  %cond = select i1 %cmp, i8* getelementptr inbounds ([27 x i8]* @.str209, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @.str1210, i32 0, i32 0), !dbg !3934
  store i8* %cond, i8** %format, align 8, !dbg !3934
  %1 = load i8** %format, align 8, !dbg !3935
  %2 = load i8** %value.addr, align 8, !dbg !3935
  %call = call i8* @quotearg_n_style(i32 0, i32 5, i8* %2), !dbg !3935
  %3 = load i8** %context.addr, align 8, !dbg !3936
  %call1 = call i8* @quote_n(i32 1, i8* %3), !dbg !3936
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 0, i8* %1, i8* %call, i8* %call1), !dbg !3935
  ret void, !dbg !3937
}

; Function Attrs: nounwind uwtable
define void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #0 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %last_val = alloca i8*, align 8
  store i8** %arglist, i8*** %arglist.addr, align 8
  store i8* %vallist, i8** %vallist.addr, align 8
  store i64 %valsize, i64* %valsize.addr, align 8
  store i8* null, i8** %last_val, align 8, !dbg !3938
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !3939
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([21 x i8]* @.str2211, i32 0, i32 0)), !dbg !3939
  store i64 0, i64* %i, align 8, !dbg !3940
  br label %for.cond, !dbg !3940

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64* %i, align 8, !dbg !3940
  %2 = load i8*** %arglist.addr, align 8, !dbg !3940
  %arrayidx = getelementptr inbounds i8** %2, i64 %1, !dbg !3940
  %3 = load i8** %arrayidx, align 8, !dbg !3940
  %tobool = icmp ne i8* %3, null, !dbg !3940
  br i1 %tobool, label %for.body, label %for.end, !dbg !3940

for.body:                                         ; preds = %for.cond
  %4 = load i64* %i, align 8, !dbg !3942
  %cmp = icmp eq i64 %4, 0, !dbg !3942
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3942

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8** %last_val, align 8, !dbg !3944
  %6 = load i8** %vallist.addr, align 8, !dbg !3944
  %7 = load i64* %valsize.addr, align 8, !dbg !3944
  %8 = load i64* %i, align 8, !dbg !3944
  %mul = mul i64 %7, %8, !dbg !3944
  %add.ptr = getelementptr inbounds i8* %6, i64 %mul, !dbg !3944
  %9 = load i64* %valsize.addr, align 8, !dbg !3944
  %call1 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #18, !dbg !3944
  %tobool2 = icmp ne i32 %call1, 0, !dbg !3944
  br i1 %tobool2, label %if.then, label %if.else, !dbg !3944

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE** @stderr, align 8, !dbg !3945
  %11 = load i64* %i, align 8, !dbg !3945
  %12 = load i8*** %arglist.addr, align 8, !dbg !3945
  %arrayidx3 = getelementptr inbounds i8** %12, i64 %11, !dbg !3945
  %13 = load i8** %arrayidx3, align 8, !dbg !3945
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([10 x i8]* @.str3212, i32 0, i32 0), i8* %13), !dbg !3945
  %14 = load i8** %vallist.addr, align 8, !dbg !3947
  %15 = load i64* %valsize.addr, align 8, !dbg !3947
  %16 = load i64* %i, align 8, !dbg !3947
  %mul5 = mul i64 %15, %16, !dbg !3947
  %add.ptr6 = getelementptr inbounds i8* %14, i64 %mul5, !dbg !3947
  store i8* %add.ptr6, i8** %last_val, align 8, !dbg !3947
  br label %for.inc, !dbg !3948

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE** @stderr, align 8, !dbg !3949
  %18 = load i64* %i, align 8, !dbg !3949
  %19 = load i8*** %arglist.addr, align 8, !dbg !3949
  %arrayidx7 = getelementptr inbounds i8** %19, i64 %18, !dbg !3949
  %20 = load i8** %arrayidx7, align 8, !dbg !3949
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([7 x i8]* @.str4213, i32 0, i32 0), i8* %20), !dbg !3949
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %21 = load i64* %i, align 8, !dbg !3940
  %inc = add i64 %21, 1, !dbg !3940
  store i64 %inc, i64* %i, align 8, !dbg !3940
  br label %for.cond, !dbg !3940

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE** @stderr, align 8, !dbg !3951
  %call9 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !3951
  ret void, !dbg !3952
}

; Function Attrs: nounwind uwtable
define i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #0 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8
  store i8* %context, i8** %context.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  store i8** %arglist, i8*** %arglist.addr, align 8
  store i8* %vallist, i8** %vallist.addr, align 8
  store i64 %valsize, i64* %valsize.addr, align 8
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8
  %0 = load i8** %arg.addr, align 8, !dbg !3953
  %1 = load i8*** %arglist.addr, align 8, !dbg !3953
  %2 = load i8** %vallist.addr, align 8, !dbg !3953
  %3 = load i64* %valsize.addr, align 8, !dbg !3953
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3), !dbg !3953
  store i64 %call, i64* %res, align 8, !dbg !3953
  %4 = load i64* %res, align 8, !dbg !3954
  %cmp = icmp sge i64 %4, 0, !dbg !3954
  br i1 %cmp, label %if.then, label %if.end, !dbg !3954

if.then:                                          ; preds = %entry
  %5 = load i64* %res, align 8, !dbg !3956
  store i64 %5, i64* %retval, !dbg !3956
  br label %return, !dbg !3956

if.end:                                           ; preds = %entry
  %6 = load i8** %context.addr, align 8, !dbg !3957
  %7 = load i8** %arg.addr, align 8, !dbg !3957
  %8 = load i64* %res, align 8, !dbg !3957
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !3957
  %9 = load i8*** %arglist.addr, align 8, !dbg !3958
  %10 = load i8** %vallist.addr, align 8, !dbg !3958
  %11 = load i64* %valsize.addr, align 8, !dbg !3958
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !3958
  %12 = load void ()** %exit_fn.addr, align 8, !dbg !3959
  call void %12(), !dbg !3959
  store i64 -1, i64* %retval, !dbg !3960
  br label %return, !dbg !3960

return:                                           ; preds = %if.end, %if.then
  %13 = load i64* %retval, !dbg !3961
  ret i64 %13, !dbg !3961
}

; Function Attrs: nounwind uwtable
define i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #0 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8
  store i8* %value, i8** %value.addr, align 8
  store i8** %arglist, i8*** %arglist.addr, align 8
  store i8* %vallist, i8** %vallist.addr, align 8
  store i64 %valsize, i64* %valsize.addr, align 8
  store i64 0, i64* %i, align 8, !dbg !3962
  br label %for.cond, !dbg !3962

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64* %i, align 8, !dbg !3962
  %1 = load i8*** %arglist.addr, align 8, !dbg !3962
  %arrayidx = getelementptr inbounds i8** %1, i64 %0, !dbg !3962
  %2 = load i8** %arrayidx, align 8, !dbg !3962
  %tobool = icmp ne i8* %2, null, !dbg !3962
  br i1 %tobool, label %for.body, label %for.end, !dbg !3962

for.body:                                         ; preds = %for.cond
  %3 = load i8** %value.addr, align 8, !dbg !3964
  %4 = load i8** %vallist.addr, align 8, !dbg !3964
  %5 = load i64* %valsize.addr, align 8, !dbg !3964
  %6 = load i64* %i, align 8, !dbg !3964
  %mul = mul i64 %5, %6, !dbg !3964
  %add.ptr = getelementptr inbounds i8* %4, i64 %mul, !dbg !3964
  %7 = load i64* %valsize.addr, align 8, !dbg !3964
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #18, !dbg !3964
  %tobool1 = icmp ne i32 %call, 0, !dbg !3964
  %8 = load i64* %i, align 8, !dbg !3962
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !3964

if.then:                                          ; preds = %for.body
  %9 = load i8*** %arglist.addr, align 8, !dbg !3966
  %arrayidx2 = getelementptr inbounds i8** %9, i64 %8, !dbg !3966
  %10 = load i8** %arrayidx2, align 8, !dbg !3966
  store i8* %10, i8** %retval, !dbg !3966
  br label %return, !dbg !3966

for.inc:                                          ; preds = %for.body
  %inc = add i64 %8, 1, !dbg !3962
  store i64 %inc, i64* %i, align 8, !dbg !3962
  br label %for.cond, !dbg !3962

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, !dbg !3967
  br label %return, !dbg !3967

return:                                           ; preds = %for.end, %if.then
  %11 = load i8** %retval, !dbg !3968
  ret i8* %11, !dbg !3968
}

; Function Attrs: nounwind uwtable
define internal void @__argmatch_die() #0 {
entry:
  call void (i32, ...)* bitcast (void (i32)* @usage to void (i32, ...)*)(i32 1), !dbg !3969
  ret void, !dbg !3970
}

; Function Attrs: nounwind uwtable
define i8* @find_backup_file_name(i8* %file, i32 %backup_type) #0 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %filelen = alloca i64, align 8
  %s = alloca i8*, align 8
  %ssize = alloca i64, align 8
  %simple = alloca i8, align 1
  %simple_backup_suffix_size = alloca i64, align 8
  %backup_suffix_size_guess = alloca i64, align 8
  store i8* %file, i8** %file.addr, align 8
  store i32 %backup_type, i32* %backup_type.addr, align 4
  %0 = load i8** %file.addr, align 8, !dbg !3971
  %call = call i64 @strlen(i8* %0) #18, !dbg !3971
  store i64 %call, i64* %filelen, align 8, !dbg !3971
  store i8 1, i8* %simple, align 1, !dbg !3972
  %1 = load i8** @simple_backup_suffix, align 8, !dbg !3973
  %call1 = call i64 @strlen(i8* %1) #18, !dbg !3973
  %add = add i64 %call1, 1, !dbg !3973
  store i64 %add, i64* %simple_backup_suffix_size, align 8, !dbg !3973
  %2 = load i64* %simple_backup_suffix_size, align 8, !dbg !3974
  store i64 %2, i64* %backup_suffix_size_guess, align 8, !dbg !3974
  %3 = load i64* %backup_suffix_size_guess, align 8, !dbg !3975
  %cmp = icmp ult i64 %3, 9, !dbg !3975
  %. = select i1 %cmp, i64 9, i64 %2, !dbg !3975
  store i64 %., i64* %backup_suffix_size_guess, align 8, !dbg !3977
  %4 = load i64* %filelen, align 8, !dbg !3978
  %5 = load i64* %backup_suffix_size_guess, align 8, !dbg !3978
  %add2 = add i64 %4, %5, !dbg !3978
  %add3 = add i64 %add2, 1, !dbg !3978
  store i64 %add3, i64* %ssize, align 8, !dbg !3978
  %6 = load i64* %ssize, align 8, !dbg !3979
  %call4 = call i8* @xmalloc(i64 %6), !dbg !3979
  store i8* %call4, i8** %s, align 8, !dbg !3979
  %7 = load i8** %s, align 8, !dbg !3980
  %8 = load i8** %file.addr, align 8, !dbg !3980
  %9 = load i64* %filelen, align 8, !dbg !3980
  %add5 = add i64 %9, 1, !dbg !3980
  %10 = call i8* @memcpy(i8* %7, i8* %8, i64 %add5)
  %11 = load i32* %backup_type.addr, align 4, !dbg !3981
  %cmp6 = icmp ne i32 %11, 1, !dbg !3981
  br i1 %cmp6, label %if.then7, label %if.end12, !dbg !3981

if.then7:                                         ; preds = %entry
  %12 = load i64* %ssize, align 8, !dbg !3983
  %13 = load i64* %filelen, align 8, !dbg !3983
  %call8 = call i32 @numbered_backup(i8** %s, i64 %12, i64 %13), !dbg !3983
  switch i32 %call8, label %if.end12 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb10
  ], !dbg !3983

sw.bb:                                            ; preds = %if.then7
  %14 = load i8** %s, align 8, !dbg !3984
  store i8* %14, i8** %retval, !dbg !3984
  br label %return, !dbg !3984

sw.bb9:                                           ; preds = %if.then7
  store i8 0, i8* %simple, align 1, !dbg !3986
  br label %if.end12, !dbg !3987

sw.bb10:                                          ; preds = %if.then7
  %15 = load i32* %backup_type.addr, align 4, !dbg !3988
  %cmp11 = icmp eq i32 %15, 2, !dbg !3988
  %frombool = zext i1 %cmp11 to i8, !dbg !3988
  store i8 %frombool, i8* %simple, align 1, !dbg !3988
  br label %if.end12, !dbg !3989

if.end12:                                         ; preds = %if.then7, %sw.bb9, %sw.bb10, %entry
  %16 = load i8* %simple, align 1, !dbg !3990
  %tobool = trunc i8 %16 to i1, !dbg !3990
  br i1 %tobool, label %if.then13, label %if.end14, !dbg !3990

if.then13:                                        ; preds = %if.end12
  %17 = load i8** %s, align 8, !dbg !3992
  %18 = load i64* %filelen, align 8, !dbg !3992
  %add.ptr = getelementptr inbounds i8* %17, i64 %18, !dbg !3992
  %19 = load i8** @simple_backup_suffix, align 8, !dbg !3992
  %20 = load i64* %simple_backup_suffix_size, align 8, !dbg !3992
  %21 = call i8* @memcpy(i8* %add.ptr, i8* %19, i64 %20)
  br label %if.end14, !dbg !3992

if.end14:                                         ; preds = %if.then13, %if.end12
  %22 = load i8** %s, align 8, !dbg !3993
  %23 = load i64* %filelen, align 8, !dbg !3993
  call void @check_extension(i8* %22, i64 %23, i8 signext 126), !dbg !3993
  %24 = load i8** %s, align 8, !dbg !3994
  store i8* %24, i8** %retval, !dbg !3994
  br label %return, !dbg !3994

return:                                           ; preds = %if.end14, %sw.bb
  %25 = load i8** %retval, !dbg !3995
  ret i8* %25, !dbg !3995
}

; Function Attrs: nounwind uwtable
define i32 @get_version(i8* %context, i8* %version) #0 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  store i8* %version, i8** %version.addr, align 8
  %0 = load i8** %version.addr, align 8, !dbg !3996
  %cmp = icmp eq i8* %0, null, !dbg !3996
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3996

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8** %version.addr, align 8, !dbg !3996
  %2 = load i8* %1, align 1, !dbg !3996
  %conv = sext i8 %2 to i32, !dbg !3996
  %cmp1 = icmp eq i32 %conv, 0, !dbg !3996
  br i1 %cmp1, label %if.then, label %if.else, !dbg !3996

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, !dbg !3998
  br label %return, !dbg !3998

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8** %context.addr, align 8, !dbg !3999
  %4 = load i8** %version.addr, align 8, !dbg !3999
  %5 = load void ()** @argmatch_die, align 8, !dbg !3999
  %call = call i64 @__xargmatch_internal(i8* %3, i8* %4, i8** getelementptr inbounds ([9 x i8*]* @backup_args, i32 0, i32 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %5), !dbg !3999
  %arrayidx = getelementptr inbounds [8 x i32]* @backup_types, i32 0, i64 %call, !dbg !3999
  %6 = load i32* %arrayidx, align 4, !dbg !3999
  store i32 %6, i32* %retval, !dbg !3999
  br label %return, !dbg !3999

return:                                           ; preds = %if.else, %if.then
  %7 = load i32* %retval, !dbg !4000
  ret i32 %7, !dbg !4000
}

; Function Attrs: nounwind uwtable
define i32 @xget_version(i8* %context, i8* %version) #0 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  store i8* %version, i8** %version.addr, align 8
  %0 = load i8** %version.addr, align 8, !dbg !4001
  %tobool = icmp ne i8* %0, null, !dbg !4001
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4001

land.lhs.true:                                    ; preds = %entry
  %1 = load i8** %version.addr, align 8, !dbg !4001
  %2 = load i8* %1, align 1, !dbg !4001
  %conv = sext i8 %2 to i32, !dbg !4001
  %tobool1 = icmp ne i32 %conv, 0, !dbg !4001
  br i1 %tobool1, label %if.then, label %if.else, !dbg !4001

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8** %context.addr, align 8, !dbg !4003
  %4 = load i8** %version.addr, align 8, !dbg !4003
  %call = call i32 @get_version(i8* %3, i8* %4), !dbg !4003
  store i32 %call, i32* %retval, !dbg !4003
  br label %return, !dbg !4003

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str2220, i32 0, i32 0)) #6, !dbg !4004
  %call3 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8]* @.str1219, i32 0, i32 0), i8* %call2), !dbg !4004
  store i32 %call3, i32* %retval, !dbg !4004
  br label %return, !dbg !4004

return:                                           ; preds = %if.else, %if.then
  %5 = load i32* %retval, !dbg !4005
  ret i32 %5, !dbg !4005
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #4

; Function Attrs: nounwind
declare i64 @pathconf(i8*, i32) #4

declare %struct.__dirstream* @opendir(i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @numbered_backup(i8** %buffer, i64 %buffer_size, i64 %filelen) #0 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %filelen.addr = alloca i64, align 8
  %result = alloca i32, align 4
  %dirp = alloca %struct.__dirstream*, align 8
  %dp = alloca %struct.dirent*, align 8
  %buf = alloca i8*, align 8
  %versionlenmax = alloca i64, align 8
  %base = alloca i8*, align 8
  %base_offset = alloca i64, align 8
  %baselen = alloca i64, align 8
  %tmp = alloca [2 x i8], align 1
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %all_9s = alloca i8, align 1
  %versionlen = alloca i64, align 8
  %new_buflen = alloca i64, align 8
  store i8** %buffer, i8*** %buffer.addr, align 8
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  store i64 %filelen, i64* %filelen.addr, align 8
  store i32 2, i32* %result, align 4, !dbg !4006
  %0 = load i8*** %buffer.addr, align 8, !dbg !4007
  %1 = load i8** %0, align 8, !dbg !4007
  store i8* %1, i8** %buf, align 8, !dbg !4007
  store i64 1, i64* %versionlenmax, align 8, !dbg !4008
  %2 = load i8** %buf, align 8, !dbg !4009
  %call = call i8* @last_component(i8* %2), !dbg !4009
  store i8* %call, i8** %base, align 8, !dbg !4009
  %3 = load i8** %base, align 8, !dbg !4010
  %4 = load i8** %buf, align 8, !dbg !4010
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !4010
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !4010
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4010
  store i64 %sub.ptr.sub, i64* %base_offset, align 8, !dbg !4010
  %5 = load i8** %base, align 8, !dbg !4011
  %call1 = call i64 @base_len(i8* %5), !dbg !4011
  store i64 %call1, i64* %baselen, align 8, !dbg !4011
  %6 = bitcast [2 x i8]* %tmp to i8*, !dbg !4012
  %7 = load i8** %base, align 8, !dbg !4012
  %8 = call i8* @memcpy(i8* %6, i8* %7, i64 2)
  %9 = load i8** %base, align 8, !dbg !4013
  %call2 = call i8* @strcpy(i8* %9, i8* getelementptr inbounds ([2 x i8]* @.str11229, i32 0, i32 0)) #6, !dbg !4013
  %10 = load i8** %buf, align 8, !dbg !4014
  %call3 = call %struct.__dirstream* @opendir(i8* %10), !dbg !4014
  store %struct.__dirstream* %call3, %struct.__dirstream** %dirp, align 8, !dbg !4014
  %11 = load i8** %base, align 8, !dbg !4015
  %12 = bitcast [2 x i8]* %tmp to i8*, !dbg !4015
  %13 = call i8* @memcpy(i8* %11, i8* %12, i64 2)
  %14 = load i8** %base, align 8, !dbg !4016
  %15 = load i64* %baselen, align 8, !dbg !4016
  %add.ptr = getelementptr inbounds i8* %14, i64 %15, !dbg !4016
  %call4 = call i8* @strcpy(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8]* @.str12230, i32 0, i32 0)) #6, !dbg !4016
  %16 = load %struct.__dirstream** %dirp, align 8, !dbg !4017
  %tobool = icmp ne %struct.__dirstream* %16, null, !dbg !4017
  br i1 %tobool, label %while.cond, label %if.then, !dbg !4017

if.then:                                          ; preds = %entry
  %17 = load i32* %result, align 4, !dbg !4019
  store i32 %17, i32* %retval, !dbg !4019
  br label %return, !dbg !4019

while.cond:                                       ; preds = %for.end, %land.lhs.true53, %lor.lhs.false60, %land.lhs.true63, %if.end23, %land.lhs.true, %if.end15, %while.body, %lor.lhs.false, %entry, %while.end
  %18 = load %struct.__dirstream** %dirp, align 8, !dbg !4020
  %call5 = call %struct.dirent* @readdir(%struct.__dirstream* %18), !dbg !4020
  store %struct.dirent* %call5, %struct.dirent** %dp, align 8, !dbg !4020
  %cmp = icmp ne %struct.dirent* %call5, null, !dbg !4020
  br i1 %cmp, label %while.body, label %while.end98, !dbg !4020

while.body:                                       ; preds = %while.cond
  %19 = load %struct.dirent** %dp, align 8, !dbg !4021
  %d_ino = getelementptr inbounds %struct.dirent* %19, i32 0, i32 0, !dbg !4021
  %20 = load i64* %d_ino, align 8, !dbg !4021
  %cmp11 = icmp ne i64 %20, 0, !dbg !4021
  br i1 %cmp11, label %lor.lhs.false, label %while.cond, !dbg !4021

lor.lhs.false:                                    ; preds = %while.body
  %21 = load %struct.dirent** %dp, align 8, !dbg !4021
  %d_name = getelementptr inbounds %struct.dirent* %21, i32 0, i32 4, !dbg !4021
  %arraydecay = getelementptr inbounds [256 x i8]* %d_name, i32 0, i32 0, !dbg !4021
  %call12 = call i64 @strlen(i8* %arraydecay) #18, !dbg !4021
  %22 = load i64* %baselen, align 8, !dbg !4021
  %add = add i64 %22, 4, !dbg !4021
  %cmp13 = icmp ult i64 %call12, %add, !dbg !4021
  br i1 %cmp13, label %while.cond, label %if.end15, !dbg !4021

if.end15:                                         ; preds = %lor.lhs.false
  %23 = load i8** %buf, align 8, !dbg !4024
  %24 = load i64* %base_offset, align 8, !dbg !4024
  %add.ptr16 = getelementptr inbounds i8* %23, i64 %24, !dbg !4024
  %25 = load %struct.dirent** %dp, align 8, !dbg !4024
  %d_name17 = getelementptr inbounds %struct.dirent* %25, i32 0, i32 4, !dbg !4024
  %arraydecay18 = getelementptr inbounds [256 x i8]* %d_name17, i32 0, i32 0, !dbg !4024
  %26 = load i64* %baselen, align 8, !dbg !4024
  %add19 = add i64 %26, 2, !dbg !4024
  %call20 = call i32 @memcmp(i8* %add.ptr16, i8* %arraydecay18, i64 %add19) #18, !dbg !4024
  %cmp21 = icmp ne i32 %call20, 0, !dbg !4024
  br i1 %cmp21, label %while.cond, label %if.end23, !dbg !4024

if.end23:                                         ; preds = %if.end15
  %27 = load %struct.dirent** %dp, align 8, !dbg !4026
  %d_name24 = getelementptr inbounds %struct.dirent* %27, i32 0, i32 4, !dbg !4026
  %arraydecay25 = getelementptr inbounds [256 x i8]* %d_name24, i32 0, i32 0, !dbg !4026
  %28 = load i64* %baselen, align 8, !dbg !4026
  %add.ptr26 = getelementptr inbounds i8* %arraydecay25, i64 %28, !dbg !4026
  %add.ptr27 = getelementptr inbounds i8* %add.ptr26, i64 2, !dbg !4026
  store i8* %add.ptr27, i8** %p, align 8, !dbg !4026
  %29 = load i8** %p, align 8, !dbg !4027
  %30 = load i8* %29, align 1, !dbg !4027
  %conv = sext i8 %30 to i32, !dbg !4027
  %cmp28 = icmp sle i32 49, %conv, !dbg !4027
  br i1 %cmp28, label %land.lhs.true, label %while.cond, !dbg !4027

land.lhs.true:                                    ; preds = %if.end23
  %31 = load i8** %p, align 8, !dbg !4027
  %32 = load i8* %31, align 1, !dbg !4027
  %conv30 = sext i8 %32 to i32, !dbg !4027
  %cmp31 = icmp sle i32 %conv30, 57, !dbg !4027
  br i1 %cmp31, label %if.end34, label %while.cond, !dbg !4027

if.end34:                                         ; preds = %land.lhs.true
  %33 = load i8** %p, align 8, !dbg !4029
  %34 = load i8* %33, align 1, !dbg !4029
  %conv35 = sext i8 %34 to i32, !dbg !4029
  %cmp36 = icmp eq i32 %conv35, 57, !dbg !4029
  %frombool = zext i1 %cmp36 to i8, !dbg !4029
  store i8 %frombool, i8* %all_9s, align 1, !dbg !4029
  store i64 1, i64* %versionlen, align 8, !dbg !4030
  br label %for.cond, !dbg !4030

for.cond:                                         ; preds = %for.body, %if.end34
  %35 = load i64* %versionlen, align 8, !dbg !4030
  %36 = load i8** %p, align 8, !dbg !4030
  %arrayidx = getelementptr inbounds i8* %36, i64 %35, !dbg !4030
  %37 = load i8* %arrayidx, align 1, !dbg !4030
  %conv38 = sext i8 %37 to i32, !dbg !4030
  %sub = sub i32 %conv38, 48, !dbg !4030
  %cmp39 = icmp ule i32 %sub, 9, !dbg !4030
  %38 = load i64* %versionlen, align 8, !dbg !4032
  %39 = load i8** %p, align 8, !dbg !4032
  %arrayidx41 = getelementptr inbounds i8* %39, i64 %38, !dbg !4032
  %40 = load i8* %arrayidx41, align 1, !dbg !4032
  %conv42 = sext i8 %40 to i32, !dbg !4032
  br i1 %cmp39, label %for.body, label %for.end, !dbg !4030

for.body:                                         ; preds = %for.cond
  %cmp43 = icmp eq i32 %conv42, 57, !dbg !4032
  %conv44 = zext i1 %cmp43 to i32, !dbg !4032
  %41 = load i8* %all_9s, align 1, !dbg !4032
  %tobool45 = trunc i8 %41 to i1, !dbg !4032
  %conv46 = zext i1 %tobool45 to i32, !dbg !4032
  %and = and i32 %conv46, %conv44, !dbg !4032
  %tobool47 = icmp ne i32 %and, 0, !dbg !4032
  %frombool48 = zext i1 %tobool47 to i8, !dbg !4032
  store i8 %frombool48, i8* %all_9s, align 1, !dbg !4032
  %42 = load i64* %versionlen, align 8, !dbg !4030
  %inc = add i64 %42, 1, !dbg !4030
  store i64 %inc, i64* %versionlen, align 8, !dbg !4030
  br label %for.cond, !dbg !4030

for.end:                                          ; preds = %for.cond
  %cmp51 = icmp eq i32 %conv42, 126, !dbg !4033
  br i1 %cmp51, label %land.lhs.true53, label %while.cond, !dbg !4033

land.lhs.true53:                                  ; preds = %for.end
  %43 = load i64* %versionlen, align 8, !dbg !4033
  %add54 = add i64 %43, 1, !dbg !4033
  %44 = load i8** %p, align 8, !dbg !4033
  %arrayidx55 = getelementptr inbounds i8* %44, i64 %add54, !dbg !4033
  %45 = load i8* %arrayidx55, align 1, !dbg !4033
  %tobool56 = icmp ne i8 %45, 0, !dbg !4033
  br i1 %tobool56, label %while.cond, label %land.lhs.true57, !dbg !4033

land.lhs.true57:                                  ; preds = %land.lhs.true53
  %46 = load i64* %versionlenmax, align 8, !dbg !4033
  %47 = load i64* %versionlen, align 8, !dbg !4033
  %cmp58 = icmp ult i64 %46, %47, !dbg !4033
  br i1 %cmp58, label %if.end70, label %lor.lhs.false60, !dbg !4033

lor.lhs.false60:                                  ; preds = %land.lhs.true57
  %48 = load i64* %versionlenmax, align 8, !dbg !4033
  %49 = load i64* %versionlen, align 8, !dbg !4033
  %cmp61 = icmp eq i64 %48, %49, !dbg !4033
  br i1 %cmp61, label %land.lhs.true63, label %while.cond, !dbg !4033

land.lhs.true63:                                  ; preds = %lor.lhs.false60
  %50 = load i8** %buf, align 8, !dbg !4035
  %51 = load i64* %filelen.addr, align 8, !dbg !4035
  %add.ptr64 = getelementptr inbounds i8* %50, i64 %51, !dbg !4035
  %add.ptr65 = getelementptr inbounds i8* %add.ptr64, i64 2, !dbg !4035
  %52 = load i8** %p, align 8, !dbg !4035
  %53 = load i64* %versionlen, align 8, !dbg !4035
  %call66 = call i32 @memcmp(i8* %add.ptr65, i8* %52, i64 %53) #18, !dbg !4035
  %cmp67 = icmp sle i32 %call66, 0, !dbg !4035
  br i1 %cmp67, label %if.end70, label %while.cond, !dbg !4035

if.end70:                                         ; preds = %land.lhs.true63, %land.lhs.true57
  %54 = load i8* %all_9s, align 1, !dbg !4036
  %tobool71 = trunc i8 %54 to i1, !dbg !4036
  %conv72 = zext i1 %tobool71 to i64, !dbg !4036
  %55 = load i64* %versionlen, align 8, !dbg !4036
  %add73 = add i64 %conv72, %55, !dbg !4036
  store i64 %add73, i64* %versionlenmax, align 8, !dbg !4036
  %56 = load i8* %all_9s, align 1, !dbg !4037
  %tobool74 = trunc i8 %56 to i1, !dbg !4037
  %cond = select i1 %tobool74, i32 1, i32 0, !dbg !4037
  store i32 %cond, i32* %result, align 4, !dbg !4037
  %57 = load i64* %filelen.addr, align 8, !dbg !4038
  %add76 = add i64 %57, 2, !dbg !4038
  %58 = load i64* %versionlenmax, align 8, !dbg !4038
  %add77 = add i64 %add76, %58, !dbg !4038
  %add78 = add i64 %add77, 1, !dbg !4038
  store i64 %add78, i64* %new_buflen, align 8, !dbg !4038
  %59 = load i64* %buffer_size.addr, align 8, !dbg !4039
  %60 = load i64* %new_buflen, align 8, !dbg !4039
  %cmp79 = icmp ule i64 %59, %60, !dbg !4039
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !4039

if.then81:                                        ; preds = %if.end70
  %61 = load i8** %buf, align 8, !dbg !4041
  %62 = load i64* %new_buflen, align 8, !dbg !4041
  %call82 = call i8* @xnrealloc(i8* %61, i64 2, i64 %62), !dbg !4041
  store i8* %call82, i8** %buf, align 8, !dbg !4041
  %63 = load i64* %new_buflen, align 8, !dbg !4043
  %mul = mul i64 %63, 2, !dbg !4043
  store i64 %mul, i64* %buffer_size.addr, align 8, !dbg !4043
  br label %if.end83, !dbg !4044

if.end83:                                         ; preds = %if.then81, %if.end70
  %64 = load i8** %buf, align 8, !dbg !4045
  %65 = load i64* %filelen.addr, align 8, !dbg !4045
  %add.ptr84 = getelementptr inbounds i8* %64, i64 %65, !dbg !4045
  store i8* %add.ptr84, i8** %q, align 8, !dbg !4045
  %66 = load i8** %q, align 8, !dbg !4046
  %incdec.ptr = getelementptr inbounds i8* %66, i32 1, !dbg !4046
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !4046
  store i8 46, i8* %66, align 1, !dbg !4046
  %67 = load i8** %q, align 8, !dbg !4047
  %incdec.ptr85 = getelementptr inbounds i8* %67, i32 1, !dbg !4047
  store i8* %incdec.ptr85, i8** %q, align 8, !dbg !4047
  store i8 126, i8* %67, align 1, !dbg !4047
  %68 = load i8** %q, align 8, !dbg !4048
  store i8 48, i8* %68, align 1, !dbg !4048
  %69 = load i8* %all_9s, align 1, !dbg !4049
  %tobool86 = trunc i8 %69 to i1, !dbg !4049
  %conv87 = zext i1 %tobool86 to i32, !dbg !4049
  %70 = load i8** %q, align 8, !dbg !4049
  %idx.ext = sext i32 %conv87 to i64, !dbg !4049
  %add.ptr88 = getelementptr inbounds i8* %70, i64 %idx.ext, !dbg !4049
  store i8* %add.ptr88, i8** %q, align 8, !dbg !4049
  %71 = load i8** %q, align 8, !dbg !4050
  %72 = load i8** %p, align 8, !dbg !4050
  %73 = load i64* %versionlen, align 8, !dbg !4050
  %add89 = add i64 %73, 2, !dbg !4050
  %74 = call i8* @memcpy(i8* %71, i8* %72, i64 %add89)
  %75 = load i64* %versionlen, align 8, !dbg !4051
  %76 = load i8** %q, align 8, !dbg !4051
  %add.ptr90 = getelementptr inbounds i8* %76, i64 %75, !dbg !4051
  store i8* %add.ptr90, i8** %q, align 8, !dbg !4051
  br label %while.cond91, !dbg !4052

while.cond91:                                     ; preds = %while.body96, %if.end83
  %77 = load i8** %q, align 8, !dbg !4052
  %incdec.ptr92 = getelementptr inbounds i8* %77, i32 -1, !dbg !4052
  store i8* %incdec.ptr92, i8** %q, align 8, !dbg !4052
  %78 = load i8* %incdec.ptr92, align 1, !dbg !4052
  %conv93 = sext i8 %78 to i32, !dbg !4052
  %cmp94 = icmp eq i32 %conv93, 57, !dbg !4052
  %79 = load i8** %q, align 8, !dbg !4053
  br i1 %cmp94, label %while.body96, label %while.end, !dbg !4052

while.body96:                                     ; preds = %while.cond91
  store i8 48, i8* %79, align 1, !dbg !4053
  br label %while.cond91, !dbg !4053

while.end:                                        ; preds = %while.cond91
  %80 = load i8* %79, align 1, !dbg !4054
  %inc97 = add i8 %80, 1, !dbg !4054
  store i8 %inc97, i8* %79, align 1, !dbg !4054
  br label %while.cond, !dbg !4055

while.end98:                                      ; preds = %while.cond
  %81 = load %struct.__dirstream** %dirp, align 8, !dbg !4056
  %call99 = call i32 @closedir(%struct.__dirstream* %81), !dbg !4056
  %82 = load i8** %buf, align 8, !dbg !4057
  %83 = load i8*** %buffer.addr, align 8, !dbg !4057
  store i8* %82, i8** %83, align 8, !dbg !4057
  %84 = load i32* %result, align 4, !dbg !4058
  store i32 %84, i32* %retval, !dbg !4058
  br label %return, !dbg !4058

return:                                           ; preds = %while.end98, %if.then
  %85 = load i32* %retval, !dbg !4059
  ret i32 %85, !dbg !4059
}

; Function Attrs: nounwind uwtable
define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e) #0 {
entry:
  %file.addr = alloca i8*, align 8
  %filelen.addr = alloca i64, align 8
  %e.addr = alloca i8, align 1
  %base = alloca i8*, align 8
  %baselen = alloca i64, align 8
  %baselen_max = alloca i64, align 8
  %name_max = alloca i64, align 8
  %tmp = alloca [2 x i8], align 1
  %size = alloca i64, align 8
  store i8* %file, i8** %file.addr, align 8
  store i64 %filelen, i64* %filelen.addr, align 8
  store i8 %e, i8* %e.addr, align 1
  %0 = load i8** %file.addr, align 8, !dbg !4060
  %call = call i8* @last_component(i8* %0), !dbg !4060
  store i8* %call, i8** %base, align 8, !dbg !4060
  %1 = load i8** %base, align 8, !dbg !4061
  %call1 = call i64 @base_len(i8* %1), !dbg !4061
  store i64 %call1, i64* %baselen, align 8, !dbg !4061
  store i64 255, i64* %baselen_max, align 8, !dbg !4062
  %2 = load i64* %baselen, align 8, !dbg !4063
  %cmp = icmp ult i64 14, %2, !dbg !4063
  br i1 %cmp, label %if.then, label %if.end13, !dbg !4063

if.then:                                          ; preds = %entry
  %3 = bitcast [2 x i8]* %tmp to i8*, !dbg !4065
  %4 = load i8** %base, align 8, !dbg !4065
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 2)
  %6 = load i8** %base, align 8, !dbg !4067
  %call2 = call i8* @strcpy(i8* %6, i8* getelementptr inbounds ([2 x i8]* @.str11229, i32 0, i32 0)) #6, !dbg !4067
  %call3 = call i32* @__errno_location() #1, !dbg !4068
  store i32 0, i32* %call3, align 4, !dbg !4068
  %7 = load i8** %file.addr, align 8, !dbg !4069
  %call4 = call i64 @pathconf(i8* %7, i32 3) #6, !dbg !4069
  store i64 %call4, i64* %name_max, align 8, !dbg !4069
  %8 = load i64* %name_max, align 8, !dbg !4070
  %cmp5 = icmp sle i64 0, %8, !dbg !4070
  br i1 %cmp5, label %if.then8, label %lor.lhs.false, !dbg !4070

lor.lhs.false:                                    ; preds = %if.then
  %call6 = call i32* @__errno_location() #1, !dbg !4070
  %9 = load i32* %call6, align 4, !dbg !4070
  %cmp7 = icmp eq i32 %9, 0, !dbg !4070
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !4070

if.then8:                                         ; preds = %lor.lhs.false, %if.then
  %10 = load i64* %name_max, align 8, !dbg !4072
  store i64 %10, i64* %baselen_max, align 8, !dbg !4072
  store i64 %10, i64* %size, align 8, !dbg !4072
  %11 = load i64* %name_max, align 8, !dbg !4074
  %12 = load i64* %size, align 8, !dbg !4074
  %cmp10 = icmp ne i64 %11, %12, !dbg !4074
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4074

if.then11:                                        ; preds = %if.then8
  store i64 -1, i64* %baselen_max, align 8, !dbg !4076
  br label %if.end12, !dbg !4076

if.end12:                                         ; preds = %if.then8, %if.then11, %lor.lhs.false
  %13 = load i8** %base, align 8, !dbg !4077
  %14 = bitcast [2 x i8]* %tmp to i8*, !dbg !4077
  %15 = call i8* @memcpy(i8* %13, i8* %14, i64 2)
  br label %if.end13, !dbg !4078

if.end13:                                         ; preds = %if.end12, %entry
  %16 = load i64* %baselen_max, align 8, !dbg !4079
  %17 = load i64* %baselen, align 8, !dbg !4079
  %cmp14 = icmp ult i64 %16, %17, !dbg !4079
  br i1 %cmp14, label %if.then15, label %if.end20, !dbg !4079

if.then15:                                        ; preds = %if.end13
  %18 = load i8** %file.addr, align 8, !dbg !4081
  %19 = load i64* %filelen.addr, align 8, !dbg !4081
  %add.ptr = getelementptr inbounds i8* %18, i64 %19, !dbg !4081
  %20 = load i8** %base, align 8, !dbg !4081
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !4081
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !4081
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4081
  store i64 %sub.ptr.sub, i64* %baselen, align 8, !dbg !4081
  %21 = load i64* %baselen_max, align 8, !dbg !4083
  %22 = load i64* %baselen, align 8, !dbg !4083
  %cmp16 = icmp ule i64 %21, %22, !dbg !4083
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !4083

if.then17:                                        ; preds = %if.then15
  %23 = load i64* %baselen_max, align 8, !dbg !4085
  %sub = sub i64 %23, 1, !dbg !4085
  store i64 %sub, i64* %baselen, align 8, !dbg !4085
  br label %if.end18, !dbg !4085

if.end18:                                         ; preds = %if.then17, %if.then15
  %24 = load i8* %e.addr, align 1, !dbg !4086
  %25 = load i64* %baselen, align 8, !dbg !4086
  %26 = load i8** %base, align 8, !dbg !4086
  %arrayidx = getelementptr inbounds i8* %26, i64 %25, !dbg !4086
  store i8 %24, i8* %arrayidx, align 1, !dbg !4086
  %27 = load i64* %baselen, align 8, !dbg !4087
  %add = add i64 %27, 1, !dbg !4087
  %28 = load i8** %base, align 8, !dbg !4087
  %arrayidx19 = getelementptr inbounds i8* %28, i64 %add, !dbg !4087
  store i8 0, i8* %arrayidx19, align 1, !dbg !4087
  br label %if.end20, !dbg !4088

if.end20:                                         ; preds = %if.end18, %if.end13
  ret void, !dbg !4089
}

; Function Attrs: nounwind uwtable
define i8* @last_component(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8
  %p = alloca i8*, align 8
  %saw_slash = alloca i8, align 1
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8** %name.addr, align 8, !dbg !4090
  %add.ptr = getelementptr inbounds i8* %0, i64 0, !dbg !4090
  store i8* %add.ptr, i8** %base, align 8, !dbg !4090
  store i8 0, i8* %saw_slash, align 1, !dbg !4091
  br label %while.cond, !dbg !4092

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8** %base, align 8, !dbg !4092
  %2 = load i8* %1, align 1, !dbg !4092
  %conv = sext i8 %2 to i32, !dbg !4092
  %cmp = icmp eq i32 %conv, 47, !dbg !4092
  %3 = load i8** %base, align 8, !dbg !4093
  br i1 %cmp, label %while.body, label %while.end, !dbg !4092

while.body:                                       ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8* %3, i32 1, !dbg !4093
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !4093
  br label %while.cond, !dbg !4093

while.end:                                        ; preds = %while.cond
  store i8* %3, i8** %p, align 8, !dbg !4094
  br label %for.cond, !dbg !4094

for.cond:                                         ; preds = %for.inc, %while.end
  %4 = load i8** %p, align 8, !dbg !4094
  %5 = load i8* %4, align 1, !dbg !4094
  %tobool = icmp ne i8 %5, 0, !dbg !4094
  br i1 %tobool, label %for.body, label %for.end, !dbg !4094

for.body:                                         ; preds = %for.cond
  %6 = load i8** %p, align 8, !dbg !4096
  %7 = load i8* %6, align 1, !dbg !4096
  %conv2 = sext i8 %7 to i32, !dbg !4096
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !4096
  br i1 %cmp3, label %if.then, label %if.else, !dbg !4096

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !4099
  br label %for.inc, !dbg !4099

if.else:                                          ; preds = %for.body
  %8 = load i8* %saw_slash, align 1, !dbg !4100
  %tobool5 = trunc i8 %8 to i1, !dbg !4100
  br i1 %tobool5, label %if.then6, label %for.inc, !dbg !4100

if.then6:                                         ; preds = %if.else
  %9 = load i8** %p, align 8, !dbg !4102
  store i8* %9, i8** %base, align 8, !dbg !4102
  store i8 0, i8* %saw_slash, align 1, !dbg !4104
  br label %for.inc, !dbg !4105

for.inc:                                          ; preds = %if.then, %if.then6, %if.else
  %10 = load i8** %p, align 8, !dbg !4094
  %incdec.ptr8 = getelementptr inbounds i8* %10, i32 1, !dbg !4094
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !4094
  br label %for.cond, !dbg !4094

for.end:                                          ; preds = %for.cond
  %11 = load i8** %base, align 8, !dbg !4106
  ret i8* %11, !dbg !4106
}

; Function Attrs: nounwind uwtable
define i8* @base_name(i8* %name) #0 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8
  %length = alloca i64, align 8
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8** %name.addr, align 8, !dbg !4107
  %call = call i8* @last_component(i8* %0), !dbg !4107
  store i8* %call, i8** %base, align 8, !dbg !4107
  %1 = load i8** %base, align 8, !dbg !4108
  %2 = load i8* %1, align 1, !dbg !4108
  %tobool = icmp ne i8 %2, 0, !dbg !4108
  br i1 %tobool, label %if.end, label %if.then, !dbg !4108

if.then:                                          ; preds = %entry
  %3 = load i8** %name.addr, align 8, !dbg !4110
  %4 = load i8** %name.addr, align 8, !dbg !4110
  %call1 = call i64 @base_len(i8* %4), !dbg !4110
  %call2 = call i8* @xstrndup(i8* %3, i64 %call1), !dbg !4110
  store i8* %call2, i8** %retval, !dbg !4110
  br label %return, !dbg !4110

if.end:                                           ; preds = %entry
  %5 = load i8** %base, align 8, !dbg !4111
  %call3 = call i64 @base_len(i8* %5), !dbg !4111
  store i64 %call3, i64* %length, align 8, !dbg !4111
  %6 = load i64* %length, align 8, !dbg !4112
  %7 = load i8** %base, align 8, !dbg !4112
  %arrayidx = getelementptr inbounds i8* %7, i64 %6, !dbg !4112
  %8 = load i8* %arrayidx, align 1, !dbg !4112
  %conv = sext i8 %8 to i32, !dbg !4112
  %cmp = icmp eq i32 %conv, 47, !dbg !4112
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !4112

if.then5:                                         ; preds = %if.end
  %9 = load i64* %length, align 8, !dbg !4114
  %inc = add i64 %9, 1, !dbg !4114
  store i64 %inc, i64* %length, align 8, !dbg !4114
  br label %if.end6, !dbg !4114

if.end6:                                          ; preds = %if.then5, %if.end
  %10 = load i8** %base, align 8, !dbg !4115
  %11 = load i64* %length, align 8, !dbg !4115
  %call7 = call i8* @xstrndup(i8* %10, i64 %11), !dbg !4115
  store i8* %call7, i8** %retval, !dbg !4115
  br label %return, !dbg !4115

return:                                           ; preds = %if.end6, %if.then
  %12 = load i8** %retval, !dbg !4116
  ret i8* %12, !dbg !4116
}

; Function Attrs: nounwind uwtable
define i64 @base_len(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  %prefix_len = alloca i64, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 0, i64* %prefix_len, align 8, !dbg !4117
  %0 = load i8** %name.addr, align 8, !dbg !4118
  %call = call i64 @strlen(i8* %0) #18, !dbg !4118
  store i64 %call, i64* %len, align 8, !dbg !4118
  br label %for.cond, !dbg !4118

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64* %len, align 8, !dbg !4118
  %cmp = icmp ult i64 1, %1, !dbg !4118
  br i1 %cmp, label %land.lhs.true, label %for.end, !dbg !4118

land.lhs.true:                                    ; preds = %for.cond
  %2 = load i64* %len, align 8, !dbg !4118
  %sub = sub i64 %2, 1, !dbg !4118
  %3 = load i8** %name.addr, align 8, !dbg !4118
  %arrayidx = getelementptr inbounds i8* %3, i64 %sub, !dbg !4118
  %4 = load i8* %arrayidx, align 1, !dbg !4118
  %conv = sext i8 %4 to i32, !dbg !4118
  %cmp1 = icmp eq i32 %conv, 47, !dbg !4118
  br i1 %cmp1, label %for.inc, label %for.end, !dbg !4118

for.inc:                                          ; preds = %land.lhs.true
  %5 = load i64* %len, align 8, !dbg !4118
  %dec = add i64 %5, -1, !dbg !4118
  store i64 %dec, i64* %len, align 8, !dbg !4118
  br label %for.cond, !dbg !4118

for.end:                                          ; preds = %land.lhs.true, %for.cond
  %6 = load i64* %len, align 8, !dbg !4120
  ret i64 %6, !dbg !4120
}

; Function Attrs: nounwind uwtable
define void @close_stdout_set_file_name(i8* %file) #0 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  %0 = load i8** %file.addr, align 8, !dbg !4121
  store i8* %0, i8** @file_name, align 8, !dbg !4121
  ret void, !dbg !4122
}

; Function Attrs: nounwind uwtable
define void @close_stdout() #0 {
entry:
  %write_error = alloca i8*, align 8
  %0 = load %struct._IO_FILE** @stdout, align 8, !dbg !4123
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !4123
  %cmp = icmp ne i32 %call, 0, !dbg !4123
  br i1 %cmp, label %if.then, label %if.end5, !dbg !4123

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([12 x i8]* @.str239, i32 0, i32 0), i8** %write_error, align 8, !dbg !4125
  %1 = load i8** @file_name, align 8, !dbg !4127
  %tobool = icmp ne i8* %1, null, !dbg !4127
  %call2 = call i32* @__errno_location() #1, !dbg !4129
  %2 = load i32* %call2, align 4, !dbg !4129
  br i1 %tobool, label %if.then1, label %if.else, !dbg !4127

if.then1:                                         ; preds = %if.then
  %3 = load i8** @file_name, align 8, !dbg !4129
  %call3 = call i8* @quotearg_colon(i8* %3), !dbg !4129
  %4 = load i8** %write_error, align 8, !dbg !4129
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 %2, i8* getelementptr inbounds ([7 x i8]* @.str1240, i32 0, i32 0), i8* %call3, i8* %4), !dbg !4129
  br label %if.end, !dbg !4129

if.else:                                          ; preds = %if.then
  %5 = load i8** %write_error, align 8, !dbg !4130
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 %2, i8* getelementptr inbounds ([3 x i8]* @.str2241, i32 0, i32 0), i8* %5), !dbg !4130
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %6 = load volatile i32* @exit_failure, align 4, !dbg !4131
  call void @_exit(i32 %6) #19, !dbg !4131
  unreachable, !dbg !4131

if.end5:                                          ; preds = %entry
  %7 = load %struct._IO_FILE** @stderr, align 8, !dbg !4132
  %call6 = call i32 @close_stream(%struct._IO_FILE* %7), !dbg !4132
  %cmp7 = icmp ne i32 %call6, 0, !dbg !4132
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4132

if.then8:                                         ; preds = %if.end5
  %8 = load volatile i32* @exit_failure, align 4, !dbg !4134
  call void @_exit(i32 %8) #19, !dbg !4134
  unreachable, !dbg !4134

if.end9:                                          ; preds = %if.end5
  ret void, !dbg !4135
}

; Function Attrs: noreturn
declare void @_exit(i32) #12

; Function Attrs: nounwind uwtable
define void @cycle_check_init(%struct.cycle_check_state* %state) #0 {
entry:
  %state.addr = alloca %struct.cycle_check_state*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8
  %0 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !4136
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state* %0, i32 0, i32 1, !dbg !4136
  store i64 0, i64* %chdir_counter, align 8, !dbg !4136
  %1 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !4137
  %magic = getelementptr inbounds %struct.cycle_check_state* %1, i32 0, i32 2, !dbg !4137
  store i32 9827862, i32* %magic, align 4, !dbg !4137
  ret void, !dbg !4138
}

; Function Attrs: nounwind uwtable
define zeroext i1 @cycle_check(%struct.cycle_check_state* %state, %struct.stat* %sb) #0 {
entry:
  %retval = alloca i1, align 1
  %state.addr = alloca %struct.cycle_check_state*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  %0 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !4139
  %magic = getelementptr inbounds %struct.cycle_check_state* %0, i32 0, i32 2, !dbg !4139
  %1 = load i32* %magic, align 4, !dbg !4139
  %cmp = icmp eq i32 %1, 9827862, !dbg !4139
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4139

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8]* @.str244, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str1245, i32 0, i32 0), i32 62, i8* getelementptr inbounds ([67 x i8]* @__PRETTY_FUNCTION__.cycle_check, i32 0, i32 0)) #1
  unreachable, !dbg !4139

cond.end:                                         ; preds = %entry
  %2 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !4140
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state* %2, i32 0, i32 1, !dbg !4140
  %3 = load i64* %chdir_counter, align 8, !dbg !4140
  %tobool = icmp ne i64 %3, 0, !dbg !4140
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4140

land.lhs.true:                                    ; preds = %cond.end
  %4 = load %struct.stat** %sb.addr, align 8, !dbg !4140
  %st_ino = getelementptr inbounds %struct.stat* %4, i32 0, i32 1, !dbg !4140
  %5 = load i64* %st_ino, align 8, !dbg !4140
  %6 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !4140
  %dev_ino = getelementptr inbounds %struct.cycle_check_state* %6, i32 0, i32 0, !dbg !4140
  %st_ino1 = getelementptr inbounds %struct.dev_ino* %dev_ino, i32 0, i32 0, !dbg !4140
  %7 = load i64* %st_ino1, align 8, !dbg !4140
  %cmp2 = icmp eq i64 %5, %7, !dbg !4140
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !4140

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.stat** %sb.addr, align 8, !dbg !4140
  %st_dev = getelementptr inbounds %struct.stat* %8, i32 0, i32 0, !dbg !4140
  %9 = load i64* %st_dev, align 8, !dbg !4140
  %10 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !4140
  %dev_ino4 = getelementptr inbounds %struct.cycle_check_state* %10, i32 0, i32 0, !dbg !4140
  %st_dev5 = getelementptr inbounds %struct.dev_ino* %dev_ino4, i32 0, i32 1, !dbg !4140
  %11 = load i64* %st_dev5, align 8, !dbg !4140
  %cmp6 = icmp eq i64 %9, %11, !dbg !4140
  br i1 %cmp6, label %if.then, label %if.end, !dbg !4140

if.then:                                          ; preds = %land.lhs.true3
  store i1 true, i1* %retval, !dbg !4142
  br label %return, !dbg !4142

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %cond.end
  %12 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !4143
  %chdir_counter7 = getelementptr inbounds %struct.cycle_check_state* %12, i32 0, i32 1, !dbg !4143
  %13 = load i64* %chdir_counter7, align 8, !dbg !4143
  %inc = add i64 %13, 1, !dbg !4143
  store i64 %inc, i64* %chdir_counter7, align 8, !dbg !4143
  %call = call zeroext i1 @is_zero_or_power_of_two(i64 %inc), !dbg !4143
  br i1 %call, label %if.then8, label %if.end19, !dbg !4143

if.then8:                                         ; preds = %if.end
  %14 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !4145
  %chdir_counter9 = getelementptr inbounds %struct.cycle_check_state* %14, i32 0, i32 1, !dbg !4145
  %15 = load i64* %chdir_counter9, align 8, !dbg !4145
  %cmp10 = icmp eq i64 %15, 0, !dbg !4145
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4145

if.then11:                                        ; preds = %if.then8
  store i1 true, i1* %retval, !dbg !4148
  br label %return, !dbg !4148

if.end12:                                         ; preds = %if.then8
  %16 = load %struct.stat** %sb.addr, align 8, !dbg !4149
  %st_dev13 = getelementptr inbounds %struct.stat* %16, i32 0, i32 0, !dbg !4149
  %17 = load i64* %st_dev13, align 8, !dbg !4149
  %18 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !4149
  %dev_ino14 = getelementptr inbounds %struct.cycle_check_state* %18, i32 0, i32 0, !dbg !4149
  %st_dev15 = getelementptr inbounds %struct.dev_ino* %dev_ino14, i32 0, i32 1, !dbg !4149
  store i64 %17, i64* %st_dev15, align 8, !dbg !4149
  %19 = load %struct.stat** %sb.addr, align 8, !dbg !4150
  %st_ino16 = getelementptr inbounds %struct.stat* %19, i32 0, i32 1, !dbg !4150
  %20 = load i64* %st_ino16, align 8, !dbg !4150
  %21 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !4150
  %dev_ino17 = getelementptr inbounds %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !4150
  %st_ino18 = getelementptr inbounds %struct.dev_ino* %dev_ino17, i32 0, i32 0, !dbg !4150
  store i64 %20, i64* %st_ino18, align 8, !dbg !4150
  br label %if.end19, !dbg !4151

if.end19:                                         ; preds = %if.end12, %if.end
  store i1 false, i1* %retval, !dbg !4152
  br label %return, !dbg !4152

return:                                           ; preds = %if.end19, %if.then11, %if.then
  %22 = load i1* %retval, !dbg !4153
  ret i1 %22, !dbg !4153
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @is_zero_or_power_of_two(i64 %i) #8 {
entry:
  %i.addr = alloca i64, align 8
  store i64 %i, i64* %i.addr, align 8
  %0 = load i64* %i.addr, align 8, !dbg !4154
  %1 = load i64* %i.addr, align 8, !dbg !4154
  %sub = sub i64 %1, 1, !dbg !4154
  %and = and i64 %0, %sub, !dbg !4154
  %cmp = icmp eq i64 %and, 0, !dbg !4154
  ret i1 %cmp, !dbg !4154
}

; Function Attrs: nounwind uwtable
define i64 @dir_len(i8* %file) #0 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8
  %length = alloca i64, align 8
  store i8* %file, i8** %file.addr, align 8
  store i64 0, i64* %prefix_length, align 8, !dbg !4155
  %0 = load i64* %prefix_length, align 8, !dbg !4156
  %cmp = icmp ne i64 %0, 0, !dbg !4156
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4156

cond.false:                                       ; preds = %entry
  %1 = load i8** %file.addr, align 8, !dbg !4156
  %arrayidx = getelementptr inbounds i8* %1, i64 0, !dbg !4156
  %2 = load i8* %arrayidx, align 1, !dbg !4156
  %conv = sext i8 %2 to i32, !dbg !4156
  %cmp1 = icmp eq i32 %conv, 47, !dbg !4156
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !4156
  br label %cond.end, !dbg !4156

cond.end:                                         ; preds = %entry, %cond.false
  %cond3 = phi i32 [ %cond, %cond.false ], [ 0, %entry ], !dbg !4156
  %conv4 = sext i32 %cond3 to i64, !dbg !4156
  %3 = load i64* %prefix_length, align 8, !dbg !4156
  %add = add i64 %3, %conv4, !dbg !4156
  store i64 %add, i64* %prefix_length, align 8, !dbg !4156
  %4 = load i8** %file.addr, align 8, !dbg !4157
  %call = call i8* @last_component(i8* %4), !dbg !4157
  %5 = load i8** %file.addr, align 8, !dbg !4157
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !4157
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !4157
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4157
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !4157
  br label %for.cond, !dbg !4157

for.cond:                                         ; preds = %for.inc, %cond.end
  %6 = load i64* %prefix_length, align 8, !dbg !4157
  %7 = load i64* %length, align 8, !dbg !4157
  %cmp5 = icmp ult i64 %6, %7, !dbg !4157
  br i1 %cmp5, label %for.body, label %for.end, !dbg !4157

for.body:                                         ; preds = %for.cond
  %8 = load i64* %length, align 8, !dbg !4159
  %sub = sub i64 %8, 1, !dbg !4159
  %9 = load i8** %file.addr, align 8, !dbg !4159
  %arrayidx7 = getelementptr inbounds i8* %9, i64 %sub, !dbg !4159
  %10 = load i8* %arrayidx7, align 1, !dbg !4159
  %conv8 = sext i8 %10 to i32, !dbg !4159
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !4159
  br i1 %cmp9, label %for.inc, label %for.end, !dbg !4159

for.inc:                                          ; preds = %for.body
  %11 = load i64* %length, align 8, !dbg !4161
  %dec = add i64 %11, -1, !dbg !4161
  store i64 %dec, i64* %length, align 8, !dbg !4161
  br label %for.cond, !dbg !4161

for.end:                                          ; preds = %for.body, %for.cond
  %12 = load i64* %length, align 8, !dbg !4162
  ret i64 %12, !dbg !4162
}

; Function Attrs: nounwind uwtable
define i8* @dir_name(i8* %file) #0 {
entry:
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8
  %append_dot = alloca i8, align 1
  %dir = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  %0 = load i8** %file.addr, align 8, !dbg !4163
  %call = call i64 @dir_len(i8* %0), !dbg !4163
  store i64 %call, i64* %length, align 8, !dbg !4163
  %1 = load i64* %length, align 8, !dbg !4164
  %cmp = icmp eq i64 %1, 0, !dbg !4164
  %. = select i1 %cmp, i1 true, i1 false, !dbg !4164
  %frombool = zext i1 %. to i8, !dbg !4164
  store i8 %frombool, i8* %append_dot, align 1, !dbg !4164
  %2 = load i64* %length, align 8, !dbg !4165
  %3 = load i8* %append_dot, align 1, !dbg !4165
  %tobool = trunc i8 %3 to i1, !dbg !4165
  %conv = zext i1 %tobool to i64, !dbg !4165
  %add = add i64 %2, %conv, !dbg !4165
  %add1 = add i64 %add, 1, !dbg !4165
  %call2 = call i8* @xmalloc(i64 %add1), !dbg !4165
  store i8* %call2, i8** %dir, align 8, !dbg !4165
  %4 = load i8** %dir, align 8, !dbg !4166
  %5 = load i8** %file.addr, align 8, !dbg !4166
  %6 = load i64* %length, align 8, !dbg !4166
  %7 = call i8* @memcpy(i8* %4, i8* %5, i64 %6)
  %8 = load i8* %append_dot, align 1, !dbg !4167
  %tobool3 = trunc i8 %8 to i1, !dbg !4167
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4167

if.then:                                          ; preds = %entry
  %9 = load i64* %length, align 8, !dbg !4169
  %inc = add i64 %9, 1, !dbg !4169
  store i64 %inc, i64* %length, align 8, !dbg !4169
  %10 = load i8** %dir, align 8, !dbg !4169
  %arrayidx = getelementptr inbounds i8* %10, i64 %9, !dbg !4169
  store i8 46, i8* %arrayidx, align 1, !dbg !4169
  br label %if.end, !dbg !4169

if.end:                                           ; preds = %if.then, %entry
  %11 = load i64* %length, align 8, !dbg !4170
  %12 = load i8** %dir, align 8, !dbg !4170
  %arrayidx4 = getelementptr inbounds i8* %12, i64 %11, !dbg !4170
  store i8 0, i8* %arrayidx4, align 1, !dbg !4170
  %13 = load i8** %dir, align 8, !dbg !4171
  ret i8* %13, !dbg !4171
}

; Function Attrs: nounwind uwtable
define i8* @file_type(%struct.stat* %st) #0 {
entry:
  %retval = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %0 = load %struct.stat** %st.addr, align 8, !dbg !4172
  %st_mode = getelementptr inbounds %struct.stat* %0, i32 0, i32 3, !dbg !4172
  %1 = load i32* %st_mode, align 4, !dbg !4172
  %and = and i32 %1, 61440, !dbg !4172
  %cmp = icmp eq i32 %and, 32768, !dbg !4172
  %2 = load %struct.stat** %st.addr, align 8, !dbg !4174
  br i1 %cmp, label %if.then, label %if.end, !dbg !4172

if.then:                                          ; preds = %entry
  %st_size = getelementptr inbounds %struct.stat* %2, i32 0, i32 8, !dbg !4174
  %3 = load i64* %st_size, align 8, !dbg !4174
  %cmp1 = icmp eq i64 %3, 0, !dbg !4174
  %cond = select i1 %cmp1, i8* getelementptr inbounds ([19 x i8]* @.str254, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str1255, i32 0, i32 0), !dbg !4174
  store i8* %cond, i8** %retval, !dbg !4174
  br label %return, !dbg !4174

if.end:                                           ; preds = %entry
  %st_mode2 = getelementptr inbounds %struct.stat* %2, i32 0, i32 3, !dbg !4175
  %4 = load i32* %st_mode2, align 4, !dbg !4175
  %and3 = and i32 %4, 61440, !dbg !4175
  %cmp4 = icmp eq i32 %and3, 16384, !dbg !4175
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4175

if.then5:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([10 x i8]* @.str2256, i32 0, i32 0), i8** %retval, !dbg !4177
  br label %return, !dbg !4177

if.end6:                                          ; preds = %if.end
  %5 = load %struct.stat** %st.addr, align 8, !dbg !4178
  %st_mode7 = getelementptr inbounds %struct.stat* %5, i32 0, i32 3, !dbg !4178
  %6 = load i32* %st_mode7, align 4, !dbg !4178
  %and8 = and i32 %6, 61440, !dbg !4178
  %cmp9 = icmp eq i32 %and8, 24576, !dbg !4178
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !4178

if.then10:                                        ; preds = %if.end6
  store i8* getelementptr inbounds ([19 x i8]* @.str3257, i32 0, i32 0), i8** %retval, !dbg !4180
  br label %return, !dbg !4180

if.end11:                                         ; preds = %if.end6
  %7 = load %struct.stat** %st.addr, align 8, !dbg !4181
  %st_mode12 = getelementptr inbounds %struct.stat* %7, i32 0, i32 3, !dbg !4181
  %8 = load i32* %st_mode12, align 4, !dbg !4181
  %and13 = and i32 %8, 61440, !dbg !4181
  %cmp14 = icmp eq i32 %and13, 8192, !dbg !4181
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !4181

if.then15:                                        ; preds = %if.end11
  store i8* getelementptr inbounds ([23 x i8]* @.str4258, i32 0, i32 0), i8** %retval, !dbg !4183
  br label %return, !dbg !4183

if.end16:                                         ; preds = %if.end11
  %9 = load %struct.stat** %st.addr, align 8, !dbg !4184
  %st_mode17 = getelementptr inbounds %struct.stat* %9, i32 0, i32 3, !dbg !4184
  %10 = load i32* %st_mode17, align 4, !dbg !4184
  %and18 = and i32 %10, 61440, !dbg !4184
  %cmp19 = icmp eq i32 %and18, 4096, !dbg !4184
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !4184

if.then20:                                        ; preds = %if.end16
  store i8* getelementptr inbounds ([5 x i8]* @.str5259, i32 0, i32 0), i8** %retval, !dbg !4186
  br label %return, !dbg !4186

if.end21:                                         ; preds = %if.end16
  %11 = load %struct.stat** %st.addr, align 8, !dbg !4187
  %st_mode22 = getelementptr inbounds %struct.stat* %11, i32 0, i32 3, !dbg !4187
  %12 = load i32* %st_mode22, align 4, !dbg !4187
  %and23 = and i32 %12, 61440, !dbg !4187
  %cmp24 = icmp eq i32 %and23, 40960, !dbg !4187
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !4187

if.then25:                                        ; preds = %if.end21
  store i8* getelementptr inbounds ([14 x i8]* @.str6260, i32 0, i32 0), i8** %retval, !dbg !4189
  br label %return, !dbg !4189

if.end26:                                         ; preds = %if.end21
  %13 = load %struct.stat** %st.addr, align 8, !dbg !4190
  %st_mode27 = getelementptr inbounds %struct.stat* %13, i32 0, i32 3, !dbg !4190
  %14 = load i32* %st_mode27, align 4, !dbg !4190
  %and28 = and i32 %14, 61440, !dbg !4190
  %cmp29 = icmp eq i32 %and28, 49152, !dbg !4190
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !4190

if.then30:                                        ; preds = %if.end26
  store i8* getelementptr inbounds ([7 x i8]* @.str7261, i32 0, i32 0), i8** %retval, !dbg !4192
  br label %return, !dbg !4192

if.end31:                                         ; preds = %if.end26
  %15 = load %struct.stat** %st.addr, align 8, !dbg !4193
  %st_mode32 = getelementptr inbounds %struct.stat* %15, i32 0, i32 3, !dbg !4193
  %16 = load i32* %st_mode32, align 4, !dbg !4193
  %17 = load %struct.stat** %st.addr, align 8, !dbg !4193
  %st_mode33 = getelementptr inbounds %struct.stat* %17, i32 0, i32 3, !dbg !4193
  %18 = load i32* %st_mode33, align 4, !dbg !4193
  %sub = sub i32 %16, %18, !dbg !4193
  %tobool = icmp ne i32 %sub, 0, !dbg !4193
  br i1 %tobool, label %if.then34, label %if.end35, !dbg !4193

if.then34:                                        ; preds = %if.end31
  store i8* getelementptr inbounds ([14 x i8]* @.str8262, i32 0, i32 0), i8** %retval, !dbg !4195
  br label %return, !dbg !4195

if.end35:                                         ; preds = %if.end31
  %19 = load %struct.stat** %st.addr, align 8, !dbg !4196
  %st_mode36 = getelementptr inbounds %struct.stat* %19, i32 0, i32 3, !dbg !4196
  %20 = load i32* %st_mode36, align 4, !dbg !4196
  %21 = load %struct.stat** %st.addr, align 8, !dbg !4196
  %st_mode37 = getelementptr inbounds %struct.stat* %21, i32 0, i32 3, !dbg !4196
  %22 = load i32* %st_mode37, align 4, !dbg !4196
  %sub38 = sub i32 %20, %22, !dbg !4196
  %tobool39 = icmp ne i32 %sub38, 0, !dbg !4196
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !4196

if.then40:                                        ; preds = %if.end35
  store i8* getelementptr inbounds ([10 x i8]* @.str9263, i32 0, i32 0), i8** %retval, !dbg !4198
  br label %return, !dbg !4198

if.end41:                                         ; preds = %if.end35
  %23 = load %struct.stat** %st.addr, align 8, !dbg !4199
  %st_mode42 = getelementptr inbounds %struct.stat* %23, i32 0, i32 3, !dbg !4199
  %24 = load i32* %st_mode42, align 4, !dbg !4199
  %25 = load %struct.stat** %st.addr, align 8, !dbg !4199
  %st_mode43 = getelementptr inbounds %struct.stat* %25, i32 0, i32 3, !dbg !4199
  %26 = load i32* %st_mode43, align 4, !dbg !4199
  %sub44 = sub i32 %24, %26, !dbg !4199
  %tobool45 = icmp ne i32 %sub44, 0, !dbg !4199
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !4199

if.then46:                                        ; preds = %if.end41
  store i8* getelementptr inbounds ([21 x i8]* @.str10264, i32 0, i32 0), i8** %retval, !dbg !4201
  br label %return, !dbg !4201

if.end47:                                         ; preds = %if.end41
  store i8* getelementptr inbounds ([11 x i8]* @.str11265, i32 0, i32 0), i8** %retval, !dbg !4202
  br label %return, !dbg !4202

return:                                           ; preds = %if.end47, %if.then46, %if.then40, %if.then34, %if.then30, %if.then25, %if.then20, %if.then15, %if.then10, %if.then5, %if.then
  %27 = load i8** %retval, !dbg !4203
  ret i8* %27, !dbg !4203
}

; Function Attrs: nounwind uwtable
define i8* @file_name_concat(i8* %dir, i8* %abase, i8** %base_in_result) #0 {
entry:
  %dir.addr = alloca i8*, align 8
  %abase.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8
  %dirbaselen = alloca i64, align 8
  %dirlen = alloca i64, align 8
  %needs_separator = alloca i64, align 8
  %base = alloca i8*, align 8
  %baselen = alloca i64, align 8
  %p_concat = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %dir, i8** %dir.addr, align 8
  store i8* %abase, i8** %abase.addr, align 8
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8
  %0 = load i8** %dir.addr, align 8, !dbg !4204
  %call = call i8* @last_component(i8* %0), !dbg !4204
  store i8* %call, i8** %dirbase, align 8, !dbg !4204
  %1 = load i8** %dirbase, align 8, !dbg !4205
  %call1 = call i64 @base_len(i8* %1), !dbg !4205
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !4205
  %2 = load i8** %dirbase, align 8, !dbg !4206
  %3 = load i8** %dir.addr, align 8, !dbg !4206
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !4206
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !4206
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4206
  %4 = load i64* %dirbaselen, align 8, !dbg !4206
  %add = add i64 %sub.ptr.sub, %4, !dbg !4206
  store i64 %add, i64* %dirlen, align 8, !dbg !4206
  %5 = load i64* %dirbaselen, align 8, !dbg !4207
  %tobool = icmp ne i64 %5, 0, !dbg !4207
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4207

land.rhs:                                         ; preds = %entry
  %6 = load i64* %dirbaselen, align 8, !dbg !4207
  %sub = sub i64 %6, 1, !dbg !4207
  %7 = load i8** %dirbase, align 8, !dbg !4207
  %arrayidx = getelementptr inbounds i8* %7, i64 %sub, !dbg !4207
  %8 = load i8* %arrayidx, align 1, !dbg !4207
  %conv = sext i8 %8 to i32, !dbg !4207
  %cmp = icmp eq i32 %conv, 47, !dbg !4207
  %lnot = xor i1 %cmp, true, !dbg !4207
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  %conv3 = sext i32 %land.ext to i64
  store i64 %conv3, i64* %needs_separator, align 8
  %10 = load i8** %abase.addr, align 8, !dbg !4208
  %call4 = call i8* @longest_relative_suffix(i8* %10), !dbg !4208
  store i8* %call4, i8** %base, align 8, !dbg !4208
  %11 = load i8** %base, align 8, !dbg !4209
  %call5 = call i64 @strlen(i8* %11) #18, !dbg !4209
  store i64 %call5, i64* %baselen, align 8, !dbg !4209
  %12 = load i64* %dirlen, align 8, !dbg !4210
  %13 = load i64* %needs_separator, align 8, !dbg !4210
  %add6 = add i64 %12, %13, !dbg !4210
  %14 = load i64* %baselen, align 8, !dbg !4210
  %add7 = add i64 %add6, %14, !dbg !4210
  %add8 = add i64 %add7, 1, !dbg !4210
  %call9 = call i8* @xmalloc(i64 %add8), !dbg !4210
  store i8* %call9, i8** %p_concat, align 8, !dbg !4210
  %15 = load i8** %p_concat, align 8, !dbg !4211
  %16 = load i8** %dir.addr, align 8, !dbg !4211
  %17 = load i64* %dirlen, align 8, !dbg !4211
  %call10 = call i8* @mempcpy(i8* %15, i8* %16, i64 %17) #6, !dbg !4211
  store i8* %call10, i8** %p, align 8, !dbg !4211
  %18 = load i8** %p, align 8, !dbg !4212
  store i8 47, i8* %18, align 1, !dbg !4212
  %19 = load i64* %needs_separator, align 8, !dbg !4213
  %20 = load i8** %p, align 8, !dbg !4213
  %add.ptr = getelementptr inbounds i8* %20, i64 %19, !dbg !4213
  store i8* %add.ptr, i8** %p, align 8, !dbg !4213
  %21 = load i8*** %base_in_result.addr, align 8, !dbg !4214
  %tobool11 = icmp ne i8** %21, null, !dbg !4214
  br i1 %tobool11, label %if.then, label %if.end, !dbg !4214

if.then:                                          ; preds = %land.end
  %22 = load i8** %p, align 8, !dbg !4216
  %23 = load i8** %abase.addr, align 8, !dbg !4216
  %arrayidx12 = getelementptr inbounds i8* %23, i64 0, !dbg !4216
  %24 = load i8* %arrayidx12, align 1, !dbg !4216
  %conv13 = sext i8 %24 to i32, !dbg !4216
  %cmp14 = icmp eq i32 %conv13, 47, !dbg !4216
  %. = select i1 %cmp14, i1 true, i1 false, !dbg !4216
  %lor.ext = zext i1 %. to i32, !dbg !4216
  %idx.ext = sext i32 %lor.ext to i64, !dbg !4216
  %idx.neg = sub i64 0, %idx.ext, !dbg !4216
  %add.ptr16 = getelementptr inbounds i8* %22, i64 %idx.neg, !dbg !4216
  %25 = load i8*** %base_in_result.addr, align 8, !dbg !4216
  store i8* %add.ptr16, i8** %25, align 8, !dbg !4216
  br label %if.end, !dbg !4216

if.end:                                           ; preds = %if.then, %land.end
  %26 = load i8** %p, align 8, !dbg !4217
  %27 = load i8** %base, align 8, !dbg !4217
  %28 = load i64* %baselen, align 8, !dbg !4217
  %call17 = call i8* @mempcpy(i8* %26, i8* %27, i64 %28) #6, !dbg !4217
  store i8* %call17, i8** %p, align 8, !dbg !4217
  %29 = load i8** %p, align 8, !dbg !4218
  store i8 0, i8* %29, align 1, !dbg !4218
  %30 = load i8** %p_concat, align 8, !dbg !4219
  ret i8* %30, !dbg !4219
}

; Function Attrs: nounwind uwtable
define internal i8* @longest_relative_suffix(i8* %f) #0 {
entry:
  %f.addr = alloca i8*, align 8
  store i8* %f, i8** %f.addr, align 8
  %0 = load i8** %f.addr, align 8, !dbg !4220
  %add.ptr = getelementptr inbounds i8* %0, i64 0, !dbg !4220
  store i8* %add.ptr, i8** %f.addr, align 8, !dbg !4220
  br label %for.cond, !dbg !4220

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8** %f.addr, align 8, !dbg !4220
  %2 = load i8* %1, align 1, !dbg !4220
  %conv = sext i8 %2 to i32, !dbg !4220
  %cmp = icmp eq i32 %conv, 47, !dbg !4220
  %3 = load i8** %f.addr, align 8, !dbg !4220
  br i1 %cmp, label %for.inc, label %for.end, !dbg !4220

for.inc:                                          ; preds = %for.cond
  %incdec.ptr = getelementptr inbounds i8* %3, i32 1, !dbg !4220
  store i8* %incdec.ptr, i8** %f.addr, align 8, !dbg !4220
  br label %for.cond, !dbg !4220

for.end:                                          ; preds = %for.cond
  ret i8* %3, !dbg !4222
}

; Function Attrs: nounwind uwtable
define i64 @hash_get_n_buckets(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4223
  %n_buckets = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 2, !dbg !4223
  %1 = load i64* %n_buckets, align 8, !dbg !4223
  ret i64 %1, !dbg !4223
}

; Function Attrs: nounwind uwtable
define i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4224
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 3, !dbg !4224
  %1 = load i64* %n_buckets_used, align 8, !dbg !4224
  ret i64 %1, !dbg !4224
}

; Function Attrs: nounwind uwtable
define i64 @hash_get_n_entries(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4225
  %n_entries = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 4, !dbg !4225
  %1 = load i64* %n_entries, align 8, !dbg !4225
  ret i64 %1, !dbg !4225
}

; Function Attrs: nounwind uwtable
define i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %max_bucket_length = alloca i64, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  %bucket_length = alloca i64, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i64 0, i64* %max_bucket_length, align 8, !dbg !4226
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4227
  %bucket1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !4227
  %1 = load %struct.hash_entry** %bucket1, align 8, !dbg !4227
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !4227
  br label %for.cond, !dbg !4227

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry** %bucket, align 8, !dbg !4227
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !4227
  %bucket_limit = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 1, !dbg !4227
  %4 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !4227
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !4227
  br i1 %cmp, label %for.body, label %for.end, !dbg !4227

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !4229
  %data = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !4229
  %6 = load i8** %data, align 8, !dbg !4229
  %tobool = icmp ne i8* %6, null, !dbg !4229
  br i1 %tobool, label %if.then, label %for.inc, !dbg !4229

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !4232
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !4232
  store i64 1, i64* %bucket_length, align 8, !dbg !4234
  br label %while.cond, !dbg !4235

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry** %cursor, align 8, !dbg !4235
  %next = getelementptr inbounds %struct.hash_entry* %8, i32 0, i32 1, !dbg !4235
  %9 = load %struct.hash_entry** %next, align 8, !dbg !4235
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !4235
  %10 = load %struct.hash_entry** %cursor, align 8, !dbg !4235
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !4235
  %11 = load i64* %bucket_length, align 8, !dbg !4236
  br i1 %tobool2, label %while.body, label %while.end, !dbg !4235

while.body:                                       ; preds = %while.cond
  %inc = add i64 %11, 1, !dbg !4236
  store i64 %inc, i64* %bucket_length, align 8, !dbg !4236
  br label %while.cond, !dbg !4236

while.end:                                        ; preds = %while.cond
  %12 = load i64* %max_bucket_length, align 8, !dbg !4237
  %cmp3 = icmp ugt i64 %11, %12, !dbg !4237
  br i1 %cmp3, label %if.then4, label %for.inc, !dbg !4237

if.then4:                                         ; preds = %while.end
  %13 = load i64* %bucket_length, align 8, !dbg !4239
  store i64 %13, i64* %max_bucket_length, align 8, !dbg !4239
  br label %for.inc, !dbg !4239

for.inc:                                          ; preds = %for.body, %if.then4, %while.end
  %14 = load %struct.hash_entry** %bucket, align 8, !dbg !4227
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %14, i32 1, !dbg !4227
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4227
  br label %for.cond, !dbg !4227

for.end:                                          ; preds = %for.cond
  %15 = load i64* %max_bucket_length, align 8, !dbg !4240
  ret i64 %15, !dbg !4240
}

; Function Attrs: nounwind uwtable
define zeroext i1 @hash_table_ok(%struct.hash_table* %table) #0 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %n_buckets_used = alloca i64, align 8
  %n_entries = alloca i64, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i64 0, i64* %n_buckets_used, align 8, !dbg !4241
  store i64 0, i64* %n_entries, align 8, !dbg !4242
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4243
  %bucket1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !4243
  %1 = load %struct.hash_entry** %bucket1, align 8, !dbg !4243
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !4243
  br label %for.cond, !dbg !4243

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry** %bucket, align 8, !dbg !4243
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !4243
  %bucket_limit = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 1, !dbg !4243
  %4 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !4243
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !4243
  br i1 %cmp, label %for.body, label %for.end, !dbg !4243

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !4245
  %data = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !4245
  %6 = load i8** %data, align 8, !dbg !4245
  %tobool = icmp ne i8* %6, null, !dbg !4245
  br i1 %tobool, label %if.then, label %for.inc, !dbg !4245

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !4248
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !4248
  %8 = load i64* %n_buckets_used, align 8, !dbg !4250
  %inc = add i64 %8, 1, !dbg !4250
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !4250
  %9 = load i64* %n_entries, align 8, !dbg !4251
  %inc2 = add i64 %9, 1, !dbg !4251
  store i64 %inc2, i64* %n_entries, align 8, !dbg !4251
  br label %while.cond, !dbg !4252

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry** %cursor, align 8, !dbg !4252
  %next = getelementptr inbounds %struct.hash_entry* %10, i32 0, i32 1, !dbg !4252
  %11 = load %struct.hash_entry** %next, align 8, !dbg !4252
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !4252
  %12 = load %struct.hash_entry** %cursor, align 8, !dbg !4252
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !4252
  br i1 %tobool3, label %while.body, label %for.inc, !dbg !4252

while.body:                                       ; preds = %while.cond
  %13 = load i64* %n_entries, align 8, !dbg !4253
  %inc4 = add i64 %13, 1, !dbg !4253
  store i64 %inc4, i64* %n_entries, align 8, !dbg !4253
  br label %while.cond, !dbg !4253

for.inc:                                          ; preds = %for.body, %while.cond
  %14 = load %struct.hash_entry** %bucket, align 8, !dbg !4243
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %14, i32 1, !dbg !4243
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4243
  br label %for.cond, !dbg !4243

for.end:                                          ; preds = %for.cond
  %15 = load i64* %n_buckets_used, align 8, !dbg !4254
  %16 = load %struct.hash_table** %table.addr, align 8, !dbg !4254
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table* %16, i32 0, i32 3, !dbg !4254
  %17 = load i64* %n_buckets_used5, align 8, !dbg !4254
  %cmp6 = icmp eq i64 %15, %17, !dbg !4254
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !4254

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64* %n_entries, align 8, !dbg !4254
  %19 = load %struct.hash_table** %table.addr, align 8, !dbg !4254
  %n_entries7 = getelementptr inbounds %struct.hash_table* %19, i32 0, i32 4, !dbg !4254
  %20 = load i64* %n_entries7, align 8, !dbg !4254
  %cmp8 = icmp eq i64 %18, %20, !dbg !4254
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !4254

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, !dbg !4256
  br label %return, !dbg !4256

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, !dbg !4257
  br label %return, !dbg !4257

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1* %retval, !dbg !4258
  ret i1 %21, !dbg !4258
}

; Function Attrs: nounwind uwtable
define void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8
  %n_buckets = alloca i64, align 8
  %n_buckets_used = alloca i64, align 8
  %max_bucket_length = alloca i64, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4259
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0), !dbg !4259
  store i64 %call, i64* %n_entries, align 8, !dbg !4259
  %1 = load %struct.hash_table** %table.addr, align 8, !dbg !4260
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1), !dbg !4260
  store i64 %call1, i64* %n_buckets, align 8, !dbg !4260
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !4261
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2), !dbg !4261
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !4261
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !4262
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3), !dbg !4262
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !4262
  %4 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !4263
  %5 = load i64* %n_entries, align 8, !dbg !4263
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8]* @.str270, i32 0, i32 0), i64 %5), !dbg !4263
  %6 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !4264
  %7 = load i64* %n_buckets, align 8, !dbg !4264
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8]* @.str1271, i32 0, i32 0), i64 %7), !dbg !4264
  %8 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !4265
  %9 = load i64* %n_buckets_used, align 8, !dbg !4265
  %10 = load i64* %n_buckets_used, align 8, !dbg !4265
  %conv = uitofp i64 %10 to double, !dbg !4265
  %mul = fmul double 1.000000e+02, %conv, !dbg !4265
  %11 = load i64* %n_buckets, align 8, !dbg !4265
  %conv6 = uitofp i64 %11 to double, !dbg !4265
  %div = fdiv double %mul, %conv6, !dbg !4265
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8]* @.str2273, i32 0, i32 0), i64 %9, double %div), !dbg !4265
  %12 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !4266
  %13 = load i64* %max_bucket_length, align 8, !dbg !4266
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8]* @.str3274, i32 0, i32 0), i64 %13), !dbg !4266
  ret void, !dbg !4267
}

; Function Attrs: nounwind uwtable
define i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8* %entry1, i8** %entry.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4268
  %bucket2 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !4268
  %1 = load %struct.hash_entry** %bucket2, align 8, !dbg !4268
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !4269
  %hasher = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 6, !dbg !4269
  %3 = load i64 (i8*, i64)** %hasher, align 8, !dbg !4269
  %4 = load i8** %entry.addr, align 8, !dbg !4269
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !4269
  %n_buckets = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 2, !dbg !4269
  %6 = load i64* %n_buckets, align 8, !dbg !4269
  %call = call i64 %3(i8* %4, i64 %6), !dbg !4269
  %add.ptr = getelementptr inbounds %struct.hash_entry* %1, i64 %call, !dbg !4269
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4269
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !4270
  %8 = load %struct.hash_table** %table.addr, align 8, !dbg !4270
  %bucket_limit = getelementptr inbounds %struct.hash_table* %8, i32 0, i32 1, !dbg !4270
  %9 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !4270
  %cmp = icmp ult %struct.hash_entry* %7, %9, !dbg !4270
  br i1 %cmp, label %if.end, label %if.then, !dbg !4270

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !4272
  unreachable, !dbg !4272

if.end:                                           ; preds = %entry
  %10 = load %struct.hash_entry** %bucket, align 8, !dbg !4273
  %data = getelementptr inbounds %struct.hash_entry* %10, i32 0, i32 0, !dbg !4273
  %11 = load i8** %data, align 8, !dbg !4273
  %cmp3 = icmp eq i8* %11, null, !dbg !4273
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !4273

if.then4:                                         ; preds = %if.end
  store i8* null, i8** %retval, !dbg !4275
  br label %return, !dbg !4275

if.end5:                                          ; preds = %if.end
  %12 = load %struct.hash_entry** %bucket, align 8, !dbg !4276
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !4276
  br label %for.cond, !dbg !4276

for.cond:                                         ; preds = %for.inc, %if.end5
  %13 = load %struct.hash_entry** %cursor, align 8, !dbg !4276
  %tobool = icmp ne %struct.hash_entry* %13, null, !dbg !4276
  br i1 %tobool, label %for.body, label %for.end, !dbg !4276

for.body:                                         ; preds = %for.cond
  %14 = load %struct.hash_table** %table.addr, align 8, !dbg !4278
  %comparator = getelementptr inbounds %struct.hash_table* %14, i32 0, i32 7, !dbg !4278
  %15 = load i1 (i8*, i8*)** %comparator, align 8, !dbg !4278
  %16 = load i8** %entry.addr, align 8, !dbg !4278
  %17 = load %struct.hash_entry** %cursor, align 8, !dbg !4278
  %data6 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 0, !dbg !4278
  %18 = load i8** %data6, align 8, !dbg !4278
  %call7 = call zeroext i1 %15(i8* %16, i8* %18), !dbg !4278
  %19 = load %struct.hash_entry** %cursor, align 8, !dbg !4280
  br i1 %call7, label %if.then8, label %for.inc, !dbg !4278

if.then8:                                         ; preds = %for.body
  %data9 = getelementptr inbounds %struct.hash_entry* %19, i32 0, i32 0, !dbg !4280
  %20 = load i8** %data9, align 8, !dbg !4280
  store i8* %20, i8** %retval, !dbg !4280
  br label %return, !dbg !4280

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.hash_entry* %19, i32 0, i32 1, !dbg !4276
  %21 = load %struct.hash_entry** %next, align 8, !dbg !4276
  store %struct.hash_entry* %21, %struct.hash_entry** %cursor, align 8, !dbg !4276
  br label %for.cond, !dbg !4276

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, !dbg !4281
  br label %return, !dbg !4281

return:                                           ; preds = %for.end, %if.then8, %if.then4
  %22 = load i8** %retval, !dbg !4282
  ret i8* %22, !dbg !4282
}

; Function Attrs: nounwind uwtable
define i8* @hash_get_first(%struct.hash_table* %table) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4283
  %n_entries = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 4, !dbg !4283
  %1 = load i64* %n_entries, align 8, !dbg !4283
  %cmp = icmp eq i64 %1, 0, !dbg !4283
  br i1 %cmp, label %if.then, label %if.end, !dbg !4283

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, !dbg !4285
  br label %return, !dbg !4285

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !4286
  %bucket1 = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 0, !dbg !4286
  %3 = load %struct.hash_entry** %bucket1, align 8, !dbg !4286
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !4286
  br label %for.cond, !dbg !4286

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry** %bucket, align 8, !dbg !4288
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !4288
  %bucket_limit = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 1, !dbg !4288
  %6 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !4288
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !4288
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !4288

if.then3:                                         ; preds = %for.cond
  call void @abort() #17, !dbg !4290
  unreachable, !dbg !4290

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !4291
  %data = getelementptr inbounds %struct.hash_entry* %7, i32 0, i32 0, !dbg !4291
  %8 = load i8** %data, align 8, !dbg !4291
  %tobool = icmp ne i8* %8, null, !dbg !4291
  %9 = load %struct.hash_entry** %bucket, align 8, !dbg !4293
  br i1 %tobool, label %if.then4, label %for.inc, !dbg !4291

if.then4:                                         ; preds = %if.else
  %data5 = getelementptr inbounds %struct.hash_entry* %9, i32 0, i32 0, !dbg !4293
  %10 = load i8** %data5, align 8, !dbg !4293
  store i8* %10, i8** %retval, !dbg !4293
  br label %return, !dbg !4293

for.inc:                                          ; preds = %if.else
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %9, i32 1, !dbg !4286
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4286
  br label %for.cond, !dbg !4286

return:                                           ; preds = %if.then4, %if.then
  %11 = load i8** %retval, !dbg !4294
  ret i8* %11, !dbg !4294
}

; Function Attrs: nounwind uwtable
define i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8* %entry1, i8** %entry.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4295
  %bucket2 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !4295
  %1 = load %struct.hash_entry** %bucket2, align 8, !dbg !4295
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !4296
  %hasher = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 6, !dbg !4296
  %3 = load i64 (i8*, i64)** %hasher, align 8, !dbg !4296
  %4 = load i8** %entry.addr, align 8, !dbg !4296
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !4296
  %n_buckets = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 2, !dbg !4296
  %6 = load i64* %n_buckets, align 8, !dbg !4296
  %call = call i64 %3(i8* %4, i64 %6), !dbg !4296
  %add.ptr = getelementptr inbounds %struct.hash_entry* %1, i64 %call, !dbg !4296
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4296
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !4297
  %8 = load %struct.hash_table** %table.addr, align 8, !dbg !4297
  %bucket_limit = getelementptr inbounds %struct.hash_table* %8, i32 0, i32 1, !dbg !4297
  %9 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !4297
  %cmp = icmp ult %struct.hash_entry* %7, %9, !dbg !4297
  br i1 %cmp, label %if.end, label %if.then, !dbg !4297

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !4299
  unreachable, !dbg !4299

if.end:                                           ; preds = %entry
  %10 = load %struct.hash_entry** %bucket, align 8, !dbg !4300
  store %struct.hash_entry* %10, %struct.hash_entry** %cursor, align 8, !dbg !4300
  br label %for.cond, !dbg !4300

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load %struct.hash_entry** %cursor, align 8, !dbg !4300
  %tobool = icmp ne %struct.hash_entry* %11, null, !dbg !4300
  br i1 %tobool, label %for.body, label %while.cond, !dbg !4300

for.body:                                         ; preds = %for.cond
  %12 = load %struct.hash_entry** %cursor, align 8, !dbg !4302
  %data = getelementptr inbounds %struct.hash_entry* %12, i32 0, i32 0, !dbg !4302
  %13 = load i8** %data, align 8, !dbg !4302
  %14 = load i8** %entry.addr, align 8, !dbg !4302
  %cmp3 = icmp eq i8* %13, %14, !dbg !4302
  br i1 %cmp3, label %land.lhs.true, label %for.inc, !dbg !4302

land.lhs.true:                                    ; preds = %for.body
  %15 = load %struct.hash_entry** %cursor, align 8, !dbg !4302
  %next = getelementptr inbounds %struct.hash_entry* %15, i32 0, i32 1, !dbg !4302
  %16 = load %struct.hash_entry** %next, align 8, !dbg !4302
  %tobool4 = icmp ne %struct.hash_entry* %16, null, !dbg !4302
  br i1 %tobool4, label %if.then5, label %for.inc, !dbg !4302

if.then5:                                         ; preds = %land.lhs.true
  %17 = load %struct.hash_entry** %cursor, align 8, !dbg !4304
  %next6 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 1, !dbg !4304
  %18 = load %struct.hash_entry** %next6, align 8, !dbg !4304
  %data7 = getelementptr inbounds %struct.hash_entry* %18, i32 0, i32 0, !dbg !4304
  %19 = load i8** %data7, align 8, !dbg !4304
  store i8* %19, i8** %retval, !dbg !4304
  br label %return, !dbg !4304

for.inc:                                          ; preds = %for.body, %land.lhs.true
  %20 = load %struct.hash_entry** %cursor, align 8, !dbg !4300
  %next9 = getelementptr inbounds %struct.hash_entry* %20, i32 0, i32 1, !dbg !4300
  %21 = load %struct.hash_entry** %next9, align 8, !dbg !4300
  store %struct.hash_entry* %21, %struct.hash_entry** %cursor, align 8, !dbg !4300
  br label %for.cond, !dbg !4300

while.cond:                                       ; preds = %while.body, %for.cond
  %22 = load %struct.hash_entry** %bucket, align 8, !dbg !4305
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %22, i32 1, !dbg !4305
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4305
  %23 = load %struct.hash_table** %table.addr, align 8, !dbg !4305
  %bucket_limit10 = getelementptr inbounds %struct.hash_table* %23, i32 0, i32 1, !dbg !4305
  %24 = load %struct.hash_entry** %bucket_limit10, align 8, !dbg !4305
  %cmp11 = icmp ult %struct.hash_entry* %incdec.ptr, %24, !dbg !4305
  br i1 %cmp11, label %while.body, label %while.end, !dbg !4305

while.body:                                       ; preds = %while.cond
  %25 = load %struct.hash_entry** %bucket, align 8, !dbg !4306
  %data12 = getelementptr inbounds %struct.hash_entry* %25, i32 0, i32 0, !dbg !4306
  %26 = load i8** %data12, align 8, !dbg !4306
  %tobool13 = icmp ne i8* %26, null, !dbg !4306
  br i1 %tobool13, label %if.then14, label %while.cond, !dbg !4306

if.then14:                                        ; preds = %while.body
  %27 = load %struct.hash_entry** %bucket, align 8, !dbg !4308
  %data15 = getelementptr inbounds %struct.hash_entry* %27, i32 0, i32 0, !dbg !4308
  %28 = load i8** %data15, align 8, !dbg !4308
  store i8* %28, i8** %retval, !dbg !4308
  br label %return, !dbg !4308

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, !dbg !4309
  br label %return, !dbg !4309

return:                                           ; preds = %while.end, %if.then14, %if.then5
  %29 = load i8** %retval, !dbg !4310
  ret i8* %29, !dbg !4310
}

; Function Attrs: nounwind uwtable
define i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #0 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8** %buffer, i8*** %buffer.addr, align 8
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  store i64 0, i64* %counter, align 8, !dbg !4311
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4312
  %bucket1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !4312
  %1 = load %struct.hash_entry** %bucket1, align 8, !dbg !4312
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !4312
  br label %for.cond, !dbg !4312

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry** %bucket, align 8, !dbg !4312
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !4312
  %bucket_limit = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 1, !dbg !4312
  %4 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !4312
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !4312
  br i1 %cmp, label %for.body, label %for.end10, !dbg !4312

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !4314
  %data = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !4314
  %6 = load i8** %data, align 8, !dbg !4314
  %tobool = icmp ne i8* %6, null, !dbg !4314
  br i1 %tobool, label %if.then, label %for.inc9, !dbg !4314

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !4317
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !4317
  br label %for.cond2, !dbg !4317

for.cond2:                                        ; preds = %if.end, %if.then
  %8 = load %struct.hash_entry** %cursor, align 8, !dbg !4317
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !4317
  br i1 %tobool3, label %for.body4, label %for.inc9, !dbg !4317

for.body4:                                        ; preds = %for.cond2
  %9 = load i64* %counter, align 8, !dbg !4320
  %10 = load i64* %buffer_size.addr, align 8, !dbg !4320
  %cmp5 = icmp uge i64 %9, %10, !dbg !4320
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !4320

if.then6:                                         ; preds = %for.body4
  %11 = load i64* %counter, align 8, !dbg !4323
  store i64 %11, i64* %retval, !dbg !4323
  br label %return, !dbg !4323

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry** %cursor, align 8, !dbg !4324
  %data7 = getelementptr inbounds %struct.hash_entry* %12, i32 0, i32 0, !dbg !4324
  %13 = load i8** %data7, align 8, !dbg !4324
  %14 = load i64* %counter, align 8, !dbg !4324
  %inc = add i64 %14, 1, !dbg !4324
  store i64 %inc, i64* %counter, align 8, !dbg !4324
  %15 = load i8*** %buffer.addr, align 8, !dbg !4324
  %arrayidx = getelementptr inbounds i8** %15, i64 %14, !dbg !4324
  store i8* %13, i8** %arrayidx, align 8, !dbg !4324
  %16 = load %struct.hash_entry** %cursor, align 8, !dbg !4317
  %next = getelementptr inbounds %struct.hash_entry* %16, i32 0, i32 1, !dbg !4317
  %17 = load %struct.hash_entry** %next, align 8, !dbg !4317
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !4317
  br label %for.cond2, !dbg !4317

for.inc9:                                         ; preds = %for.body, %for.cond2
  %18 = load %struct.hash_entry** %bucket, align 8, !dbg !4312
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %18, i32 1, !dbg !4312
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4312
  br label %for.cond, !dbg !4312

for.end10:                                        ; preds = %for.cond
  %19 = load i64* %counter, align 8, !dbg !4325
  store i64 %19, i64* %retval, !dbg !4325
  br label %return, !dbg !4325

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64* %retval, !dbg !4326
  ret i64 %20, !dbg !4326
}

; Function Attrs: nounwind uwtable
define i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #0 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8
  store i8* %processor_data, i8** %processor_data.addr, align 8
  store i64 0, i64* %counter, align 8, !dbg !4327
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4328
  %bucket1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !4328
  %1 = load %struct.hash_entry** %bucket1, align 8, !dbg !4328
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !4328
  br label %for.cond, !dbg !4328

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry** %bucket, align 8, !dbg !4328
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !4328
  %bucket_limit = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 1, !dbg !4328
  %4 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !4328
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !4328
  br i1 %cmp, label %for.body, label %for.end9, !dbg !4328

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !4330
  %data = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !4330
  %6 = load i8** %data, align 8, !dbg !4330
  %tobool = icmp ne i8* %6, null, !dbg !4330
  br i1 %tobool, label %if.then, label %for.inc8, !dbg !4330

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !4333
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !4333
  br label %for.cond2, !dbg !4333

for.cond2:                                        ; preds = %if.end, %if.then
  %8 = load %struct.hash_entry** %cursor, align 8, !dbg !4333
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !4333
  br i1 %tobool3, label %for.body4, label %for.inc8, !dbg !4333

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)** %processor.addr, align 8, !dbg !4336
  %10 = load %struct.hash_entry** %cursor, align 8, !dbg !4336
  %data5 = getelementptr inbounds %struct.hash_entry* %10, i32 0, i32 0, !dbg !4336
  %11 = load i8** %data5, align 8, !dbg !4336
  %12 = load i8** %processor_data.addr, align 8, !dbg !4336
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !4336
  %13 = load i64* %counter, align 8, !dbg !4339
  br i1 %call, label %if.end, label %if.then6, !dbg !4336

if.then6:                                         ; preds = %for.body4
  store i64 %13, i64* %retval, !dbg !4340
  br label %return, !dbg !4340

if.end:                                           ; preds = %for.body4
  %inc = add i64 %13, 1, !dbg !4339
  store i64 %inc, i64* %counter, align 8, !dbg !4339
  %14 = load %struct.hash_entry** %cursor, align 8, !dbg !4333
  %next = getelementptr inbounds %struct.hash_entry* %14, i32 0, i32 1, !dbg !4333
  %15 = load %struct.hash_entry** %next, align 8, !dbg !4333
  store %struct.hash_entry* %15, %struct.hash_entry** %cursor, align 8, !dbg !4333
  br label %for.cond2, !dbg !4333

for.inc8:                                         ; preds = %for.body, %for.cond2
  %16 = load %struct.hash_entry** %bucket, align 8, !dbg !4328
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %16, i32 1, !dbg !4328
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4328
  br label %for.cond, !dbg !4328

for.end9:                                         ; preds = %for.cond
  %17 = load i64* %counter, align 8, !dbg !4341
  store i64 %17, i64* %retval, !dbg !4341
  br label %return, !dbg !4341

return:                                           ; preds = %for.end9, %if.then6
  %18 = load i64* %retval, !dbg !4342
  ret i64 %18, !dbg !4342
}

; Function Attrs: nounwind uwtable
define i64 @hash_string(i8* %string, i64 %n_buckets) #0 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8
  %ch = alloca i8, align 1
  store i8* %string, i8** %string.addr, align 8
  store i64 %n_buckets, i64* %n_buckets.addr, align 8
  store i64 0, i64* %value, align 8, !dbg !4343
  br label %for.cond, !dbg !4344

for.cond:                                         ; preds = %for.body, %entry
  %0 = load i8** %string.addr, align 8, !dbg !4344
  %1 = load i8* %0, align 1, !dbg !4344
  store i8 %1, i8* %ch, align 1, !dbg !4344
  %tobool = icmp ne i8 %1, 0, !dbg !4344
  %2 = load i64* %value, align 8, !dbg !4346
  br i1 %tobool, label %for.body, label %for.end, !dbg !4344

for.body:                                         ; preds = %for.cond
  %mul = mul i64 %2, 31, !dbg !4346
  %3 = load i8* %ch, align 1, !dbg !4346
  %conv = zext i8 %3 to i64, !dbg !4346
  %add = add i64 %mul, %conv, !dbg !4346
  %4 = load i64* %n_buckets.addr, align 8, !dbg !4346
  %int_cast_to_i64 = bitcast i64 %4 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !4346
  %rem = urem i64 %add, %4, !dbg !4346
  store i64 %rem, i64* %value, align 8, !dbg !4346
  %5 = load i8** %string.addr, align 8, !dbg !4344
  %incdec.ptr = getelementptr inbounds i8* %5, i32 1, !dbg !4344
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !4344
  br label %for.cond, !dbg !4344

for.end:                                          ; preds = %for.cond
  ret i64 %2, !dbg !4347
}

; Function Attrs: nounwind uwtable
define void @hash_reset_tuning(%struct.hash_tuning* %tuning) #0 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  %0 = load %struct.hash_tuning** %tuning.addr, align 8, !dbg !4348
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !4348
  %2 = call i8* @memcpy(i8* %1, i8* bitcast ({ float, float, float, float, i8, [3 x i8] }* @default_tuning to i8*), i64 20)
  ret void, !dbg !4349
}

; Function Attrs: nounwind uwtable
define %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #0 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8
  %new_candidate = alloca float, align 4
  store i64 %candidate, i64* %candidate.addr, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8
  %0 = load i64 (i8*, i64)** %hasher.addr, align 8, !dbg !4350
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !4350
  %1 = load i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !4350
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !4350
  %or.cond = or i1 %cmp, %cmp1, !dbg !4350
  br i1 %or.cond, label %if.then, label %if.end, !dbg !4350

if.then:                                          ; preds = %entry
  store %struct.hash_table* null, %struct.hash_table** %retval, !dbg !4352
  br label %return, !dbg !4352

if.end:                                           ; preds = %entry
  %call = call noalias i8* @malloc(i64 80) #6, !dbg !4353
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !4353
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !4353
  %3 = load %struct.hash_table** %table, align 8, !dbg !4354
  %cmp2 = icmp eq %struct.hash_table* %3, null, !dbg !4354
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4354

if.then3:                                         ; preds = %if.end
  store %struct.hash_table* null, %struct.hash_table** %retval, !dbg !4356
  br label %return, !dbg !4356

if.end4:                                          ; preds = %if.end
  %4 = load %struct.hash_tuning** %tuning.addr, align 8, !dbg !4357
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !4357
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !4357

if.then5:                                         ; preds = %if.end4
  store %struct.hash_tuning* bitcast ({ float, float, float, float, i8, [3 x i8] }* @default_tuning to %struct.hash_tuning*), %struct.hash_tuning** %tuning.addr, align 8, !dbg !4359
  br label %if.end6, !dbg !4359

if.end6:                                          ; preds = %if.then5, %if.end4
  %5 = load %struct.hash_tuning** %tuning.addr, align 8, !dbg !4360
  %6 = load %struct.hash_table** %table, align 8, !dbg !4360
  %tuning7 = getelementptr inbounds %struct.hash_table* %6, i32 0, i32 5, !dbg !4360
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning7, align 8, !dbg !4360
  %7 = load %struct.hash_table** %table, align 8, !dbg !4361
  %call8 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !4361
  br i1 %call8, label %if.end10, label %fail, !dbg !4361

if.end10:                                         ; preds = %if.end6
  %8 = load %struct.hash_tuning** %tuning.addr, align 8, !dbg !4363
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning* %8, i32 0, i32 4, !dbg !4363
  %9 = load i8* %is_n_buckets, align 1, !dbg !4363
  %tobool11 = trunc i8 %9 to i1, !dbg !4363
  br i1 %tobool11, label %if.end18, label %if.then12, !dbg !4363

if.then12:                                        ; preds = %if.end10
  %10 = load i64* %candidate.addr, align 8, !dbg !4365
  %conv = uitofp i64 %10 to float, !dbg !4365
  %11 = load %struct.hash_tuning** %tuning.addr, align 8, !dbg !4365
  %growth_threshold = getelementptr inbounds %struct.hash_tuning* %11, i32 0, i32 2, !dbg !4365
  %12 = load float* %growth_threshold, align 4, !dbg !4365
  %div = fdiv float %conv, %12, !dbg !4365
  store float %div, float* %new_candidate, align 4, !dbg !4365
  %13 = load float* %new_candidate, align 4, !dbg !4367
  %cmp13 = fcmp ole float 0x43F0000000000000, %13, !dbg !4367
  br i1 %cmp13, label %fail, label %if.end16, !dbg !4367

if.end16:                                         ; preds = %if.then12
  %14 = load float* %new_candidate, align 4, !dbg !4369
  %conv17 = fptoui float %14 to i64, !dbg !4369
  store i64 %conv17, i64* %candidate.addr, align 8, !dbg !4369
  br label %if.end18, !dbg !4370

if.end18:                                         ; preds = %if.end16, %if.end10
  %15 = load i64* %candidate.addr, align 8, !dbg !4371
  %cmp19 = icmp ult i64 1152921504606846975, %15, !dbg !4371
  br i1 %cmp19, label %fail, label %if.end22, !dbg !4371

if.end22:                                         ; preds = %if.end18
  %16 = load i64* %candidate.addr, align 8, !dbg !4373
  %call23 = call i64 @next_prime(i64 %16), !dbg !4373
  %17 = load %struct.hash_table** %table, align 8, !dbg !4373
  %n_buckets = getelementptr inbounds %struct.hash_table* %17, i32 0, i32 2, !dbg !4373
  store i64 %call23, i64* %n_buckets, align 8, !dbg !4373
  %18 = load %struct.hash_table** %table, align 8, !dbg !4374
  %n_buckets24 = getelementptr inbounds %struct.hash_table* %18, i32 0, i32 2, !dbg !4374
  %19 = load i64* %n_buckets24, align 8, !dbg !4374
  %cmp25 = icmp ult i64 1152921504606846975, %19, !dbg !4374
  br i1 %cmp25, label %fail, label %if.end28, !dbg !4374

if.end28:                                         ; preds = %if.end22
  %20 = load %struct.hash_table** %table, align 8, !dbg !4376
  %n_buckets29 = getelementptr inbounds %struct.hash_table* %20, i32 0, i32 2, !dbg !4376
  %21 = load i64* %n_buckets29, align 8, !dbg !4376
  %call30 = call noalias i8* @calloc(i64 %21, i64 16) #6, !dbg !4376
  %22 = bitcast i8* %call30 to %struct.hash_entry*, !dbg !4376
  %23 = load %struct.hash_table** %table, align 8, !dbg !4376
  %bucket = getelementptr inbounds %struct.hash_table* %23, i32 0, i32 0, !dbg !4376
  store %struct.hash_entry* %22, %struct.hash_entry** %bucket, align 8, !dbg !4376
  %24 = load %struct.hash_table** %table, align 8, !dbg !4377
  %bucket31 = getelementptr inbounds %struct.hash_table* %24, i32 0, i32 0, !dbg !4377
  %25 = load %struct.hash_entry** %bucket31, align 8, !dbg !4377
  %26 = load %struct.hash_table** %table, align 8, !dbg !4377
  %n_buckets32 = getelementptr inbounds %struct.hash_table* %26, i32 0, i32 2, !dbg !4377
  %27 = load i64* %n_buckets32, align 8, !dbg !4377
  %add.ptr = getelementptr inbounds %struct.hash_entry* %25, i64 %27, !dbg !4377
  %28 = load %struct.hash_table** %table, align 8, !dbg !4377
  %bucket_limit = getelementptr inbounds %struct.hash_table* %28, i32 0, i32 1, !dbg !4377
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !4377
  %29 = load %struct.hash_table** %table, align 8, !dbg !4378
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %29, i32 0, i32 3, !dbg !4378
  store i64 0, i64* %n_buckets_used, align 8, !dbg !4378
  %30 = load %struct.hash_table** %table, align 8, !dbg !4379
  %n_entries = getelementptr inbounds %struct.hash_table* %30, i32 0, i32 4, !dbg !4379
  store i64 0, i64* %n_entries, align 8, !dbg !4379
  %31 = load i64 (i8*, i64)** %hasher.addr, align 8, !dbg !4380
  %32 = load %struct.hash_table** %table, align 8, !dbg !4380
  %hasher33 = getelementptr inbounds %struct.hash_table* %32, i32 0, i32 6, !dbg !4380
  store i64 (i8*, i64)* %31, i64 (i8*, i64)** %hasher33, align 8, !dbg !4380
  %33 = load i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !4381
  %34 = load %struct.hash_table** %table, align 8, !dbg !4381
  %comparator34 = getelementptr inbounds %struct.hash_table* %34, i32 0, i32 7, !dbg !4381
  store i1 (i8*, i8*)* %33, i1 (i8*, i8*)** %comparator34, align 8, !dbg !4381
  %35 = load void (i8*)** %data_freer.addr, align 8, !dbg !4382
  %36 = load %struct.hash_table** %table, align 8, !dbg !4382
  %data_freer35 = getelementptr inbounds %struct.hash_table* %36, i32 0, i32 8, !dbg !4382
  store void (i8*)* %35, void (i8*)** %data_freer35, align 8, !dbg !4382
  %37 = load %struct.hash_table** %table, align 8, !dbg !4383
  %free_entry_list = getelementptr inbounds %struct.hash_table* %37, i32 0, i32 9, !dbg !4383
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !4383
  %38 = load %struct.hash_table** %table, align 8, !dbg !4384
  store %struct.hash_table* %38, %struct.hash_table** %retval, !dbg !4384
  br label %return, !dbg !4384

fail:                                             ; preds = %if.end22, %if.end18, %if.then12, %if.end6
  %39 = load %struct.hash_table** %table, align 8, !dbg !4385
  %40 = bitcast %struct.hash_table* %39 to i8*, !dbg !4385
  call void @free(i8* %40) #6, !dbg !4385
  store %struct.hash_table* null, %struct.hash_table** %retval, !dbg !4386
  br label %return, !dbg !4386

return:                                           ; preds = %fail, %if.end28, %if.then3, %if.then
  %41 = load %struct.hash_table** %retval, !dbg !4387
  ret %struct.hash_table* %41, !dbg !4387
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #4

; Function Attrs: nounwind uwtable
define void @hash_clear(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  %next = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4388
  %bucket1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !4388
  %1 = load %struct.hash_entry** %bucket1, align 8, !dbg !4388
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !4388
  br label %for.cond, !dbg !4388

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry** %bucket, align 8, !dbg !4388
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !4388
  %bucket_limit = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 1, !dbg !4388
  %4 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !4388
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !4388
  br i1 %cmp, label %for.body, label %for.end24, !dbg !4388

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !4390
  %data = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !4390
  %6 = load i8** %data, align 8, !dbg !4390
  %tobool = icmp ne i8* %6, null, !dbg !4390
  br i1 %tobool, label %if.then, label %for.inc23, !dbg !4390

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !4393
  %next2 = getelementptr inbounds %struct.hash_entry* %7, i32 0, i32 1, !dbg !4393
  %8 = load %struct.hash_entry** %next2, align 8, !dbg !4393
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !4393
  br label %for.cond3, !dbg !4393

for.cond3:                                        ; preds = %if.end, %if.then
  %9 = load %struct.hash_entry** %cursor, align 8, !dbg !4393
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !4393
  %10 = load %struct.hash_table** %table.addr, align 8, !dbg !4396
  %data_freer = getelementptr inbounds %struct.hash_table* %10, i32 0, i32 8, !dbg !4396
  %11 = load void (i8*)** %data_freer, align 8, !dbg !4396
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !4396
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !4393

for.body5:                                        ; preds = %for.cond3
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !4396

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table** %table.addr, align 8, !dbg !4399
  %data_freer8 = getelementptr inbounds %struct.hash_table* %12, i32 0, i32 8, !dbg !4399
  %13 = load void (i8*)** %data_freer8, align 8, !dbg !4399
  %14 = load %struct.hash_entry** %cursor, align 8, !dbg !4399
  %data9 = getelementptr inbounds %struct.hash_entry* %14, i32 0, i32 0, !dbg !4399
  %15 = load i8** %data9, align 8, !dbg !4399
  call void %13(i8* %15), !dbg !4399
  br label %if.end, !dbg !4399

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry** %cursor, align 8, !dbg !4400
  %data10 = getelementptr inbounds %struct.hash_entry* %16, i32 0, i32 0, !dbg !4400
  store i8* null, i8** %data10, align 8, !dbg !4400
  %17 = load %struct.hash_entry** %cursor, align 8, !dbg !4401
  %next11 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 1, !dbg !4401
  %18 = load %struct.hash_entry** %next11, align 8, !dbg !4401
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !4401
  %19 = load %struct.hash_table** %table.addr, align 8, !dbg !4402
  %free_entry_list = getelementptr inbounds %struct.hash_table* %19, i32 0, i32 9, !dbg !4402
  %20 = load %struct.hash_entry** %free_entry_list, align 8, !dbg !4402
  %21 = load %struct.hash_entry** %cursor, align 8, !dbg !4402
  %next12 = getelementptr inbounds %struct.hash_entry* %21, i32 0, i32 1, !dbg !4402
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !4402
  %22 = load %struct.hash_entry** %cursor, align 8, !dbg !4403
  %23 = load %struct.hash_table** %table.addr, align 8, !dbg !4403
  %free_entry_list13 = getelementptr inbounds %struct.hash_table* %23, i32 0, i32 9, !dbg !4403
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !4403
  %24 = load %struct.hash_entry** %next, align 8, !dbg !4393
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !4393
  br label %for.cond3, !dbg !4393

for.end:                                          ; preds = %for.cond3
  br i1 %tobool6, label %if.then16, label %if.end19, !dbg !4404

if.then16:                                        ; preds = %for.end
  %25 = load %struct.hash_table** %table.addr, align 8, !dbg !4406
  %data_freer17 = getelementptr inbounds %struct.hash_table* %25, i32 0, i32 8, !dbg !4406
  %26 = load void (i8*)** %data_freer17, align 8, !dbg !4406
  %27 = load %struct.hash_entry** %bucket, align 8, !dbg !4406
  %data18 = getelementptr inbounds %struct.hash_entry* %27, i32 0, i32 0, !dbg !4406
  %28 = load i8** %data18, align 8, !dbg !4406
  call void %26(i8* %28), !dbg !4406
  br label %if.end19, !dbg !4406

if.end19:                                         ; preds = %if.then16, %for.end
  %29 = load %struct.hash_entry** %bucket, align 8, !dbg !4407
  %data20 = getelementptr inbounds %struct.hash_entry* %29, i32 0, i32 0, !dbg !4407
  store i8* null, i8** %data20, align 8, !dbg !4407
  %30 = load %struct.hash_entry** %bucket, align 8, !dbg !4408
  %next21 = getelementptr inbounds %struct.hash_entry* %30, i32 0, i32 1, !dbg !4408
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !4408
  br label %for.inc23, !dbg !4409

for.inc23:                                        ; preds = %for.body, %if.end19
  %31 = load %struct.hash_entry** %bucket, align 8, !dbg !4388
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %31, i32 1, !dbg !4388
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4388
  br label %for.cond, !dbg !4388

for.end24:                                        ; preds = %for.cond
  %32 = load %struct.hash_table** %table.addr, align 8, !dbg !4410
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %32, i32 0, i32 3, !dbg !4410
  store i64 0, i64* %n_buckets_used, align 8, !dbg !4410
  %33 = load %struct.hash_table** %table.addr, align 8, !dbg !4411
  %n_entries = getelementptr inbounds %struct.hash_table* %33, i32 0, i32 4, !dbg !4411
  store i64 0, i64* %n_entries, align 8, !dbg !4411
  ret void, !dbg !4412
}

; Function Attrs: nounwind uwtable
define void @hash_free(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  %next = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4413
  %data_freer = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 8, !dbg !4413
  %1 = load void (i8*)** %data_freer, align 8, !dbg !4413
  %tobool = icmp ne void (i8*)* %1, null, !dbg !4413
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !4413

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !4413
  %n_entries = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 4, !dbg !4413
  %3 = load i64* %n_entries, align 8, !dbg !4413
  %tobool1 = icmp ne i64 %3, 0, !dbg !4413
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !4413

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table** %table.addr, align 8, !dbg !4415
  %bucket2 = getelementptr inbounds %struct.hash_table* %4, i32 0, i32 0, !dbg !4415
  %5 = load %struct.hash_entry** %bucket2, align 8, !dbg !4415
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !4415
  br label %for.cond, !dbg !4415

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry** %bucket, align 8, !dbg !4415
  %7 = load %struct.hash_table** %table.addr, align 8, !dbg !4415
  %bucket_limit = getelementptr inbounds %struct.hash_table* %7, i32 0, i32 1, !dbg !4415
  %8 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !4415
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !4415
  br i1 %cmp, label %for.body, label %if.end13, !dbg !4415

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry** %bucket, align 8, !dbg !4418
  %data = getelementptr inbounds %struct.hash_entry* %9, i32 0, i32 0, !dbg !4418
  %10 = load i8** %data, align 8, !dbg !4418
  %tobool3 = icmp ne i8* %10, null, !dbg !4418
  br i1 %tobool3, label %if.then4, label %for.inc11, !dbg !4418

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry** %bucket, align 8, !dbg !4421
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !4421
  br label %for.cond5, !dbg !4421

for.cond5:                                        ; preds = %for.body7, %if.then4
  %12 = load %struct.hash_entry** %cursor, align 8, !dbg !4421
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !4421
  br i1 %tobool6, label %for.body7, label %for.inc11, !dbg !4421

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table** %table.addr, align 8, !dbg !4424
  %data_freer8 = getelementptr inbounds %struct.hash_table* %13, i32 0, i32 8, !dbg !4424
  %14 = load void (i8*)** %data_freer8, align 8, !dbg !4424
  %15 = load %struct.hash_entry** %cursor, align 8, !dbg !4424
  %data9 = getelementptr inbounds %struct.hash_entry* %15, i32 0, i32 0, !dbg !4424
  %16 = load i8** %data9, align 8, !dbg !4424
  call void %14(i8* %16), !dbg !4424
  %17 = load %struct.hash_entry** %cursor, align 8, !dbg !4421
  %next10 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 1, !dbg !4421
  %18 = load %struct.hash_entry** %next10, align 8, !dbg !4421
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !4421
  br label %for.cond5, !dbg !4421

for.inc11:                                        ; preds = %for.body, %for.cond5
  %19 = load %struct.hash_entry** %bucket, align 8, !dbg !4415
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %19, i32 1, !dbg !4415
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4415
  br label %for.cond, !dbg !4415

if.end13:                                         ; preds = %for.cond, %land.lhs.true, %entry
  %20 = load %struct.hash_table** %table.addr, align 8, !dbg !4426
  %bucket14 = getelementptr inbounds %struct.hash_table* %20, i32 0, i32 0, !dbg !4426
  %21 = load %struct.hash_entry** %bucket14, align 8, !dbg !4426
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !4426
  br label %for.cond15, !dbg !4426

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry** %bucket, align 8, !dbg !4426
  %23 = load %struct.hash_table** %table.addr, align 8, !dbg !4426
  %bucket_limit16 = getelementptr inbounds %struct.hash_table* %23, i32 0, i32 1, !dbg !4426
  %24 = load %struct.hash_entry** %bucket_limit16, align 8, !dbg !4426
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !4426
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !4426

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry** %bucket, align 8, !dbg !4428
  %next19 = getelementptr inbounds %struct.hash_entry* %25, i32 0, i32 1, !dbg !4428
  %26 = load %struct.hash_entry** %next19, align 8, !dbg !4428
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !4428
  br label %for.cond20, !dbg !4428

for.cond20:                                       ; preds = %for.body22, %for.body18
  %27 = load %struct.hash_entry** %cursor, align 8, !dbg !4428
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !4428
  br i1 %tobool21, label %for.body22, label %for.inc26, !dbg !4428

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry** %cursor, align 8, !dbg !4431
  %next23 = getelementptr inbounds %struct.hash_entry* %28, i32 0, i32 1, !dbg !4431
  %29 = load %struct.hash_entry** %next23, align 8, !dbg !4431
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !4431
  %30 = load %struct.hash_entry** %cursor, align 8, !dbg !4433
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !4433
  call void @free(i8* %31) #6, !dbg !4433
  %32 = load %struct.hash_entry** %next, align 8, !dbg !4428
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !4428
  br label %for.cond20, !dbg !4428

for.inc26:                                        ; preds = %for.cond20
  %33 = load %struct.hash_entry** %bucket, align 8, !dbg !4426
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry* %33, i32 1, !dbg !4426
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !4426
  br label %for.cond15, !dbg !4426

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table** %table.addr, align 8, !dbg !4434
  %free_entry_list = getelementptr inbounds %struct.hash_table* %34, i32 0, i32 9, !dbg !4434
  %35 = load %struct.hash_entry** %free_entry_list, align 8, !dbg !4434
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !4434
  br label %for.cond29, !dbg !4434

for.cond29:                                       ; preds = %for.body31, %for.end28
  %36 = load %struct.hash_entry** %cursor, align 8, !dbg !4434
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !4434
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !4434

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry** %cursor, align 8, !dbg !4436
  %next32 = getelementptr inbounds %struct.hash_entry* %37, i32 0, i32 1, !dbg !4436
  %38 = load %struct.hash_entry** %next32, align 8, !dbg !4436
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !4436
  %39 = load %struct.hash_entry** %cursor, align 8, !dbg !4438
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !4438
  call void @free(i8* %40) #6, !dbg !4438
  %41 = load %struct.hash_entry** %next, align 8, !dbg !4434
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !4434
  br label %for.cond29, !dbg !4434

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table** %table.addr, align 8, !dbg !4439
  %bucket35 = getelementptr inbounds %struct.hash_table* %42, i32 0, i32 0, !dbg !4439
  %43 = load %struct.hash_entry** %bucket35, align 8, !dbg !4439
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !4439
  call void @free(i8* %44) #6, !dbg !4439
  %45 = load %struct.hash_table** %table.addr, align 8, !dbg !4440
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !4440
  call void @free(i8* %46) #6, !dbg !4440
  ret void, !dbg !4441
}

; Function Attrs: nounwind uwtable
define zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #0 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %new_table = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  %next = alloca %struct.hash_entry*, align 8
  %data8 = alloca i8*, align 8
  %new_bucket = alloca %struct.hash_entry*, align 8
  %new_entry = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i64 %candidate, i64* %candidate.addr, align 8
  %0 = load i64* %candidate.addr, align 8, !dbg !4442
  %1 = load %struct.hash_table** %table.addr, align 8, !dbg !4442
  %tuning = getelementptr inbounds %struct.hash_table* %1, i32 0, i32 5, !dbg !4442
  %2 = load %struct.hash_tuning** %tuning, align 8, !dbg !4442
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !4442
  %hasher = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 6, !dbg !4442
  %4 = load i64 (i8*, i64)** %hasher, align 8, !dbg !4442
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !4442
  %comparator = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 7, !dbg !4442
  %6 = load i1 (i8*, i8*)** %comparator, align 8, !dbg !4442
  %7 = load %struct.hash_table** %table.addr, align 8, !dbg !4442
  %data_freer = getelementptr inbounds %struct.hash_table* %7, i32 0, i32 8, !dbg !4442
  %8 = load void (i8*)** %data_freer, align 8, !dbg !4442
  %call = call %struct.hash_table* @hash_initialize(i64 %0, %struct.hash_tuning* %2, i64 (i8*, i64)* %4, i1 (i8*, i8*)* %6, void (i8*)* %8), !dbg !4442
  store %struct.hash_table* %call, %struct.hash_table** %new_table, align 8, !dbg !4442
  %9 = load %struct.hash_table** %new_table, align 8, !dbg !4443
  %cmp = icmp eq %struct.hash_table* %9, null, !dbg !4443
  br i1 %cmp, label %if.then, label %if.end, !dbg !4443

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, !dbg !4445
  br label %return, !dbg !4445

if.end:                                           ; preds = %entry
  %10 = load %struct.hash_table** %table.addr, align 8, !dbg !4446
  %free_entry_list = getelementptr inbounds %struct.hash_table* %10, i32 0, i32 9, !dbg !4446
  %11 = load %struct.hash_entry** %free_entry_list, align 8, !dbg !4446
  %12 = load %struct.hash_table** %new_table, align 8, !dbg !4446
  %free_entry_list1 = getelementptr inbounds %struct.hash_table* %12, i32 0, i32 9, !dbg !4446
  store %struct.hash_entry* %11, %struct.hash_entry** %free_entry_list1, align 8, !dbg !4446
  %13 = load %struct.hash_table** %table.addr, align 8, !dbg !4447
  %bucket2 = getelementptr inbounds %struct.hash_table* %13, i32 0, i32 0, !dbg !4447
  %14 = load %struct.hash_entry** %bucket2, align 8, !dbg !4447
  store %struct.hash_entry* %14, %struct.hash_entry** %bucket, align 8, !dbg !4447
  br label %for.cond, !dbg !4447

for.cond:                                         ; preds = %for.inc42, %if.end
  %15 = load %struct.hash_entry** %bucket, align 8, !dbg !4447
  %16 = load %struct.hash_table** %table.addr, align 8, !dbg !4447
  %bucket_limit = getelementptr inbounds %struct.hash_table* %16, i32 0, i32 1, !dbg !4447
  %17 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !4447
  %cmp3 = icmp ult %struct.hash_entry* %15, %17, !dbg !4447
  br i1 %cmp3, label %for.body, label %for.end43, !dbg !4447

for.body:                                         ; preds = %for.cond
  %18 = load %struct.hash_entry** %bucket, align 8, !dbg !4449
  %data = getelementptr inbounds %struct.hash_entry* %18, i32 0, i32 0, !dbg !4449
  %19 = load i8** %data, align 8, !dbg !4449
  %tobool = icmp ne i8* %19, null, !dbg !4449
  br i1 %tobool, label %if.then4, label %for.inc42, !dbg !4449

if.then4:                                         ; preds = %for.body
  %20 = load %struct.hash_entry** %bucket, align 8, !dbg !4451
  store %struct.hash_entry* %20, %struct.hash_entry** %cursor, align 8, !dbg !4451
  br label %for.cond5, !dbg !4451

for.cond5:                                        ; preds = %for.inc, %if.then4
  %21 = load %struct.hash_entry** %cursor, align 8, !dbg !4451
  %tobool6 = icmp ne %struct.hash_entry* %21, null, !dbg !4451
  br i1 %tobool6, label %for.body7, label %for.inc42, !dbg !4451

for.body7:                                        ; preds = %for.cond5
  %22 = load %struct.hash_entry** %cursor, align 8, !dbg !4453
  %data9 = getelementptr inbounds %struct.hash_entry* %22, i32 0, i32 0, !dbg !4453
  %23 = load i8** %data9, align 8, !dbg !4453
  store i8* %23, i8** %data8, align 8, !dbg !4453
  %24 = load %struct.hash_table** %new_table, align 8, !dbg !4455
  %bucket10 = getelementptr inbounds %struct.hash_table* %24, i32 0, i32 0, !dbg !4455
  %25 = load %struct.hash_entry** %bucket10, align 8, !dbg !4455
  %26 = load %struct.hash_table** %new_table, align 8, !dbg !4456
  %hasher11 = getelementptr inbounds %struct.hash_table* %26, i32 0, i32 6, !dbg !4456
  %27 = load i64 (i8*, i64)** %hasher11, align 8, !dbg !4456
  %28 = load i8** %data8, align 8, !dbg !4456
  %29 = load %struct.hash_table** %new_table, align 8, !dbg !4456
  %n_buckets = getelementptr inbounds %struct.hash_table* %29, i32 0, i32 2, !dbg !4456
  %30 = load i64* %n_buckets, align 8, !dbg !4456
  %call12 = call i64 %27(i8* %28, i64 %30), !dbg !4456
  %add.ptr = getelementptr inbounds %struct.hash_entry* %25, i64 %call12, !dbg !4456
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %new_bucket, align 8, !dbg !4456
  %31 = load %struct.hash_entry** %new_bucket, align 8, !dbg !4457
  %32 = load %struct.hash_table** %new_table, align 8, !dbg !4457
  %bucket_limit13 = getelementptr inbounds %struct.hash_table* %32, i32 0, i32 1, !dbg !4457
  %33 = load %struct.hash_entry** %bucket_limit13, align 8, !dbg !4457
  %cmp14 = icmp ult %struct.hash_entry* %31, %33, !dbg !4457
  br i1 %cmp14, label %if.end16, label %if.then15, !dbg !4457

if.then15:                                        ; preds = %for.body7
  call void @abort() #17, !dbg !4459
  unreachable, !dbg !4459

if.end16:                                         ; preds = %for.body7
  %34 = load %struct.hash_entry** %cursor, align 8, !dbg !4460
  %next17 = getelementptr inbounds %struct.hash_entry* %34, i32 0, i32 1, !dbg !4460
  %35 = load %struct.hash_entry** %next17, align 8, !dbg !4460
  store %struct.hash_entry* %35, %struct.hash_entry** %next, align 8, !dbg !4460
  %36 = load %struct.hash_entry** %new_bucket, align 8, !dbg !4461
  %data18 = getelementptr inbounds %struct.hash_entry* %36, i32 0, i32 0, !dbg !4461
  %37 = load i8** %data18, align 8, !dbg !4461
  %tobool19 = icmp ne i8* %37, null, !dbg !4461
  br i1 %tobool19, label %if.then20, label %if.else35, !dbg !4461

if.then20:                                        ; preds = %if.end16
  %38 = load %struct.hash_entry** %cursor, align 8, !dbg !4463
  %39 = load %struct.hash_entry** %bucket, align 8, !dbg !4463
  %cmp21 = icmp eq %struct.hash_entry* %38, %39, !dbg !4463
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !4463

if.then22:                                        ; preds = %if.then20
  %40 = load %struct.hash_table** %new_table, align 8, !dbg !4466
  %call23 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %40), !dbg !4466
  store %struct.hash_entry* %call23, %struct.hash_entry** %new_entry, align 8, !dbg !4466
  %41 = load %struct.hash_entry** %new_entry, align 8, !dbg !4468
  %cmp24 = icmp eq %struct.hash_entry* %41, null, !dbg !4468
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !4468

if.then25:                                        ; preds = %if.then22
  store i1 false, i1* %retval, !dbg !4470
  br label %return, !dbg !4470

if.end26:                                         ; preds = %if.then22
  %42 = load i8** %data8, align 8, !dbg !4471
  %43 = load %struct.hash_entry** %new_entry, align 8, !dbg !4471
  %data27 = getelementptr inbounds %struct.hash_entry* %43, i32 0, i32 0, !dbg !4471
  store i8* %42, i8** %data27, align 8, !dbg !4471
  %44 = load %struct.hash_entry** %new_bucket, align 8, !dbg !4472
  %next28 = getelementptr inbounds %struct.hash_entry* %44, i32 0, i32 1, !dbg !4472
  %45 = load %struct.hash_entry** %next28, align 8, !dbg !4472
  %46 = load %struct.hash_entry** %new_entry, align 8, !dbg !4472
  %next29 = getelementptr inbounds %struct.hash_entry* %46, i32 0, i32 1, !dbg !4472
  store %struct.hash_entry* %45, %struct.hash_entry** %next29, align 8, !dbg !4472
  %47 = load %struct.hash_entry** %new_entry, align 8, !dbg !4473
  %48 = load %struct.hash_entry** %new_bucket, align 8, !dbg !4473
  %next30 = getelementptr inbounds %struct.hash_entry* %48, i32 0, i32 1, !dbg !4473
  store %struct.hash_entry* %47, %struct.hash_entry** %next30, align 8, !dbg !4473
  br label %for.inc, !dbg !4474

if.else:                                          ; preds = %if.then20
  %49 = load %struct.hash_entry** %new_bucket, align 8, !dbg !4475
  %next31 = getelementptr inbounds %struct.hash_entry* %49, i32 0, i32 1, !dbg !4475
  %50 = load %struct.hash_entry** %next31, align 8, !dbg !4475
  %51 = load %struct.hash_entry** %cursor, align 8, !dbg !4475
  %next32 = getelementptr inbounds %struct.hash_entry* %51, i32 0, i32 1, !dbg !4475
  store %struct.hash_entry* %50, %struct.hash_entry** %next32, align 8, !dbg !4475
  %52 = load %struct.hash_entry** %cursor, align 8, !dbg !4477
  %53 = load %struct.hash_entry** %new_bucket, align 8, !dbg !4477
  %next33 = getelementptr inbounds %struct.hash_entry* %53, i32 0, i32 1, !dbg !4477
  store %struct.hash_entry* %52, %struct.hash_entry** %next33, align 8, !dbg !4477
  br label %for.inc

if.else35:                                        ; preds = %if.end16
  %54 = load i8** %data8, align 8, !dbg !4478
  %55 = load %struct.hash_entry** %new_bucket, align 8, !dbg !4478
  %data36 = getelementptr inbounds %struct.hash_entry* %55, i32 0, i32 0, !dbg !4478
  store i8* %54, i8** %data36, align 8, !dbg !4478
  %56 = load %struct.hash_table** %new_table, align 8, !dbg !4480
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %56, i32 0, i32 3, !dbg !4480
  %57 = load i64* %n_buckets_used, align 8, !dbg !4480
  %inc = add i64 %57, 1, !dbg !4480
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !4480
  %58 = load %struct.hash_entry** %cursor, align 8, !dbg !4481
  %59 = load %struct.hash_entry** %bucket, align 8, !dbg !4481
  %cmp37 = icmp ne %struct.hash_entry* %58, %59, !dbg !4481
  br i1 %cmp37, label %if.then38, label %for.inc, !dbg !4481

if.then38:                                        ; preds = %if.else35
  %60 = load %struct.hash_table** %new_table, align 8, !dbg !4483
  %61 = load %struct.hash_entry** %cursor, align 8, !dbg !4483
  call void @free_entry(%struct.hash_table* %60, %struct.hash_entry* %61), !dbg !4483
  br label %for.inc, !dbg !4483

for.inc:                                          ; preds = %if.else, %if.end26, %if.then38, %if.else35
  %62 = load %struct.hash_entry** %next, align 8, !dbg !4451
  store %struct.hash_entry* %62, %struct.hash_entry** %cursor, align 8, !dbg !4451
  br label %for.cond5, !dbg !4451

for.inc42:                                        ; preds = %for.body, %for.cond5
  %63 = load %struct.hash_entry** %bucket, align 8, !dbg !4447
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %63, i32 1, !dbg !4447
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4447
  br label %for.cond, !dbg !4447

for.end43:                                        ; preds = %for.cond
  %64 = load %struct.hash_table** %table.addr, align 8, !dbg !4484
  %bucket44 = getelementptr inbounds %struct.hash_table* %64, i32 0, i32 0, !dbg !4484
  %65 = load %struct.hash_entry** %bucket44, align 8, !dbg !4484
  %66 = bitcast %struct.hash_entry* %65 to i8*, !dbg !4484
  call void @free(i8* %66) #6, !dbg !4484
  %67 = load %struct.hash_table** %new_table, align 8, !dbg !4485
  %bucket45 = getelementptr inbounds %struct.hash_table* %67, i32 0, i32 0, !dbg !4485
  %68 = load %struct.hash_entry** %bucket45, align 8, !dbg !4485
  %69 = load %struct.hash_table** %table.addr, align 8, !dbg !4485
  %bucket46 = getelementptr inbounds %struct.hash_table* %69, i32 0, i32 0, !dbg !4485
  store %struct.hash_entry* %68, %struct.hash_entry** %bucket46, align 8, !dbg !4485
  %70 = load %struct.hash_table** %new_table, align 8, !dbg !4486
  %bucket_limit47 = getelementptr inbounds %struct.hash_table* %70, i32 0, i32 1, !dbg !4486
  %71 = load %struct.hash_entry** %bucket_limit47, align 8, !dbg !4486
  %72 = load %struct.hash_table** %table.addr, align 8, !dbg !4486
  %bucket_limit48 = getelementptr inbounds %struct.hash_table* %72, i32 0, i32 1, !dbg !4486
  store %struct.hash_entry* %71, %struct.hash_entry** %bucket_limit48, align 8, !dbg !4486
  %73 = load %struct.hash_table** %new_table, align 8, !dbg !4487
  %n_buckets49 = getelementptr inbounds %struct.hash_table* %73, i32 0, i32 2, !dbg !4487
  %74 = load i64* %n_buckets49, align 8, !dbg !4487
  %75 = load %struct.hash_table** %table.addr, align 8, !dbg !4487
  %n_buckets50 = getelementptr inbounds %struct.hash_table* %75, i32 0, i32 2, !dbg !4487
  store i64 %74, i64* %n_buckets50, align 8, !dbg !4487
  %76 = load %struct.hash_table** %new_table, align 8, !dbg !4488
  %n_buckets_used51 = getelementptr inbounds %struct.hash_table* %76, i32 0, i32 3, !dbg !4488
  %77 = load i64* %n_buckets_used51, align 8, !dbg !4488
  %78 = load %struct.hash_table** %table.addr, align 8, !dbg !4488
  %n_buckets_used52 = getelementptr inbounds %struct.hash_table* %78, i32 0, i32 3, !dbg !4488
  store i64 %77, i64* %n_buckets_used52, align 8, !dbg !4488
  %79 = load %struct.hash_table** %new_table, align 8, !dbg !4489
  %free_entry_list53 = getelementptr inbounds %struct.hash_table* %79, i32 0, i32 9, !dbg !4489
  %80 = load %struct.hash_entry** %free_entry_list53, align 8, !dbg !4489
  %81 = load %struct.hash_table** %table.addr, align 8, !dbg !4489
  %free_entry_list54 = getelementptr inbounds %struct.hash_table* %81, i32 0, i32 9, !dbg !4489
  store %struct.hash_entry* %80, %struct.hash_entry** %free_entry_list54, align 8, !dbg !4489
  %82 = load %struct.hash_table** %new_table, align 8, !dbg !4490
  %83 = bitcast %struct.hash_table* %82 to i8*, !dbg !4490
  call void @free(i8* %83) #6, !dbg !4490
  store i1 true, i1* %retval, !dbg !4491
  br label %return, !dbg !4491

return:                                           ; preds = %for.end43, %if.then25, %if.then
  %84 = load i1* %retval, !dbg !4492
  ret i1 %84, !dbg !4492
}

; Function Attrs: nounwind uwtable
define i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %new_entry = alloca %struct.hash_entry*, align 8
  %tuning35 = alloca %struct.hash_tuning*, align 8
  %candidate = alloca float, align 4
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8* %entry1, i8** %entry.addr, align 8
  %0 = load i8** %entry.addr, align 8, !dbg !4493
  %tobool = icmp ne i8* %0, null, !dbg !4493
  br i1 %tobool, label %if.end, label %if.then, !dbg !4493

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !4495
  unreachable, !dbg !4495

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table** %table.addr, align 8, !dbg !4496
  %2 = load i8** %entry.addr, align 8, !dbg !4496
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !4496
  store i8* %call, i8** %data, align 8, !dbg !4496
  %cmp = icmp ne i8* %call, null, !dbg !4496
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4496

if.then2:                                         ; preds = %if.end
  %3 = load i8** %data, align 8, !dbg !4498
  store i8* %3, i8** %retval, !dbg !4498
  br label %return, !dbg !4498

if.end3:                                          ; preds = %if.end
  %4 = load %struct.hash_entry** %bucket, align 8, !dbg !4499
  %data4 = getelementptr inbounds %struct.hash_entry* %4, i32 0, i32 0, !dbg !4499
  %5 = load i8** %data4, align 8, !dbg !4499
  %tobool5 = icmp ne i8* %5, null, !dbg !4499
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !4499

if.then6:                                         ; preds = %if.end3
  %6 = load %struct.hash_table** %table.addr, align 8, !dbg !4501
  %call7 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %6), !dbg !4501
  store %struct.hash_entry* %call7, %struct.hash_entry** %new_entry, align 8, !dbg !4501
  %7 = load %struct.hash_entry** %new_entry, align 8, !dbg !4503
  %cmp8 = icmp eq %struct.hash_entry* %7, null, !dbg !4503
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !4503

if.then9:                                         ; preds = %if.then6
  store i8* null, i8** %retval, !dbg !4505
  br label %return, !dbg !4505

if.end10:                                         ; preds = %if.then6
  %8 = load i8** %entry.addr, align 8, !dbg !4506
  %9 = load %struct.hash_entry** %new_entry, align 8, !dbg !4506
  %data11 = getelementptr inbounds %struct.hash_entry* %9, i32 0, i32 0, !dbg !4506
  store i8* %8, i8** %data11, align 8, !dbg !4506
  %10 = load %struct.hash_entry** %bucket, align 8, !dbg !4507
  %next = getelementptr inbounds %struct.hash_entry* %10, i32 0, i32 1, !dbg !4507
  %11 = load %struct.hash_entry** %next, align 8, !dbg !4507
  %12 = load %struct.hash_entry** %new_entry, align 8, !dbg !4507
  %next12 = getelementptr inbounds %struct.hash_entry* %12, i32 0, i32 1, !dbg !4507
  store %struct.hash_entry* %11, %struct.hash_entry** %next12, align 8, !dbg !4507
  %13 = load %struct.hash_entry** %new_entry, align 8, !dbg !4508
  %14 = load %struct.hash_entry** %bucket, align 8, !dbg !4508
  %next13 = getelementptr inbounds %struct.hash_entry* %14, i32 0, i32 1, !dbg !4508
  store %struct.hash_entry* %13, %struct.hash_entry** %next13, align 8, !dbg !4508
  %15 = load %struct.hash_table** %table.addr, align 8, !dbg !4509
  %n_entries = getelementptr inbounds %struct.hash_table* %15, i32 0, i32 4, !dbg !4509
  %16 = load i64* %n_entries, align 8, !dbg !4509
  %inc = add i64 %16, 1, !dbg !4509
  store i64 %inc, i64* %n_entries, align 8, !dbg !4509
  %17 = load i8** %entry.addr, align 8, !dbg !4510
  store i8* %17, i8** %retval, !dbg !4510
  br label %return, !dbg !4510

if.end14:                                         ; preds = %if.end3
  %18 = load i8** %entry.addr, align 8, !dbg !4511
  %19 = load %struct.hash_entry** %bucket, align 8, !dbg !4511
  %data15 = getelementptr inbounds %struct.hash_entry* %19, i32 0, i32 0, !dbg !4511
  store i8* %18, i8** %data15, align 8, !dbg !4511
  %20 = load %struct.hash_table** %table.addr, align 8, !dbg !4512
  %n_entries16 = getelementptr inbounds %struct.hash_table* %20, i32 0, i32 4, !dbg !4512
  %21 = load i64* %n_entries16, align 8, !dbg !4512
  %inc17 = add i64 %21, 1, !dbg !4512
  store i64 %inc17, i64* %n_entries16, align 8, !dbg !4512
  %22 = load %struct.hash_table** %table.addr, align 8, !dbg !4513
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %22, i32 0, i32 3, !dbg !4513
  %23 = load i64* %n_buckets_used, align 8, !dbg !4513
  %inc18 = add i64 %23, 1, !dbg !4513
  store i64 %inc18, i64* %n_buckets_used, align 8, !dbg !4513
  %24 = load %struct.hash_table** %table.addr, align 8, !dbg !4514
  %n_buckets_used19 = getelementptr inbounds %struct.hash_table* %24, i32 0, i32 3, !dbg !4514
  %25 = load i64* %n_buckets_used19, align 8, !dbg !4514
  %conv = uitofp i64 %25 to float, !dbg !4514
  %26 = load %struct.hash_table** %table.addr, align 8, !dbg !4514
  %tuning = getelementptr inbounds %struct.hash_table* %26, i32 0, i32 5, !dbg !4514
  %27 = load %struct.hash_tuning** %tuning, align 8, !dbg !4514
  %growth_threshold = getelementptr inbounds %struct.hash_tuning* %27, i32 0, i32 2, !dbg !4514
  %28 = load float* %growth_threshold, align 4, !dbg !4514
  %29 = load %struct.hash_table** %table.addr, align 8, !dbg !4514
  %n_buckets = getelementptr inbounds %struct.hash_table* %29, i32 0, i32 2, !dbg !4514
  %30 = load i64* %n_buckets, align 8, !dbg !4514
  %conv20 = uitofp i64 %30 to float, !dbg !4514
  %mul = fmul float %28, %conv20, !dbg !4514
  %cmp21 = fcmp ogt float %conv, %mul, !dbg !4514
  br i1 %cmp21, label %if.then23, label %if.end57, !dbg !4514

if.then23:                                        ; preds = %if.end14
  %31 = load %struct.hash_table** %table.addr, align 8, !dbg !4516
  %call24 = call zeroext i1 @check_tuning(%struct.hash_table* %31), !dbg !4516
  %32 = load %struct.hash_table** %table.addr, align 8, !dbg !4518
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table* %32, i32 0, i32 3, !dbg !4518
  %33 = load i64* %n_buckets_used25, align 8, !dbg !4518
  %conv26 = uitofp i64 %33 to float, !dbg !4518
  %34 = load %struct.hash_table** %table.addr, align 8, !dbg !4518
  %tuning27 = getelementptr inbounds %struct.hash_table* %34, i32 0, i32 5, !dbg !4518
  %35 = load %struct.hash_tuning** %tuning27, align 8, !dbg !4518
  %growth_threshold28 = getelementptr inbounds %struct.hash_tuning* %35, i32 0, i32 2, !dbg !4518
  %36 = load float* %growth_threshold28, align 4, !dbg !4518
  %37 = load %struct.hash_table** %table.addr, align 8, !dbg !4518
  %n_buckets29 = getelementptr inbounds %struct.hash_table* %37, i32 0, i32 2, !dbg !4518
  %38 = load i64* %n_buckets29, align 8, !dbg !4518
  %conv30 = uitofp i64 %38 to float, !dbg !4518
  %mul31 = fmul float %36, %conv30, !dbg !4518
  %cmp32 = fcmp ogt float %conv26, %mul31, !dbg !4518
  br i1 %cmp32, label %if.then34, label %if.end57, !dbg !4518

if.then34:                                        ; preds = %if.then23
  %39 = load %struct.hash_table** %table.addr, align 8, !dbg !4520
  %tuning36 = getelementptr inbounds %struct.hash_table* %39, i32 0, i32 5, !dbg !4520
  %40 = load %struct.hash_tuning** %tuning36, align 8, !dbg !4520
  store %struct.hash_tuning* %40, %struct.hash_tuning** %tuning35, align 8, !dbg !4520
  %41 = load %struct.hash_tuning** %tuning35, align 8, !dbg !4522
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning* %41, i32 0, i32 4, !dbg !4522
  %42 = load i8* %is_n_buckets, align 1, !dbg !4522
  %tobool37 = trunc i8 %42 to i1, !dbg !4522
  %43 = load %struct.hash_table** %table.addr, align 8, !dbg !4522
  %n_buckets39 = getelementptr inbounds %struct.hash_table* %43, i32 0, i32 2, !dbg !4522
  %44 = load i64* %n_buckets39, align 8, !dbg !4522
  %conv40 = uitofp i64 %44 to float, !dbg !4522
  %45 = load %struct.hash_tuning** %tuning35, align 8, !dbg !4522
  %growth_factor = getelementptr inbounds %struct.hash_tuning* %45, i32 0, i32 3, !dbg !4522
  %46 = load float* %growth_factor, align 4, !dbg !4522
  %mul41 = fmul float %conv40, %46, !dbg !4522
  br i1 %tobool37, label %cond.end, label %cond.false, !dbg !4522

cond.false:                                       ; preds = %if.then34
  %47 = load %struct.hash_tuning** %tuning35, align 8, !dbg !4522
  %growth_threshold46 = getelementptr inbounds %struct.hash_tuning* %47, i32 0, i32 2, !dbg !4522
  %48 = load float* %growth_threshold46, align 4, !dbg !4522
  %mul47 = fmul float %mul41, %48, !dbg !4522
  br label %cond.end, !dbg !4522

cond.end:                                         ; preds = %if.then34, %cond.false
  %cond = phi float [ %mul47, %cond.false ], [ %mul41, %if.then34 ], !dbg !4522
  store float %cond, float* %candidate, align 4, !dbg !4522
  %49 = load float* %candidate, align 4, !dbg !4523
  %cmp48 = fcmp ole float 0x43F0000000000000, %49, !dbg !4523
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !4523

if.then50:                                        ; preds = %cond.end
  store i8* null, i8** %retval, !dbg !4525
  br label %return, !dbg !4525

if.end51:                                         ; preds = %cond.end
  %50 = load %struct.hash_table** %table.addr, align 8, !dbg !4526
  %51 = load float* %candidate, align 4, !dbg !4526
  %conv52 = fptoui float %51 to i64, !dbg !4526
  %call53 = call zeroext i1 @hash_rehash(%struct.hash_table* %50, i64 %conv52), !dbg !4526
  br i1 %call53, label %if.end57, label %if.then54, !dbg !4526

if.then54:                                        ; preds = %if.end51
  store i8* null, i8** %entry.addr, align 8, !dbg !4528
  br label %if.end57, !dbg !4528

if.end57:                                         ; preds = %if.then23, %if.then54, %if.end51, %if.end14
  %52 = load i8** %entry.addr, align 8, !dbg !4529
  store i8* %52, i8** %retval, !dbg !4529
  br label %return, !dbg !4529

return:                                           ; preds = %if.end57, %if.then50, %if.end10, %if.then9, %if.then2
  %53 = load i8** %retval, !dbg !4530
  ret i8* %53, !dbg !4530
}

; Function Attrs: nounwind uwtable
define i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %tuning21 = alloca %struct.hash_tuning*, align 8
  %candidate = alloca i64, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8* %entry1, i8** %entry.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4531
  %1 = load i8** %entry.addr, align 8, !dbg !4531
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !4531
  store i8* %call, i8** %data, align 8, !dbg !4531
  %2 = load i8** %data, align 8, !dbg !4532
  %tobool = icmp ne i8* %2, null, !dbg !4532
  br i1 %tobool, label %if.end, label %if.then, !dbg !4532

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, !dbg !4534
  br label %return, !dbg !4534

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !4535
  %n_entries = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 4, !dbg !4535
  %4 = load i64* %n_entries, align 8, !dbg !4535
  %dec = add i64 %4, -1, !dbg !4535
  store i64 %dec, i64* %n_entries, align 8, !dbg !4535
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !4536
  %data2 = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !4536
  %6 = load i8** %data2, align 8, !dbg !4536
  %tobool3 = icmp ne i8* %6, null, !dbg !4536
  br i1 %tobool3, label %if.end37, label %if.then4, !dbg !4536

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table** %table.addr, align 8, !dbg !4538
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %7, i32 0, i32 3, !dbg !4538
  %8 = load i64* %n_buckets_used, align 8, !dbg !4538
  %dec5 = add i64 %8, -1, !dbg !4538
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !4538
  %9 = load %struct.hash_table** %table.addr, align 8, !dbg !4540
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table* %9, i32 0, i32 3, !dbg !4540
  %10 = load i64* %n_buckets_used6, align 8, !dbg !4540
  %conv = uitofp i64 %10 to float, !dbg !4540
  %11 = load %struct.hash_table** %table.addr, align 8, !dbg !4540
  %tuning = getelementptr inbounds %struct.hash_table* %11, i32 0, i32 5, !dbg !4540
  %12 = load %struct.hash_tuning** %tuning, align 8, !dbg !4540
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning* %12, i32 0, i32 0, !dbg !4540
  %13 = load float* %shrink_threshold, align 4, !dbg !4540
  %14 = load %struct.hash_table** %table.addr, align 8, !dbg !4540
  %n_buckets = getelementptr inbounds %struct.hash_table* %14, i32 0, i32 2, !dbg !4540
  %15 = load i64* %n_buckets, align 8, !dbg !4540
  %conv7 = uitofp i64 %15 to float, !dbg !4540
  %mul = fmul float %13, %conv7, !dbg !4540
  %cmp = fcmp olt float %conv, %mul, !dbg !4540
  br i1 %cmp, label %if.then9, label %if.end37, !dbg !4540

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table** %table.addr, align 8, !dbg !4542
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !4542
  %17 = load %struct.hash_table** %table.addr, align 8, !dbg !4544
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table* %17, i32 0, i32 3, !dbg !4544
  %18 = load i64* %n_buckets_used11, align 8, !dbg !4544
  %conv12 = uitofp i64 %18 to float, !dbg !4544
  %19 = load %struct.hash_table** %table.addr, align 8, !dbg !4544
  %tuning13 = getelementptr inbounds %struct.hash_table* %19, i32 0, i32 5, !dbg !4544
  %20 = load %struct.hash_tuning** %tuning13, align 8, !dbg !4544
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning* %20, i32 0, i32 0, !dbg !4544
  %21 = load float* %shrink_threshold14, align 4, !dbg !4544
  %22 = load %struct.hash_table** %table.addr, align 8, !dbg !4544
  %n_buckets15 = getelementptr inbounds %struct.hash_table* %22, i32 0, i32 2, !dbg !4544
  %23 = load i64* %n_buckets15, align 8, !dbg !4544
  %conv16 = uitofp i64 %23 to float, !dbg !4544
  %mul17 = fmul float %21, %conv16, !dbg !4544
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !4544
  br i1 %cmp18, label %if.then20, label %if.end37, !dbg !4544

if.then20:                                        ; preds = %if.then9
  %24 = load %struct.hash_table** %table.addr, align 8, !dbg !4546
  %tuning22 = getelementptr inbounds %struct.hash_table* %24, i32 0, i32 5, !dbg !4546
  %25 = load %struct.hash_tuning** %tuning22, align 8, !dbg !4546
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !4546
  %26 = load %struct.hash_tuning** %tuning21, align 8, !dbg !4548
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning* %26, i32 0, i32 4, !dbg !4548
  %27 = load i8* %is_n_buckets, align 1, !dbg !4548
  %tobool23 = trunc i8 %27 to i1, !dbg !4548
  %28 = load %struct.hash_table** %table.addr, align 8, !dbg !4548
  %n_buckets25 = getelementptr inbounds %struct.hash_table* %28, i32 0, i32 2, !dbg !4548
  %29 = load i64* %n_buckets25, align 8, !dbg !4548
  %conv26 = uitofp i64 %29 to float, !dbg !4548
  %30 = load %struct.hash_tuning** %tuning21, align 8, !dbg !4548
  %shrink_factor = getelementptr inbounds %struct.hash_tuning* %30, i32 0, i32 1, !dbg !4548
  %31 = load float* %shrink_factor, align 4, !dbg !4548
  %mul27 = fmul float %conv26, %31, !dbg !4548
  br i1 %tobool23, label %cond.end, label %cond.false, !dbg !4548

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_tuning** %tuning21, align 8, !dbg !4548
  %growth_threshold = getelementptr inbounds %struct.hash_tuning* %32, i32 0, i32 2, !dbg !4548
  %33 = load float* %growth_threshold, align 4, !dbg !4548
  %mul32 = fmul float %mul27, %33, !dbg !4548
  br label %cond.end, !dbg !4548

cond.end:                                         ; preds = %if.then20, %cond.false
  %cond = phi float [ %mul32, %cond.false ], [ %mul27, %if.then20 ], !dbg !4548
  %conv33 = fptoui float %cond to i64, !dbg !4548
  store i64 %conv33, i64* %candidate, align 8, !dbg !4548
  %34 = load %struct.hash_table** %table.addr, align 8, !dbg !4549
  %35 = load i64* %candidate, align 8, !dbg !4549
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %34, i64 %35), !dbg !4549
  br label %if.end37, !dbg !4550

if.end37:                                         ; preds = %if.then4, %cond.end, %if.then9, %if.end
  %36 = load i8** %data, align 8, !dbg !4551
  store i8* %36, i8** %retval, !dbg !4551
  br label %return, !dbg !4551

return:                                           ; preds = %if.end37, %if.then
  %37 = load i8** %retval, !dbg !4552
  ret i8* %37, !dbg !4552
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #0 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8
  %epsilon = alloca float, align 4
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4553
  %tuning1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 5, !dbg !4553
  %1 = load %struct.hash_tuning** %tuning1, align 8, !dbg !4553
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !4553
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !4554
  %2 = load float* %epsilon, align 4, !dbg !4555
  %3 = load %struct.hash_tuning** %tuning, align 8, !dbg !4555
  %growth_threshold = getelementptr inbounds %struct.hash_tuning* %3, i32 0, i32 2, !dbg !4555
  %4 = load float* %growth_threshold, align 4, !dbg !4555
  %cmp = fcmp olt float %2, %4, !dbg !4555
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4555

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.hash_tuning** %tuning, align 8, !dbg !4555
  %growth_threshold2 = getelementptr inbounds %struct.hash_tuning* %5, i32 0, i32 2, !dbg !4555
  %6 = load float* %growth_threshold2, align 4, !dbg !4555
  %7 = load float* %epsilon, align 4, !dbg !4555
  %sub = fsub float 1.000000e+00, %7, !dbg !4555
  %cmp3 = fcmp olt float %6, %sub, !dbg !4555
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !4555

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load float* %epsilon, align 4, !dbg !4555
  %add = fadd float 1.000000e+00, %8, !dbg !4555
  %9 = load %struct.hash_tuning** %tuning, align 8, !dbg !4555
  %growth_factor = getelementptr inbounds %struct.hash_tuning* %9, i32 0, i32 3, !dbg !4555
  %10 = load float* %growth_factor, align 4, !dbg !4555
  %cmp5 = fcmp olt float %add, %10, !dbg !4555
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !4555

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %11 = load %struct.hash_tuning** %tuning, align 8, !dbg !4555
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning* %11, i32 0, i32 0, !dbg !4555
  %12 = load float* %shrink_threshold, align 4, !dbg !4555
  %cmp7 = fcmp ole float 0.000000e+00, %12, !dbg !4555
  br i1 %cmp7, label %land.lhs.true8, label %if.end, !dbg !4555

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %13 = load %struct.hash_tuning** %tuning, align 8, !dbg !4555
  %shrink_threshold9 = getelementptr inbounds %struct.hash_tuning* %13, i32 0, i32 0, !dbg !4555
  %14 = load float* %shrink_threshold9, align 4, !dbg !4555
  %15 = load float* %epsilon, align 4, !dbg !4555
  %add10 = fadd float %14, %15, !dbg !4555
  %16 = load %struct.hash_tuning** %tuning, align 8, !dbg !4555
  %shrink_factor = getelementptr inbounds %struct.hash_tuning* %16, i32 0, i32 1, !dbg !4555
  %17 = load float* %shrink_factor, align 4, !dbg !4555
  %cmp11 = fcmp olt float %add10, %17, !dbg !4555
  br i1 %cmp11, label %land.lhs.true12, label %if.end, !dbg !4555

land.lhs.true12:                                  ; preds = %land.lhs.true8
  %18 = load %struct.hash_tuning** %tuning, align 8, !dbg !4555
  %shrink_factor13 = getelementptr inbounds %struct.hash_tuning* %18, i32 0, i32 1, !dbg !4555
  %19 = load float* %shrink_factor13, align 4, !dbg !4555
  %cmp14 = fcmp ole float %19, 1.000000e+00, !dbg !4555
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !4555

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %20 = load %struct.hash_tuning** %tuning, align 8, !dbg !4555
  %shrink_threshold16 = getelementptr inbounds %struct.hash_tuning* %20, i32 0, i32 0, !dbg !4555
  %21 = load float* %shrink_threshold16, align 4, !dbg !4555
  %22 = load float* %epsilon, align 4, !dbg !4555
  %add17 = fadd float %21, %22, !dbg !4555
  %23 = load %struct.hash_tuning** %tuning, align 8, !dbg !4555
  %growth_threshold18 = getelementptr inbounds %struct.hash_tuning* %23, i32 0, i32 2, !dbg !4555
  %24 = load float* %growth_threshold18, align 4, !dbg !4555
  %cmp19 = fcmp olt float %add17, %24, !dbg !4555
  br i1 %cmp19, label %if.then, label %if.end, !dbg !4555

if.then:                                          ; preds = %land.lhs.true15
  store i1 true, i1* %retval, !dbg !4557
  br label %return, !dbg !4557

if.end:                                           ; preds = %land.lhs.true15, %land.lhs.true12, %land.lhs.true8, %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %entry
  %25 = load %struct.hash_table** %table.addr, align 8, !dbg !4558
  %tuning20 = getelementptr inbounds %struct.hash_table* %25, i32 0, i32 5, !dbg !4558
  store %struct.hash_tuning* bitcast ({ float, float, float, float, i8, [3 x i8] }* @default_tuning to %struct.hash_tuning*), %struct.hash_tuning** %tuning20, align 8, !dbg !4558
  store i1 false, i1* %retval, !dbg !4559
  br label %return, !dbg !4559

return:                                           ; preds = %if.end, %if.then
  %26 = load i1* %retval, !dbg !4560
  ret i1 %26, !dbg !4560
}

; Function Attrs: nounwind uwtable
define internal i64 @next_prime(i64 %candidate) #0 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8
  %0 = load i64* %candidate.addr, align 8, !dbg !4561
  %cmp = icmp ult i64 %0, 10, !dbg !4561
  %.candidate = select i1 %cmp, i64 10, i64 %candidate, !dbg !4561
  store i64 %.candidate, i64* %candidate.addr, align 8, !dbg !4563
  %1 = load i64* %candidate.addr, align 8, !dbg !4564
  %or = or i64 %1, 1, !dbg !4564
  store i64 %or, i64* %candidate.addr, align 8, !dbg !4564
  br label %while.cond, !dbg !4565

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64* %candidate.addr, align 8, !dbg !4565
  %call = call zeroext i1 @is_prime(i64 %2), !dbg !4565
  %lnot = xor i1 %call, true, !dbg !4565
  %3 = load i64* %candidate.addr, align 8, !dbg !4566
  br i1 %lnot, label %while.body, label %while.end, !dbg !4565

while.body:                                       ; preds = %while.cond
  %add = add i64 %3, 2, !dbg !4566
  store i64 %add, i64* %candidate.addr, align 8, !dbg !4566
  br label %while.cond, !dbg !4566

while.end:                                        ; preds = %while.cond
  ret i64 %3, !dbg !4567
}

; Function Attrs: nounwind uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4568
  %free_entry_list = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 9, !dbg !4568
  %1 = load %struct.hash_entry** %free_entry_list, align 8, !dbg !4568
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !4568
  br i1 %tobool, label %if.then, label %if.else, !dbg !4568

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !4570
  %free_entry_list1 = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 9, !dbg !4570
  %3 = load %struct.hash_entry** %free_entry_list1, align 8, !dbg !4570
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !4570
  %4 = load %struct.hash_entry** %new, align 8, !dbg !4572
  %next = getelementptr inbounds %struct.hash_entry* %4, i32 0, i32 1, !dbg !4572
  %5 = load %struct.hash_entry** %next, align 8, !dbg !4572
  %6 = load %struct.hash_table** %table.addr, align 8, !dbg !4572
  %free_entry_list2 = getelementptr inbounds %struct.hash_table* %6, i32 0, i32 9, !dbg !4572
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !4572
  br label %if.end, !dbg !4573

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #6, !dbg !4574
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !4574
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !4574
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry** %new, align 8, !dbg !4576
  ret %struct.hash_entry* %8, !dbg !4576
}

; Function Attrs: nounwind uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8
  %0 = load %struct.hash_entry** %entry.addr, align 8, !dbg !4577
  %data = getelementptr inbounds %struct.hash_entry* %0, i32 0, i32 0, !dbg !4577
  store i8* null, i8** %data, align 8, !dbg !4577
  %1 = load %struct.hash_table** %table.addr, align 8, !dbg !4578
  %free_entry_list = getelementptr inbounds %struct.hash_table* %1, i32 0, i32 9, !dbg !4578
  %2 = load %struct.hash_entry** %free_entry_list, align 8, !dbg !4578
  %3 = load %struct.hash_entry** %entry.addr, align 8, !dbg !4578
  %next = getelementptr inbounds %struct.hash_entry* %3, i32 0, i32 1, !dbg !4578
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !4578
  %4 = load %struct.hash_entry** %entry.addr, align 8, !dbg !4579
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !4579
  %free_entry_list2 = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 9, !dbg !4579
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !4579
  ret void, !dbg !4580
}

; Function Attrs: nounwind uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  %data9 = alloca i8*, align 8
  %next14 = alloca %struct.hash_entry*, align 8
  %data27 = alloca i8*, align 8
  %next32 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8* %entry1, i8** %entry.addr, align 8
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !4581
  %bucket2 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !4581
  %1 = load %struct.hash_entry** %bucket2, align 8, !dbg !4581
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !4582
  %hasher = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 6, !dbg !4582
  %3 = load i64 (i8*, i64)** %hasher, align 8, !dbg !4582
  %4 = load i8** %entry.addr, align 8, !dbg !4582
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !4582
  %n_buckets = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 2, !dbg !4582
  %6 = load i64* %n_buckets, align 8, !dbg !4582
  %call = call i64 %3(i8* %4, i64 %6), !dbg !4582
  %add.ptr = getelementptr inbounds %struct.hash_entry* %1, i64 %call, !dbg !4582
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket, align 8, !dbg !4582
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !4583
  %8 = load %struct.hash_table** %table.addr, align 8, !dbg !4583
  %bucket_limit = getelementptr inbounds %struct.hash_table* %8, i32 0, i32 1, !dbg !4583
  %9 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !4583
  %cmp = icmp ult %struct.hash_entry* %7, %9, !dbg !4583
  br i1 %cmp, label %if.end, label %if.then, !dbg !4583

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !4585
  unreachable, !dbg !4585

if.end:                                           ; preds = %entry
  %10 = load %struct.hash_entry** %bucket, align 8, !dbg !4586
  %11 = load %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !4586
  store %struct.hash_entry* %10, %struct.hash_entry** %11, align 8, !dbg !4586
  %12 = load %struct.hash_entry** %bucket, align 8, !dbg !4587
  %data = getelementptr inbounds %struct.hash_entry* %12, i32 0, i32 0, !dbg !4587
  %13 = load i8** %data, align 8, !dbg !4587
  %cmp3 = icmp eq i8* %13, null, !dbg !4587
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !4587

if.then4:                                         ; preds = %if.end
  store i8* null, i8** %retval, !dbg !4589
  br label %return, !dbg !4589

if.end5:                                          ; preds = %if.end
  %14 = load %struct.hash_table** %table.addr, align 8, !dbg !4590
  %comparator = getelementptr inbounds %struct.hash_table* %14, i32 0, i32 7, !dbg !4590
  %15 = load i1 (i8*, i8*)** %comparator, align 8, !dbg !4590
  %16 = load i8** %entry.addr, align 8, !dbg !4590
  %17 = load %struct.hash_entry** %bucket, align 8, !dbg !4590
  %data6 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 0, !dbg !4590
  %18 = load i8** %data6, align 8, !dbg !4590
  %call7 = call zeroext i1 %15(i8* %16, i8* %18), !dbg !4590
  %19 = load %struct.hash_entry** %bucket, align 8, !dbg !4592
  br i1 %call7, label %if.then8, label %if.end19, !dbg !4590

if.then8:                                         ; preds = %if.end5
  %data10 = getelementptr inbounds %struct.hash_entry* %19, i32 0, i32 0, !dbg !4592
  %20 = load i8** %data10, align 8, !dbg !4592
  store i8* %20, i8** %data9, align 8, !dbg !4592
  %21 = load i8* %delete.addr, align 1, !dbg !4594
  %tobool = trunc i8 %21 to i1, !dbg !4594
  br i1 %tobool, label %if.then11, label %if.end18, !dbg !4594

if.then11:                                        ; preds = %if.then8
  %22 = load %struct.hash_entry** %bucket, align 8, !dbg !4596
  %next = getelementptr inbounds %struct.hash_entry* %22, i32 0, i32 1, !dbg !4596
  %23 = load %struct.hash_entry** %next, align 8, !dbg !4596
  %tobool12 = icmp ne %struct.hash_entry* %23, null, !dbg !4596
  %24 = load %struct.hash_entry** %bucket, align 8, !dbg !4599
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !4596

if.then13:                                        ; preds = %if.then11
  %next15 = getelementptr inbounds %struct.hash_entry* %24, i32 0, i32 1, !dbg !4599
  %25 = load %struct.hash_entry** %next15, align 8, !dbg !4599
  store %struct.hash_entry* %25, %struct.hash_entry** %next14, align 8, !dbg !4599
  %26 = load %struct.hash_entry** %bucket, align 8, !dbg !4601
  %27 = load %struct.hash_entry** %next14, align 8, !dbg !4601
  %28 = bitcast %struct.hash_entry* %26 to i8*, !dbg !4601
  %29 = bitcast %struct.hash_entry* %27 to i8*, !dbg !4601
  %30 = call i8* @memcpy(i8* %28, i8* %29, i64 16)
  %31 = load %struct.hash_table** %table.addr, align 8, !dbg !4602
  %32 = load %struct.hash_entry** %next14, align 8, !dbg !4602
  call void @free_entry(%struct.hash_table* %31, %struct.hash_entry* %32), !dbg !4602
  br label %if.end18, !dbg !4603

if.else:                                          ; preds = %if.then11
  %data16 = getelementptr inbounds %struct.hash_entry* %24, i32 0, i32 0, !dbg !4604
  store i8* null, i8** %data16, align 8, !dbg !4604
  br label %if.end18

if.end18:                                         ; preds = %if.then13, %if.else, %if.then8
  %33 = load i8** %data9, align 8, !dbg !4606
  store i8* %33, i8** %retval, !dbg !4606
  br label %return, !dbg !4606

if.end19:                                         ; preds = %if.end5
  store %struct.hash_entry* %19, %struct.hash_entry** %cursor, align 8, !dbg !4607
  br label %for.cond, !dbg !4607

for.cond:                                         ; preds = %for.inc, %if.end19
  %34 = load %struct.hash_entry** %cursor, align 8, !dbg !4607
  %next20 = getelementptr inbounds %struct.hash_entry* %34, i32 0, i32 1, !dbg !4607
  %35 = load %struct.hash_entry** %next20, align 8, !dbg !4607
  %tobool21 = icmp ne %struct.hash_entry* %35, null, !dbg !4607
  br i1 %tobool21, label %for.body, label %for.end, !dbg !4607

for.body:                                         ; preds = %for.cond
  %36 = load %struct.hash_table** %table.addr, align 8, !dbg !4609
  %comparator22 = getelementptr inbounds %struct.hash_table* %36, i32 0, i32 7, !dbg !4609
  %37 = load i1 (i8*, i8*)** %comparator22, align 8, !dbg !4609
  %38 = load i8** %entry.addr, align 8, !dbg !4609
  %39 = load %struct.hash_entry** %cursor, align 8, !dbg !4609
  %next23 = getelementptr inbounds %struct.hash_entry* %39, i32 0, i32 1, !dbg !4609
  %40 = load %struct.hash_entry** %next23, align 8, !dbg !4609
  %data24 = getelementptr inbounds %struct.hash_entry* %40, i32 0, i32 0, !dbg !4609
  %41 = load i8** %data24, align 8, !dbg !4609
  %call25 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !4609
  %42 = load %struct.hash_entry** %cursor, align 8, !dbg !4612
  %next28 = getelementptr inbounds %struct.hash_entry* %42, i32 0, i32 1, !dbg !4612
  %43 = load %struct.hash_entry** %next28, align 8, !dbg !4612
  br i1 %call25, label %if.then26, label %for.inc, !dbg !4609

if.then26:                                        ; preds = %for.body
  %data29 = getelementptr inbounds %struct.hash_entry* %43, i32 0, i32 0, !dbg !4612
  %44 = load i8** %data29, align 8, !dbg !4612
  store i8* %44, i8** %data27, align 8, !dbg !4612
  %45 = load i8* %delete.addr, align 1, !dbg !4614
  %tobool30 = trunc i8 %45 to i1, !dbg !4614
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !4614

if.then31:                                        ; preds = %if.then26
  %46 = load %struct.hash_entry** %cursor, align 8, !dbg !4616
  %next33 = getelementptr inbounds %struct.hash_entry* %46, i32 0, i32 1, !dbg !4616
  %47 = load %struct.hash_entry** %next33, align 8, !dbg !4616
  store %struct.hash_entry* %47, %struct.hash_entry** %next32, align 8, !dbg !4616
  %48 = load %struct.hash_entry** %next32, align 8, !dbg !4618
  %next34 = getelementptr inbounds %struct.hash_entry* %48, i32 0, i32 1, !dbg !4618
  %49 = load %struct.hash_entry** %next34, align 8, !dbg !4618
  %50 = load %struct.hash_entry** %cursor, align 8, !dbg !4618
  %next35 = getelementptr inbounds %struct.hash_entry* %50, i32 0, i32 1, !dbg !4618
  store %struct.hash_entry* %49, %struct.hash_entry** %next35, align 8, !dbg !4618
  %51 = load %struct.hash_table** %table.addr, align 8, !dbg !4619
  %52 = load %struct.hash_entry** %next32, align 8, !dbg !4619
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !4619
  br label %if.end36, !dbg !4620

if.end36:                                         ; preds = %if.then31, %if.then26
  %53 = load i8** %data27, align 8, !dbg !4621
  store i8* %53, i8** %retval, !dbg !4621
  br label %return, !dbg !4621

for.inc:                                          ; preds = %for.body
  store %struct.hash_entry* %43, %struct.hash_entry** %cursor, align 8, !dbg !4607
  br label %for.cond, !dbg !4607

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, !dbg !4622
  br label %return, !dbg !4622

return:                                           ; preds = %for.end, %if.end36, %if.end18, %if.then4
  %54 = load i8** %retval, !dbg !4623
  ret i8* %54, !dbg !4623
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #0 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8
  %square = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8
  store i64 3, i64* %divisor, align 8, !dbg !4624
  %0 = load i64* %divisor, align 8, !dbg !4625
  %1 = load i64* %divisor, align 8, !dbg !4625
  %mul = mul i64 %0, %1, !dbg !4625
  store i64 %mul, i64* %square, align 8, !dbg !4625
  br label %while.cond, !dbg !4626

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64* %square, align 8, !dbg !4626
  %3 = load i64* %candidate.addr, align 8, !dbg !4626
  %cmp = icmp ult i64 %2, %3, !dbg !4626
  br i1 %cmp, label %land.rhs, label %while.end, !dbg !4626

land.rhs:                                         ; preds = %while.cond
  %4 = load i64* %candidate.addr, align 8, !dbg !4626
  %5 = load i64* %divisor, align 8, !dbg !4626
  %int_cast_to_i64 = bitcast i64 %5 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !4626
  %rem = urem i64 %4, %5, !dbg !4626
  %tobool = icmp ne i64 %rem, 0, !dbg !4626
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %6 = load i64* %divisor, align 8, !dbg !4627
  %inc = add i64 %6, 1, !dbg !4627
  store i64 %inc, i64* %divisor, align 8, !dbg !4627
  %7 = load i64* %divisor, align 8, !dbg !4629
  %mul1 = mul i64 4, %7, !dbg !4629
  %8 = load i64* %square, align 8, !dbg !4629
  %add = add i64 %8, %mul1, !dbg !4629
  store i64 %add, i64* %square, align 8, !dbg !4629
  %9 = load i64* %divisor, align 8, !dbg !4630
  %inc2 = add i64 %9, 1, !dbg !4630
  store i64 %inc2, i64* %divisor, align 8, !dbg !4630
  br label %while.cond, !dbg !4631

while.end:                                        ; preds = %while.cond, %land.rhs
  %10 = load i64* %candidate.addr, align 8, !dbg !4632
  %11 = load i64* %divisor, align 8, !dbg !4632
  %int_cast_to_i641 = bitcast i64 %11 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !4632
  %rem3 = urem i64 %10, %11, !dbg !4632
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !4632
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !4632
  %tobool5 = icmp ne i32 %cond, 0, !dbg !4632
  ret i1 %tobool5, !dbg !4632
}

; Function Attrs: nounwind uwtable
define i32 @open_safer(i8* %file, i32 %flags, ...) #0 {
entry:
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %file, i8** %file.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store i32 0, i32* %mode, align 4, !dbg !4633
  %0 = load i32* %flags.addr, align 4, !dbg !4634
  %and = and i32 %0, 64, !dbg !4634
  %tobool = icmp ne i32 %and, 0, !dbg !4634
  br i1 %tobool, label %if.then, label %if.end, !dbg !4634

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !4636
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !4636
  call void @llvm.va_start(i8* %arraydecay1), !dbg !4636
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !4638
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !4638
  %gp_offset = load i32* %gp_offset_p, !dbg !4638
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !4638
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !4638

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !4638
  %reg_save_area = load i8** %1, !dbg !4638
  %2 = getelementptr i8* %reg_save_area, i32 %gp_offset, !dbg !4638
  %3 = bitcast i8* %2 to i32*, !dbg !4638
  %4 = add i32 %gp_offset, 8, !dbg !4638
  store i32 %4, i32* %gp_offset_p, !dbg !4638
  br label %vaarg.end, !dbg !4638

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !4638
  %overflow_arg_area = load i8** %overflow_arg_area_p, !dbg !4638
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !4638
  %overflow_arg_area.next = getelementptr i8* %overflow_arg_area, i32 8, !dbg !4638
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, !dbg !4638
  br label %vaarg.end, !dbg !4638

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !4638
  %6 = load i32* %vaarg.addr, !dbg !4638
  store i32 %6, i32* %mode, align 4, !dbg !4638
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !4639
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !4639
  call void @llvm.va_end(i8* %arraydecay34), !dbg !4639
  br label %if.end, !dbg !4640

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8** %file.addr, align 8, !dbg !4641
  %8 = load i32* %flags.addr, align 4, !dbg !4641
  %9 = load i32* %mode, align 4, !dbg !4641
  %call = call i32 (i8*, i32, ...)* @open(i8* %7, i32 %8, i32 %9), !dbg !4641
  %call5 = call i32 @fd_safer(i32 %call), !dbg !4641
  ret i32 %call5, !dbg !4641
}

declare i32 @open(i8*, i32, ...) #2

; Function Attrs: nounwind uwtable
define i8* @quote_n(i32 %n, i8* %name) #0 {
entry:
  %n.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  store i8* %name, i8** %name.addr, align 8
  %0 = load i32* %n.addr, align 4, !dbg !4642
  %1 = load i8** %name.addr, align 8, !dbg !4642
  %call = call i8* @quotearg_n_style(i32 %0, i32 5, i8* %1), !dbg !4642
  ret i8* %call, !dbg !4642
}

; Function Attrs: nounwind uwtable
define i8* @quote(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8** %name.addr, align 8, !dbg !4643
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !4643
  ret i8* %call, !dbg !4643
}

; Function Attrs: nounwind uwtable
define %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #0 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %p = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  %call = call i32* @__errno_location() #1, !dbg !4644
  %0 = load i32* %call, align 4, !dbg !4644
  store i32 %0, i32* %e, align 4, !dbg !4644
  %1 = load %struct.quoting_options** %o.addr, align 8, !dbg !4645
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !4645
  %2 = load %struct.quoting_options** %o.addr, align 8, !dbg !4645
  %cond = select i1 %tobool, %struct.quoting_options* %2, %struct.quoting_options* @default_quoting_options, !dbg !4645
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !4645
  %call1 = call i8* @xmemdup(i8* %3, i64 36), !dbg !4645
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !4645
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !4645
  %5 = load i32* %e, align 4, !dbg !4646
  %call2 = call i32* @__errno_location() #1, !dbg !4646
  store i32 %5, i32* %call2, align 4, !dbg !4646
  %6 = load %struct.quoting_options** %p, align 8, !dbg !4647
  ret %struct.quoting_options* %6, !dbg !4647
}

; Function Attrs: nounwind uwtable
define i32 @get_quoting_style(%struct.quoting_options* %o) #0 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  %0 = load %struct.quoting_options** %o.addr, align 8, !dbg !4648
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !4648
  %1 = load %struct.quoting_options** %o.addr, align 8, !dbg !4648
  %cond = select i1 %tobool, %struct.quoting_options* %1, %struct.quoting_options* @default_quoting_options, !dbg !4648
  %style = getelementptr inbounds %struct.quoting_options* %cond, i32 0, i32 0, !dbg !4648
  %2 = load i32* %style, align 4, !dbg !4648
  ret i32 %2, !dbg !4648
}

; Function Attrs: nounwind uwtable
define void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #0 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  store i32 %s, i32* %s.addr, align 4
  %0 = load i32* %s.addr, align 4, !dbg !4649
  %1 = load %struct.quoting_options** %o.addr, align 8, !dbg !4649
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !4649
  %2 = load %struct.quoting_options** %o.addr, align 8, !dbg !4649
  %cond = select i1 %tobool, %struct.quoting_options* %2, %struct.quoting_options* @default_quoting_options, !dbg !4649
  %style = getelementptr inbounds %struct.quoting_options* %cond, i32 0, i32 0, !dbg !4649
  store i32 %0, i32* %style, align 4, !dbg !4649
  ret void, !dbg !4650
}

; Function Attrs: nounwind uwtable
define i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #0 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1
  %p = alloca i32*, align 8
  %shift = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  store i8 %c, i8* %c.addr, align 1
  store i32 %i, i32* %i.addr, align 4
  %0 = load i8* %c.addr, align 1, !dbg !4651
  store i8 %0, i8* %uc, align 1, !dbg !4651
  %1 = load %struct.quoting_options** %o.addr, align 8, !dbg !4652
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !4652
  %2 = load %struct.quoting_options** %o.addr, align 8, !dbg !4652
  %cond = select i1 %tobool, %struct.quoting_options* %2, %struct.quoting_options* @default_quoting_options, !dbg !4652
  %quote_these_too = getelementptr inbounds %struct.quoting_options* %cond, i32 0, i32 1, !dbg !4652
  %arraydecay = getelementptr inbounds [8 x i32]* %quote_these_too, i32 0, i32 0, !dbg !4652
  %3 = load i8* %uc, align 1, !dbg !4652
  %conv = zext i8 %3 to i64, !dbg !4652
  %int_cast_to_i64 = bitcast i64 32 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !4652
  %div = udiv i64 %conv, 32, !dbg !4652
  %add.ptr = getelementptr inbounds i32* %arraydecay, i64 %div, !dbg !4652
  store i32* %add.ptr, i32** %p, align 8, !dbg !4652
  %4 = load i8* %uc, align 1, !dbg !4653
  %conv1 = zext i8 %4 to i64, !dbg !4653
  %int_cast_to_i641 = bitcast i64 32 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !4653
  %rem = urem i64 %conv1, 32, !dbg !4653
  %conv2 = trunc i64 %rem to i32, !dbg !4653
  store i32 %conv2, i32* %shift, align 4, !dbg !4653
  %5 = load i32** %p, align 8, !dbg !4654
  %6 = load i32* %5, align 4, !dbg !4654
  %7 = load i32* %shift, align 4, !dbg !4654
  %int_cast_to_i642 = zext i32 %7 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i642), !dbg !4654
  %shr = lshr i32 %6, %7, !dbg !4654
  %and = and i32 %shr, 1, !dbg !4654
  store i32 %and, i32* %r, align 4, !dbg !4654
  %8 = load i32* %i.addr, align 4, !dbg !4655
  %and3 = and i32 %8, 1, !dbg !4655
  %9 = load i32* %r, align 4, !dbg !4655
  %xor = xor i32 %and3, %9, !dbg !4655
  %10 = load i32* %shift, align 4, !dbg !4655
  %int_cast_to_i643 = zext i32 %10 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i643), !dbg !4655
  %shl = shl i32 %xor, %10, !dbg !4655
  %11 = load i32** %p, align 8, !dbg !4655
  %12 = load i32* %11, align 4, !dbg !4655
  %xor4 = xor i32 %12, %shl, !dbg !4655
  store i32 %xor4, i32* %11, align 4, !dbg !4655
  %13 = load i32* %r, align 4, !dbg !4656
  ret i32 %13, !dbg !4656
}

; Function Attrs: nounwind uwtable
define i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %r = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  store i64 %buffersize, i64* %buffersize.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  store i64 %argsize, i64* %argsize.addr, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  %0 = load %struct.quoting_options** %o.addr, align 8, !dbg !4657
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !4657
  %1 = load %struct.quoting_options** %o.addr, align 8, !dbg !4657
  %cond = select i1 %tobool, %struct.quoting_options* %1, %struct.quoting_options* @default_quoting_options, !dbg !4657
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !4657
  %call = call i32* @__errno_location() #1, !dbg !4658
  %2 = load i32* %call, align 4, !dbg !4658
  store i32 %2, i32* %e, align 4, !dbg !4658
  %3 = load i8** %buffer.addr, align 8, !dbg !4659
  %4 = load i64* %buffersize.addr, align 8, !dbg !4659
  %5 = load i8** %arg.addr, align 8, !dbg !4659
  %6 = load i64* %argsize.addr, align 8, !dbg !4659
  %7 = load %struct.quoting_options** %p, align 8, !dbg !4659
  %style = getelementptr inbounds %struct.quoting_options* %7, i32 0, i32 0, !dbg !4659
  %8 = load i32* %style, align 4, !dbg !4659
  %9 = load %struct.quoting_options** %p, align 8, !dbg !4659
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, %struct.quoting_options* %9), !dbg !4659
  store i64 %call1, i64* %r, align 8, !dbg !4659
  %10 = load i32* %e, align 4, !dbg !4660
  %call2 = call i32* @__errno_location() #1, !dbg !4660
  store i32 %10, i32* %call2, align 4, !dbg !4660
  %11 = load i64* %r, align 8, !dbg !4661
  ret i64 %11, !dbg !4661
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %bufsize = alloca i64, align 8
  %buf = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  store i64 %argsize, i64* %argsize.addr, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  %call = call i32* @__errno_location() #1, !dbg !4662
  %0 = load i32* %call, align 4, !dbg !4662
  store i32 %0, i32* %e, align 4, !dbg !4662
  %1 = load i8** %arg.addr, align 8, !dbg !4663
  %2 = load i64* %argsize.addr, align 8, !dbg !4663
  %3 = load %struct.quoting_options** %o.addr, align 8, !dbg !4663
  %call1 = call i64 @quotearg_buffer(i8* null, i64 0, i8* %1, i64 %2, %struct.quoting_options* %3), !dbg !4663
  %add = add i64 %call1, 1, !dbg !4663
  store i64 %add, i64* %bufsize, align 8, !dbg !4663
  %4 = load i64* %bufsize, align 8, !dbg !4664
  %call2 = call i8* @xcharalloc(i64 %4), !dbg !4664
  store i8* %call2, i8** %buf, align 8, !dbg !4664
  %5 = load i8** %buf, align 8, !dbg !4665
  %6 = load i64* %bufsize, align 8, !dbg !4665
  %7 = load i8** %arg.addr, align 8, !dbg !4665
  %8 = load i64* %argsize.addr, align 8, !dbg !4665
  %9 = load %struct.quoting_options** %o.addr, align 8, !dbg !4665
  %call3 = call i64 @quotearg_buffer(i8* %5, i64 %6, i8* %7, i64 %8, %struct.quoting_options* %9), !dbg !4665
  %10 = load i32* %e, align 4, !dbg !4666
  %call4 = call i32* @__errno_location() #1, !dbg !4666
  store i32 %10, i32* %call4, align 4, !dbg !4666
  %11 = load i8** %buf, align 8, !dbg !4667
  ret i8* %11, !dbg !4667
}

; Function Attrs: nounwind uwtable
define void @quotearg_free() #0 {
entry:
  %sv = alloca %struct.slotvec*, align 8
  %i = alloca i32, align 4
  %0 = load %struct.slotvec** @slotvec, align 8, !dbg !4668
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !4668
  store i32 1, i32* %i, align 4, !dbg !4669
  br label %for.cond, !dbg !4669

for.cond:                                         ; preds = %for.body, %entry
  %1 = load i32* %i, align 4, !dbg !4669
  %2 = load i32* @nslots, align 4, !dbg !4669
  %cmp = icmp ult i32 %1, %2, !dbg !4669
  br i1 %cmp, label %for.body, label %for.end, !dbg !4669

for.body:                                         ; preds = %for.cond
  %3 = load i32* %i, align 4, !dbg !4671
  %idxprom = zext i32 %3 to i64, !dbg !4671
  %4 = load %struct.slotvec** %sv, align 8, !dbg !4671
  %arrayidx = getelementptr inbounds %struct.slotvec* %4, i64 %idxprom, !dbg !4671
  %val = getelementptr inbounds %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !4671
  %5 = load i8** %val, align 8, !dbg !4671
  call void @free(i8* %5) #6, !dbg !4671
  %6 = load i32* %i, align 4, !dbg !4669
  %inc = add i32 %6, 1, !dbg !4669
  store i32 %inc, i32* %i, align 4, !dbg !4669
  br label %for.cond, !dbg !4669

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec** %sv, align 8, !dbg !4672
  %arrayidx1 = getelementptr inbounds %struct.slotvec* %7, i64 0, !dbg !4672
  %val2 = getelementptr inbounds %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !4672
  %8 = load i8** %val2, align 8, !dbg !4672
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8]* @slot0, i32 0, i32 0), !dbg !4672
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4672

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec** %sv, align 8, !dbg !4674
  %arrayidx4 = getelementptr inbounds %struct.slotvec* %9, i64 0, !dbg !4674
  %val5 = getelementptr inbounds %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !4674
  %10 = load i8** %val5, align 8, !dbg !4674
  call void @free(i8* %10) #6, !dbg !4674
  store i64 256, i64* getelementptr inbounds (%struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !4676
  store i8* getelementptr inbounds ([256 x i8]* @slot0, i32 0, i32 0), i8** getelementptr inbounds (%struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !4677
  br label %if.end, !dbg !4678

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec** %sv, align 8, !dbg !4679
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !4679
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !4679

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec** %sv, align 8, !dbg !4681
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !4681
  call void @free(i8* %13) #6, !dbg !4681
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !4683
  br label %if.end8, !dbg !4684

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !4685
  ret void, !dbg !4686
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_n(i32 %n, i8* %arg) #0 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i32* %n.addr, align 4, !dbg !4687
  %1 = load i8** %arg.addr, align 8, !dbg !4687
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !4687
  ret i8* %call, !dbg !4687
}

; Function Attrs: nounwind uwtable
define i8* @quotearg(i8* %arg) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i8** %arg.addr, align 8, !dbg !4688
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !4688
  ret i8* %call, !dbg !4688
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #0 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 4
  store i32 %n, i32* %n.addr, align 4
  store i32 %s, i32* %s.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i32* %s.addr, align 4, !dbg !4689
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !4689
  %1 = load i32* %n.addr, align 4, !dbg !4690
  %2 = load i8** %arg.addr, align 8, !dbg !4690
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !4690
  ret i8* %call, !dbg !4690
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #0 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 4
  store i32 %n, i32* %n.addr, align 4
  store i32 %s, i32* %s.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  store i64 %argsize, i64* %argsize.addr, align 8
  %0 = load i32* %s.addr, align 4, !dbg !4691
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !4691
  %1 = load i32* %n.addr, align 4, !dbg !4692
  %2 = load i8** %arg.addr, align 8, !dbg !4692
  %3 = load i64* %argsize.addr, align 8, !dbg !4692
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !4692
  ret i8* %call, !dbg !4692
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_style(i32 %s, i8* %arg) #0 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i32* %s.addr, align 4, !dbg !4693
  %1 = load i8** %arg.addr, align 8, !dbg !4693
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !4693
  ret i8* %call, !dbg !4693
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_char(i8* %arg, i8 signext %ch) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 4
  store i8* %arg, i8** %arg.addr, align 8
  store i8 %ch, i8* %ch.addr, align 1
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !4694
  %1 = call i8* @memcpy(i8* %0, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 36)
  %2 = load i8* %ch.addr, align 1, !dbg !4695
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %2, i32 1), !dbg !4695
  %3 = load i8** %arg.addr, align 8, !dbg !4696
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %3, i64 -1, %struct.quoting_options* %options), !dbg !4696
  ret i8* %call1, !dbg !4696
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_colon(i8* %arg) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i8** %arg.addr, align 8, !dbg !4697
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !4697
  ret i8* %call, !dbg !4697
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #6

; Function Attrs: nounwind
declare i64 @__ctype_get_mb_cur_max() #4

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #5

; Function Attrs: nounwind
declare i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4

; Function Attrs: nounwind
declare i32 @iswprint(i32) #4

; Function Attrs: nounwind readonly
declare i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: nounwind uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, %struct.quoting_options* %o) #0 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %o.addr = alloca %struct.quoting_options*, align 8
  %i = alloca i64, align 8
  %len = alloca i64, align 8
  %quote_string = alloca i8*, align 8
  %quote_string_len = alloca i64, align 8
  %backslash_escapes = alloca i8, align 1
  %unibyte_locale = alloca i8, align 1
  %left = alloca i8*, align 8
  %right = alloca i8*, align 8
  %c = alloca i8, align 1
  %esc = alloca i8, align 1
  %m = alloca i64, align 8
  %printable = alloca i8, align 1
  %mbstate = alloca %struct.__mbstate_t, align 4
  %w = alloca i32, align 4
  %bytes = alloca i64, align 8
  %j = alloca i64, align 8
  %ilim = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  store i64 %buffersize, i64* %buffersize.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  store i64 %argsize, i64* %argsize.addr, align 8
  store i32 %quoting_style, i32* %quoting_style.addr, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  store i64 0, i64* %len, align 8, !dbg !4698
  store i8* null, i8** %quote_string, align 8, !dbg !4699
  store i64 0, i64* %quote_string_len, align 8, !dbg !4700
  store i8 0, i8* %backslash_escapes, align 1, !dbg !4701
  %call = call i64 @__ctype_get_mb_cur_max() #6, !dbg !4702
  %cmp = icmp eq i64 %call, 1, !dbg !4702
  %frombool = zext i1 %cmp to i8, !dbg !4702
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !4702
  %0 = load i32* %quoting_style.addr, align 4, !dbg !4703
  switch i32 %0, label %sw.epilog [
    i32 3, label %do.body
    i32 4, label %sw.bb2
    i32 5, label %sw.bb3
    i32 6, label %sw.bb3
    i32 2, label %do.body15
  ], !dbg !4703

do.body:                                          ; preds = %entry
  %1 = load i64* %len, align 8, !dbg !4704
  %2 = load i64* %buffersize.addr, align 8, !dbg !4704
  %cmp1 = icmp ult i64 %1, %2, !dbg !4704
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4704

if.then:                                          ; preds = %do.body
  %3 = load i64* %len, align 8, !dbg !4704
  %4 = load i8** %buffer.addr, align 8, !dbg !4704
  %arrayidx = getelementptr inbounds i8* %4, i64 %3, !dbg !4704
  store i8 34, i8* %arrayidx, align 1, !dbg !4704
  br label %if.end, !dbg !4704

if.end:                                           ; preds = %if.then, %do.body
  %5 = load i64* %len, align 8, !dbg !4708
  %inc = add i64 %5, 1, !dbg !4708
  store i64 %inc, i64* %len, align 8, !dbg !4708
  store i8 1, i8* %backslash_escapes, align 1, !dbg !4709
  store i8* getelementptr inbounds ([2 x i8]* @.str7298, i32 0, i32 0), i8** %quote_string, align 8, !dbg !4710
  store i64 1, i64* %quote_string_len, align 8, !dbg !4711
  br label %sw.epilog, !dbg !4712

sw.bb2:                                           ; preds = %entry
  store i8 1, i8* %backslash_escapes, align 1, !dbg !4713
  br label %sw.epilog, !dbg !4714

sw.bb3:                                           ; preds = %entry, %entry
  %6 = load i32* %quoting_style.addr, align 4, !dbg !4715
  %call4 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8]* @.str8299, i32 0, i32 0), i32 %6), !dbg !4715
  store i8* %call4, i8** %left, align 8, !dbg !4715
  %7 = load i32* %quoting_style.addr, align 4, !dbg !4717
  %call5 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8]* @.str9300, i32 0, i32 0), i32 %7), !dbg !4717
  store i8* %call5, i8** %right, align 8, !dbg !4717
  %8 = load i8** %left, align 8, !dbg !4718
  store i8* %8, i8** %quote_string, align 8, !dbg !4718
  br label %for.cond, !dbg !4718

for.cond:                                         ; preds = %if.end10, %sw.bb3
  %9 = load i8** %quote_string, align 8, !dbg !4718
  %10 = load i8* %9, align 1, !dbg !4718
  %tobool = icmp ne i8 %10, 0, !dbg !4718
  br i1 %tobool, label %do.body6, label %for.end, !dbg !4718

do.body6:                                         ; preds = %for.cond
  %11 = load i64* %len, align 8, !dbg !4720
  %12 = load i64* %buffersize.addr, align 8, !dbg !4720
  %cmp7 = icmp ult i64 %11, %12, !dbg !4720
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !4720

if.then8:                                         ; preds = %do.body6
  %13 = load i8** %quote_string, align 8, !dbg !4720
  %14 = load i8* %13, align 1, !dbg !4720
  %15 = load i64* %len, align 8, !dbg !4720
  %16 = load i8** %buffer.addr, align 8, !dbg !4720
  %arrayidx9 = getelementptr inbounds i8* %16, i64 %15, !dbg !4720
  store i8 %14, i8* %arrayidx9, align 1, !dbg !4720
  br label %if.end10, !dbg !4720

if.end10:                                         ; preds = %if.then8, %do.body6
  %17 = load i64* %len, align 8, !dbg !4723
  %inc11 = add i64 %17, 1, !dbg !4723
  store i64 %inc11, i64* %len, align 8, !dbg !4723
  %18 = load i8** %quote_string, align 8, !dbg !4718
  %incdec.ptr = getelementptr inbounds i8* %18, i32 1, !dbg !4718
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !4718
  br label %for.cond, !dbg !4718

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %backslash_escapes, align 1, !dbg !4724
  %19 = load i8** %right, align 8, !dbg !4725
  store i8* %19, i8** %quote_string, align 8, !dbg !4725
  %20 = load i8** %quote_string, align 8, !dbg !4726
  %call13 = call i64 @strlen(i8* %20) #18, !dbg !4726
  store i64 %call13, i64* %quote_string_len, align 8, !dbg !4726
  br label %sw.epilog, !dbg !4727

do.body15:                                        ; preds = %entry
  %21 = load i64* %len, align 8, !dbg !4728
  %22 = load i64* %buffersize.addr, align 8, !dbg !4728
  %cmp16 = icmp ult i64 %21, %22, !dbg !4728
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !4728

if.then17:                                        ; preds = %do.body15
  %23 = load i64* %len, align 8, !dbg !4728
  %24 = load i8** %buffer.addr, align 8, !dbg !4728
  %arrayidx18 = getelementptr inbounds i8* %24, i64 %23, !dbg !4728
  store i8 39, i8* %arrayidx18, align 1, !dbg !4728
  br label %if.end19, !dbg !4728

if.end19:                                         ; preds = %if.then17, %do.body15
  %25 = load i64* %len, align 8, !dbg !4731
  %inc20 = add i64 %25, 1, !dbg !4731
  store i64 %inc20, i64* %len, align 8, !dbg !4731
  store i8* getelementptr inbounds ([2 x i8]* @.str9300, i32 0, i32 0), i8** %quote_string, align 8, !dbg !4732
  store i64 1, i64* %quote_string_len, align 8, !dbg !4733
  br label %sw.epilog, !dbg !4734

sw.epilog:                                        ; preds = %entry, %if.end19, %for.end, %sw.bb2, %if.end
  store i64 0, i64* %i, align 8, !dbg !4735
  br label %for.cond22, !dbg !4735

for.cond22:                                       ; preds = %if.end364, %sw.epilog
  %26 = load i64* %argsize.addr, align 8, !dbg !4735
  %cmp23 = icmp eq i64 %26, -1, !dbg !4735
  %27 = load i64* %i, align 8, !dbg !4735
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !4735

cond.true:                                        ; preds = %for.cond22
  %28 = load i8** %arg.addr, align 8, !dbg !4735
  %arrayidx24 = getelementptr inbounds i8* %28, i64 %27, !dbg !4735
  %29 = load i8* %arrayidx24, align 1, !dbg !4735
  %conv = sext i8 %29 to i32, !dbg !4735
  %cmp25 = icmp eq i32 %conv, 0, !dbg !4735
  br i1 %cmp25, label %for.end370, label %for.body29, !dbg !4735

cond.false:                                       ; preds = %for.cond22
  %30 = load i64* %argsize.addr, align 8, !dbg !4735
  %cmp27 = icmp eq i64 %27, %30, !dbg !4735
  br i1 %cmp27, label %for.end370, label %for.body29, !dbg !4735

for.body29:                                       ; preds = %cond.false, %cond.true
  %31 = load i8* %backslash_escapes, align 1, !dbg !4737
  %tobool30 = trunc i8 %31 to i1, !dbg !4737
  %32 = load i64* %quote_string_len, align 8, !dbg !4737
  %tobool32 = icmp ne i64 %32, 0, !dbg !4737
  %or.cond = and i1 %tobool30, %tobool32, !dbg !4737
  br i1 %or.cond, label %land.lhs.true33, label %if.end49, !dbg !4737

land.lhs.true33:                                  ; preds = %for.body29
  %33 = load i64* %i, align 8, !dbg !4737
  %34 = load i64* %quote_string_len, align 8, !dbg !4737
  %add = add i64 %33, %34, !dbg !4737
  %35 = load i64* %argsize.addr, align 8, !dbg !4737
  %cmp34 = icmp ule i64 %add, %35, !dbg !4737
  br i1 %cmp34, label %land.lhs.true36, label %if.end49, !dbg !4737

land.lhs.true36:                                  ; preds = %land.lhs.true33
  %36 = load i8** %arg.addr, align 8, !dbg !4740
  %37 = load i64* %i, align 8, !dbg !4740
  %add.ptr = getelementptr inbounds i8* %36, i64 %37, !dbg !4740
  %38 = load i8** %quote_string, align 8, !dbg !4740
  %39 = load i64* %quote_string_len, align 8, !dbg !4740
  %call37 = call i32 @memcmp(i8* %add.ptr, i8* %38, i64 %39) #18, !dbg !4740
  %cmp38 = icmp eq i32 %call37, 0, !dbg !4740
  br i1 %cmp38, label %do.body41, label %if.end49, !dbg !4740

do.body41:                                        ; preds = %land.lhs.true36
  %40 = load i64* %len, align 8, !dbg !4741
  %41 = load i64* %buffersize.addr, align 8, !dbg !4741
  %cmp42 = icmp ult i64 %40, %41, !dbg !4741
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !4741

if.then44:                                        ; preds = %do.body41
  %42 = load i64* %len, align 8, !dbg !4741
  %43 = load i8** %buffer.addr, align 8, !dbg !4741
  %arrayidx45 = getelementptr inbounds i8* %43, i64 %42, !dbg !4741
  store i8 92, i8* %arrayidx45, align 1, !dbg !4741
  br label %if.end46, !dbg !4741

if.end46:                                         ; preds = %if.then44, %do.body41
  %44 = load i64* %len, align 8, !dbg !4744
  %inc47 = add i64 %44, 1, !dbg !4744
  store i64 %inc47, i64* %len, align 8, !dbg !4744
  br label %if.end49, !dbg !4744

if.end49:                                         ; preds = %if.end46, %land.lhs.true36, %land.lhs.true33, %for.body29
  %45 = load i64* %i, align 8, !dbg !4745
  %46 = load i8** %arg.addr, align 8, !dbg !4745
  %arrayidx50 = getelementptr inbounds i8* %46, i64 %45, !dbg !4745
  %47 = load i8* %arrayidx50, align 1, !dbg !4745
  store i8 %47, i8* %c, align 1, !dbg !4745
  %48 = load i8* %c, align 1, !dbg !4746
  %conv51 = zext i8 %48 to i32, !dbg !4746
  switch i32 %conv51, label %sw.default197 [
    i32 0, label %sw.bb52
    i32 63, label %sw.bb80
    i32 7, label %sw.bb129
    i32 8, label %sw.bb130
    i32 12, label %sw.bb131
    i32 10, label %sw.bb132
    i32 13, label %sw.bb133
    i32 9, label %sw.bb134
    i32 11, label %sw.bb135
    i32 92, label %sw.bb136
    i32 123, label %sw.bb144
    i32 125, label %sw.bb144
    i32 35, label %sw.bb157
    i32 126, label %sw.bb157
    i32 32, label %sw.bb162
    i32 33, label %sw.bb162
    i32 34, label %sw.bb162
    i32 36, label %sw.bb162
    i32 38, label %sw.bb162
    i32 40, label %sw.bb162
    i32 41, label %sw.bb162
    i32 42, label %sw.bb162
    i32 59, label %sw.bb162
    i32 60, label %sw.bb162
    i32 61, label %sw.bb162
    i32 62, label %sw.bb162
    i32 91, label %sw.bb162
    i32 94, label %sw.bb162
    i32 96, label %sw.bb162
    i32 124, label %sw.bb162
    i32 39, label %sw.bb167
    i32 37, label %sw.epilog339
    i32 43, label %sw.epilog339
    i32 44, label %sw.epilog339
    i32 45, label %sw.epilog339
    i32 46, label %sw.epilog339
    i32 47, label %sw.epilog339
    i32 48, label %sw.epilog339
    i32 49, label %sw.epilog339
    i32 50, label %sw.epilog339
    i32 51, label %sw.epilog339
    i32 52, label %sw.epilog339
    i32 53, label %sw.epilog339
    i32 54, label %sw.epilog339
    i32 55, label %sw.epilog339
    i32 56, label %sw.epilog339
    i32 57, label %sw.epilog339
    i32 58, label %sw.epilog339
    i32 65, label %sw.epilog339
    i32 66, label %sw.epilog339
    i32 67, label %sw.epilog339
    i32 68, label %sw.epilog339
    i32 69, label %sw.epilog339
    i32 70, label %sw.epilog339
    i32 71, label %sw.epilog339
    i32 72, label %sw.epilog339
    i32 73, label %sw.epilog339
    i32 74, label %sw.epilog339
    i32 75, label %sw.epilog339
    i32 76, label %sw.epilog339
    i32 77, label %sw.epilog339
    i32 78, label %sw.epilog339
    i32 79, label %sw.epilog339
    i32 80, label %sw.epilog339
    i32 81, label %sw.epilog339
    i32 82, label %sw.epilog339
    i32 83, label %sw.epilog339
    i32 84, label %sw.epilog339
    i32 85, label %sw.epilog339
    i32 86, label %sw.epilog339
    i32 87, label %sw.epilog339
    i32 88, label %sw.epilog339
    i32 89, label %sw.epilog339
    i32 90, label %sw.epilog339
    i32 93, label %sw.epilog339
    i32 95, label %sw.epilog339
    i32 97, label %sw.epilog339
    i32 98, label %sw.epilog339
    i32 99, label %sw.epilog339
    i32 100, label %sw.epilog339
    i32 101, label %sw.epilog339
    i32 102, label %sw.epilog339
    i32 103, label %sw.epilog339
    i32 104, label %sw.epilog339
    i32 105, label %sw.epilog339
    i32 106, label %sw.epilog339
    i32 107, label %sw.epilog339
    i32 108, label %sw.epilog339
    i32 109, label %sw.epilog339
    i32 110, label %sw.epilog339
    i32 111, label %sw.epilog339
    i32 112, label %sw.epilog339
    i32 113, label %sw.epilog339
    i32 114, label %sw.epilog339
    i32 115, label %sw.epilog339
    i32 116, label %sw.epilog339
    i32 117, label %sw.epilog339
    i32 118, label %sw.epilog339
    i32 119, label %sw.epilog339
    i32 120, label %sw.epilog339
    i32 121, label %sw.epilog339
    i32 122, label %sw.epilog339
  ], !dbg !4746

sw.bb52:                                          ; preds = %if.end49
  %49 = load i8* %backslash_escapes, align 1, !dbg !4747
  %tobool53 = trunc i8 %49 to i1, !dbg !4747
  br i1 %tobool53, label %do.body55, label %sw.epilog339, !dbg !4747

do.body55:                                        ; preds = %sw.bb52
  %50 = load i64* %len, align 8, !dbg !4750
  %51 = load i64* %buffersize.addr, align 8, !dbg !4750
  %cmp56 = icmp ult i64 %50, %51, !dbg !4750
  br i1 %cmp56, label %if.then58, label %if.end60, !dbg !4750

if.then58:                                        ; preds = %do.body55
  %52 = load i64* %len, align 8, !dbg !4750
  %53 = load i8** %buffer.addr, align 8, !dbg !4750
  %arrayidx59 = getelementptr inbounds i8* %53, i64 %52, !dbg !4750
  store i8 92, i8* %arrayidx59, align 1, !dbg !4750
  br label %if.end60, !dbg !4750

if.end60:                                         ; preds = %if.then58, %do.body55
  %54 = load i64* %len, align 8, !dbg !4754
  %inc61 = add i64 %54, 1, !dbg !4754
  store i64 %inc61, i64* %len, align 8, !dbg !4754
  %55 = load i64* %len, align 8, !dbg !4755
  %56 = load i64* %buffersize.addr, align 8, !dbg !4755
  %cmp64 = icmp ult i64 %55, %56, !dbg !4755
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !4755

if.then66:                                        ; preds = %if.end60
  %57 = load i64* %len, align 8, !dbg !4755
  %58 = load i8** %buffer.addr, align 8, !dbg !4755
  %arrayidx67 = getelementptr inbounds i8* %58, i64 %57, !dbg !4755
  store i8 48, i8* %arrayidx67, align 1, !dbg !4755
  br label %if.end68, !dbg !4755

if.end68:                                         ; preds = %if.then66, %if.end60
  %59 = load i64* %len, align 8, !dbg !4758
  %inc69 = add i64 %59, 1, !dbg !4758
  store i64 %inc69, i64* %len, align 8, !dbg !4758
  %60 = load i64* %len, align 8, !dbg !4759
  %61 = load i64* %buffersize.addr, align 8, !dbg !4759
  %cmp72 = icmp ult i64 %60, %61, !dbg !4759
  br i1 %cmp72, label %if.then74, label %if.end76, !dbg !4759

if.then74:                                        ; preds = %if.end68
  %62 = load i64* %len, align 8, !dbg !4759
  %63 = load i8** %buffer.addr, align 8, !dbg !4759
  %arrayidx75 = getelementptr inbounds i8* %63, i64 %62, !dbg !4759
  store i8 48, i8* %arrayidx75, align 1, !dbg !4759
  br label %if.end76, !dbg !4759

if.end76:                                         ; preds = %if.then74, %if.end68
  %64 = load i64* %len, align 8, !dbg !4762
  %inc77 = add i64 %64, 1, !dbg !4762
  store i64 %inc77, i64* %len, align 8, !dbg !4762
  store i8 48, i8* %c, align 1, !dbg !4763
  br label %sw.epilog339, !dbg !4764

sw.bb80:                                          ; preds = %if.end49
  %65 = load i32* %quoting_style.addr, align 4, !dbg !4765
  switch i32 %65, label %sw.epilog339 [
    i32 1, label %use_shell_always_quoting_style
    i32 3, label %sw.bb82
  ], !dbg !4765

sw.bb82:                                          ; preds = %sw.bb80
  %66 = load i64* %i, align 8, !dbg !4766
  %add83 = add i64 %66, 2, !dbg !4766
  %67 = load i64* %argsize.addr, align 8, !dbg !4766
  %cmp84 = icmp ult i64 %add83, %67, !dbg !4766
  br i1 %cmp84, label %land.lhs.true86, label %sw.epilog339, !dbg !4766

land.lhs.true86:                                  ; preds = %sw.bb82
  %68 = load i64* %i, align 8, !dbg !4766
  %add87 = add i64 %68, 1, !dbg !4766
  %69 = load i8** %arg.addr, align 8, !dbg !4766
  %arrayidx88 = getelementptr inbounds i8* %69, i64 %add87, !dbg !4766
  %70 = load i8* %arrayidx88, align 1, !dbg !4766
  %conv89 = sext i8 %70 to i32, !dbg !4766
  %cmp90 = icmp eq i32 %conv89, 63, !dbg !4766
  br i1 %cmp90, label %if.then92, label %sw.epilog339, !dbg !4766

if.then92:                                        ; preds = %land.lhs.true86
  %71 = load i64* %i, align 8, !dbg !4769
  %add93 = add i64 %71, 2, !dbg !4769
  %72 = load i8** %arg.addr, align 8, !dbg !4769
  %arrayidx94 = getelementptr inbounds i8* %72, i64 %add93, !dbg !4769
  %73 = load i8* %arrayidx94, align 1, !dbg !4769
  %conv95 = sext i8 %73 to i32, !dbg !4769
  switch i32 %conv95, label %sw.epilog339 [
    i32 33, label %sw.bb96
    i32 39, label %sw.bb96
    i32 40, label %sw.bb96
    i32 41, label %sw.bb96
    i32 45, label %sw.bb96
    i32 47, label %sw.bb96
    i32 60, label %sw.bb96
    i32 61, label %sw.bb96
    i32 62, label %sw.bb96
  ], !dbg !4769

sw.bb96:                                          ; preds = %if.then92, %if.then92, %if.then92, %if.then92, %if.then92, %if.then92, %if.then92, %if.then92, %if.then92
  %74 = load i64* %i, align 8, !dbg !4770
  %add97 = add i64 %74, 2, !dbg !4770
  %75 = load i8** %arg.addr, align 8, !dbg !4770
  %arrayidx98 = getelementptr inbounds i8* %75, i64 %add97, !dbg !4770
  %76 = load i8* %arrayidx98, align 1, !dbg !4770
  store i8 %76, i8* %c, align 1, !dbg !4770
  %77 = load i64* %i, align 8, !dbg !4772
  %add99 = add i64 %77, 2, !dbg !4772
  store i64 %add99, i64* %i, align 8, !dbg !4772
  %78 = load i64* %len, align 8, !dbg !4773
  %79 = load i64* %buffersize.addr, align 8, !dbg !4773
  %cmp101 = icmp ult i64 %78, %79, !dbg !4773
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !4773

if.then103:                                       ; preds = %sw.bb96
  %80 = load i64* %len, align 8, !dbg !4773
  %81 = load i8** %buffer.addr, align 8, !dbg !4773
  %arrayidx104 = getelementptr inbounds i8* %81, i64 %80, !dbg !4773
  store i8 63, i8* %arrayidx104, align 1, !dbg !4773
  br label %if.end105, !dbg !4773

if.end105:                                        ; preds = %if.then103, %sw.bb96
  %82 = load i64* %len, align 8, !dbg !4776
  %inc106 = add i64 %82, 1, !dbg !4776
  store i64 %inc106, i64* %len, align 8, !dbg !4776
  %83 = load i64* %len, align 8, !dbg !4777
  %84 = load i64* %buffersize.addr, align 8, !dbg !4777
  %cmp109 = icmp ult i64 %83, %84, !dbg !4777
  br i1 %cmp109, label %if.then111, label %if.end113, !dbg !4777

if.then111:                                       ; preds = %if.end105
  %85 = load i64* %len, align 8, !dbg !4777
  %86 = load i8** %buffer.addr, align 8, !dbg !4777
  %arrayidx112 = getelementptr inbounds i8* %86, i64 %85, !dbg !4777
  store i8 92, i8* %arrayidx112, align 1, !dbg !4777
  br label %if.end113, !dbg !4777

if.end113:                                        ; preds = %if.then111, %if.end105
  %87 = load i64* %len, align 8, !dbg !4780
  %inc114 = add i64 %87, 1, !dbg !4780
  store i64 %inc114, i64* %len, align 8, !dbg !4780
  %88 = load i64* %len, align 8, !dbg !4781
  %89 = load i64* %buffersize.addr, align 8, !dbg !4781
  %cmp117 = icmp ult i64 %88, %89, !dbg !4781
  br i1 %cmp117, label %if.then119, label %if.end121, !dbg !4781

if.then119:                                       ; preds = %if.end113
  %90 = load i64* %len, align 8, !dbg !4781
  %91 = load i8** %buffer.addr, align 8, !dbg !4781
  %arrayidx120 = getelementptr inbounds i8* %91, i64 %90, !dbg !4781
  store i8 63, i8* %arrayidx120, align 1, !dbg !4781
  br label %if.end121, !dbg !4781

if.end121:                                        ; preds = %if.then119, %if.end113
  %92 = load i64* %len, align 8, !dbg !4784
  %inc122 = add i64 %92, 1, !dbg !4784
  store i64 %inc122, i64* %len, align 8, !dbg !4784
  br label %sw.epilog339, !dbg !4785

sw.bb129:                                         ; preds = %if.end49
  store i8 97, i8* %esc, align 1, !dbg !4786
  br label %c_escape, !dbg !4786

sw.bb130:                                         ; preds = %if.end49
  store i8 98, i8* %esc, align 1, !dbg !4787
  br label %c_escape, !dbg !4787

sw.bb131:                                         ; preds = %if.end49
  store i8 102, i8* %esc, align 1, !dbg !4788
  br label %c_escape, !dbg !4788

sw.bb132:                                         ; preds = %if.end49
  store i8 110, i8* %esc, align 1, !dbg !4789
  br label %c_and_shell_escape, !dbg !4789

sw.bb133:                                         ; preds = %if.end49
  store i8 114, i8* %esc, align 1, !dbg !4790
  br label %c_and_shell_escape, !dbg !4790

sw.bb134:                                         ; preds = %if.end49
  store i8 116, i8* %esc, align 1, !dbg !4791
  br label %c_and_shell_escape, !dbg !4791

sw.bb135:                                         ; preds = %if.end49
  store i8 118, i8* %esc, align 1, !dbg !4792
  br label %c_escape, !dbg !4792

sw.bb136:                                         ; preds = %if.end49
  %93 = load i8* %c, align 1, !dbg !4793
  store i8 %93, i8* %esc, align 1, !dbg !4793
  br label %c_and_shell_escape, !dbg !4793

c_and_shell_escape:                               ; preds = %sw.bb136, %sw.bb134, %sw.bb133, %sw.bb132
  %94 = load i32* %quoting_style.addr, align 4, !dbg !4794
  %cmp137 = icmp eq i32 %94, 1, !dbg !4794
  br i1 %cmp137, label %use_shell_always_quoting_style, label %c_escape, !dbg !4794

c_escape:                                         ; preds = %c_and_shell_escape, %sw.bb135, %sw.bb131, %sw.bb130, %sw.bb129
  %95 = load i8* %backslash_escapes, align 1, !dbg !4796
  %tobool141 = trunc i8 %95 to i1, !dbg !4796
  br i1 %tobool141, label %if.then142, label %sw.epilog339, !dbg !4796

if.then142:                                       ; preds = %c_escape
  %96 = load i8* %esc, align 1, !dbg !4798
  store i8 %96, i8* %c, align 1, !dbg !4798
  br label %do.body350, !dbg !4800

sw.bb144:                                         ; preds = %if.end49, %if.end49
  %97 = load i64* %argsize.addr, align 8, !dbg !4801
  %cmp145 = icmp eq i64 %97, -1, !dbg !4801
  br i1 %cmp145, label %cond.true147, label %cond.false152, !dbg !4801

cond.true147:                                     ; preds = %sw.bb144
  %98 = load i8** %arg.addr, align 8, !dbg !4801
  %arrayidx148 = getelementptr inbounds i8* %98, i64 1, !dbg !4801
  %99 = load i8* %arrayidx148, align 1, !dbg !4801
  %conv149 = sext i8 %99 to i32, !dbg !4801
  %cmp150 = icmp ne i32 %conv149, 0, !dbg !4801
  %100 = load i64* %i, align 8, !dbg !4803
  %cmp158 = icmp ne i64 %100, 0, !dbg !4803
  %or.cond6 = or i1 %cmp150, %cmp158, !dbg !4801
  %or.cond6.not = xor i1 %or.cond6, true, !dbg !4801
  %.old9 = load i32* %quoting_style.addr, align 4, !dbg !4805
  %cmp163.old = icmp eq i32 %.old9, 1, !dbg !4805
  %or.cond12 = and i1 %or.cond6.not, %cmp163.old, !dbg !4801
  br i1 %or.cond12, label %use_shell_always_quoting_style, label %sw.epilog339, !dbg !4801

cond.false152:                                    ; preds = %sw.bb144
  %101 = load i64* %argsize.addr, align 8, !dbg !4801
  %cmp153 = icmp ne i64 %101, 1, !dbg !4801
  %.old = load i64* %i, align 8, !dbg !4803
  %cmp158.old = icmp ne i64 %.old, 0, !dbg !4803
  %or.cond8 = or i1 %cmp153, %cmp158.old, !dbg !4801
  %or.cond8.not = xor i1 %or.cond8, true, !dbg !4801
  %102 = load i32* %quoting_style.addr, align 4, !dbg !4805
  %cmp163 = icmp eq i32 %102, 1, !dbg !4805
  %or.cond10 = and i1 %or.cond8.not, %cmp163, !dbg !4801
  br i1 %or.cond10, label %use_shell_always_quoting_style, label %sw.epilog339, !dbg !4801

sw.bb157:                                         ; preds = %if.end49, %if.end49
  %.old7 = load i64* %i, align 8, !dbg !4803
  %cmp158.old.old = icmp eq i64 %.old7, 0, !dbg !4803
  %.old11 = load i32* %quoting_style.addr, align 4, !dbg !4805
  %cmp163.old.old = icmp eq i32 %.old11, 1, !dbg !4805
  %or.cond14 = and i1 %cmp158.old.old, %cmp163.old.old, !dbg !4803
  br i1 %or.cond14, label %use_shell_always_quoting_style, label %sw.epilog339, !dbg !4803

sw.bb162:                                         ; preds = %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49
  %.old13 = load i32* %quoting_style.addr, align 4, !dbg !4805
  %cmp163.old.old.old = icmp eq i32 %.old13, 1, !dbg !4805
  br i1 %cmp163.old.old.old, label %use_shell_always_quoting_style, label %sw.epilog339, !dbg !4805

sw.bb167:                                         ; preds = %if.end49
  %103 = load i32* %quoting_style.addr, align 4, !dbg !4807
  switch i32 %103, label %sw.epilog339 [
    i32 1, label %use_shell_always_quoting_style
    i32 2, label %do.body170
  ], !dbg !4807

do.body170:                                       ; preds = %sw.bb167
  %104 = load i64* %len, align 8, !dbg !4808
  %105 = load i64* %buffersize.addr, align 8, !dbg !4808
  %cmp171 = icmp ult i64 %104, %105, !dbg !4808
  br i1 %cmp171, label %if.then173, label %if.end175, !dbg !4808

if.then173:                                       ; preds = %do.body170
  %106 = load i64* %len, align 8, !dbg !4808
  %107 = load i8** %buffer.addr, align 8, !dbg !4808
  %arrayidx174 = getelementptr inbounds i8* %107, i64 %106, !dbg !4808
  store i8 39, i8* %arrayidx174, align 1, !dbg !4808
  br label %if.end175, !dbg !4808

if.end175:                                        ; preds = %if.then173, %do.body170
  %108 = load i64* %len, align 8, !dbg !4812
  %inc176 = add i64 %108, 1, !dbg !4812
  store i64 %inc176, i64* %len, align 8, !dbg !4812
  %109 = load i64* %len, align 8, !dbg !4813
  %110 = load i64* %buffersize.addr, align 8, !dbg !4813
  %cmp179 = icmp ult i64 %109, %110, !dbg !4813
  br i1 %cmp179, label %if.then181, label %if.end183, !dbg !4813

if.then181:                                       ; preds = %if.end175
  %111 = load i64* %len, align 8, !dbg !4813
  %112 = load i8** %buffer.addr, align 8, !dbg !4813
  %arrayidx182 = getelementptr inbounds i8* %112, i64 %111, !dbg !4813
  store i8 92, i8* %arrayidx182, align 1, !dbg !4813
  br label %if.end183, !dbg !4813

if.end183:                                        ; preds = %if.then181, %if.end175
  %113 = load i64* %len, align 8, !dbg !4816
  %inc184 = add i64 %113, 1, !dbg !4816
  store i64 %inc184, i64* %len, align 8, !dbg !4816
  %114 = load i64* %len, align 8, !dbg !4817
  %115 = load i64* %buffersize.addr, align 8, !dbg !4817
  %cmp187 = icmp ult i64 %114, %115, !dbg !4817
  br i1 %cmp187, label %if.then189, label %if.end191, !dbg !4817

if.then189:                                       ; preds = %if.end183
  %116 = load i64* %len, align 8, !dbg !4817
  %117 = load i8** %buffer.addr, align 8, !dbg !4817
  %arrayidx190 = getelementptr inbounds i8* %117, i64 %116, !dbg !4817
  store i8 39, i8* %arrayidx190, align 1, !dbg !4817
  br label %if.end191, !dbg !4817

if.end191:                                        ; preds = %if.then189, %if.end183
  %118 = load i64* %len, align 8, !dbg !4820
  %inc192 = add i64 %118, 1, !dbg !4820
  store i64 %inc192, i64* %len, align 8, !dbg !4820
  br label %sw.epilog339, !dbg !4821

sw.default197:                                    ; preds = %if.end49
  %119 = load i8* %unibyte_locale, align 1, !dbg !4822
  %tobool198 = trunc i8 %119 to i1, !dbg !4822
  br i1 %tobool198, label %if.then199, label %if.else, !dbg !4822

if.then199:                                       ; preds = %sw.default197
  store i64 1, i64* %m, align 8, !dbg !4825
  %120 = load i8* %c, align 1, !dbg !4827
  %conv200 = zext i8 %120 to i32, !dbg !4827
  %idxprom = sext i32 %conv200 to i64, !dbg !4827
  %call201 = call i16** @__ctype_b_loc() #1, !dbg !4827
  %121 = load i16** %call201, align 8, !dbg !4827
  %arrayidx202 = getelementptr inbounds i16* %121, i64 %idxprom, !dbg !4827
  %122 = load i16* %arrayidx202, align 2, !dbg !4827
  %conv203 = zext i16 %122 to i32, !dbg !4827
  %and = and i32 %conv203, 16384, !dbg !4827
  %cmp204 = icmp ne i32 %and, 0, !dbg !4827
  %frombool206 = zext i1 %cmp204 to i8, !dbg !4827
  store i8 %frombool206, i8* %printable, align 1, !dbg !4827
  br label %if.end266, !dbg !4828

if.else:                                          ; preds = %sw.default197
  %123 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !4829
  %124 = call i8* @memset(i8* %123, i32 0, i64 8)
  store i64 0, i64* %m, align 8, !dbg !4831
  store i8 1, i8* %printable, align 1, !dbg !4832
  %125 = load i64* %argsize.addr, align 8, !dbg !4833
  %cmp207 = icmp eq i64 %125, -1, !dbg !4833
  br i1 %cmp207, label %if.then209, label %do.body212, !dbg !4833

if.then209:                                       ; preds = %if.else
  %126 = load i8** %arg.addr, align 8, !dbg !4835
  %call210 = call i64 @strlen(i8* %126) #18, !dbg !4835
  store i64 %call210, i64* %argsize.addr, align 8, !dbg !4835
  br label %do.body212, !dbg !4835

do.body212:                                       ; preds = %if.else, %if.then209, %if.end258
  %127 = load i64* %i, align 8, !dbg !4836
  %128 = load i64* %m, align 8, !dbg !4836
  %add213 = add i64 %127, %128, !dbg !4836
  %129 = load i8** %arg.addr, align 8, !dbg !4836
  %arrayidx214 = getelementptr inbounds i8* %129, i64 %add213, !dbg !4836
  %130 = load i64* %argsize.addr, align 8, !dbg !4836
  %131 = load i64* %i, align 8, !dbg !4836
  %132 = load i64* %m, align 8, !dbg !4836
  %add215 = add i64 %131, %132, !dbg !4836
  %sub = sub i64 %130, %add215, !dbg !4836
  %call216 = call i64 @mbrtowc(i32* %w, i8* %arrayidx214, i64 %sub, %struct.__mbstate_t* %mbstate) #6, !dbg !4836
  store i64 %call216, i64* %bytes, align 8, !dbg !4836
  %133 = load i64* %bytes, align 8, !dbg !4838
  %cmp217 = icmp eq i64 %133, 0, !dbg !4838
  br i1 %cmp217, label %if.end266, label %if.else220, !dbg !4838

if.else220:                                       ; preds = %do.body212
  %134 = load i64* %bytes, align 8, !dbg !4840
  %cmp221 = icmp eq i64 %134, -1, !dbg !4840
  br i1 %cmp221, label %if.then223, label %if.else224, !dbg !4840

if.then223:                                       ; preds = %if.else220
  store i8 0, i8* %printable, align 1, !dbg !4842
  br label %if.end266, !dbg !4844

if.else224:                                       ; preds = %if.else220
  %135 = load i64* %bytes, align 8, !dbg !4845
  %cmp225 = icmp eq i64 %135, -2, !dbg !4845
  br i1 %cmp225, label %if.then227, label %if.else236, !dbg !4845

if.then227:                                       ; preds = %if.else224
  store i8 0, i8* %printable, align 1, !dbg !4847
  br label %while.cond, !dbg !4849

while.cond:                                       ; preds = %while.body, %if.then227
  %136 = load i64* %i, align 8, !dbg !4849
  %137 = load i64* %m, align 8, !dbg !4849
  %add228 = add i64 %136, %137, !dbg !4849
  %138 = load i64* %argsize.addr, align 8, !dbg !4849
  %cmp229 = icmp ult i64 %add228, %138, !dbg !4849
  br i1 %cmp229, label %land.rhs, label %if.end266, !dbg !4849

land.rhs:                                         ; preds = %while.cond
  %139 = load i64* %i, align 8, !dbg !4849
  %140 = load i64* %m, align 8, !dbg !4849
  %add231 = add i64 %139, %140, !dbg !4849
  %141 = load i8** %arg.addr, align 8, !dbg !4849
  %arrayidx232 = getelementptr inbounds i8* %141, i64 %add231, !dbg !4849
  %142 = load i8* %arrayidx232, align 1, !dbg !4849
  %conv233 = sext i8 %142 to i32, !dbg !4849
  %tobool234 = icmp ne i32 %conv233, 0, !dbg !4849
  br i1 %tobool234, label %while.body, label %if.end266

while.body:                                       ; preds = %land.rhs
  %143 = load i64* %m, align 8, !dbg !4850
  %inc235 = add i64 %143, 1, !dbg !4850
  store i64 %inc235, i64* %m, align 8, !dbg !4850
  br label %while.cond, !dbg !4850

if.else236:                                       ; preds = %if.else224
  %144 = load i32* %quoting_style.addr, align 4, !dbg !4851
  %cmp237 = icmp eq i32 %144, 1, !dbg !4851
  br i1 %cmp237, label %if.then239, label %if.end254, !dbg !4851

if.then239:                                       ; preds = %if.else236
  store i64 1, i64* %j, align 8, !dbg !4854
  br label %for.cond240, !dbg !4854

for.cond240:                                      ; preds = %for.inc251, %if.then239
  %145 = load i64* %j, align 8, !dbg !4854
  %146 = load i64* %bytes, align 8, !dbg !4854
  %cmp241 = icmp ult i64 %145, %146, !dbg !4854
  br i1 %cmp241, label %for.body243, label %if.end254, !dbg !4854

for.body243:                                      ; preds = %for.cond240
  %147 = load i64* %i, align 8, !dbg !4857
  %148 = load i64* %m, align 8, !dbg !4857
  %add244 = add i64 %147, %148, !dbg !4857
  %149 = load i64* %j, align 8, !dbg !4857
  %add245 = add i64 %add244, %149, !dbg !4857
  %150 = load i8** %arg.addr, align 8, !dbg !4857
  %arrayidx246 = getelementptr inbounds i8* %150, i64 %add245, !dbg !4857
  %151 = load i8* %arrayidx246, align 1, !dbg !4857
  %conv247 = sext i8 %151 to i32, !dbg !4857
  switch i32 %conv247, label %for.inc251 [
    i32 91, label %use_shell_always_quoting_style
    i32 92, label %use_shell_always_quoting_style
    i32 94, label %use_shell_always_quoting_style
    i32 96, label %use_shell_always_quoting_style
    i32 124, label %use_shell_always_quoting_style
  ], !dbg !4857

for.inc251:                                       ; preds = %for.body243
  %152 = load i64* %j, align 8, !dbg !4854
  %inc252 = add i64 %152, 1, !dbg !4854
  store i64 %inc252, i64* %j, align 8, !dbg !4854
  br label %for.cond240, !dbg !4854

if.end254:                                        ; preds = %for.cond240, %if.else236
  %153 = load i32* %w, align 4, !dbg !4858
  %call255 = call i32 @iswprint(i32 %153) #6, !dbg !4858
  %tobool256 = icmp ne i32 %call255, 0, !dbg !4858
  br i1 %tobool256, label %if.end258, label %if.then257, !dbg !4858

if.then257:                                       ; preds = %if.end254
  store i8 0, i8* %printable, align 1, !dbg !4860
  br label %if.end258, !dbg !4860

if.end258:                                        ; preds = %if.then257, %if.end254
  %154 = load i64* %bytes, align 8, !dbg !4861
  %155 = load i64* %m, align 8, !dbg !4861
  %add259 = add i64 %155, %154, !dbg !4861
  store i64 %add259, i64* %m, align 8, !dbg !4861
  %call263 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #18, !dbg !4862
  %tobool264 = icmp ne i32 %call263, 0, !dbg !4862
  %lnot = xor i1 %tobool264, true, !dbg !4862
  br i1 %lnot, label %do.body212, label %if.end266, !dbg !4862

if.end266:                                        ; preds = %if.then223, %if.end258, %do.body212, %while.cond, %land.rhs, %if.then199
  %156 = load i64* %m, align 8, !dbg !4863
  %cmp267 = icmp ult i64 1, %156, !dbg !4863
  br i1 %cmp267, label %if.then273, label %lor.lhs.false, !dbg !4863

lor.lhs.false:                                    ; preds = %if.end266
  %157 = load i8* %backslash_escapes, align 1, !dbg !4863
  %tobool269 = trunc i8 %157 to i1, !dbg !4863
  br i1 %tobool269, label %land.lhs.true271, label %sw.epilog339, !dbg !4863

land.lhs.true271:                                 ; preds = %lor.lhs.false
  %158 = load i8* %printable, align 1, !dbg !4863
  %tobool272 = trunc i8 %158 to i1, !dbg !4863
  br i1 %tobool272, label %sw.epilog339, label %if.then273, !dbg !4863

if.then273:                                       ; preds = %land.lhs.true271, %if.end266
  %159 = load i64* %i, align 8, !dbg !4865
  %160 = load i64* %m, align 8, !dbg !4865
  %add274 = add i64 %159, %160, !dbg !4865
  store i64 %add274, i64* %ilim, align 8, !dbg !4865
  br label %for.cond275, !dbg !4867

for.cond275:                                      ; preds = %if.end331, %if.then273
  %161 = load i8* %backslash_escapes, align 1, !dbg !4869
  %tobool276 = trunc i8 %161 to i1, !dbg !4869
  br i1 %tobool276, label %land.lhs.true278, label %if.end320, !dbg !4869

land.lhs.true278:                                 ; preds = %for.cond275
  %162 = load i8* %printable, align 1, !dbg !4869
  %tobool279 = trunc i8 %162 to i1, !dbg !4869
  br i1 %tobool279, label %if.end320, label %do.body281, !dbg !4869

do.body281:                                       ; preds = %land.lhs.true278
  %163 = load i64* %len, align 8, !dbg !4872
  %164 = load i64* %buffersize.addr, align 8, !dbg !4872
  %cmp282 = icmp ult i64 %163, %164, !dbg !4872
  br i1 %cmp282, label %if.then284, label %if.end286, !dbg !4872

if.then284:                                       ; preds = %do.body281
  %165 = load i64* %len, align 8, !dbg !4872
  %166 = load i8** %buffer.addr, align 8, !dbg !4872
  %arrayidx285 = getelementptr inbounds i8* %166, i64 %165, !dbg !4872
  store i8 92, i8* %arrayidx285, align 1, !dbg !4872
  br label %if.end286, !dbg !4872

if.end286:                                        ; preds = %if.then284, %do.body281
  %167 = load i64* %len, align 8, !dbg !4876
  %inc287 = add i64 %167, 1, !dbg !4876
  store i64 %inc287, i64* %len, align 8, !dbg !4876
  %168 = load i64* %len, align 8, !dbg !4877
  %169 = load i64* %buffersize.addr, align 8, !dbg !4877
  %cmp291 = icmp ult i64 %168, %169, !dbg !4877
  br i1 %cmp291, label %if.then293, label %if.end298, !dbg !4877

if.then293:                                       ; preds = %if.end286
  %170 = load i8* %c, align 1, !dbg !4877
  %conv294 = zext i8 %170 to i32, !dbg !4877
  %int_cast_to_i642 = zext i32 6 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i642), !dbg !4877
  %shr = ashr i32 %conv294, 6, !dbg !4877
  %add295 = add nsw i32 48, %shr, !dbg !4877
  %conv296 = trunc i32 %add295 to i8, !dbg !4877
  %171 = load i64* %len, align 8, !dbg !4877
  %172 = load i8** %buffer.addr, align 8, !dbg !4877
  %arrayidx297 = getelementptr inbounds i8* %172, i64 %171, !dbg !4877
  store i8 %conv296, i8* %arrayidx297, align 1, !dbg !4877
  br label %if.end298, !dbg !4877

if.end298:                                        ; preds = %if.then293, %if.end286
  %173 = load i64* %len, align 8, !dbg !4880
  %inc299 = add i64 %173, 1, !dbg !4880
  store i64 %inc299, i64* %len, align 8, !dbg !4880
  %174 = load i64* %len, align 8, !dbg !4881
  %175 = load i64* %buffersize.addr, align 8, !dbg !4881
  %cmp303 = icmp ult i64 %174, %175, !dbg !4881
  br i1 %cmp303, label %if.then305, label %if.end312, !dbg !4881

if.then305:                                       ; preds = %if.end298
  %176 = load i8* %c, align 1, !dbg !4881
  %conv306 = zext i8 %176 to i32, !dbg !4881
  %int_cast_to_i643 = zext i32 3 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i643), !dbg !4881
  %shr307 = ashr i32 %conv306, 3, !dbg !4881
  %and308 = and i32 %shr307, 7, !dbg !4881
  %add309 = add nsw i32 48, %and308, !dbg !4881
  %conv310 = trunc i32 %add309 to i8, !dbg !4881
  %177 = load i64* %len, align 8, !dbg !4881
  %178 = load i8** %buffer.addr, align 8, !dbg !4881
  %arrayidx311 = getelementptr inbounds i8* %178, i64 %177, !dbg !4881
  store i8 %conv310, i8* %arrayidx311, align 1, !dbg !4881
  br label %if.end312, !dbg !4881

if.end312:                                        ; preds = %if.then305, %if.end298
  %179 = load i64* %len, align 8, !dbg !4884
  %inc313 = add i64 %179, 1, !dbg !4884
  store i64 %inc313, i64* %len, align 8, !dbg !4884
  %180 = load i8* %c, align 1, !dbg !4885
  %conv316 = zext i8 %180 to i32, !dbg !4885
  %and317 = and i32 %conv316, 7, !dbg !4885
  %add318 = add nsw i32 48, %and317, !dbg !4885
  %conv319 = trunc i32 %add318 to i8, !dbg !4885
  store i8 %conv319, i8* %c, align 1, !dbg !4885
  br label %if.end320, !dbg !4886

if.end320:                                        ; preds = %if.end312, %land.lhs.true278, %for.cond275
  %181 = load i64* %ilim, align 8, !dbg !4887
  %182 = load i64* %i, align 8, !dbg !4887
  %add321 = add i64 %182, 1, !dbg !4887
  %cmp322 = icmp ule i64 %181, %add321, !dbg !4887
  br i1 %cmp322, label %do.body359, label %do.body326, !dbg !4887

do.body326:                                       ; preds = %if.end320
  %183 = load i64* %len, align 8, !dbg !4889
  %184 = load i64* %buffersize.addr, align 8, !dbg !4889
  %cmp327 = icmp ult i64 %183, %184, !dbg !4889
  br i1 %cmp327, label %if.then329, label %if.end331, !dbg !4889

if.then329:                                       ; preds = %do.body326
  %185 = load i8* %c, align 1, !dbg !4889
  %186 = load i64* %len, align 8, !dbg !4889
  %187 = load i8** %buffer.addr, align 8, !dbg !4889
  %arrayidx330 = getelementptr inbounds i8* %187, i64 %186, !dbg !4889
  store i8 %185, i8* %arrayidx330, align 1, !dbg !4889
  br label %if.end331, !dbg !4889

if.end331:                                        ; preds = %if.then329, %do.body326
  %188 = load i64* %len, align 8, !dbg !4892
  %inc332 = add i64 %188, 1, !dbg !4892
  store i64 %inc332, i64* %len, align 8, !dbg !4892
  %189 = load i64* %i, align 8, !dbg !4893
  %inc335 = add i64 %189, 1, !dbg !4893
  store i64 %inc335, i64* %i, align 8, !dbg !4893
  %190 = load i8** %arg.addr, align 8, !dbg !4893
  %arrayidx336 = getelementptr inbounds i8* %190, i64 %inc335, !dbg !4893
  %191 = load i8* %arrayidx336, align 1, !dbg !4893
  store i8 %191, i8* %c, align 1, !dbg !4893
  br label %for.cond275, !dbg !4894

sw.epilog339:                                     ; preds = %sw.bb157, %cond.true147, %cond.false152, %lor.lhs.false, %land.lhs.true271, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end
  %192 = load i8* %backslash_escapes, align 1, !dbg !4895
  %tobool340 = trunc i8 %192 to i1, !dbg !4895
  br i1 %tobool340, label %land.lhs.true342, label %do.body359, !dbg !4895

land.lhs.true342:                                 ; preds = %sw.epilog339
  %193 = load i8* %c, align 1, !dbg !4895
  %conv343 = zext i8 %193 to i64, !dbg !4895
  %int_cast_to_i64 = bitcast i64 32 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !4895
  %div = udiv i64 %conv343, 32, !dbg !4895
  %194 = load %struct.quoting_options** %o.addr, align 8, !dbg !4895
  %quote_these_too = getelementptr inbounds %struct.quoting_options* %194, i32 0, i32 1, !dbg !4895
  %arrayidx344 = getelementptr inbounds [8 x i32]* %quote_these_too, i32 0, i64 %div, !dbg !4895
  %195 = load i32* %arrayidx344, align 4, !dbg !4895
  %196 = load i8* %c, align 1, !dbg !4895
  %conv345 = zext i8 %196 to i64, !dbg !4895
  %int_cast_to_i641 = bitcast i64 32 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !4895
  %rem = urem i64 %conv345, 32, !dbg !4895
  %sh_prom = trunc i64 %rem to i32, !dbg !4895
  %int_cast_to_i644 = zext i32 %sh_prom to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i644), !dbg !4895
  %shl = shl i32 1, %sh_prom, !dbg !4895
  %and346 = and i32 %195, %shl, !dbg !4895
  %tobool347 = icmp ne i32 %and346, 0, !dbg !4895
  br i1 %tobool347, label %do.body350, label %do.body359, !dbg !4895

do.body350:                                       ; preds = %if.then142, %land.lhs.true342
  %197 = load i64* %len, align 8, !dbg !4897
  %198 = load i64* %buffersize.addr, align 8, !dbg !4897
  %cmp351 = icmp ult i64 %197, %198, !dbg !4897
  br i1 %cmp351, label %if.then353, label %if.end355, !dbg !4897

if.then353:                                       ; preds = %do.body350
  %199 = load i64* %len, align 8, !dbg !4897
  %200 = load i8** %buffer.addr, align 8, !dbg !4897
  %arrayidx354 = getelementptr inbounds i8* %200, i64 %199, !dbg !4897
  store i8 92, i8* %arrayidx354, align 1, !dbg !4897
  br label %if.end355, !dbg !4897

if.end355:                                        ; preds = %if.then353, %do.body350
  %201 = load i64* %len, align 8, !dbg !4900
  %inc356 = add i64 %201, 1, !dbg !4900
  store i64 %inc356, i64* %len, align 8, !dbg !4900
  br label %do.body359, !dbg !4900

do.body359:                                       ; preds = %if.end355, %if.end320, %land.lhs.true342, %sw.epilog339
  %202 = load i64* %len, align 8, !dbg !4901
  %203 = load i64* %buffersize.addr, align 8, !dbg !4901
  %cmp360 = icmp ult i64 %202, %203, !dbg !4901
  br i1 %cmp360, label %if.then362, label %if.end364, !dbg !4901

if.then362:                                       ; preds = %do.body359
  %204 = load i8* %c, align 1, !dbg !4901
  %205 = load i64* %len, align 8, !dbg !4901
  %206 = load i8** %buffer.addr, align 8, !dbg !4901
  %arrayidx363 = getelementptr inbounds i8* %206, i64 %205, !dbg !4901
  store i8 %204, i8* %arrayidx363, align 1, !dbg !4901
  br label %if.end364, !dbg !4901

if.end364:                                        ; preds = %if.then362, %do.body359
  %207 = load i64* %len, align 8, !dbg !4904
  %inc365 = add i64 %207, 1, !dbg !4904
  store i64 %inc365, i64* %len, align 8, !dbg !4904
  %208 = load i64* %i, align 8, !dbg !4735
  %inc369 = add i64 %208, 1, !dbg !4735
  store i64 %inc369, i64* %i, align 8, !dbg !4735
  br label %for.cond22, !dbg !4735

for.end370:                                       ; preds = %cond.false, %cond.true
  %209 = load i64* %i, align 8, !dbg !4905
  %cmp371 = icmp eq i64 %209, 0, !dbg !4905
  %210 = load i32* %quoting_style.addr, align 4, !dbg !4905
  %cmp374 = icmp eq i32 %210, 1, !dbg !4905
  %or.cond5 = and i1 %cmp371, %cmp374, !dbg !4905
  br i1 %or.cond5, label %use_shell_always_quoting_style, label %if.end377, !dbg !4905

if.end377:                                        ; preds = %for.end370
  %211 = load i8** %quote_string, align 8, !dbg !4907
  %tobool378 = icmp ne i8* %211, null, !dbg !4907
  br i1 %tobool378, label %for.cond380, label %if.end395, !dbg !4907

for.cond380:                                      ; preds = %if.end377, %if.end388
  %212 = load i8** %quote_string, align 8, !dbg !4909
  %213 = load i8* %212, align 1, !dbg !4909
  %tobool381 = icmp ne i8 %213, 0, !dbg !4909
  br i1 %tobool381, label %do.body383, label %if.end395, !dbg !4909

do.body383:                                       ; preds = %for.cond380
  %214 = load i64* %len, align 8, !dbg !4911
  %215 = load i64* %buffersize.addr, align 8, !dbg !4911
  %cmp384 = icmp ult i64 %214, %215, !dbg !4911
  br i1 %cmp384, label %if.then386, label %if.end388, !dbg !4911

if.then386:                                       ; preds = %do.body383
  %216 = load i8** %quote_string, align 8, !dbg !4911
  %217 = load i8* %216, align 1, !dbg !4911
  %218 = load i64* %len, align 8, !dbg !4911
  %219 = load i8** %buffer.addr, align 8, !dbg !4911
  %arrayidx387 = getelementptr inbounds i8* %219, i64 %218, !dbg !4911
  store i8 %217, i8* %arrayidx387, align 1, !dbg !4911
  br label %if.end388, !dbg !4911

if.end388:                                        ; preds = %if.then386, %do.body383
  %220 = load i64* %len, align 8, !dbg !4914
  %inc389 = add i64 %220, 1, !dbg !4914
  store i64 %inc389, i64* %len, align 8, !dbg !4914
  %221 = load i8** %quote_string, align 8, !dbg !4909
  %incdec.ptr393 = getelementptr inbounds i8* %221, i32 1, !dbg !4909
  store i8* %incdec.ptr393, i8** %quote_string, align 8, !dbg !4909
  br label %for.cond380, !dbg !4909

if.end395:                                        ; preds = %for.cond380, %if.end377
  %222 = load i64* %len, align 8, !dbg !4915
  %223 = load i64* %buffersize.addr, align 8, !dbg !4915
  %cmp396 = icmp ult i64 %222, %223, !dbg !4915
  br i1 %cmp396, label %if.then398, label %if.end400, !dbg !4915

if.then398:                                       ; preds = %if.end395
  %224 = load i64* %len, align 8, !dbg !4917
  %225 = load i8** %buffer.addr, align 8, !dbg !4917
  %arrayidx399 = getelementptr inbounds i8* %225, i64 %224, !dbg !4917
  store i8 0, i8* %arrayidx399, align 1, !dbg !4917
  br label %if.end400, !dbg !4917

if.end400:                                        ; preds = %if.then398, %if.end395
  %226 = load i64* %len, align 8, !dbg !4918
  store i64 %226, i64* %retval, !dbg !4918
  br label %return, !dbg !4918

use_shell_always_quoting_style:                   ; preds = %sw.bb157, %cond.true147, %cond.false152, %for.end370, %for.body243, %for.body243, %for.body243, %for.body243, %for.body243, %sw.bb167, %sw.bb162, %c_and_shell_escape, %sw.bb80
  %227 = load i8** %buffer.addr, align 8, !dbg !4919
  %228 = load i64* %buffersize.addr, align 8, !dbg !4919
  %229 = load i8** %arg.addr, align 8, !dbg !4919
  %230 = load i64* %argsize.addr, align 8, !dbg !4919
  %231 = load %struct.quoting_options** %o.addr, align 8, !dbg !4919
  %call401 = call i64 @quotearg_buffer_restyled(i8* %227, i64 %228, i8* %229, i64 %230, i32 2, %struct.quoting_options* %231), !dbg !4919
  store i64 %call401, i64* %retval, !dbg !4919
  br label %return, !dbg !4919

return:                                           ; preds = %use_shell_always_quoting_style, %if.end400
  %232 = load i64* %retval, !dbg !4920
  ret i64 %232, !dbg !4920
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #0 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %n0 = alloca i32, align 4
  %sv = alloca %struct.slotvec*, align 8
  %n1 = alloca i64, align 8
  %preallocated = alloca i8, align 1
  %size = alloca i64, align 8
  %val = alloca i8*, align 8
  %qsize = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  store i64 %argsize, i64* %argsize.addr, align 8
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8
  %call = call i32* @__errno_location() #1, !dbg !4921
  %0 = load i32* %call, align 4, !dbg !4921
  store i32 %0, i32* %e, align 4, !dbg !4921
  %1 = load i32* %n.addr, align 4, !dbg !4922
  store i32 %1, i32* %n0, align 4, !dbg !4922
  %2 = load %struct.slotvec** @slotvec, align 8, !dbg !4923
  store %struct.slotvec* %2, %struct.slotvec** %sv, align 8, !dbg !4923
  %3 = load i32* %n.addr, align 4, !dbg !4924
  %cmp = icmp slt i32 %3, 0, !dbg !4924
  br i1 %cmp, label %if.then, label %if.end, !dbg !4924

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !4926
  unreachable, !dbg !4926

if.end:                                           ; preds = %entry
  %4 = load i32* @nslots, align 4, !dbg !4927
  %5 = load i32* %n0, align 4, !dbg !4927
  %cmp1 = icmp ule i32 %4, %5, !dbg !4927
  br i1 %cmp1, label %if.then2, label %if.end17, !dbg !4927

if.then2:                                         ; preds = %if.end
  %6 = load i32* %n0, align 4, !dbg !4929
  %add = add i32 %6, 1, !dbg !4929
  %conv = zext i32 %add to i64, !dbg !4929
  store i64 %conv, i64* %n1, align 8, !dbg !4929
  %7 = load %struct.slotvec** %sv, align 8, !dbg !4931
  %cmp3 = icmp eq %struct.slotvec* %7, @slotvec0, !dbg !4931
  %frombool = zext i1 %cmp3 to i8, !dbg !4931
  store i8 %frombool, i8* %preallocated, align 1, !dbg !4931
  %8 = load i64* %n1, align 8, !dbg !4932
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !4932
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4932

if.then7:                                         ; preds = %if.then2
  call void @xalloc_die() #19, !dbg !4934
  unreachable, !dbg !4934

if.end8:                                          ; preds = %if.then2
  %9 = load i8* %preallocated, align 1, !dbg !4935
  %tobool = trunc i8 %9 to i1, !dbg !4935
  %10 = load %struct.slotvec** %sv, align 8, !dbg !4935
  %cond = select i1 %tobool, %struct.slotvec* null, %struct.slotvec* %10, !dbg !4935
  %11 = bitcast %struct.slotvec* %cond to i8*, !dbg !4935
  %12 = load i64* %n1, align 8, !dbg !4935
  %mul = mul i64 %12, 16, !dbg !4935
  %call10 = call i8* @xrealloc(i8* %11, i64 %mul), !dbg !4935
  %13 = bitcast i8* %call10 to %struct.slotvec*, !dbg !4935
  store %struct.slotvec* %13, %struct.slotvec** %sv, align 8, !dbg !4935
  store %struct.slotvec* %13, %struct.slotvec** @slotvec, align 8, !dbg !4935
  %14 = load i8* %preallocated, align 1, !dbg !4936
  %tobool11 = trunc i8 %14 to i1, !dbg !4936
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !4936

if.then12:                                        ; preds = %if.end8
  %15 = load %struct.slotvec** %sv, align 8, !dbg !4938
  %16 = bitcast %struct.slotvec* %15 to i8*, !dbg !4938
  %17 = call i8* @memcpy(i8* %16, i8* bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16)
  br label %if.end13, !dbg !4938

if.end13:                                         ; preds = %if.then12, %if.end8
  %18 = load %struct.slotvec** %sv, align 8, !dbg !4939
  %19 = load i32* @nslots, align 4, !dbg !4939
  %idx.ext = zext i32 %19 to i64, !dbg !4939
  %add.ptr = getelementptr inbounds %struct.slotvec* %18, i64 %idx.ext, !dbg !4939
  %20 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !4939
  %21 = load i64* %n1, align 8, !dbg !4939
  %22 = load i32* @nslots, align 4, !dbg !4939
  %conv14 = zext i32 %22 to i64, !dbg !4939
  %sub = sub i64 %21, %conv14, !dbg !4939
  %mul15 = mul i64 %sub, 16, !dbg !4939
  %23 = call i8* @memset(i8* %20, i32 0, i64 %mul15)
  %24 = load i64* %n1, align 8, !dbg !4940
  %conv16 = trunc i64 %24 to i32, !dbg !4940
  store i32 %conv16, i32* @nslots, align 4, !dbg !4940
  br label %if.end17, !dbg !4941

if.end17:                                         ; preds = %if.end13, %if.end
  %25 = load i32* %n.addr, align 4, !dbg !4942
  %idxprom = sext i32 %25 to i64, !dbg !4942
  %26 = load %struct.slotvec** %sv, align 8, !dbg !4942
  %arrayidx = getelementptr inbounds %struct.slotvec* %26, i64 %idxprom, !dbg !4942
  %size18 = getelementptr inbounds %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !4942
  %27 = load i64* %size18, align 8, !dbg !4942
  store i64 %27, i64* %size, align 8, !dbg !4942
  %28 = load i32* %n.addr, align 4, !dbg !4944
  %idxprom19 = sext i32 %28 to i64, !dbg !4944
  %29 = load %struct.slotvec** %sv, align 8, !dbg !4944
  %arrayidx20 = getelementptr inbounds %struct.slotvec* %29, i64 %idxprom19, !dbg !4944
  %val21 = getelementptr inbounds %struct.slotvec* %arrayidx20, i32 0, i32 1, !dbg !4944
  %30 = load i8** %val21, align 8, !dbg !4944
  store i8* %30, i8** %val, align 8, !dbg !4944
  %31 = load i8** %val, align 8, !dbg !4945
  %32 = load i64* %size, align 8, !dbg !4945
  %33 = load i8** %arg.addr, align 8, !dbg !4945
  %34 = load i64* %argsize.addr, align 8, !dbg !4945
  %35 = load %struct.quoting_options** %options.addr, align 8, !dbg !4945
  %call22 = call i64 @quotearg_buffer(i8* %31, i64 %32, i8* %33, i64 %34, %struct.quoting_options* %35), !dbg !4945
  store i64 %call22, i64* %qsize, align 8, !dbg !4945
  %36 = load i64* %size, align 8, !dbg !4946
  %37 = load i64* %qsize, align 8, !dbg !4946
  %cmp23 = icmp ule i64 %36, %37, !dbg !4946
  br i1 %cmp23, label %if.then25, label %if.end39, !dbg !4946

if.then25:                                        ; preds = %if.end17
  %38 = load i64* %qsize, align 8, !dbg !4948
  %add26 = add i64 %38, 1, !dbg !4948
  store i64 %add26, i64* %size, align 8, !dbg !4948
  %39 = load i32* %n.addr, align 4, !dbg !4948
  %idxprom27 = sext i32 %39 to i64, !dbg !4948
  %40 = load %struct.slotvec** %sv, align 8, !dbg !4948
  %arrayidx28 = getelementptr inbounds %struct.slotvec* %40, i64 %idxprom27, !dbg !4948
  %size29 = getelementptr inbounds %struct.slotvec* %arrayidx28, i32 0, i32 0, !dbg !4948
  store i64 %add26, i64* %size29, align 8, !dbg !4948
  %41 = load i8** %val, align 8, !dbg !4950
  %cmp30 = icmp ne i8* %41, getelementptr inbounds ([256 x i8]* @slot0, i32 0, i32 0), !dbg !4950
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4950

if.then32:                                        ; preds = %if.then25
  %42 = load i8** %val, align 8, !dbg !4952
  call void @free(i8* %42) #6, !dbg !4952
  br label %if.end33, !dbg !4952

if.end33:                                         ; preds = %if.then32, %if.then25
  %43 = load i64* %size, align 8, !dbg !4953
  %call34 = call i8* @xcharalloc(i64 %43), !dbg !4953
  store i8* %call34, i8** %val, align 8, !dbg !4953
  %44 = load i32* %n.addr, align 4, !dbg !4953
  %idxprom35 = sext i32 %44 to i64, !dbg !4953
  %45 = load %struct.slotvec** %sv, align 8, !dbg !4953
  %arrayidx36 = getelementptr inbounds %struct.slotvec* %45, i64 %idxprom35, !dbg !4953
  %val37 = getelementptr inbounds %struct.slotvec* %arrayidx36, i32 0, i32 1, !dbg !4953
  store i8* %call34, i8** %val37, align 8, !dbg !4953
  %46 = load i8** %val, align 8, !dbg !4954
  %47 = load i64* %size, align 8, !dbg !4954
  %48 = load i8** %arg.addr, align 8, !dbg !4954
  %49 = load i64* %argsize.addr, align 8, !dbg !4954
  %50 = load %struct.quoting_options** %options.addr, align 8, !dbg !4954
  %call38 = call i64 @quotearg_buffer(i8* %46, i64 %47, i8* %48, i64 %49, %struct.quoting_options* %50), !dbg !4954
  br label %if.end39, !dbg !4955

if.end39:                                         ; preds = %if.end33, %if.end17
  %51 = load i32* %e, align 4, !dbg !4956
  %call40 = call i32* @__errno_location() #1, !dbg !4956
  store i32 %51, i32* %call40, align 4, !dbg !4956
  %52 = load i8** %val, align 8, !dbg !4957
  ret i8* %52, !dbg !4957
}

; Function Attrs: nounwind uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #0 {
entry:
  %style.addr = alloca i32, align 4
  %o = alloca %struct.quoting_options, align 4
  store i32 %style, i32* %style.addr, align 4
  %0 = load i32* %style.addr, align 4, !dbg !4958
  %style1 = getelementptr inbounds %struct.quoting_options* %o, i32 0, i32 0, !dbg !4958
  store i32 %0, i32* %style1, align 4, !dbg !4958
  %quote_these_too = getelementptr inbounds %struct.quoting_options* %o, i32 0, i32 1, !dbg !4959
  %1 = bitcast [8 x i32]* %quote_these_too to i8*, !dbg !4959
  %2 = call i8* @memset(i8* %1, i32 0, i64 32)
  %3 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !4960
  %4 = bitcast %struct.quoting_options* %o to i8*, !dbg !4960
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 36)
  ret void, !dbg !4960
}

; Function Attrs: nounwind uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #0 {
entry:
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8
  store i8* %msgid, i8** %msgid.addr, align 8
  store i32 %s, i32* %s.addr, align 4
  %0 = load i8** %msgid.addr, align 8, !dbg !4961
  store i8* %0, i8** %translation, align 8, !dbg !4961
  %1 = load i8** %translation, align 8, !dbg !4962
  %2 = load i8** %msgid.addr, align 8, !dbg !4962
  %cmp = icmp eq i8* %1, %2, !dbg !4962
  %3 = load i32* %s.addr, align 4, !dbg !4962
  %cmp1 = icmp eq i32 %3, 6, !dbg !4962
  %or.cond = and i1 %cmp, %cmp1, !dbg !4962
  %. = select i1 %or.cond, i8* getelementptr inbounds ([2 x i8]* @.str7298, i32 0, i32 0), i8* %0, !dbg !4962
  store i8* %., i8** %translation, align 8, !dbg !4964
  %4 = load i8** %translation, align 8, !dbg !4965
  ret i8* %4, !dbg !4965
}

; Function Attrs: nounwind uwtable
define i64 @safe_write(i32 %fd, i8* %buf, i64 %count) #0 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8
  store i32 %fd, i32* %fd.addr, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i64 %count, i64* %count.addr, align 8
  br label %for.cond, !dbg !4966

for.cond:                                         ; preds = %if.else, %if.then8, %entry
  %0 = load i32* %fd.addr, align 4, !dbg !4968
  %1 = load i8** %buf.addr, align 8, !dbg !4968
  %2 = load i64* %count.addr, align 8, !dbg !4968
  %call = call i64 @write(i32 %0, i8* %1, i64 %2), !dbg !4968
  store i64 %call, i64* %result, align 8, !dbg !4968
  %3 = load i64* %result, align 8, !dbg !4970
  %cmp = icmp sle i64 0, %3, !dbg !4970
  br i1 %cmp, label %if.then, label %if.else, !dbg !4970

if.then:                                          ; preds = %for.cond
  %4 = load i64* %result, align 8, !dbg !4972
  store i64 %4, i64* %retval, !dbg !4972
  br label %return, !dbg !4972

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #1, !dbg !4973
  %5 = load i32* %call1, align 4, !dbg !4973
  %cmp2 = icmp eq i32 %5, 4, !dbg !4973
  br i1 %cmp2, label %for.cond, label %if.else4, !dbg !4973

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #1, !dbg !4975
  %6 = load i32* %call5, align 4, !dbg !4975
  %cmp6 = icmp eq i32 %6, 22, !dbg !4975
  %7 = load i64* %count.addr, align 8, !dbg !4975
  %cmp7 = icmp ult i64 2147475456, %7, !dbg !4975
  %or.cond = and i1 %cmp6, %cmp7, !dbg !4975
  br i1 %or.cond, label %if.then8, label %if.else9, !dbg !4975

if.then8:                                         ; preds = %if.else4
  store i64 2147475456, i64* %count.addr, align 8, !dbg !4977
  br label %for.cond, !dbg !4978

if.else9:                                         ; preds = %if.else4
  %8 = load i64* %result, align 8, !dbg !4979
  store i64 %8, i64* %retval, !dbg !4979
  br label %return, !dbg !4979

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64* %retval, !dbg !4980
  ret i64 %9, !dbg !4980
}

declare i64 @write(i32, i8*, i64) #2

; Function Attrs: nounwind uwtable
define zeroext i1 @same_name(i8* %source, i8* %dest) #0 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8
  %dest_basename = alloca i8*, align 8
  %source_baselen = alloca i64, align 8
  %dest_baselen = alloca i64, align 8
  %identical_basenames = alloca i8, align 1
  %compare_dirs = alloca i8, align 1
  %same = alloca i8, align 1
  %source_dir_stats = alloca %struct.stat, align 8
  %dest_dir_stats = alloca %struct.stat, align 8
  %source_dirname = alloca i8*, align 8
  %dest_dirname = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8
  store i8* %dest, i8** %dest.addr, align 8
  %0 = load i8** %source.addr, align 8, !dbg !4981
  %call = call i8* @last_component(i8* %0), !dbg !4981
  store i8* %call, i8** %source_basename, align 8, !dbg !4981
  %1 = load i8** %dest.addr, align 8, !dbg !4982
  %call1 = call i8* @last_component(i8* %1), !dbg !4982
  store i8* %call1, i8** %dest_basename, align 8, !dbg !4982
  %2 = load i8** %source_basename, align 8, !dbg !4983
  %call2 = call i64 @base_len(i8* %2), !dbg !4983
  store i64 %call2, i64* %source_baselen, align 8, !dbg !4983
  %3 = load i8** %dest_basename, align 8, !dbg !4984
  %call3 = call i64 @base_len(i8* %3), !dbg !4984
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !4984
  %4 = load i64* %source_baselen, align 8, !dbg !4985
  %5 = load i64* %dest_baselen, align 8, !dbg !4985
  %cmp = icmp eq i64 %4, %5, !dbg !4985
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4985

land.rhs:                                         ; preds = %entry
  %6 = load i8** %source_basename, align 8, !dbg !4986
  %7 = load i8** %dest_basename, align 8, !dbg !4986
  %8 = load i64* %dest_baselen, align 8, !dbg !4986
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #18, !dbg !4986
  %cmp5 = icmp eq i32 %call4, 0, !dbg !4986
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ]
  %frombool = zext i1 %9 to i8
  store i8 %frombool, i8* %identical_basenames, align 1
  %10 = load i8* %identical_basenames, align 1, !dbg !4987
  %tobool = trunc i8 %10 to i1, !dbg !4987
  %frombool6 = zext i1 %tobool to i8, !dbg !4987
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !4987
  store i8 0, i8* %same, align 1, !dbg !4988
  %11 = load i8* %compare_dirs, align 1, !dbg !4989
  %tobool7 = trunc i8 %11 to i1, !dbg !4989
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !4989

if.then:                                          ; preds = %land.end
  %12 = load i8** %source.addr, align 8, !dbg !4991
  %call8 = call i8* @dir_name(i8* %12), !dbg !4991
  store i8* %call8, i8** %source_dirname, align 8, !dbg !4991
  %13 = load i8** %dest.addr, align 8, !dbg !4993
  %call9 = call i8* @dir_name(i8* %13), !dbg !4993
  store i8* %call9, i8** %dest_dirname, align 8, !dbg !4993
  %14 = load i8** %source_dirname, align 8, !dbg !4994
  %call10 = call i32 @stat(i8* %14, %struct.stat* %source_dir_stats) #6, !dbg !4994
  %tobool11 = icmp ne i32 %call10, 0, !dbg !4994
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !4994

if.then12:                                        ; preds = %if.then
  %call13 = call i32* @__errno_location() #1, !dbg !4996
  %15 = load i32* %call13, align 4, !dbg !4996
  %16 = load i8** %source_dirname, align 8, !dbg !4996
  call void (i32, i32, i8*, ...)* @error(i32 1, i32 %15, i8* getelementptr inbounds ([3 x i8]* @.str307, i32 0, i32 0), i8* %16), !dbg !4996
  br label %if.end, !dbg !4998

if.end:                                           ; preds = %if.then12, %if.then
  %17 = load i8** %dest_dirname, align 8, !dbg !4999
  %call14 = call i32 @stat(i8* %17, %struct.stat* %dest_dir_stats) #6, !dbg !4999
  %tobool15 = icmp ne i32 %call14, 0, !dbg !4999
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !4999

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #1, !dbg !5001
  %18 = load i32* %call17, align 4, !dbg !5001
  %19 = load i8** %dest_dirname, align 8, !dbg !5001
  call void (i32, i32, i8*, ...)* @error(i32 1, i32 %18, i8* getelementptr inbounds ([3 x i8]* @.str307, i32 0, i32 0), i8* %19), !dbg !5001
  br label %if.end18, !dbg !5003

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !5004
  %20 = load i64* %st_ino, align 8, !dbg !5004
  %st_ino19 = getelementptr inbounds %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !5004
  %21 = load i64* %st_ino19, align 8, !dbg !5004
  %cmp20 = icmp eq i64 %20, %21, !dbg !5004
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !5004

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !5004
  %22 = load i64* %st_dev, align 8, !dbg !5004
  %st_dev22 = getelementptr inbounds %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !5004
  %23 = load i64* %st_dev22, align 8, !dbg !5004
  %cmp23 = icmp eq i64 %22, %23, !dbg !5004
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %24 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ]
  %frombool25 = zext i1 %24 to i8
  store i8 %frombool25, i8* %same, align 1
  %25 = load i8** %source_dirname, align 8, !dbg !5005
  call void @free(i8* %25) #6, !dbg !5005
  %26 = load i8** %dest_dirname, align 8, !dbg !5006
  call void @free(i8* %26) #6, !dbg !5006
  br label %if.end26, !dbg !5007

if.end26:                                         ; preds = %land.end24, %land.end
  %27 = load i8* %same, align 1, !dbg !5008
  %tobool27 = trunc i8 %27 to i1, !dbg !5008
  ret i1 %tobool27, !dbg !5008
}

; Function Attrs: nounwind uwtable
define i8* @savedir(i8* %dir) #0 {
entry:
  %dir.addr = alloca i8*, align 8
  store i8* %dir, i8** %dir.addr, align 8
  %0 = load i8** %dir.addr, align 8, !dbg !5009
  %call = call %struct.__dirstream* @opendir(i8* %0), !dbg !5009
  %call1 = call i8* @savedirstream(%struct.__dirstream* %call), !dbg !5009
  ret i8* %call1, !dbg !5009
}

; Function Attrs: nounwind uwtable
define i8* @fdsavedir(i32 %fd) #0 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  %0 = load i32* %fd.addr, align 4, !dbg !5010
  %call = call %struct.__dirstream* @fdopendir(i32 %0), !dbg !5010
  %call1 = call i8* @savedirstream(%struct.__dirstream* %call), !dbg !5010
  ret i8* %call1, !dbg !5010
}

; Function Attrs: nounwind uwtable
define internal i8* @savedirstream(%struct.__dirstream* %dirp) #0 {
entry:
  %retval = alloca i8*, align 8
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %name_space = alloca i8*, align 8
  %allocated = alloca i64, align 8
  %used = alloca i64, align 8
  %save_errno = alloca i32, align 4
  %dp = alloca %struct.dirent*, align 8
  %entry1 = alloca i8*, align 8
  %entry_size = alloca i64, align 8
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8
  store i64 512, i64* %allocated, align 8, !dbg !5011
  store i64 0, i64* %used, align 8, !dbg !5012
  %0 = load %struct.__dirstream** %dirp.addr, align 8, !dbg !5013
  %cmp = icmp eq %struct.__dirstream* %0, null, !dbg !5013
  br i1 %cmp, label %if.then, label %if.end, !dbg !5013

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, !dbg !5015
  br label %return, !dbg !5015

if.end:                                           ; preds = %entry
  %1 = load i64* %allocated, align 8, !dbg !5016
  %call = call i8* @xmalloc(i64 %1), !dbg !5016
  store i8* %call, i8** %name_space, align 8, !dbg !5016
  br label %for.cond, !dbg !5017

for.cond:                                         ; preds = %cond.end, %if.end39, %if.end
  %call2 = call i32* @__errno_location() #1, !dbg !5019
  store i32 0, i32* %call2, align 4, !dbg !5019
  %2 = load %struct.__dirstream** %dirp.addr, align 8, !dbg !5021
  %call3 = call %struct.dirent* @readdir(%struct.__dirstream* %2), !dbg !5021
  store %struct.dirent* %call3, %struct.dirent** %dp, align 8, !dbg !5021
  %3 = load %struct.dirent** %dp, align 8, !dbg !5022
  %tobool = icmp ne %struct.dirent* %3, null, !dbg !5022
  br i1 %tobool, label %if.end5, label %for.end, !dbg !5022

if.end5:                                          ; preds = %for.cond
  %4 = load %struct.dirent** %dp, align 8, !dbg !5024
  %d_name = getelementptr inbounds %struct.dirent* %4, i32 0, i32 4, !dbg !5024
  %arraydecay = getelementptr inbounds [256 x i8]* %d_name, i32 0, i32 0, !dbg !5024
  store i8* %arraydecay, i8** %entry1, align 8, !dbg !5024
  %5 = load i8** %entry1, align 8, !dbg !5025
  %arrayidx = getelementptr inbounds i8* %5, i64 0, !dbg !5025
  %6 = load i8* %arrayidx, align 1, !dbg !5025
  %conv = sext i8 %6 to i32, !dbg !5025
  %cmp6 = icmp ne i32 %conv, 46, !dbg !5025
  br i1 %cmp6, label %cond.end, label %cond.false, !dbg !5025

cond.false:                                       ; preds = %if.end5
  %7 = load i8** %entry1, align 8, !dbg !5025
  %arrayidx8 = getelementptr inbounds i8* %7, i64 1, !dbg !5025
  %8 = load i8* %arrayidx8, align 1, !dbg !5025
  %conv9 = sext i8 %8 to i32, !dbg !5025
  %cmp10 = icmp ne i32 %conv9, 46, !dbg !5025
  %cond = select i1 %cmp10, i32 1, i32 2, !dbg !5025
  br label %cond.end, !dbg !5025

cond.end:                                         ; preds = %if.end5, %cond.false
  %cond12 = phi i32 [ %cond, %cond.false ], [ 0, %if.end5 ], !dbg !5025
  %idxprom = sext i32 %cond12 to i64, !dbg !5025
  %9 = load i8** %entry1, align 8, !dbg !5025
  %arrayidx13 = getelementptr inbounds i8* %9, i64 %idxprom, !dbg !5025
  %10 = load i8* %arrayidx13, align 1, !dbg !5025
  %conv14 = sext i8 %10 to i32, !dbg !5025
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !5025
  br i1 %cmp15, label %if.then17, label %for.cond, !dbg !5025

if.then17:                                        ; preds = %cond.end
  %11 = load %struct.dirent** %dp, align 8, !dbg !5027
  %d_name18 = getelementptr inbounds %struct.dirent* %11, i32 0, i32 4, !dbg !5027
  %arraydecay19 = getelementptr inbounds [256 x i8]* %d_name18, i32 0, i32 0, !dbg !5027
  %call20 = call i64 @strlen(i8* %arraydecay19) #18, !dbg !5027
  %add = add i64 %call20, 1, !dbg !5027
  store i64 %add, i64* %entry_size, align 8, !dbg !5027
  %12 = load i64* %used, align 8, !dbg !5029
  %13 = load i64* %entry_size, align 8, !dbg !5029
  %add21 = add i64 %12, %13, !dbg !5029
  %14 = load i64* %used, align 8, !dbg !5029
  %cmp22 = icmp ult i64 %add21, %14, !dbg !5029
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !5029

if.then24:                                        ; preds = %if.then17
  call void @xalloc_die() #19, !dbg !5031
  unreachable, !dbg !5031

if.end25:                                         ; preds = %if.then17
  %15 = load i64* %allocated, align 8, !dbg !5032
  %16 = load i64* %used, align 8, !dbg !5032
  %17 = load i64* %entry_size, align 8, !dbg !5032
  %add26 = add i64 %16, %17, !dbg !5032
  %cmp27 = icmp ule i64 %15, %add26, !dbg !5032
  br i1 %cmp27, label %do.body, label %if.end39, !dbg !5032

do.body:                                          ; preds = %if.end25, %if.end33
  %18 = load i64* %allocated, align 8, !dbg !5034
  %mul = mul i64 2, %18, !dbg !5034
  %19 = load i64* %allocated, align 8, !dbg !5034
  %cmp30 = icmp ult i64 %mul, %19, !dbg !5034
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !5034

if.then32:                                        ; preds = %do.body
  call void @xalloc_die() #19, !dbg !5038
  unreachable, !dbg !5038

if.end33:                                         ; preds = %do.body
  %20 = load i64* %allocated, align 8, !dbg !5039
  %mul34 = mul i64 %20, 2, !dbg !5039
  store i64 %mul34, i64* %allocated, align 8, !dbg !5039
  %21 = load i64* %allocated, align 8, !dbg !5040
  %22 = load i64* %used, align 8, !dbg !5040
  %23 = load i64* %entry_size, align 8, !dbg !5040
  %add35 = add i64 %22, %23, !dbg !5040
  %cmp36 = icmp ule i64 %21, %add35, !dbg !5040
  br i1 %cmp36, label %do.body, label %do.end, !dbg !5040

do.end:                                           ; preds = %if.end33
  %24 = load i8** %name_space, align 8, !dbg !5041
  %25 = load i64* %allocated, align 8, !dbg !5041
  %call38 = call i8* @xrealloc(i8* %24, i64 %25), !dbg !5041
  store i8* %call38, i8** %name_space, align 8, !dbg !5041
  br label %if.end39, !dbg !5042

if.end39:                                         ; preds = %do.end, %if.end25
  %26 = load i8** %name_space, align 8, !dbg !5043
  %27 = load i64* %used, align 8, !dbg !5043
  %add.ptr = getelementptr inbounds i8* %26, i64 %27, !dbg !5043
  %28 = load i8** %entry1, align 8, !dbg !5043
  %29 = load i64* %entry_size, align 8, !dbg !5043
  %30 = call i8* @memcpy(i8* %add.ptr, i8* %28, i64 %29)
  %31 = load i64* %entry_size, align 8, !dbg !5044
  %32 = load i64* %used, align 8, !dbg !5044
  %add40 = add i64 %32, %31, !dbg !5044
  store i64 %add40, i64* %used, align 8, !dbg !5044
  br label %for.cond, !dbg !5045

for.end:                                          ; preds = %for.cond
  %33 = load i64* %used, align 8, !dbg !5046
  %34 = load i8** %name_space, align 8, !dbg !5046
  %arrayidx42 = getelementptr inbounds i8* %34, i64 %33, !dbg !5046
  store i8 0, i8* %arrayidx42, align 1, !dbg !5046
  %call43 = call i32* @__errno_location() #1, !dbg !5047
  %35 = load i32* %call43, align 4, !dbg !5047
  store i32 %35, i32* %save_errno, align 4, !dbg !5047
  %36 = load %struct.__dirstream** %dirp.addr, align 8, !dbg !5048
  %call44 = call i32 @closedir(%struct.__dirstream* %36), !dbg !5048
  %cmp45 = icmp ne i32 %call44, 0, !dbg !5048
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !5048

if.then47:                                        ; preds = %for.end
  %call48 = call i32* @__errno_location() #1, !dbg !5050
  %37 = load i32* %call48, align 4, !dbg !5050
  store i32 %37, i32* %save_errno, align 4, !dbg !5050
  br label %if.end49, !dbg !5050

if.end49:                                         ; preds = %if.then47, %for.end
  %38 = load i32* %save_errno, align 4, !dbg !5051
  %cmp50 = icmp ne i32 %38, 0, !dbg !5051
  %39 = load i8** %name_space, align 8, !dbg !5053
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !5051

if.then52:                                        ; preds = %if.end49
  call void @free(i8* %39) #6, !dbg !5053
  %40 = load i32* %save_errno, align 4, !dbg !5055
  %call53 = call i32* @__errno_location() #1, !dbg !5055
  store i32 %40, i32* %call53, align 4, !dbg !5055
  store i8* null, i8** %retval, !dbg !5056
  br label %return, !dbg !5056

if.end54:                                         ; preds = %if.end49
  store i8* %39, i8** %retval, !dbg !5057
  br label %return, !dbg !5057

return:                                           ; preds = %if.end54, %if.then52, %if.then
  %41 = load i8** %retval, !dbg !5058
  ret i8* %41, !dbg !5058
}

; Function Attrs: nounwind uwtable
define zeroext i1 @strip_trailing_slashes(i8* %file) #0 {
entry:
  %file.addr = alloca i8*, align 8
  %base = alloca i8*, align 8
  %base_lim = alloca i8*, align 8
  %had_slash = alloca i8, align 1
  store i8* %file, i8** %file.addr, align 8
  %0 = load i8** %file.addr, align 8, !dbg !5059
  %call = call i8* @last_component(i8* %0), !dbg !5059
  store i8* %call, i8** %base, align 8, !dbg !5059
  %1 = load i8** %base, align 8, !dbg !5060
  %2 = load i8* %1, align 1, !dbg !5060
  %tobool = icmp ne i8 %2, 0, !dbg !5060
  br i1 %tobool, label %if.end, label %if.then, !dbg !5060

if.then:                                          ; preds = %entry
  %3 = load i8** %file.addr, align 8, !dbg !5062
  store i8* %3, i8** %base, align 8, !dbg !5062
  br label %if.end, !dbg !5062

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8** %base, align 8, !dbg !5063
  %5 = load i8** %base, align 8, !dbg !5063
  %call1 = call i64 @base_len(i8* %5), !dbg !5063
  %add.ptr = getelementptr inbounds i8* %4, i64 %call1, !dbg !5063
  store i8* %add.ptr, i8** %base_lim, align 8, !dbg !5063
  %6 = load i8** %base_lim, align 8, !dbg !5064
  %7 = load i8* %6, align 1, !dbg !5064
  %conv = sext i8 %7 to i32, !dbg !5064
  %cmp = icmp ne i32 %conv, 0, !dbg !5064
  %frombool = zext i1 %cmp to i8, !dbg !5064
  store i8 %frombool, i8* %had_slash, align 1, !dbg !5064
  %8 = load i8** %base_lim, align 8, !dbg !5065
  store i8 0, i8* %8, align 1, !dbg !5065
  %9 = load i8* %had_slash, align 1, !dbg !5066
  %tobool3 = trunc i8 %9 to i1, !dbg !5066
  ret i1 %tobool3, !dbg !5066
}

; Function Attrs: nounwind uwtable
define i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #0 {
entry:
  %retval = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  %dst_s = alloca i64, align 8
  %src_s = alloca i64, align 8
  %dst_ns = alloca i32, align 4
  %src_ns = alloca i32, align 4
  %dst_res = alloca %struct.fs_res*, align 8
  %res = alloca i32, align 4
  %dst_a_s = alloca i64, align 8
  %dst_c_s = alloca i64, align 8
  %dst_m_s = alloca i64, align 8
  %dst_a_ns = alloca i32, align 4
  %dst_c_ns = alloca i32, align 4
  %dst_m_ns = alloca i32, align 4
  %odd_second = alloca i8, align 1
  %a = alloca i32, align 4
  %c = alloca i32, align 4
  %m = alloca i32, align 4
  %SR10 = alloca i32, align 4
  %timespec = alloca [2 x %struct.timespec], align 16
  %dst_status = alloca %struct.stat, align 8
  %s = alloca i64, align 8
  %stat_result = alloca i32, align 4
  %old_res = alloca i32, align 4
  %a139 = alloca i32, align 4
  store i8* %dst_name, i8** %dst_name.addr, align 8
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8
  store i32 %options, i32* %options.addr, align 4
  %0 = load %struct.stat** %dst_stat.addr, align 8, !dbg !5067
  %st_mtim = getelementptr inbounds %struct.stat* %0, i32 0, i32 12, !dbg !5067
  %tv_sec = getelementptr inbounds %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !5067
  %1 = load i64* %tv_sec, align 8, !dbg !5067
  store i64 %1, i64* %dst_s, align 8, !dbg !5067
  %2 = load %struct.stat** %src_stat.addr, align 8, !dbg !5068
  %st_mtim1 = getelementptr inbounds %struct.stat* %2, i32 0, i32 12, !dbg !5068
  %tv_sec2 = getelementptr inbounds %struct.timespec* %st_mtim1, i32 0, i32 0, !dbg !5068
  %3 = load i64* %tv_sec2, align 8, !dbg !5068
  store i64 %3, i64* %src_s, align 8, !dbg !5068
  %4 = load %struct.stat** %dst_stat.addr, align 8, !dbg !5069
  %call = call i64 @get_stat_mtime_ns(%struct.stat* %4), !dbg !5069
  %conv = trunc i64 %call to i32, !dbg !5069
  store i32 %conv, i32* %dst_ns, align 4, !dbg !5069
  %5 = load %struct.stat** %src_stat.addr, align 8, !dbg !5070
  %call3 = call i64 @get_stat_mtime_ns(%struct.stat* %5), !dbg !5070
  %conv4 = trunc i64 %call3 to i32, !dbg !5070
  store i32 %conv4, i32* %src_ns, align 4, !dbg !5070
  %6 = load i32* %options.addr, align 4, !dbg !5071
  %and = and i32 %6, 1, !dbg !5071
  %tobool = icmp ne i32 %and, 0, !dbg !5071
  br i1 %tobool, label %if.then, label %if.end177, !dbg !5071

if.then:                                          ; preds = %entry
  %7 = load %struct.hash_table** @utimecmp.ht, align 8, !dbg !5073
  %tobool5 = icmp ne %struct.hash_table* %7, null, !dbg !5073
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !5073

if.then6:                                         ; preds = %if.then
  %call7 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free), !dbg !5076
  store %struct.hash_table* %call7, %struct.hash_table** @utimecmp.ht, align 8, !dbg !5076
  br label %if.end, !dbg !5076

if.end:                                           ; preds = %if.then6, %if.then
  %8 = load %struct.fs_res** @utimecmp.new_dst_res, align 8, !dbg !5077
  %tobool8 = icmp ne %struct.fs_res* %8, null, !dbg !5077
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !5077

if.then9:                                         ; preds = %if.end
  %call10 = call i8* @xmalloc(i64 16), !dbg !5079
  %9 = bitcast i8* %call10 to %struct.fs_res*, !dbg !5079
  store %struct.fs_res* %9, %struct.fs_res** @utimecmp.new_dst_res, align 8, !dbg !5079
  %10 = load %struct.fs_res** @utimecmp.new_dst_res, align 8, !dbg !5081
  %resolution = getelementptr inbounds %struct.fs_res* %10, i32 0, i32 1, !dbg !5081
  store i32 2000000000, i32* %resolution, align 4, !dbg !5081
  %11 = load %struct.fs_res** @utimecmp.new_dst_res, align 8, !dbg !5082
  %exact = getelementptr inbounds %struct.fs_res* %11, i32 0, i32 2, !dbg !5082
  store i8 0, i8* %exact, align 1, !dbg !5082
  br label %if.end11, !dbg !5083

if.end11:                                         ; preds = %if.then9, %if.end
  %12 = load %struct.stat** %dst_stat.addr, align 8, !dbg !5084
  %st_dev = getelementptr inbounds %struct.stat* %12, i32 0, i32 0, !dbg !5084
  %13 = load i64* %st_dev, align 8, !dbg !5084
  %14 = load %struct.fs_res** @utimecmp.new_dst_res, align 8, !dbg !5084
  %dev = getelementptr inbounds %struct.fs_res* %14, i32 0, i32 0, !dbg !5084
  store i64 %13, i64* %dev, align 8, !dbg !5084
  %15 = load %struct.hash_table** @utimecmp.ht, align 8, !dbg !5085
  %16 = load %struct.fs_res** @utimecmp.new_dst_res, align 8, !dbg !5085
  %17 = bitcast %struct.fs_res* %16 to i8*, !dbg !5085
  %call12 = call i8* @hash_insert(%struct.hash_table* %15, i8* %17), !dbg !5085
  %18 = bitcast i8* %call12 to %struct.fs_res*, !dbg !5085
  store %struct.fs_res* %18, %struct.fs_res** %dst_res, align 8, !dbg !5085
  %19 = load %struct.fs_res** %dst_res, align 8, !dbg !5086
  %tobool13 = icmp ne %struct.fs_res* %19, null, !dbg !5086
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !5086

if.then14:                                        ; preds = %if.end11
  call void @xalloc_die() #19, !dbg !5088
  unreachable, !dbg !5088

if.end15:                                         ; preds = %if.end11
  %20 = load %struct.fs_res** %dst_res, align 8, !dbg !5089
  %21 = load %struct.fs_res** @utimecmp.new_dst_res, align 8, !dbg !5089
  %cmp = icmp eq %struct.fs_res* %20, %21, !dbg !5089
  br i1 %cmp, label %if.then17, label %if.end18, !dbg !5089

if.then17:                                        ; preds = %if.end15
  store %struct.fs_res* null, %struct.fs_res** @utimecmp.new_dst_res, align 8, !dbg !5091
  br label %if.end18, !dbg !5093

if.end18:                                         ; preds = %if.then17, %if.end15
  %22 = load %struct.fs_res** %dst_res, align 8, !dbg !5094
  %resolution19 = getelementptr inbounds %struct.fs_res* %22, i32 0, i32 1, !dbg !5094
  %23 = load i32* %resolution19, align 4, !dbg !5094
  store i32 %23, i32* %res, align 4, !dbg !5094
  %24 = load %struct.fs_res** %dst_res, align 8, !dbg !5095
  %exact20 = getelementptr inbounds %struct.fs_res* %24, i32 0, i32 2, !dbg !5095
  %25 = load i8* %exact20, align 1, !dbg !5095
  %tobool21 = trunc i8 %25 to i1, !dbg !5095
  br i1 %tobool21, label %if.end169, label %if.then22, !dbg !5095

if.then22:                                        ; preds = %if.end18
  %26 = load %struct.stat** %dst_stat.addr, align 8, !dbg !5097
  %st_atim = getelementptr inbounds %struct.stat* %26, i32 0, i32 11, !dbg !5097
  %tv_sec23 = getelementptr inbounds %struct.timespec* %st_atim, i32 0, i32 0, !dbg !5097
  %27 = load i64* %tv_sec23, align 8, !dbg !5097
  store i64 %27, i64* %dst_a_s, align 8, !dbg !5097
  %28 = load %struct.stat** %dst_stat.addr, align 8, !dbg !5099
  %st_ctim = getelementptr inbounds %struct.stat* %28, i32 0, i32 13, !dbg !5099
  %tv_sec24 = getelementptr inbounds %struct.timespec* %st_ctim, i32 0, i32 0, !dbg !5099
  %29 = load i64* %tv_sec24, align 8, !dbg !5099
  store i64 %29, i64* %dst_c_s, align 8, !dbg !5099
  %30 = load i64* %dst_s, align 8, !dbg !5100
  store i64 %30, i64* %dst_m_s, align 8, !dbg !5100
  %31 = load %struct.stat** %dst_stat.addr, align 8, !dbg !5101
  %call25 = call i64 @get_stat_atime_ns(%struct.stat* %31), !dbg !5101
  %conv26 = trunc i64 %call25 to i32, !dbg !5101
  store i32 %conv26, i32* %dst_a_ns, align 4, !dbg !5101
  %32 = load %struct.stat** %dst_stat.addr, align 8, !dbg !5102
  %call27 = call i64 @get_stat_ctime_ns(%struct.stat* %32), !dbg !5102
  %conv28 = trunc i64 %call27 to i32, !dbg !5102
  store i32 %conv28, i32* %dst_c_ns, align 4, !dbg !5102
  %33 = load i32* %dst_ns, align 4, !dbg !5103
  store i32 %33, i32* %dst_m_ns, align 4, !dbg !5103
  %34 = load i64* %dst_a_s, align 8, !dbg !5104
  %35 = load i64* %dst_c_s, align 8, !dbg !5104
  %or = or i64 %34, %35, !dbg !5104
  %36 = load i64* %dst_m_s, align 8, !dbg !5104
  %or29 = or i64 %or, %36, !dbg !5104
  %and30 = and i64 %or29, 1, !dbg !5104
  %tobool31 = icmp ne i64 %and30, 0, !dbg !5104
  %frombool = zext i1 %tobool31 to i8, !dbg !5104
  store i8 %frombool, i8* %odd_second, align 1, !dbg !5104
  %37 = load i32* %dst_a_ns, align 4, !dbg !5106
  store i32 %37, i32* %a, align 4, !dbg !5106
  %38 = load i32* %dst_c_ns, align 4, !dbg !5109
  store i32 %38, i32* %c, align 4, !dbg !5109
  %39 = load i32* %dst_m_ns, align 4, !dbg !5110
  store i32 %39, i32* %m, align 4, !dbg !5110
  store i32 1000, i32* %SR10, align 4, !dbg !5111
  %40 = load i32* %SR10, align 4, !dbg !5111
  %mul = mul nsw i32 %40, 10, !dbg !5111
  store i32 %mul, i32* %SR10, align 4, !dbg !5111
  %41 = load i32* %a, align 4, !dbg !5112
  %42 = load i32* %SR10, align 4, !dbg !5112
  %int_cast_to_i64 = zext i32 %42 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !5112
  %rem = srem i32 %41, %42, !dbg !5112
  %43 = load i32* %c, align 4, !dbg !5112
  %44 = load i32* %SR10, align 4, !dbg !5112
  %int_cast_to_i641 = zext i32 %44 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !5112
  %rem32 = srem i32 %43, %44, !dbg !5112
  %or33 = or i32 %rem, %rem32, !dbg !5112
  %45 = load i32* %m, align 4, !dbg !5112
  %46 = load i32* %SR10, align 4, !dbg !5112
  %int_cast_to_i642 = zext i32 %46 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i642), !dbg !5112
  %rem34 = srem i32 %45, %46, !dbg !5112
  %or35 = or i32 %or33, %rem34, !dbg !5112
  %cmp36 = icmp ne i32 %or35, 0, !dbg !5112
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !5112

if.then38:                                        ; preds = %if.then22
  store i32 1000, i32* %res, align 4, !dbg !5114
  br label %if.end63, !dbg !5114

if.else:                                          ; preds = %if.then22
  %47 = load i32* %SR10, align 4, !dbg !5115
  store i32 %47, i32* %res, align 4, !dbg !5115
  %48 = load i32* %SR10, align 4, !dbg !5115
  %49 = load i32* %a, align 4, !dbg !5115
  %int_cast_to_i643 = zext i32 %48 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i643), !dbg !5115
  %div = sdiv i32 %49, %48, !dbg !5115
  store i32 %div, i32* %a, align 4, !dbg !5115
  %50 = load i32* %SR10, align 4, !dbg !5115
  %51 = load i32* %c, align 4, !dbg !5115
  %int_cast_to_i644 = zext i32 %50 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i644), !dbg !5115
  %div39 = sdiv i32 %51, %50, !dbg !5115
  store i32 %div39, i32* %c, align 4, !dbg !5115
  %52 = load i32* %SR10, align 4, !dbg !5115
  %53 = load i32* %m, align 4, !dbg !5115
  %int_cast_to_i645 = zext i32 %52 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i645), !dbg !5115
  %div40 = sdiv i32 %53, %52, !dbg !5115
  store i32 %div40, i32* %m, align 4, !dbg !5115
  br label %for.cond, !dbg !5115

for.cond:                                         ; preds = %for.inc, %if.else
  %54 = load i32* %res, align 4, !dbg !5115
  %55 = load %struct.fs_res** %dst_res, align 8, !dbg !5115
  %resolution41 = getelementptr inbounds %struct.fs_res* %55, i32 0, i32 1, !dbg !5115
  %56 = load i32* %resolution41, align 4, !dbg !5115
  %cmp42 = icmp slt i32 %54, %56, !dbg !5115
  br i1 %cmp42, label %land.lhs.true, label %if.end63, !dbg !5115

land.lhs.true:                                    ; preds = %for.cond
  %57 = load i32* %a, align 4, !dbg !5115
  %int_cast_to_i646 = zext i32 10 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i646), !dbg !5115
  %rem44 = srem i32 %57, 10, !dbg !5115
  %58 = load i32* %c, align 4, !dbg !5115
  %int_cast_to_i647 = zext i32 10 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i647), !dbg !5115
  %rem45 = srem i32 %58, 10, !dbg !5115
  %or46 = or i32 %rem44, %rem45, !dbg !5115
  %59 = load i32* %m, align 4, !dbg !5115
  %int_cast_to_i648 = zext i32 10 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i648), !dbg !5115
  %rem47 = srem i32 %59, 10, !dbg !5115
  %or48 = or i32 %or46, %rem47, !dbg !5115
  %cmp49 = icmp eq i32 %or48, 0, !dbg !5115
  br i1 %cmp49, label %for.body, label %if.end63, !dbg !5115

for.body:                                         ; preds = %land.lhs.true
  %60 = load i32* %res, align 4, !dbg !5117
  %cmp51 = icmp eq i32 %60, 1000000000, !dbg !5117
  br i1 %cmp51, label %if.then53, label %for.inc, !dbg !5117

if.then53:                                        ; preds = %for.body
  %61 = load i8* %odd_second, align 1, !dbg !5119
  %tobool54 = trunc i8 %61 to i1, !dbg !5119
  br i1 %tobool54, label %if.end63, label %if.then55, !dbg !5119

if.then55:                                        ; preds = %if.then53
  %62 = load i32* %res, align 4, !dbg !5122
  %mul56 = mul nsw i32 %62, 2, !dbg !5122
  store i32 %mul56, i32* %res, align 4, !dbg !5122
  br label %if.end63, !dbg !5122

for.inc:                                          ; preds = %for.body
  %63 = load i32* %res, align 4, !dbg !5123
  %mul59 = mul nsw i32 %63, 10, !dbg !5123
  store i32 %mul59, i32* %res, align 4, !dbg !5123
  %64 = load i32* %a, align 4, !dbg !5123
  %int_cast_to_i649 = zext i32 10 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i649), !dbg !5123
  %div60 = sdiv i32 %64, 10, !dbg !5123
  store i32 %div60, i32* %a, align 4, !dbg !5123
  %65 = load i32* %c, align 4, !dbg !5123
  %int_cast_to_i6410 = zext i32 10 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i6410), !dbg !5123
  %div61 = sdiv i32 %65, 10, !dbg !5123
  store i32 %div61, i32* %c, align 4, !dbg !5123
  %66 = load i32* %m, align 4, !dbg !5123
  %int_cast_to_i6411 = zext i32 10 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i6411), !dbg !5123
  %div62 = sdiv i32 %66, 10, !dbg !5123
  store i32 %div62, i32* %m, align 4, !dbg !5123
  br label %for.cond, !dbg !5123

if.end63:                                         ; preds = %for.cond, %land.lhs.true, %if.then55, %if.then53, %if.then38
  %67 = load i32* %res, align 4, !dbg !5124
  %68 = load %struct.fs_res** %dst_res, align 8, !dbg !5124
  %resolution64 = getelementptr inbounds %struct.fs_res* %68, i32 0, i32 1, !dbg !5124
  store i32 %67, i32* %resolution64, align 4, !dbg !5124
  %69 = load i32* %res, align 4, !dbg !5125
  %cmp65 = icmp slt i32 1000, %69, !dbg !5125
  br i1 %cmp65, label %if.then67, label %if.end166, !dbg !5125

if.then67:                                        ; preds = %if.end63
  %70 = load i32* %src_ns, align 4, !dbg !5127
  %int_cast_to_i6412 = zext i32 1000 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i6412), !dbg !5127
  %rem68 = srem i32 %70, 1000, !dbg !5127
  %71 = load i32* %src_ns, align 4, !dbg !5127
  %sub = sub nsw i32 %71, %rem68, !dbg !5127
  store i32 %sub, i32* %src_ns, align 4, !dbg !5127
  %72 = load i64* %src_s, align 8, !dbg !5129
  %73 = load i32* %res, align 4, !dbg !5129
  %cmp69 = icmp eq i32 %73, 2000000000, !dbg !5129
  %conv70 = zext i1 %cmp69 to i32, !dbg !5129
  %neg = xor i32 %conv70, -1, !dbg !5129
  %conv71 = sext i32 %neg to i64, !dbg !5129
  %and72 = and i64 %72, %conv71, !dbg !5129
  store i64 %and72, i64* %s, align 8, !dbg !5129
  %74 = load i64* %src_s, align 8, !dbg !5131
  %75 = load i64* %dst_s, align 8, !dbg !5131
  %cmp73 = icmp slt i64 %74, %75, !dbg !5131
  br i1 %cmp73, label %if.then80, label %lor.lhs.false, !dbg !5131

lor.lhs.false:                                    ; preds = %if.then67
  %76 = load i64* %src_s, align 8, !dbg !5131
  %77 = load i64* %dst_s, align 8, !dbg !5131
  %cmp75 = icmp eq i64 %76, %77, !dbg !5131
  br i1 %cmp75, label %land.lhs.true77, label %if.end81, !dbg !5131

land.lhs.true77:                                  ; preds = %lor.lhs.false
  %78 = load i32* %src_ns, align 4, !dbg !5131
  %79 = load i32* %dst_ns, align 4, !dbg !5131
  %cmp78 = icmp sle i32 %78, %79, !dbg !5131
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !5131

if.then80:                                        ; preds = %land.lhs.true77, %if.then67
  store i32 1, i32* %retval, !dbg !5133
  br label %return, !dbg !5133

if.end81:                                         ; preds = %land.lhs.true77, %lor.lhs.false
  %80 = load i64* %dst_s, align 8, !dbg !5134
  %81 = load i64* %s, align 8, !dbg !5134
  %cmp82 = icmp slt i64 %80, %81, !dbg !5134
  br i1 %cmp82, label %if.then92, label %lor.lhs.false84, !dbg !5134

lor.lhs.false84:                                  ; preds = %if.end81
  %82 = load i64* %dst_s, align 8, !dbg !5134
  %83 = load i64* %s, align 8, !dbg !5134
  %cmp85 = icmp eq i64 %82, %83, !dbg !5134
  br i1 %cmp85, label %land.lhs.true87, label %if.end93, !dbg !5134

land.lhs.true87:                                  ; preds = %lor.lhs.false84
  %84 = load i32* %dst_ns, align 4, !dbg !5134
  %85 = load i32* %src_ns, align 4, !dbg !5134
  %86 = load i32* %src_ns, align 4, !dbg !5134
  %87 = load i32* %res, align 4, !dbg !5134
  %int_cast_to_i6413 = zext i32 %87 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i6413), !dbg !5134
  %rem88 = srem i32 %86, %87, !dbg !5134
  %sub89 = sub nsw i32 %85, %rem88, !dbg !5134
  %cmp90 = icmp slt i32 %84, %sub89, !dbg !5134
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !5134

if.then92:                                        ; preds = %land.lhs.true87, %if.end81
  store i32 -1, i32* %retval, !dbg !5136
  br label %return, !dbg !5136

if.end93:                                         ; preds = %land.lhs.true87, %lor.lhs.false84
  %88 = load i64* %dst_a_s, align 8, !dbg !5137
  %arrayidx = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i64 0, !dbg !5137
  %tv_sec94 = getelementptr inbounds %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !5137
  store i64 %88, i64* %tv_sec94, align 8, !dbg !5137
  %89 = load i32* %dst_a_ns, align 4, !dbg !5138
  %conv95 = sext i32 %89 to i64, !dbg !5138
  %arrayidx96 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i64 0, !dbg !5138
  %tv_nsec = getelementptr inbounds %struct.timespec* %arrayidx96, i32 0, i32 1, !dbg !5138
  store i64 %conv95, i64* %tv_nsec, align 8, !dbg !5138
  %90 = load i64* %dst_m_s, align 8, !dbg !5139
  %91 = load i32* %res, align 4, !dbg !5139
  %cmp97 = icmp eq i32 %91, 2000000000, !dbg !5139
  %conv98 = zext i1 %cmp97 to i32, !dbg !5139
  %conv99 = sext i32 %conv98 to i64, !dbg !5139
  %or100 = or i64 %90, %conv99, !dbg !5139
  %arrayidx101 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i64 1, !dbg !5139
  %tv_sec102 = getelementptr inbounds %struct.timespec* %arrayidx101, i32 0, i32 0, !dbg !5139
  store i64 %or100, i64* %tv_sec102, align 8, !dbg !5139
  %92 = load i32* %dst_m_ns, align 4, !dbg !5140
  %93 = load i32* %res, align 4, !dbg !5140
  %int_cast_to_i6414 = zext i32 9 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i6414), !dbg !5140
  %div103 = sdiv i32 %93, 9, !dbg !5140
  %add = add nsw i32 %92, %div103, !dbg !5140
  %conv104 = sext i32 %add to i64, !dbg !5140
  %arrayidx105 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i64 1, !dbg !5140
  %tv_nsec106 = getelementptr inbounds %struct.timespec* %arrayidx105, i32 0, i32 1, !dbg !5140
  store i64 %conv104, i64* %tv_nsec106, align 8, !dbg !5140
  %94 = load %struct.stat** %dst_stat.addr, align 8, !dbg !5141
  %st_mode = getelementptr inbounds %struct.stat* %94, i32 0, i32 3, !dbg !5141
  %95 = load i32* %st_mode, align 4, !dbg !5141
  %and107 = and i32 %95, 61440, !dbg !5141
  %cmp108 = icmp eq i32 %and107, 40960, !dbg !5141
  br i1 %cmp108, label %if.then114, label %lor.lhs.false110, !dbg !5141

lor.lhs.false110:                                 ; preds = %if.end93
  %96 = load i8** %dst_name.addr, align 8, !dbg !5143
  %arraydecay = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i32 0, !dbg !5143
  %call111 = call i32 @utimens1(i8* %96, %struct.timespec* %arraydecay), !dbg !5143
  %cmp112 = icmp ne i32 %call111, 0, !dbg !5143
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !5143

if.then114:                                       ; preds = %lor.lhs.false110, %if.end93
  store i32 -2, i32* %retval, !dbg !5144
  br label %return, !dbg !5144

if.end115:                                        ; preds = %lor.lhs.false110
  %97 = load i8** %dst_name.addr, align 8, !dbg !5145
  %call116 = call i32 @stat(i8* %97, %struct.stat* %dst_status) #6, !dbg !5145
  store i32 %call116, i32* %stat_result, align 4, !dbg !5145
  %98 = load i32* %stat_result, align 4, !dbg !5147
  %conv117 = sext i32 %98 to i64, !dbg !5147
  %st_mtim118 = getelementptr inbounds %struct.stat* %dst_status, i32 0, i32 12, !dbg !5147
  %tv_sec119 = getelementptr inbounds %struct.timespec* %st_mtim118, i32 0, i32 0, !dbg !5147
  %99 = load i64* %tv_sec119, align 8, !dbg !5147
  %100 = load i64* %dst_m_s, align 8, !dbg !5147
  %xor = xor i64 %99, %100, !dbg !5147
  %or120 = or i64 %conv117, %xor, !dbg !5147
  %call121 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status), !dbg !5149
  %101 = load i32* %dst_m_ns, align 4, !dbg !5149
  %conv122 = sext i32 %101 to i64, !dbg !5149
  %xor123 = xor i64 %call121, %conv122, !dbg !5149
  %or124 = or i64 %or120, %xor123, !dbg !5149
  %tobool125 = icmp ne i64 %or124, 0, !dbg !5149
  br i1 %tobool125, label %if.then126, label %if.end134, !dbg !5149

if.then126:                                       ; preds = %if.end115
  %102 = load i64* %dst_m_s, align 8, !dbg !5150
  %arrayidx127 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i64 1, !dbg !5150
  %tv_sec128 = getelementptr inbounds %struct.timespec* %arrayidx127, i32 0, i32 0, !dbg !5150
  store i64 %102, i64* %tv_sec128, align 8, !dbg !5150
  %103 = load i32* %dst_m_ns, align 4, !dbg !5152
  %conv129 = sext i32 %103 to i64, !dbg !5152
  %arrayidx130 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i64 1, !dbg !5152
  %tv_nsec131 = getelementptr inbounds %struct.timespec* %arrayidx130, i32 0, i32 1, !dbg !5152
  store i64 %conv129, i64* %tv_nsec131, align 8, !dbg !5152
  %104 = load i8** %dst_name.addr, align 8, !dbg !5153
  %arraydecay132 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i32 0, i32 0, !dbg !5153
  %call133 = call i32 @utimens1(i8* %104, %struct.timespec* %arraydecay132), !dbg !5153
  br label %if.end134, !dbg !5154

if.end134:                                        ; preds = %if.then126, %if.end115
  %105 = load i32* %stat_result, align 4, !dbg !5155
  %cmp135 = icmp ne i32 %105, 0, !dbg !5155
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !5155

if.then137:                                       ; preds = %if.end134
  store i32 -2, i32* %retval, !dbg !5157
  br label %return, !dbg !5157

if.end138:                                        ; preds = %if.end134
  %106 = load i32* %res, align 4, !dbg !5158
  store i32 %106, i32* %old_res, align 4, !dbg !5158
  %st_mtim140 = getelementptr inbounds %struct.stat* %dst_status, i32 0, i32 12, !dbg !5160
  %tv_sec141 = getelementptr inbounds %struct.timespec* %st_mtim140, i32 0, i32 0, !dbg !5160
  %107 = load i64* %tv_sec141, align 8, !dbg !5160
  %and142 = and i64 %107, 1, !dbg !5160
  %mul143 = mul nsw i64 1000000000, %and142, !dbg !5160
  %call144 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status), !dbg !5161
  %add145 = add nsw i64 %mul143, %call144, !dbg !5161
  %conv146 = trunc i64 %add145 to i32, !dbg !5161
  store i32 %conv146, i32* %a139, align 4, !dbg !5161
  store i32 1000, i32* %res, align 4, !dbg !5162
  %108 = load i32* %res, align 4, !dbg !5163
  %109 = load i32* %a139, align 4, !dbg !5163
  %int_cast_to_i6415 = zext i32 %108 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i6415), !dbg !5163
  %div147 = sdiv i32 %109, %108, !dbg !5163
  store i32 %div147, i32* %a139, align 4, !dbg !5163
  br label %for.cond148, !dbg !5163

for.cond148:                                      ; preds = %for.inc163, %if.end138
  %110 = load i32* %a139, align 4, !dbg !5163
  %int_cast_to_i6416 = zext i32 10 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i6416), !dbg !5163
  %rem149 = srem i32 %110, 10, !dbg !5163
  %cmp150 = icmp ne i32 %rem149, 0, !dbg !5163
  br i1 %cmp150, label %for.body152, label %if.end166, !dbg !5163

for.body152:                                      ; preds = %for.cond148
  %111 = load i32* %res, align 4, !dbg !5165
  %cmp153 = icmp eq i32 %111, 1000000000, !dbg !5165
  %112 = load i32* %res, align 4, !dbg !5168
  br i1 %cmp153, label %if.then155, label %if.end157, !dbg !5165

if.then155:                                       ; preds = %for.body152
  %mul156 = mul nsw i32 %112, 2, !dbg !5168
  store i32 %mul156, i32* %res, align 4, !dbg !5168
  br label %if.end166, !dbg !5170

if.end157:                                        ; preds = %for.body152
  %mul158 = mul nsw i32 %112, 10, !dbg !5171
  store i32 %mul158, i32* %res, align 4, !dbg !5171
  %113 = load i32* %res, align 4, !dbg !5172
  %114 = load i32* %old_res, align 4, !dbg !5172
  %cmp159 = icmp eq i32 %113, %114, !dbg !5172
  br i1 %cmp159, label %if.end166, label %for.inc163, !dbg !5172

for.inc163:                                       ; preds = %if.end157
  %115 = load i32* %a139, align 4, !dbg !5163
  %int_cast_to_i6417 = zext i32 10 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i6417), !dbg !5163
  %div164 = sdiv i32 %115, 10, !dbg !5163
  store i32 %div164, i32* %a139, align 4, !dbg !5163
  br label %for.cond148, !dbg !5163

if.end166:                                        ; preds = %for.cond148, %if.then155, %if.end157, %if.end63
  %116 = load i32* %res, align 4, !dbg !5174
  %117 = load %struct.fs_res** %dst_res, align 8, !dbg !5174
  %resolution167 = getelementptr inbounds %struct.fs_res* %117, i32 0, i32 1, !dbg !5174
  store i32 %116, i32* %resolution167, align 4, !dbg !5174
  %118 = load %struct.fs_res** %dst_res, align 8, !dbg !5175
  %exact168 = getelementptr inbounds %struct.fs_res* %118, i32 0, i32 2, !dbg !5175
  store i8 1, i8* %exact168, align 1, !dbg !5175
  br label %if.end169, !dbg !5176

if.end169:                                        ; preds = %if.end166, %if.end18
  %119 = load i32* %res, align 4, !dbg !5177
  %cmp170 = icmp eq i32 %119, 2000000000, !dbg !5177
  %conv171 = zext i1 %cmp170 to i32, !dbg !5177
  %neg172 = xor i32 %conv171, -1, !dbg !5177
  %conv173 = sext i32 %neg172 to i64, !dbg !5177
  %120 = load i64* %src_s, align 8, !dbg !5177
  %and174 = and i64 %120, %conv173, !dbg !5177
  store i64 %and174, i64* %src_s, align 8, !dbg !5177
  %121 = load i32* %src_ns, align 4, !dbg !5178
  %122 = load i32* %res, align 4, !dbg !5178
  %int_cast_to_i6418 = zext i32 %122 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i6418), !dbg !5178
  %rem175 = srem i32 %121, %122, !dbg !5178
  %123 = load i32* %src_ns, align 4, !dbg !5178
  %sub176 = sub nsw i32 %123, %rem175, !dbg !5178
  store i32 %sub176, i32* %src_ns, align 4, !dbg !5178
  br label %if.end177, !dbg !5179

if.end177:                                        ; preds = %if.end169, %entry
  %124 = load i64* %dst_s, align 8, !dbg !5180
  %125 = load i64* %src_s, align 8, !dbg !5180
  %cmp178 = icmp slt i64 %124, %125, !dbg !5180
  br i1 %cmp178, label %cond.end192, label %cond.false, !dbg !5180

cond.false:                                       ; preds = %if.end177
  %126 = load i64* %dst_s, align 8, !dbg !5180
  %127 = load i64* %src_s, align 8, !dbg !5180
  %cmp180 = icmp sgt i64 %126, %127, !dbg !5180
  br i1 %cmp180, label %cond.end192, label %cond.false183, !dbg !5180

cond.false183:                                    ; preds = %cond.false
  %128 = load i32* %dst_ns, align 4, !dbg !5180
  %129 = load i32* %src_ns, align 4, !dbg !5180
  %cmp184 = icmp slt i32 %128, %129, !dbg !5180
  br i1 %cmp184, label %cond.end192, label %cond.false187, !dbg !5180

cond.false187:                                    ; preds = %cond.false183
  %130 = load i32* %dst_ns, align 4, !dbg !5180
  %131 = load i32* %src_ns, align 4, !dbg !5180
  %cmp188 = icmp sgt i32 %130, %131, !dbg !5180
  %conv189 = zext i1 %cmp188 to i32, !dbg !5180
  br label %cond.end192, !dbg !5180

cond.end192:                                      ; preds = %cond.false, %cond.false183, %cond.false187, %if.end177
  %cond193 = phi i32 [ -1, %if.end177 ], [ 1, %cond.false ], [ %conv189, %cond.false187 ], [ -1, %cond.false183 ], !dbg !5180
  store i32 %cond193, i32* %retval, !dbg !5180
  br label %return, !dbg !5180

return:                                           ; preds = %cond.end192, %if.then137, %if.then114, %if.then92, %if.then80
  %132 = load i32* %retval, !dbg !5181
  ret i32 %132, !dbg !5181
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @get_stat_mtime_ns(%struct.stat* %st) #8 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %0 = load %struct.stat** %st.addr, align 8, !dbg !5182
  %st_mtim = getelementptr inbounds %struct.stat* %0, i32 0, i32 12, !dbg !5182
  %tv_nsec = getelementptr inbounds %struct.timespec* %st_mtim, i32 0, i32 1, !dbg !5182
  %1 = load i64* %tv_nsec, align 8, !dbg !5182
  ret i64 %1, !dbg !5182
}

; Function Attrs: nounwind uwtable
define internal i64 @dev_info_hash(i8* %x, i64 %table_size) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.fs_res*, align 8
  store i8* %x, i8** %x.addr, align 8
  store i64 %table_size, i64* %table_size.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !5184
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !5184
  store %struct.fs_res* %1, %struct.fs_res** %p, align 8, !dbg !5184
  %2 = load %struct.fs_res** %p, align 8, !dbg !5185
  %dev = getelementptr inbounds %struct.fs_res* %2, i32 0, i32 0, !dbg !5185
  %3 = load i64* %dev, align 8, !dbg !5185
  %4 = load i64* %table_size.addr, align 8, !dbg !5185
  %int_cast_to_i64 = bitcast i64 %4 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !5185
  %rem = urem i64 %3, %4, !dbg !5185
  ret i64 %rem, !dbg !5185
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @dev_info_compare(i8* %x, i8* %y) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.fs_res*, align 8
  %b = alloca %struct.fs_res*, align 8
  store i8* %x, i8** %x.addr, align 8
  store i8* %y, i8** %y.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !5186
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !5186
  store %struct.fs_res* %1, %struct.fs_res** %a, align 8, !dbg !5186
  %2 = load i8** %y.addr, align 8, !dbg !5188
  %3 = bitcast i8* %2 to %struct.fs_res*, !dbg !5188
  store %struct.fs_res* %3, %struct.fs_res** %b, align 8, !dbg !5188
  %4 = load %struct.fs_res** %a, align 8, !dbg !5189
  %dev = getelementptr inbounds %struct.fs_res* %4, i32 0, i32 0, !dbg !5189
  %5 = load i64* %dev, align 8, !dbg !5189
  %6 = load %struct.fs_res** %b, align 8, !dbg !5189
  %dev1 = getelementptr inbounds %struct.fs_res* %6, i32 0, i32 0, !dbg !5189
  %7 = load i64* %dev1, align 8, !dbg !5189
  %cmp = icmp eq i64 %5, %7, !dbg !5189
  ret i1 %cmp, !dbg !5189
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @get_stat_atime_ns(%struct.stat* %st) #8 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %0 = load %struct.stat** %st.addr, align 8, !dbg !5190
  %st_atim = getelementptr inbounds %struct.stat* %0, i32 0, i32 11, !dbg !5190
  %tv_nsec = getelementptr inbounds %struct.timespec* %st_atim, i32 0, i32 1, !dbg !5190
  %1 = load i64* %tv_nsec, align 8, !dbg !5190
  ret i64 %1, !dbg !5190
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @get_stat_ctime_ns(%struct.stat* %st) #8 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %0 = load %struct.stat** %st.addr, align 8, !dbg !5191
  %st_ctim = getelementptr inbounds %struct.stat* %0, i32 0, i32 13, !dbg !5191
  %tv_nsec = getelementptr inbounds %struct.timespec* %st_ctim, i32 0, i32 1, !dbg !5191
  %1 = load i64* %tv_nsec, align 8, !dbg !5191
  ret i64 %1, !dbg !5191
}

; Function Attrs: nounwind uwtable
define i32 @futimens1(i32 %fd, i8* %file, %struct.timespec* %timespec) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %timeval = alloca [2 x %struct.timeval], align 16
  %t = alloca %struct.timeval*, align 8
  %fd2 = alloca i32, align 4
  %dup_errno = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i8* %file, i8** %file.addr, align 8
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  %0 = load %struct.timespec** %timespec.addr, align 8, !dbg !5193
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !5193
  br i1 %tobool, label %if.then, label %if.else, !dbg !5193

if.then:                                          ; preds = %entry
  %1 = load %struct.timespec** %timespec.addr, align 8, !dbg !5195
  %arrayidx = getelementptr inbounds %struct.timespec* %1, i64 0, !dbg !5195
  %tv_sec = getelementptr inbounds %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !5195
  %2 = load i64* %tv_sec, align 8, !dbg !5195
  %arrayidx1 = getelementptr inbounds [2 x %struct.timeval]* %timeval, i32 0, i64 0, !dbg !5195
  %tv_sec2 = getelementptr inbounds %struct.timeval* %arrayidx1, i32 0, i32 0, !dbg !5195
  store i64 %2, i64* %tv_sec2, align 8, !dbg !5195
  %3 = load %struct.timespec** %timespec.addr, align 8, !dbg !5197
  %arrayidx3 = getelementptr inbounds %struct.timespec* %3, i64 0, !dbg !5197
  %tv_nsec = getelementptr inbounds %struct.timespec* %arrayidx3, i32 0, i32 1, !dbg !5197
  %4 = load i64* %tv_nsec, align 8, !dbg !5197
  %int_cast_to_i64 = bitcast i64 1000 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !5197
  %div = sdiv i64 %4, 1000, !dbg !5197
  %arrayidx4 = getelementptr inbounds [2 x %struct.timeval]* %timeval, i32 0, i64 0, !dbg !5197
  %tv_usec = getelementptr inbounds %struct.timeval* %arrayidx4, i32 0, i32 1, !dbg !5197
  store i64 %div, i64* %tv_usec, align 8, !dbg !5197
  %5 = load %struct.timespec** %timespec.addr, align 8, !dbg !5198
  %arrayidx5 = getelementptr inbounds %struct.timespec* %5, i64 1, !dbg !5198
  %tv_sec6 = getelementptr inbounds %struct.timespec* %arrayidx5, i32 0, i32 0, !dbg !5198
  %6 = load i64* %tv_sec6, align 8, !dbg !5198
  %arrayidx7 = getelementptr inbounds [2 x %struct.timeval]* %timeval, i32 0, i64 1, !dbg !5198
  %tv_sec8 = getelementptr inbounds %struct.timeval* %arrayidx7, i32 0, i32 0, !dbg !5198
  store i64 %6, i64* %tv_sec8, align 8, !dbg !5198
  %7 = load %struct.timespec** %timespec.addr, align 8, !dbg !5199
  %arrayidx9 = getelementptr inbounds %struct.timespec* %7, i64 1, !dbg !5199
  %tv_nsec10 = getelementptr inbounds %struct.timespec* %arrayidx9, i32 0, i32 1, !dbg !5199
  %8 = load i64* %tv_nsec10, align 8, !dbg !5199
  %int_cast_to_i641 = bitcast i64 1000 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !5199
  %div11 = sdiv i64 %8, 1000, !dbg !5199
  %arrayidx12 = getelementptr inbounds [2 x %struct.timeval]* %timeval, i32 0, i64 1, !dbg !5199
  %tv_usec13 = getelementptr inbounds %struct.timeval* %arrayidx12, i32 0, i32 1, !dbg !5199
  store i64 %div11, i64* %tv_usec13, align 8, !dbg !5199
  %arraydecay = getelementptr inbounds [2 x %struct.timeval]* %timeval, i32 0, i32 0, !dbg !5200
  store %struct.timeval* %arraydecay, %struct.timeval** %t, align 8, !dbg !5200
  br label %if.end, !dbg !5201

if.else:                                          ; preds = %entry
  store %struct.timeval* null, %struct.timeval** %t, align 8, !dbg !5202
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32* %fd.addr, align 4, !dbg !5203
  %cmp = icmp slt i32 %9, 0, !dbg !5203
  br i1 %cmp, label %if.then14, label %if.else15, !dbg !5203

if.then14:                                        ; preds = %if.end
  %10 = load i8** %file.addr, align 8, !dbg !5205
  %11 = load %struct.timeval** %t, align 8, !dbg !5205
  %call = call i32 @futimesat(i32 -100, i8* %10, %struct.timeval* %11) #6, !dbg !5205
  store i32 %call, i32* %retval, !dbg !5205
  br label %return, !dbg !5205

if.else15:                                        ; preds = %if.end
  %12 = load i32* %fd.addr, align 4, !dbg !5207
  %13 = load %struct.timeval** %t, align 8, !dbg !5207
  %call16 = call i32 @futimesat(i32 %12, i8* null, %struct.timeval* %13) #6, !dbg !5207
  %cmp17 = icmp eq i32 %call16, 0, !dbg !5207
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !5207

if.then18:                                        ; preds = %if.else15
  store i32 0, i32* %retval, !dbg !5210
  br label %return, !dbg !5210

if.end20:                                         ; preds = %if.else15
  %14 = load i8** %file.addr, align 8, !dbg !5211
  %tobool21 = icmp ne i8* %14, null, !dbg !5211
  br i1 %tobool21, label %if.end36, label %if.then22, !dbg !5211

if.then22:                                        ; preds = %if.end20
  %call23 = call i32* @__errno_location() #1, !dbg !5213
  %15 = load i32* %call23, align 4, !dbg !5213
  %cmp24 = icmp eq i32 %15, 38, !dbg !5213
  br i1 %cmp24, label %if.then25, label %if.end35, !dbg !5213

if.then25:                                        ; preds = %if.then22
  %16 = load i32* %fd.addr, align 4, !dbg !5216
  %call26 = call i32 @dup(i32 %16) #6, !dbg !5216
  store i32 %call26, i32* %fd2, align 4, !dbg !5216
  %call27 = call i32* @__errno_location() #1, !dbg !5218
  %17 = load i32* %call27, align 4, !dbg !5218
  store i32 %17, i32* %dup_errno, align 4, !dbg !5218
  %18 = load i32* %fd2, align 4, !dbg !5219
  %cmp28 = icmp sle i32 0, %18, !dbg !5219
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !5219

if.then29:                                        ; preds = %if.then25
  %19 = load i32* %fd2, align 4, !dbg !5221
  %call30 = call i32 @close(i32 %19), !dbg !5221
  br label %if.end31, !dbg !5221

if.end31:                                         ; preds = %if.then29, %if.then25
  %20 = load i32* %fd2, align 4, !dbg !5222
  %cmp32 = icmp slt i32 %20, 0, !dbg !5222
  br i1 %cmp32, label %land.rhs, label %land.end, !dbg !5222

land.rhs:                                         ; preds = %if.end31
  %21 = load i32* %dup_errno, align 4, !dbg !5222
  %cmp33 = icmp eq i32 %21, 9, !dbg !5222
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end31
  %22 = phi i1 [ false, %if.end31 ], [ %cmp33, %land.rhs ]
  %cond = select i1 %22, i32 9, i32 38
  %call34 = call i32* @__errno_location() #1, !dbg !5222
  store i32 %cond, i32* %call34, align 4, !dbg !5222
  br label %if.end35, !dbg !5223

if.end35:                                         ; preds = %land.end, %if.then22
  store i32 -1, i32* %retval, !dbg !5224
  br label %return, !dbg !5224

if.end36:                                         ; preds = %if.end20
  %23 = load i8** %file.addr, align 8, !dbg !5225
  %24 = load %struct.timeval** %t, align 8, !dbg !5225
  %call37 = call i32 @utimes(i8* %23, %struct.timeval* %24) #6, !dbg !5225
  store i32 %call37, i32* %retval, !dbg !5225
  br label %return, !dbg !5225

return:                                           ; preds = %if.end36, %if.end35, %if.then18, %if.then14
  %25 = load i32* %retval, !dbg !5226
  ret i32 %25, !dbg !5226
}

; Function Attrs: nounwind
declare i32 @futimesat(i32, i8*, %struct.timeval*) #4

; Function Attrs: nounwind
declare i32 @dup(i32) #4

; Function Attrs: nounwind
declare i32 @utimes(i8*, %struct.timeval*) #4

; Function Attrs: nounwind uwtable
define i32 @utimens1(i8* %file, %struct.timespec* %timespec) #0 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  store i8* %file, i8** %file.addr, align 8
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  %0 = load i8** %file.addr, align 8, !dbg !5227
  %1 = load %struct.timespec** %timespec.addr, align 8, !dbg !5227
  %call = call i32 @futimens1(i32 -1, i8* %0, %struct.timespec* %1), !dbg !5227
  ret i32 %call, !dbg !5227
}

; Function Attrs: nounwind uwtable
define i8* @xnmalloc(i64 %n, i64 %s) #0 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64* %s.addr, align 8, !dbg !5228
  %int_cast_to_i64 = bitcast i64 %0 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !5228
  %div = udiv i64 -1, %0, !dbg !5228
  %1 = load i64* %n.addr, align 8, !dbg !5228
  %cmp = icmp ult i64 %div, %1, !dbg !5228
  br i1 %cmp, label %if.then, label %if.end, !dbg !5228

if.then:                                          ; preds = %entry
  call void @xalloc_die() #19, !dbg !5230
  unreachable, !dbg !5230

if.end:                                           ; preds = %entry
  %2 = load i64* %n.addr, align 8, !dbg !5231
  %3 = load i64* %s.addr, align 8, !dbg !5231
  %mul = mul i64 %2, %3, !dbg !5231
  %call = call i8* @xmalloc(i64 %mul), !dbg !5231
  ret i8* %call, !dbg !5231
}

; Function Attrs: nounwind uwtable
define i8* @xmalloc(i64 %n) #0 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  store i64 %n, i64* %n.addr, align 8
  %0 = load i64* %n.addr, align 8, !dbg !5232
  %call = call noalias i8* @malloc(i64 %0) #6, !dbg !5232
  store i8* %call, i8** %p, align 8, !dbg !5232
  %1 = load i8** %p, align 8, !dbg !5234
  %tobool = icmp eq i8* %1, null, !dbg !5234
  %2 = load i64* %n.addr, align 8, !dbg !5234
  %cmp = icmp ne i64 %2, 0, !dbg !5234
  %or.cond = and i1 %tobool, %cmp, !dbg !5234
  br i1 %or.cond, label %if.then, label %if.end, !dbg !5234

if.then:                                          ; preds = %entry
  call void @xalloc_die() #19, !dbg !5236
  unreachable, !dbg !5236

if.end:                                           ; preds = %entry
  %3 = load i8** %p, align 8, !dbg !5237
  ret i8* %3, !dbg !5237
}

; Function Attrs: nounwind uwtable
define i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64 %n, i64* %n.addr, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64* %s.addr, align 8, !dbg !5238
  %int_cast_to_i64 = bitcast i64 %0 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !5238
  %div = udiv i64 -1, %0, !dbg !5238
  %1 = load i64* %n.addr, align 8, !dbg !5238
  %cmp = icmp ult i64 %div, %1, !dbg !5238
  br i1 %cmp, label %if.then, label %if.end, !dbg !5238

if.then:                                          ; preds = %entry
  call void @xalloc_die() #19, !dbg !5240
  unreachable, !dbg !5240

if.end:                                           ; preds = %entry
  %2 = load i8** %p.addr, align 8, !dbg !5241
  %3 = load i64* %n.addr, align 8, !dbg !5241
  %4 = load i64* %s.addr, align 8, !dbg !5241
  %mul = mul i64 %3, %4, !dbg !5241
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !5241
  ret i8* %call, !dbg !5241
}

; Function Attrs: nounwind uwtable
define i8* @xrealloc(i8* %p, i64 %n) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64 %n, i64* %n.addr, align 8
  %0 = load i8** %p.addr, align 8, !dbg !5242
  %1 = load i64* %n.addr, align 8, !dbg !5242
  %call = call i8* @realloc(i8* %0, i64 %1) #6, !dbg !5242
  store i8* %call, i8** %p.addr, align 8, !dbg !5242
  %2 = load i8** %p.addr, align 8, !dbg !5243
  %tobool = icmp eq i8* %2, null, !dbg !5243
  %3 = load i64* %n.addr, align 8, !dbg !5243
  %cmp = icmp ne i64 %3, 0, !dbg !5243
  %or.cond = and i1 %tobool, %cmp, !dbg !5243
  br i1 %or.cond, label %if.then, label %if.end, !dbg !5243

if.then:                                          ; preds = %entry
  call void @xalloc_die() #19, !dbg !5245
  unreachable, !dbg !5245

if.end:                                           ; preds = %entry
  %4 = load i8** %p.addr, align 8, !dbg !5246
  ret i8* %4, !dbg !5246
}

; Function Attrs: nounwind uwtable
define i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64* %pn, i64** %pn.addr, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64** %pn.addr, align 8, !dbg !5247
  %1 = load i64* %0, align 8, !dbg !5247
  store i64 %1, i64* %n, align 8, !dbg !5247
  %2 = load i8** %p.addr, align 8, !dbg !5248
  %tobool = icmp ne i8* %2, null, !dbg !5248
  br i1 %tobool, label %if.else, label %if.then, !dbg !5248

if.then:                                          ; preds = %entry
  %3 = load i64* %n, align 8, !dbg !5250
  %tobool1 = icmp ne i64 %3, 0, !dbg !5250
  br i1 %tobool1, label %if.end8, label %if.then2, !dbg !5250

if.then2:                                         ; preds = %if.then
  %4 = load i64* %s.addr, align 8, !dbg !5253
  %int_cast_to_i64 = bitcast i64 %4 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !5253
  %div = udiv i64 64, %4, !dbg !5253
  store i64 %div, i64* %n, align 8, !dbg !5253
  %5 = load i64* %n, align 8, !dbg !5255
  %tobool3 = icmp ne i64 %5, 0, !dbg !5255
  %lnot = xor i1 %tobool3, true, !dbg !5255
  %lnot.ext = zext i1 %lnot to i32, !dbg !5255
  %conv = sext i32 %lnot.ext to i64, !dbg !5255
  %6 = load i64* %n, align 8, !dbg !5255
  %add = add i64 %6, %conv, !dbg !5255
  store i64 %add, i64* %n, align 8, !dbg !5255
  br label %if.end8, !dbg !5256

if.else:                                          ; preds = %entry
  %7 = load i64* %s.addr, align 8, !dbg !5257
  %int_cast_to_i641 = bitcast i64 %7 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !5257
  %div4 = udiv i64 9223372036854775807, %7, !dbg !5257
  %8 = load i64* %n, align 8, !dbg !5257
  %cmp = icmp ult i64 %div4, %8, !dbg !5257
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !5257

if.then6:                                         ; preds = %if.else
  call void @xalloc_die() #19, !dbg !5260
  unreachable, !dbg !5260

if.end7:                                          ; preds = %if.else
  %9 = load i64* %n, align 8, !dbg !5261
  %mul = mul i64 %9, 2, !dbg !5261
  store i64 %mul, i64* %n, align 8, !dbg !5261
  br label %if.end8

if.end8:                                          ; preds = %if.then, %if.then2, %if.end7
  %10 = load i64* %n, align 8, !dbg !5262
  %11 = load i64** %pn.addr, align 8, !dbg !5262
  store i64 %10, i64* %11, align 8, !dbg !5262
  %12 = load i8** %p.addr, align 8, !dbg !5263
  %13 = load i64* %n, align 8, !dbg !5263
  %14 = load i64* %s.addr, align 8, !dbg !5263
  %mul9 = mul i64 %13, %14, !dbg !5263
  %call = call i8* @xrealloc(i8* %12, i64 %mul9), !dbg !5263
  ret i8* %call, !dbg !5263
}

; Function Attrs: nounwind uwtable
define i8* @xcharalloc(i64 %n) #0 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  %0 = load i64* %n.addr, align 8, !dbg !5264
  %call = call i8* @xmalloc(i64 %0), !dbg !5264
  ret i8* %call, !dbg !5264
}

; Function Attrs: nounwind uwtable
define i8* @x2realloc(i8* %p, i64* %pn) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64* %pn, i64** %pn.addr, align 8
  %0 = load i8** %p.addr, align 8, !dbg !5265
  %1 = load i64** %pn.addr, align 8, !dbg !5265
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !5265
  ret i8* %call, !dbg !5265
}

; Function Attrs: nounwind uwtable
define i8* @xzalloc(i64 %s) #0 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64* %s.addr, align 8, !dbg !5266
  %call = call i8* @xmalloc(i64 %0), !dbg !5266
  %1 = load i64* %s.addr, align 8, !dbg !5266
  %2 = call i8* @memset(i8* %call, i32 0, i64 %1)
  ret i8* %call, !dbg !5266
}

; Function Attrs: nounwind uwtable
define i8* @xcalloc(i64 %n, i64 %s) #0 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  store i64 %n, i64* %n.addr, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64* %n.addr, align 8, !dbg !5267
  %1 = load i64* %s.addr, align 8, !dbg !5267
  %call = call noalias i8* @calloc(i64 %0, i64 %1) #6, !dbg !5267
  store i8* %call, i8** %p, align 8, !dbg !5267
  %tobool = icmp ne i8* %call, null, !dbg !5267
  br i1 %tobool, label %if.end, label %if.then, !dbg !5267

if.then:                                          ; preds = %entry
  call void @xalloc_die() #19, !dbg !5269
  unreachable, !dbg !5269

if.end:                                           ; preds = %entry
  %2 = load i8** %p, align 8, !dbg !5270
  ret i8* %2, !dbg !5270
}

; Function Attrs: nounwind uwtable
define i8* @xmemdup(i8* %p, i64 %s) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64* %s.addr, align 8, !dbg !5271
  %call = call i8* @xmalloc(i64 %0), !dbg !5271
  %1 = load i8** %p.addr, align 8, !dbg !5271
  %2 = load i64* %s.addr, align 8, !dbg !5271
  %3 = call i8* @memcpy(i8* %call, i8* %1, i64 %2)
  ret i8* %call, !dbg !5271
}

; Function Attrs: nounwind uwtable
define i8* @xstrdup(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  %0 = load i8** %string.addr, align 8, !dbg !5272
  %1 = load i8** %string.addr, align 8, !dbg !5272
  %call = call i64 @strlen(i8* %1) #18, !dbg !5272
  %add = add i64 %call, 1, !dbg !5272
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !5272
  ret i8* %call1, !dbg !5272
}

; Function Attrs: nounwind uwtable
define i8* @xreadlink(i8* %file, i64 %size) #0 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %buf_size = alloca i64, align 8
  %buffer = alloca i8*, align 8
  %r = alloca i64, align 8
  %link_length = alloca i64, align 8
  %saved_errno = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  %0 = load i64* %size.addr, align 8, !dbg !5273
  %cmp = icmp ult i64 %0, 9223372036854775807, !dbg !5273
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5273

cond.true:                                        ; preds = %entry
  %1 = load i64* %size.addr, align 8, !dbg !5273
  %add = add i64 %1, 1, !dbg !5273
  br label %cond.end, !dbg !5273

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ 9223372036854775807, %entry ], !dbg !5273
  store i64 %cond, i64* %buf_size, align 8, !dbg !5273
  br label %while.body, !dbg !5274

while.body:                                       ; preds = %if.then11, %if.then13, %cond.end
  %2 = load i64* %buf_size, align 8, !dbg !5275
  %call = call i8* @xmalloc(i64 %2), !dbg !5275
  store i8* %call, i8** %buffer, align 8, !dbg !5275
  %3 = load i8** %file.addr, align 8, !dbg !5277
  %4 = load i8** %buffer, align 8, !dbg !5277
  %5 = load i64* %buf_size, align 8, !dbg !5277
  %call1 = call i64 @readlink(i8* %3, i8* %4, i64 %5) #6, !dbg !5277
  store i64 %call1, i64* %r, align 8, !dbg !5277
  %6 = load i64* %r, align 8, !dbg !5278
  store i64 %6, i64* %link_length, align 8, !dbg !5278
  %7 = load i64* %r, align 8, !dbg !5279
  %cmp2 = icmp slt i64 %7, 0, !dbg !5279
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !5279

land.lhs.true:                                    ; preds = %while.body
  %call3 = call i32* @__errno_location() #1, !dbg !5279
  %8 = load i32* %call3, align 4, !dbg !5279
  %cmp4 = icmp ne i32 %8, 34, !dbg !5279
  br i1 %cmp4, label %if.then, label %if.end, !dbg !5279

if.then:                                          ; preds = %land.lhs.true
  %call5 = call i32* @__errno_location() #1, !dbg !5281
  %9 = load i32* %call5, align 4, !dbg !5281
  store i32 %9, i32* %saved_errno, align 4, !dbg !5281
  %10 = load i8** %buffer, align 8, !dbg !5283
  call void @free(i8* %10) #6, !dbg !5283
  %11 = load i32* %saved_errno, align 4, !dbg !5284
  %call6 = call i32* @__errno_location() #1, !dbg !5284
  store i32 %11, i32* %call6, align 4, !dbg !5284
  store i8* null, i8** %retval, !dbg !5285
  br label %return, !dbg !5285

if.end:                                           ; preds = %land.lhs.true, %while.body
  %12 = load i64* %link_length, align 8, !dbg !5286
  %13 = load i64* %buf_size, align 8, !dbg !5286
  %cmp7 = icmp ult i64 %12, %13, !dbg !5286
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5286

if.then8:                                         ; preds = %if.end
  %14 = load i64* %link_length, align 8, !dbg !5288
  %15 = load i8** %buffer, align 8, !dbg !5288
  %arrayidx = getelementptr inbounds i8* %15, i64 %14, !dbg !5288
  store i8 0, i8* %arrayidx, align 1, !dbg !5288
  %16 = load i8** %buffer, align 8, !dbg !5290
  store i8* %16, i8** %retval, !dbg !5290
  br label %return, !dbg !5290

if.end9:                                          ; preds = %if.end
  %17 = load i8** %buffer, align 8, !dbg !5291
  call void @free(i8* %17) #6, !dbg !5291
  %18 = load i64* %buf_size, align 8, !dbg !5292
  %cmp10 = icmp ule i64 %18, 4611686018427387903, !dbg !5292
  %19 = load i64* %buf_size, align 8, !dbg !5294
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !5292

if.then11:                                        ; preds = %if.end9
  %mul = mul i64 %19, 2, !dbg !5294
  store i64 %mul, i64* %buf_size, align 8, !dbg !5294
  br label %while.body, !dbg !5294

if.else:                                          ; preds = %if.end9
  %cmp12 = icmp ult i64 %19, 9223372036854775807, !dbg !5295
  br i1 %cmp12, label %if.then13, label %if.else14, !dbg !5295

if.then13:                                        ; preds = %if.else
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !5297
  br label %while.body

if.else14:                                        ; preds = %if.else
  call void @xalloc_die() #19, !dbg !5298
  unreachable, !dbg !5298

return:                                           ; preds = %if.then8, %if.then
  %20 = load i8** %retval, !dbg !5299
  ret i8* %20, !dbg !5299
}

; Function Attrs: nounwind
declare i64 @readlink(i8*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define zeroext i1 @yesno() #0 {
entry:
  %yes = alloca i8, align 1
  %c = alloca i32, align 4
  %call = call i32 @getchar(), !dbg !5300
  store i32 %call, i32* %c, align 4, !dbg !5300
  %0 = load i32* %c, align 4, !dbg !5301
  %cmp = icmp eq i32 %0, 121, !dbg !5301
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5301

lor.rhs:                                          ; preds = %entry
  %1 = load i32* %c, align 4, !dbg !5301
  %cmp1 = icmp eq i32 %1, 89, !dbg !5301
  br label %lor.end, !dbg !5301

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !5301
  store i8 %frombool, i8* %yes, align 1, !dbg !5301
  br label %while.cond, !dbg !5302

while.cond:                                       ; preds = %while.body, %lor.end
  %3 = load i32* %c, align 4, !dbg !5302
  %cmp2 = icmp ne i32 %3, 10, !dbg !5302
  %4 = load i32* %c, align 4, !dbg !5302
  %cmp3 = icmp ne i32 %4, -1, !dbg !5302
  %or.cond = and i1 %cmp2, %cmp3, !dbg !5302
  br i1 %or.cond, label %while.body, label %while.end, !dbg !5302

while.body:                                       ; preds = %while.cond
  %call4 = call i32 @getchar(), !dbg !5303
  store i32 %call4, i32* %c, align 4, !dbg !5303
  br label %while.cond, !dbg !5303

while.end:                                        ; preds = %while.cond
  %5 = load i8* %yes, align 1, !dbg !5304
  %tobool = trunc i8 %5 to i1, !dbg !5304
  ret i1 %tobool, !dbg !5304
}

declare i32 @getchar() #2

; Function Attrs: nounwind uwtable
define zeroext i1 @euidaccess_stat(%struct.stat* %st, i32 %mode) #0 {
entry:
  %retval = alloca i1, align 1
  %st.addr = alloca %struct.stat*, align 8
  %mode.addr = alloca i32, align 4
  %euid = alloca i32, align 4
  %granted = alloca i32, align 4
  %egid = alloca i32, align 4
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32* %mode.addr, align 4, !dbg !5305
  %and = and i32 %0, 7, !dbg !5305
  store i32 %and, i32* %mode.addr, align 4, !dbg !5305
  %1 = load i32* %mode.addr, align 4, !dbg !5307
  %cmp = icmp eq i32 %1, 0, !dbg !5307
  br i1 %cmp, label %if.then, label %if.end, !dbg !5307

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, !dbg !5309
  br label %return, !dbg !5309

if.end:                                           ; preds = %entry
  %call = call i32 @geteuid() #6, !dbg !5310
  store i32 %call, i32* %euid, align 4, !dbg !5310
  %2 = load i32* %euid, align 4, !dbg !5311
  %cmp1 = icmp eq i32 %2, 0, !dbg !5311
  br i1 %cmp1, label %land.lhs.true, label %if.end6, !dbg !5311

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32* %mode.addr, align 4, !dbg !5311
  %and2 = and i32 %3, 1, !dbg !5311
  %cmp3 = icmp eq i32 %and2, 0, !dbg !5311
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !5311

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.stat** %st.addr, align 8, !dbg !5311
  %st_mode = getelementptr inbounds %struct.stat* %4, i32 0, i32 3, !dbg !5311
  %5 = load i32* %st_mode, align 4, !dbg !5311
  %and4 = and i32 %5, 73, !dbg !5311
  %tobool = icmp ne i32 %and4, 0, !dbg !5311
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !5311

if.then5:                                         ; preds = %lor.lhs.false, %land.lhs.true
  store i1 true, i1* %retval, !dbg !5313
  br label %return, !dbg !5313

if.end6:                                          ; preds = %lor.lhs.false, %if.end
  %6 = load %struct.stat** %st.addr, align 8, !dbg !5314
  %st_mode7 = getelementptr inbounds %struct.stat* %6, i32 0, i32 3, !dbg !5314
  %7 = load i32* %st_mode7, align 4, !dbg !5314
  store i32 %7, i32* %granted, align 4, !dbg !5314
  %8 = load i32* %euid, align 4, !dbg !5316
  %9 = load %struct.stat** %st.addr, align 8, !dbg !5316
  %st_uid = getelementptr inbounds %struct.stat* %9, i32 0, i32 4, !dbg !5316
  %10 = load i32* %st_uid, align 4, !dbg !5316
  %cmp8 = icmp eq i32 %8, %10, !dbg !5316
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !5316

if.then9:                                         ; preds = %if.end6
  %11 = load i32* %granted, align 4, !dbg !5318
  %int_cast_to_i64 = zext i32 6 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64), !dbg !5318
  %shr = lshr i32 %11, 6, !dbg !5318
  store i32 %shr, i32* %granted, align 4, !dbg !5318
  br label %if.end19, !dbg !5318

if.else:                                          ; preds = %if.end6
  %call10 = call i32 @getegid() #6, !dbg !5319
  store i32 %call10, i32* %egid, align 4, !dbg !5319
  %12 = load i32* %egid, align 4, !dbg !5321
  %13 = load %struct.stat** %st.addr, align 8, !dbg !5321
  %st_gid = getelementptr inbounds %struct.stat* %13, i32 0, i32 5, !dbg !5321
  %14 = load i32* %st_gid, align 4, !dbg !5321
  %cmp11 = icmp eq i32 %12, %14, !dbg !5321
  br i1 %cmp11, label %if.then16, label %lor.lhs.false12, !dbg !5321

lor.lhs.false12:                                  ; preds = %if.else
  %15 = load %struct.stat** %st.addr, align 8, !dbg !5321
  %st_gid13 = getelementptr inbounds %struct.stat* %15, i32 0, i32 5, !dbg !5321
  %16 = load i32* %st_gid13, align 4, !dbg !5321
  %call14 = call i32 @group_member(i32 %16) #6, !dbg !5321
  %tobool15 = icmp ne i32 %call14, 0, !dbg !5321
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !5321

if.then16:                                        ; preds = %lor.lhs.false12, %if.else
  %17 = load i32* %granted, align 4, !dbg !5323
  %int_cast_to_i641 = zext i32 3 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i641), !dbg !5323
  %shr17 = lshr i32 %17, 3, !dbg !5323
  store i32 %shr17, i32* %granted, align 4, !dbg !5323
  br label %if.end19, !dbg !5323

if.end19:                                         ; preds = %lor.lhs.false12, %if.then16, %if.then9
  %18 = load i32* %mode.addr, align 4, !dbg !5324
  %19 = load i32* %granted, align 4, !dbg !5324
  %neg = xor i32 %19, -1, !dbg !5324
  %and20 = and i32 %18, %neg, !dbg !5324
  %cmp21 = icmp eq i32 %and20, 0, !dbg !5324
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !5324

if.then22:                                        ; preds = %if.end19
  store i1 true, i1* %retval, !dbg !5326
  br label %return, !dbg !5326

if.end23:                                         ; preds = %if.end19
  store i1 false, i1* %retval, !dbg !5327
  br label %return, !dbg !5327

return:                                           ; preds = %if.end23, %if.then22, %if.then5, %if.then
  %20 = load i1* %retval, !dbg !5328
  ret i1 %20, !dbg !5328
}

; Function Attrs: nounwind
declare i32 @getegid() #4

; Function Attrs: nounwind
declare i32 @group_member(i32) #4

; Function Attrs: nounwind uwtable
define i8* @xstrndup(i8* %string, i64 %n) #0 {
entry:
  %string.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  store i64 %n, i64* %n.addr, align 8
  %0 = load i8** %string.addr, align 8, !dbg !5329
  %1 = load i64* %n.addr, align 8, !dbg !5329
  %call = call noalias i8* @strndup(i8* %0, i64 %1) #6, !dbg !5329
  store i8* %call, i8** %s, align 8, !dbg !5329
  %2 = load i8** %s, align 8, !dbg !5330
  %tobool = icmp ne i8* %2, null, !dbg !5330
  br i1 %tobool, label %if.end, label %if.then, !dbg !5330

if.then:                                          ; preds = %entry
  call void @xalloc_die() #19, !dbg !5332
  unreachable, !dbg !5332

if.end:                                           ; preds = %entry
  %3 = load i8** %s, align 8, !dbg !5333
  ret i8* %3, !dbg !5333
}

; Function Attrs: nounwind
declare noalias i8* @strndup(i8*, i64) #4

; Function Attrs: nounwind uwtable
define i32 @close_stream(%struct._IO_FILE* %stream) #0 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1
  %prev_fail = alloca i8, align 1
  %fclose_fail = alloca i8, align 1
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  %0 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !5334
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #6, !dbg !5334
  %cmp = icmp ne i64 %call, 0, !dbg !5334
  %frombool = zext i1 %cmp to i8, !dbg !5334
  store i8 %frombool, i8* %some_pending, align 1, !dbg !5334
  %1 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !5335
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #6, !dbg !5335
  %cmp2 = icmp ne i32 %call1, 0, !dbg !5335
  %frombool3 = zext i1 %cmp2 to i8, !dbg !5335
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !5335
  %2 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !5336
  %call4 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !5336
  %cmp5 = icmp ne i32 %call4, 0, !dbg !5336
  %frombool6 = zext i1 %cmp5 to i8, !dbg !5336
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !5336
  %3 = load i8* %prev_fail, align 1, !dbg !5337
  %tobool = trunc i8 %3 to i1, !dbg !5337
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5337

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8* %fclose_fail, align 1, !dbg !5337
  %tobool7 = trunc i8 %4 to i1, !dbg !5337
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !5337

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8* %some_pending, align 1, !dbg !5337
  %tobool8 = trunc i8 %5 to i1, !dbg !5337
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !5337

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #1, !dbg !5337
  %6 = load i32* %call10, align 4, !dbg !5337
  %cmp11 = icmp ne i32 %6, 9, !dbg !5337
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !5337

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8* %fclose_fail, align 1, !dbg !5339
  %tobool12 = trunc i8 %7 to i1, !dbg !5339
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !5339

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #1, !dbg !5342
  store i32 0, i32* %call14, align 4, !dbg !5342
  br label %if.end, !dbg !5342

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, !dbg !5343
  br label %return, !dbg !5343

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, !dbg !5344
  br label %return, !dbg !5344

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32* %retval, !dbg !5345
  ret i32 %8, !dbg !5345
}

; Function Attrs: nounwind
declare i64 @__fpending(%struct._IO_FILE*) #4

; Function Attrs: nounwind
declare i32 @ferror_unlocked(%struct._IO_FILE*) #4

; Function Attrs: nounwind uwtable
define i32 @fd_safer(i32 %fd) #0 {
entry:
  %fd.addr = alloca i32, align 4
  %f = alloca i32, align 4
  %e = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  %0 = load i32* %fd.addr, align 4, !dbg !5346
  %cmp = icmp sle i32 0, %0, !dbg !5346
  %1 = load i32* %fd.addr, align 4, !dbg !5346
  %cmp1 = icmp sle i32 %1, 2, !dbg !5346
  %or.cond = and i1 %cmp, %cmp1, !dbg !5346
  br i1 %or.cond, label %if.then, label %if.end, !dbg !5346

if.then:                                          ; preds = %entry
  %2 = load i32* %fd.addr, align 4, !dbg !5348
  %call = call i32 @dup_safer(i32 %2), !dbg !5348
  store i32 %call, i32* %f, align 4, !dbg !5348
  %call2 = call i32* @__errno_location() #1, !dbg !5350
  %3 = load i32* %call2, align 4, !dbg !5350
  store i32 %3, i32* %e, align 4, !dbg !5350
  %4 = load i32* %fd.addr, align 4, !dbg !5351
  %call3 = call i32 @close(i32 %4), !dbg !5351
  %5 = load i32* %e, align 4, !dbg !5352
  %call4 = call i32* @__errno_location() #1, !dbg !5352
  store i32 %5, i32* %call4, align 4, !dbg !5352
  %6 = load i32* %f, align 4, !dbg !5353
  store i32 %6, i32* %fd.addr, align 4, !dbg !5353
  br label %if.end, !dbg !5354

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32* %fd.addr, align 4, !dbg !5355
  ret i32 %7, !dbg !5355
}

; Function Attrs: nounwind uwtable
define i32 @dup_safer(i32 %fd) #0 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  %0 = load i32* %fd.addr, align 4, !dbg !5356
  %call = call i32 (i32, i32, ...)* @fcntl(i32 %0, i32 0, i32 3), !dbg !5356
  ret i32 %call, !dbg !5356
}

declare void @klee_make_symbolic(i8*, i64, i8*)

; Function Attrs: noinline optnone
define i64 @macke_fork_several_sizes(i32) #13 {
  switch i32 %0, label %2 [
    i32 128, label %6
    i32 2, label %3
    i32 4, label %4
    i32 16, label %5
  ]

; <label>:2                                       ; preds = %6, %5, %4, %3, %1
  %merge = phi i64 [ 1, %1 ], [ 2, %3 ], [ 4, %4 ], [ 16, %5 ], [ 128, %6 ]
  ret i64 %merge

; <label>:3                                       ; preds = %1
  br label %2

; <label>:4                                       ; preds = %1
  br label %2

; <label>:5                                       ; preds = %1
  br label %2

; <label>:6                                       ; preds = %1
  br label %2
}

; Function Attrs: noinline optnone
define i32 @macke_usage_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @0, i32 0, i32 0))
  %4 = load i32* %argno0
  call void @usage(i32 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_chown_privileges_main(i32, i8**) #13 {
  %3 = call i1 @chown_privileges()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cp_option_init_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @1, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 64
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @2, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.cp_options*
  call void @cp_option_init(%struct.cp_options* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quoting_options_from_style_main(i32, i8**) #13 {
  %argno0 = alloca %struct.quoting_options
  %argno1 = alloca i32
  %3 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @3, i32 0, i32 0))
  %4 = load i32* %argno1
  call void @quoting_options_from_style(%struct.quoting_options* %argno0, i32 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xalloc_die_main(i32, i8**) #13 {
  call void @xalloc_die()
  unreachable
}

; Function Attrs: noinline optnone
define i32 @macke_xrealloc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @4, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @5, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @6, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i8* @xrealloc(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_gettext_quote_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @7, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @8, i32 0, i32 0))
  %argno1 = alloca i32
  %7 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 4, i8* getelementptr inbounds ([7 x i8]* @9, i32 0, i32 0))
  %8 = load i32* %argno1
  %9 = call i8* @gettext_quote(i8* %6, i32 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_buffer_restyled_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @10, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @11, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @12, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @13, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 1
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @14, i32 0, i32 0))
  %argno3 = alloca i64
  %13 = bitcast i64* %argno3 to i8*
  call void @klee_make_symbolic(i8* %13, i64 8, i8* getelementptr inbounds ([7 x i8]* @15, i32 0, i32 0))
  %14 = load i64* %argno3
  %argno4 = alloca i32
  %15 = bitcast i32* %argno4 to i8*
  call void @klee_make_symbolic(i8* %15, i64 4, i8* getelementptr inbounds ([7 x i8]* @16, i32 0, i32 0))
  %16 = load i32* %argno4
  %17 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @17, i32 0, i32 0))
  %18 = call i64 @macke_fork_several_sizes(i32 %17)
  %19 = mul i64 %18, 36
  %20 = call i8* @malloc(i64 %19)
  call void @klee_make_symbolic(i8* %20, i64 %19, i8* getelementptr inbounds ([7 x i8]* @18, i32 0, i32 0))
  %21 = bitcast i8* %20 to %struct.quoting_options*
  %22 = call i64 @quotearg_buffer_restyled(i8* %6, i64 %8, i8* %12, i64 %14, i32 %16, %struct.quoting_options* %21)
  call void @free(i8* %6)
  call void @free(i8* %12)
  call void @free(i8* %20)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_buffer_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @19, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @20, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @21, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @22, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 1
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @23, i32 0, i32 0))
  %argno3 = alloca i64
  %13 = bitcast i64* %argno3 to i8*
  call void @klee_make_symbolic(i8* %13, i64 8, i8* getelementptr inbounds ([7 x i8]* @24, i32 0, i32 0))
  %14 = load i64* %argno3
  %15 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @25, i32 0, i32 0))
  %16 = call i64 @macke_fork_several_sizes(i32 %15)
  %17 = mul i64 %16, 36
  %18 = call i8* @malloc(i64 %17)
  call void @klee_make_symbolic(i8* %18, i64 %17, i8* getelementptr inbounds ([7 x i8]* @26, i32 0, i32 0))
  %19 = bitcast i8* %18 to %struct.quoting_options*
  %20 = call i64 @quotearg_buffer(i8* %6, i64 %8, i8* %12, i64 %14, %struct.quoting_options* %19)
  call void @free(i8* %6)
  call void @free(i8* %12)
  call void @free(i8* %18)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xmalloc_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @27, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i8* @xmalloc(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xcharalloc_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @28, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i8* @xcharalloc(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_n_options_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @29, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @30, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @31, i32 0, i32 0))
  %argno2 = alloca i64
  %9 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 8, i8* getelementptr inbounds ([7 x i8]* @32, i32 0, i32 0))
  %10 = load i64* %argno2
  %11 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @33, i32 0, i32 0))
  %12 = call i64 @macke_fork_several_sizes(i32 %11)
  %13 = mul i64 %12, 36
  %14 = call i8* @malloc(i64 %13)
  call void @klee_make_symbolic(i8* %14, i64 %13, i8* getelementptr inbounds ([7 x i8]* @34, i32 0, i32 0))
  %15 = bitcast i8* %14 to %struct.quoting_options*
  %16 = call i8* @quotearg_n_options(i32 %4, i8* %8, i64 %10, %struct.quoting_options* %15)
  call void @free(i8* %8)
  call void @free(i8* %14)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_n_style_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @35, i32 0, i32 0))
  %4 = load i32* %argno0
  %argno1 = alloca i32
  %5 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 4, i8* getelementptr inbounds ([7 x i8]* @36, i32 0, i32 0))
  %6 = load i32* %argno1
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @37, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @38, i32 0, i32 0))
  %11 = call i8* @quotearg_n_style(i32 %4, i32 %6, i8* %10)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quote_n_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @39, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @40, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @41, i32 0, i32 0))
  %9 = call i8* @quote_n(i32 %4, i8* %8)
  call void @free(i8* %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_argmatch_invalid_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @42, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @43, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @44, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @45, i32 0, i32 0))
  %argno2 = alloca i64
  %11 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %11, i64 8, i8* getelementptr inbounds ([7 x i8]* @46, i32 0, i32 0))
  %12 = load i64* %argno2
  call void @argmatch_invalid(i8* %6, i8* %10, i64 %12)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quote_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @47, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @48, i32 0, i32 0))
  %7 = call i8* @quote(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_version_etc_va_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @49, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 216
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @50, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct._IO_FILE*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @51, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @52, i32 0, i32 0))
  %12 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @53, i32 0, i32 0))
  %13 = call i64 @macke_fork_several_sizes(i32 %12)
  %14 = mul i64 %13, 1
  %15 = call i8* @malloc(i64 %14)
  call void @klee_make_symbolic(i8* %15, i64 %14, i8* getelementptr inbounds ([7 x i8]* @54, i32 0, i32 0))
  %16 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @55, i32 0, i32 0))
  %17 = call i64 @macke_fork_several_sizes(i32 %16)
  %18 = mul i64 %17, 1
  %19 = call i8* @malloc(i64 %18)
  call void @klee_make_symbolic(i8* %19, i64 %18, i8* getelementptr inbounds ([7 x i8]* @56, i32 0, i32 0))
  %20 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @57, i32 0, i32 0))
  %21 = call i64 @macke_fork_several_sizes(i32 %20)
  %22 = mul i64 %21, 24
  %23 = call i8* @malloc(i64 %22)
  call void @klee_make_symbolic(i8* %23, i64 %22, i8* getelementptr inbounds ([7 x i8]* @58, i32 0, i32 0))
  %24 = bitcast i8* %23 to %struct.__va_list_tag*
  call void @version_etc_va(%struct._IO_FILE* %7, i8* %11, i8* %15, i8* %19, %struct.__va_list_tag* %24)
  call void @free(i8* %6)
  call void @free(i8* %11)
  call void @free(i8* %15)
  call void @free(i8* %19)
  call void @free(i8* %23)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_version_etc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @59, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 216
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @60, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct._IO_FILE*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @61, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @62, i32 0, i32 0))
  %12 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @63, i32 0, i32 0))
  %13 = call i64 @macke_fork_several_sizes(i32 %12)
  %14 = mul i64 %13, 1
  %15 = call i8* @malloc(i64 %14)
  call void @klee_make_symbolic(i8* %15, i64 %14, i8* getelementptr inbounds ([7 x i8]* @64, i32 0, i32 0))
  %16 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @65, i32 0, i32 0))
  %17 = call i64 @macke_fork_several_sizes(i32 %16)
  %18 = mul i64 %17, 1
  %19 = call i8* @malloc(i64 %18)
  call void @klee_make_symbolic(i8* %19, i64 %18, i8* getelementptr inbounds ([7 x i8]* @66, i32 0, i32 0))
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...)* @version_etc(%struct._IO_FILE* %7, i8* %11, i8* %15, i8* %19)
  call void @free(i8* %6)
  call void @free(i8* %11)
  call void @free(i8* %15)
  call void @free(i8* %19)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_target_directory_operand_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @67, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @68, i32 0, i32 0))
  %7 = call i1 @target_directory_operand(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xmemdup_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @69, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @70, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @71, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i8* @xmemdup(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xstrdup_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @72, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @73, i32 0, i32 0))
  %7 = call i8* @xstrdup(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_get_version_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @74, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @75, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @76, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @77, i32 0, i32 0))
  %11 = call i32 @get_version(i8* %6, i8* %10)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xget_version_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @78, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @79, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @80, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @81, i32 0, i32 0))
  %11 = call i32 @xget_version(i8* %6, i8* %10)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_check_tuning_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @82, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @83, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i1 @check_tuning(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_is_prime_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @84, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i1 @is_prime(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_next_prime_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @85, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i64 @next_prime(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_init_main(i32, i8**) #13 {
  call void @hash_init()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_dest_info_init_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @86, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 64
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @87, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.cp_options*
  call void @dest_info_init(%struct.cp_options* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_last_component_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @88, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @89, i32 0, i32 0))
  %7 = call i8* @last_component(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_base_len_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @90, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @91, i32 0, i32 0))
  %7 = call i64 @base_len(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_strip_trailing_slashes_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @92, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @93, i32 0, i32 0))
  %7 = call i1 @strip_trailing_slashes(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_longest_relative_suffix_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @94, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @95, i32 0, i32 0))
  %7 = call i8* @longest_relative_suffix(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_valid_options_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @96, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 64
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @97, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.cp_options*
  %8 = call i1 @valid_options(%struct.cp_options* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_lookup_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @98, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @99, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @100, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @101, i32 0, i32 0))
  %12 = call i8* @hash_lookup(%struct.hash_table* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_seen_file_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @102, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @103, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @104, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @105, i32 0, i32 0))
  %12 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @106, i32 0, i32 0))
  %13 = call i64 @macke_fork_several_sizes(i32 %12)
  %14 = mul i64 %13, 144
  %15 = call i8* @malloc(i64 %14)
  call void @klee_make_symbolic(i8* %15, i64 %14, i8* getelementptr inbounds ([7 x i8]* @107, i32 0, i32 0))
  %16 = bitcast i8* %15 to %struct.stat*
  %17 = call i1 @seen_file(%struct.hash_table* %7, i8* %11, %struct.stat* %16)
  call void @free(i8* %6)
  call void @free(i8* %11)
  call void @free(i8* %15)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_free_entry_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @108, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @109, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @110, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 16
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @111, i32 0, i32 0))
  %12 = bitcast i8* %11 to %struct.hash_entry*
  call void @free_entry(%struct.hash_table* %7, %struct.hash_entry* %12)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_allocate_entry_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @112, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @113, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_rehash_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @114, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @115, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %argno1 = alloca i64
  %8 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %8, i64 8, i8* getelementptr inbounds ([7 x i8]* @116, i32 0, i32 0))
  %9 = load i64* %argno1
  %10 = call i1 @hash_rehash(%struct.hash_table* %7, i64 %9)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_insert_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @117, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @118, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @119, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @120, i32 0, i32 0))
  %12 = call i8* @hash_insert(%struct.hash_table* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_triple_free_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @121, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @122, i32 0, i32 0))
  call void @triple_free(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_record_file_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @123, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @124, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @125, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @126, i32 0, i32 0))
  %12 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @127, i32 0, i32 0))
  %13 = call i64 @macke_fork_several_sizes(i32 %12)
  %14 = mul i64 %13, 144
  %15 = call i8* @malloc(i64 %14)
  call void @klee_make_symbolic(i8* %15, i64 %14, i8* getelementptr inbounds ([7 x i8]* @128, i32 0, i32 0))
  %16 = bitcast i8* %15 to %struct.stat*
  call void @record_file(%struct.hash_table* %7, i8* %11, %struct.stat* %16)
  call void @free(i8* %6)
  call void @free(i8* %11)
  call void @free(i8* %15)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_dir_len_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @129, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @130, i32 0, i32 0))
  %7 = call i64 @dir_len(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_dir_name_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @131, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @132, i32 0, i32 0))
  %7 = call i8* @dir_name(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_same_name_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @133, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @134, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @135, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @136, i32 0, i32 0))
  %11 = call i1 @same_name(i8* %6, i8* %10)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_same_file_ok_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @137, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @138, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @139, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 144
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @140, i32 0, i32 0))
  %11 = bitcast i8* %10 to %struct.stat*
  %12 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @141, i32 0, i32 0))
  %13 = call i64 @macke_fork_several_sizes(i32 %12)
  %14 = mul i64 %13, 1
  %15 = call i8* @malloc(i64 %14)
  call void @klee_make_symbolic(i8* %15, i64 %14, i8* getelementptr inbounds ([7 x i8]* @142, i32 0, i32 0))
  %16 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @143, i32 0, i32 0))
  %17 = call i64 @macke_fork_several_sizes(i32 %16)
  %18 = mul i64 %17, 144
  %19 = call i8* @malloc(i64 %18)
  call void @klee_make_symbolic(i8* %19, i64 %18, i8* getelementptr inbounds ([7 x i8]* @144, i32 0, i32 0))
  %20 = bitcast i8* %19 to %struct.stat*
  %21 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @145, i32 0, i32 0))
  %22 = call i64 @macke_fork_several_sizes(i32 %21)
  %23 = mul i64 %22, 64
  %24 = call i8* @malloc(i64 %23)
  call void @klee_make_symbolic(i8* %24, i64 %23, i8* getelementptr inbounds ([7 x i8]* @146, i32 0, i32 0))
  %25 = bitcast i8* %24 to %struct.cp_options*
  %26 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @147, i32 0, i32 0))
  %27 = call i64 @macke_fork_several_sizes(i32 %26)
  %28 = mul i64 %27, 1
  %29 = call i8* @malloc(i64 %28)
  call void @klee_make_symbolic(i8* %29, i64 %28, i8* getelementptr inbounds ([7 x i8]* @148, i32 0, i32 0))
  %30 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @149, i32 0, i32 0))
  %31 = call i64 @macke_fork_several_sizes(i32 %30)
  %32 = mul i64 %31, 1
  %33 = call i8* @malloc(i64 %32)
  call void @klee_make_symbolic(i8* %33, i64 %32, i8* getelementptr inbounds ([7 x i8]* @150, i32 0, i32 0))
  %34 = call i1 @same_file_ok(i8* %6, %struct.stat* %11, i8* %15, %struct.stat* %20, %struct.cp_options* %25, i8* %29, i8* %33)
  call void @free(i8* %6)
  call void @free(i8* %10)
  call void @free(i8* %15)
  call void @free(i8* %19)
  call void @free(i8* %24)
  call void @free(i8* %29)
  call void @free(i8* %33)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_overwrite_prompt_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @151, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @152, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @153, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 144
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @154, i32 0, i32 0))
  %11 = bitcast i8* %10 to %struct.stat*
  call void @overwrite_prompt(i8* %6, %struct.stat* %11)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_yesno_main(i32, i8**) #13 {
  %3 = call i1 @yesno()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_abandon_move_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @155, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 64
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @156, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.cp_options*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @157, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @158, i32 0, i32 0))
  %12 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @159, i32 0, i32 0))
  %13 = call i64 @macke_fork_several_sizes(i32 %12)
  %14 = mul i64 %13, 144
  %15 = call i8* @malloc(i64 %14)
  call void @klee_make_symbolic(i8* %15, i64 %14, i8* getelementptr inbounds ([7 x i8]* @160, i32 0, i32 0))
  %16 = bitcast i8* %15 to %struct.stat*
  %17 = call i1 @abandon_move(%struct.cp_options* %7, i8* %11, %struct.stat* %16)
  call void @free(i8* %6)
  call void @free(i8* %11)
  call void @free(i8* %15)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_get_stat_mtime_ns_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @161, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @162, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call i64 @get_stat_mtime_ns(%struct.stat* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_get_stat_atime_ns_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @163, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @164, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call i64 @get_stat_atime_ns(%struct.stat* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_get_stat_ctime_ns_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @165, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @166, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call i64 @get_stat_ctime_ns(%struct.stat* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_futimens1_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @167, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @168, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @169, i32 0, i32 0))
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @170, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 16
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @171, i32 0, i32 0))
  %13 = bitcast i8* %12 to %struct.timespec*
  %14 = call i32 @futimens1(i32 %4, i8* %8, %struct.timespec* %13)
  call void @free(i8* %8)
  call void @free(i8* %12)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_utimens1_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @172, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @173, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @174, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 16
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @175, i32 0, i32 0))
  %11 = bitcast i8* %10 to %struct.timespec*
  %12 = call i32 @utimens1(i8* %6, %struct.timespec* %11)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_utimecmp_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @176, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @177, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @178, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 144
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @179, i32 0, i32 0))
  %11 = bitcast i8* %10 to %struct.stat*
  %12 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @180, i32 0, i32 0))
  %13 = call i64 @macke_fork_several_sizes(i32 %12)
  %14 = mul i64 %13, 144
  %15 = call i8* @malloc(i64 %14)
  call void @klee_make_symbolic(i8* %15, i64 %14, i8* getelementptr inbounds ([7 x i8]* @181, i32 0, i32 0))
  %16 = bitcast i8* %15 to %struct.stat*
  %argno3 = alloca i32
  %17 = bitcast i32* %argno3 to i8*
  call void @klee_make_symbolic(i8* %17, i64 4, i8* getelementptr inbounds ([7 x i8]* @182, i32 0, i32 0))
  %18 = load i32* %argno3
  %19 = call i32 @utimecmp(i8* %6, %struct.stat* %11, %struct.stat* %16, i32 %18)
  call void @free(i8* %6)
  call void @free(i8* %10)
  call void @free(i8* %15)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_dot_or_dotdot_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @183, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @184, i32 0, i32 0))
  %7 = call i1 @dot_or_dotdot(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xnrealloc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @185, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @186, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @187, i32 0, i32 0))
  %8 = load i64* %argno1
  %argno2 = alloca i64
  %9 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 8, i8* getelementptr inbounds ([7 x i8]* @188, i32 0, i32 0))
  %10 = load i64* %argno2
  %11 = call i8* @xnrealloc(i8* %6, i64 %8, i64 %10)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_check_extension_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @189, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @190, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @191, i32 0, i32 0))
  %8 = load i64* %argno1
  %argno2 = alloca i8
  call void @klee_make_symbolic(i8* %argno2, i64 1, i8* getelementptr inbounds ([7 x i8]* @192, i32 0, i32 0))
  %9 = load i8* %argno2
  call void @check_extension(i8* %6, i64 %8, i8 %9)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_find_backup_file_name_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @193, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @194, i32 0, i32 0))
  %argno1 = alloca i32
  %7 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 4, i8* getelementptr inbounds ([7 x i8]* @195, i32 0, i32 0))
  %8 = load i32* %argno1
  %9 = call i8* @find_backup_file_name(i8* %6, i32 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_emit_verbose_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @196, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @197, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @198, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @199, i32 0, i32 0))
  %11 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @200, i32 0, i32 0))
  %12 = call i64 @macke_fork_several_sizes(i32 %11)
  %13 = mul i64 %12, 1
  %14 = call i8* @malloc(i64 %13)
  call void @klee_make_symbolic(i8* %14, i64 %13, i8* getelementptr inbounds ([7 x i8]* @201, i32 0, i32 0))
  call void @emit_verbose(i8* %6, i8* %10, i8* %14)
  call void @free(i8* %6)
  call void @free(i8* %10)
  call void @free(i8* %14)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_src_to_dest_lookup_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @202, i32 0, i32 0))
  %4 = load i64* %argno0
  %argno1 = alloca i64
  %5 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([7 x i8]* @203, i32 0, i32 0))
  %6 = load i64* %argno1
  %7 = call i8* @src_to_dest_lookup(i64 %4, i64 %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_src_to_dest_free_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @204, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @205, i32 0, i32 0))
  call void @src_to_dest_free(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_remember_copied_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @206, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @207, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @208, i32 0, i32 0))
  %8 = load i64* %argno1
  %argno2 = alloca i64
  %9 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 8, i8* getelementptr inbounds ([7 x i8]* @209, i32 0, i32 0))
  %10 = load i64* %argno2
  %11 = call i8* @remember_copied(i8* %6, i64 %8, i64 %10)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_delete_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @210, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @211, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @212, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @213, i32 0, i32 0))
  %12 = call i8* @hash_delete(%struct.hash_table* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_forget_created_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @214, i32 0, i32 0))
  %4 = load i64* %argno0
  %argno1 = alloca i64
  %5 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([7 x i8]* @215, i32 0, i32 0))
  %6 = load i64* %argno1
  call void @forget_created(i64 %4, i64 %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_is_ancestor_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @216, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @217, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @218, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 24
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @219, i32 0, i32 0))
  %12 = bitcast i8* %11 to %struct.dir_list*
  %13 = call i1 @is_ancestor(%struct.stat* %7, %struct.dir_list* %12)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_savedirstream_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @220, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @221, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.__dirstream*
  %8 = call i8* @savedirstream(%struct.__dirstream* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_savedir_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @222, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @223, i32 0, i32 0))
  %7 = call i8* @savedir(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_dup_safer_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @224, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @dup_safer(i32 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_fd_safer_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @225, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @fd_safer(i32 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_open_safer_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @226, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @227, i32 0, i32 0))
  %argno1 = alloca i32
  %7 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 4, i8* getelementptr inbounds ([7 x i8]* @228, i32 0, i32 0))
  %8 = load i32* %argno1
  %9 = call i32 (i8*, i32, ...)* @open_safer(i8* %6, i32 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_gcd_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @229, i32 0, i32 0))
  %4 = load i64* %argno0
  %argno1 = alloca i64
  %5 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([7 x i8]* @230, i32 0, i32 0))
  %6 = load i64* %argno1
  %7 = call i64 @gcd(i64 %4, i64 %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_lcm_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @231, i32 0, i32 0))
  %4 = load i64* %argno0
  %argno1 = alloca i64
  %5 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([7 x i8]* @232, i32 0, i32 0))
  %6 = load i64* %argno1
  %7 = call i64 @lcm(i64 %4, i64 %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_buffer_lcm_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @233, i32 0, i32 0))
  %4 = load i64* %argno0
  %argno1 = alloca i64
  %5 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([7 x i8]* @234, i32 0, i32 0))
  %6 = load i64* %argno1
  %argno2 = alloca i64
  %7 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @235, i32 0, i32 0))
  %8 = load i64* %argno2
  %9 = call i64 @buffer_lcm(i64 %4, i64 %6, i64 %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_ptr_align_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @236, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @237, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @238, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i8* @ptr_align(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_safe_write_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @239, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @240, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @241, i32 0, i32 0))
  %argno2 = alloca i64
  %9 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 8, i8* getelementptr inbounds ([7 x i8]* @242, i32 0, i32 0))
  %10 = load i64* %argno2
  %11 = call i64 @safe_write(i32 %4, i8* %8, i64 %10)
  call void @free(i8* %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_full_write_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @243, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @244, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @245, i32 0, i32 0))
  %argno2 = alloca i64
  %9 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 8, i8* getelementptr inbounds ([7 x i8]* @246, i32 0, i32 0))
  %10 = load i64* %argno2
  %11 = call i64 @full_write(i32 %4, i8* %8, i64 %10)
  call void @free(i8* %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_get_stat_atime_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @247, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @248, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call { i64, i64 } @get_stat_atime(%struct.stat* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_get_stat_mtime_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @249, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @250, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call { i64, i64 } @get_stat_mtime(%struct.stat* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_chown_failure_ok_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @251, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 64
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @252, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.cp_options*
  %8 = call i1 @chown_failure_ok(%struct.cp_options* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_set_owner_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @253, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 64
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @254, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.cp_options*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @255, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @256, i32 0, i32 0))
  %argno2 = alloca i32
  %12 = bitcast i32* %argno2 to i8*
  call void @klee_make_symbolic(i8* %12, i64 4, i8* getelementptr inbounds ([7 x i8]* @257, i32 0, i32 0))
  %13 = load i32* %argno2
  %argno3 = alloca i32
  %14 = bitcast i32* %argno3 to i8*
  call void @klee_make_symbolic(i8* %14, i64 4, i8* getelementptr inbounds ([7 x i8]* @258, i32 0, i32 0))
  %15 = load i32* %argno3
  %argno4 = alloca i32
  %16 = bitcast i32* %argno4 to i8*
  call void @klee_make_symbolic(i8* %16, i64 4, i8* getelementptr inbounds ([7 x i8]* @259, i32 0, i32 0))
  %17 = load i32* %argno4
  %18 = call i32 @set_owner(%struct.cp_options* %7, i8* %11, i32 %13, i32 %15, i32 %17)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_set_author_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @260, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @261, i32 0, i32 0))
  %argno1 = alloca i32
  %7 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 4, i8* getelementptr inbounds ([7 x i8]* @262, i32 0, i32 0))
  %8 = load i32* %argno1
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @263, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 144
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @264, i32 0, i32 0))
  %13 = bitcast i8* %12 to %struct.stat*
  call void @set_author(i8* %6, i32 %8, %struct.stat* %13)
  call void @free(i8* %6)
  call void @free(i8* %12)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_chmod_or_fchmod_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @265, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @266, i32 0, i32 0))
  %argno1 = alloca i32
  %7 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 4, i8* getelementptr inbounds ([7 x i8]* @267, i32 0, i32 0))
  %8 = load i32* %argno1
  %argno2 = alloca i32
  %9 = bitcast i32* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 4, i8* getelementptr inbounds ([7 x i8]* @268, i32 0, i32 0))
  %10 = load i32* %argno2
  %11 = call i32 @chmod_or_fchmod(i8* %6, i32 %8, i32 %10)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_copy_acl_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @269, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @270, i32 0, i32 0))
  %argno1 = alloca i32
  %7 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 4, i8* getelementptr inbounds ([7 x i8]* @271, i32 0, i32 0))
  %8 = load i32* %argno1
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @272, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 1
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @273, i32 0, i32 0))
  %argno3 = alloca i32
  %13 = bitcast i32* %argno3 to i8*
  call void @klee_make_symbolic(i8* %13, i64 4, i8* getelementptr inbounds ([7 x i8]* @274, i32 0, i32 0))
  %14 = load i32* %argno3
  %argno4 = alloca i32
  %15 = bitcast i32* %argno4 to i8*
  call void @klee_make_symbolic(i8* %15, i64 4, i8* getelementptr inbounds ([7 x i8]* @275, i32 0, i32 0))
  %16 = load i32* %argno4
  %17 = call i32 @copy_acl(i8* %6, i32 %8, i8* %12, i32 %14, i32 %16)
  call void @free(i8* %6)
  call void @free(i8* %12)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_set_acl_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @276, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @277, i32 0, i32 0))
  %argno1 = alloca i32
  %7 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 4, i8* getelementptr inbounds ([7 x i8]* @278, i32 0, i32 0))
  %8 = load i32* %argno1
  %argno2 = alloca i32
  %9 = bitcast i32* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 4, i8* getelementptr inbounds ([7 x i8]* @279, i32 0, i32 0))
  %10 = load i32* %argno2
  %11 = call i32 @set_acl(i8* %6, i32 %8, i32 %10)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cached_umask_main(i32, i8**) #13 {
  %3 = call i32 @cached_umask()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_fchmod_or_lchmod_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @280, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @281, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @282, i32 0, i32 0))
  %argno2 = alloca i32
  %9 = bitcast i32* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 4, i8* getelementptr inbounds ([7 x i8]* @283, i32 0, i32 0))
  %10 = load i32* %argno2
  %11 = call i32 @fchmod_or_lchmod(i32 %4, i8* %8, i32 %10)
  call void @free(i8* %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_copy_reg_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @284, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @285, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @286, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @287, i32 0, i32 0))
  %11 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @288, i32 0, i32 0))
  %12 = call i64 @macke_fork_several_sizes(i32 %11)
  %13 = mul i64 %12, 64
  %14 = call i8* @malloc(i64 %13)
  call void @klee_make_symbolic(i8* %14, i64 %13, i8* getelementptr inbounds ([7 x i8]* @289, i32 0, i32 0))
  %15 = bitcast i8* %14 to %struct.cp_options*
  %argno3 = alloca i32
  %16 = bitcast i32* %argno3 to i8*
  call void @klee_make_symbolic(i8* %16, i64 4, i8* getelementptr inbounds ([7 x i8]* @290, i32 0, i32 0))
  %17 = load i32* %argno3
  %argno4 = alloca i32
  %18 = bitcast i32* %argno4 to i8*
  call void @klee_make_symbolic(i8* %18, i64 4, i8* getelementptr inbounds ([7 x i8]* @291, i32 0, i32 0))
  %19 = load i32* %argno4
  %20 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @292, i32 0, i32 0))
  %21 = call i64 @macke_fork_several_sizes(i32 %20)
  %22 = mul i64 %21, 1
  %23 = call i8* @malloc(i64 %22)
  call void @klee_make_symbolic(i8* %23, i64 %22, i8* getelementptr inbounds ([7 x i8]* @293, i32 0, i32 0))
  %24 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @294, i32 0, i32 0))
  %25 = call i64 @macke_fork_several_sizes(i32 %24)
  %26 = mul i64 %25, 144
  %27 = call i8* @malloc(i64 %26)
  call void @klee_make_symbolic(i8* %27, i64 %26, i8* getelementptr inbounds ([7 x i8]* @295, i32 0, i32 0))
  %28 = bitcast i8* %27 to %struct.stat*
  %29 = call i1 @copy_reg(i8* %6, i8* %10, %struct.cp_options* %15, i32 %17, i32 %19, i8* %23, %struct.stat* %28)
  call void @free(i8* %6)
  call void @free(i8* %10)
  call void @free(i8* %14)
  call void @free(i8* %23)
  call void @free(i8* %27)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xreadlink_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @296, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @297, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @298, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i8* @xreadlink(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_copy_dir_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @299, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @300, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @301, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @302, i32 0, i32 0))
  %argno2 = alloca i1
  %11 = bitcast i1* %argno2 to i8*
  call void @klee_make_symbolic(i8* %11, i64 1, i8* getelementptr inbounds ([7 x i8]* @303, i32 0, i32 0))
  %12 = load i1* %argno2
  %13 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @304, i32 0, i32 0))
  %14 = call i64 @macke_fork_several_sizes(i32 %13)
  %15 = mul i64 %14, 144
  %16 = call i8* @malloc(i64 %15)
  call void @klee_make_symbolic(i8* %16, i64 %15, i8* getelementptr inbounds ([7 x i8]* @305, i32 0, i32 0))
  %17 = bitcast i8* %16 to %struct.stat*
  %18 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @306, i32 0, i32 0))
  %19 = call i64 @macke_fork_several_sizes(i32 %18)
  %20 = mul i64 %19, 24
  %21 = call i8* @malloc(i64 %20)
  call void @klee_make_symbolic(i8* %21, i64 %20, i8* getelementptr inbounds ([7 x i8]* @307, i32 0, i32 0))
  %22 = bitcast i8* %21 to %struct.dir_list*
  %23 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @308, i32 0, i32 0))
  %24 = call i64 @macke_fork_several_sizes(i32 %23)
  %25 = mul i64 %24, 64
  %26 = call i8* @malloc(i64 %25)
  call void @klee_make_symbolic(i8* %26, i64 %25, i8* getelementptr inbounds ([7 x i8]* @309, i32 0, i32 0))
  %27 = bitcast i8* %26 to %struct.cp_options*
  %28 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @310, i32 0, i32 0))
  %29 = call i64 @macke_fork_several_sizes(i32 %28)
  %30 = mul i64 %29, 1
  %31 = call i8* @malloc(i64 %30)
  call void @klee_make_symbolic(i8* %31, i64 %30, i8* getelementptr inbounds ([7 x i8]* @311, i32 0, i32 0))
  %32 = call i1 @copy_dir(i8* %6, i8* %10, i1 %12, %struct.stat* %17, %struct.dir_list* %22, %struct.cp_options* %27, i8* %31)
  call void @free(i8* %6)
  call void @free(i8* %10)
  call void @free(i8* %16)
  call void @free(i8* %21)
  call void @free(i8* %26)
  call void @free(i8* %31)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_copy_internal_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @312, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @313, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @314, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @315, i32 0, i32 0))
  %argno2 = alloca i1
  %11 = bitcast i1* %argno2 to i8*
  call void @klee_make_symbolic(i8* %11, i64 1, i8* getelementptr inbounds ([7 x i8]* @316, i32 0, i32 0))
  %12 = load i1* %argno2
  %argno3 = alloca i64
  %13 = bitcast i64* %argno3 to i8*
  call void @klee_make_symbolic(i8* %13, i64 8, i8* getelementptr inbounds ([7 x i8]* @317, i32 0, i32 0))
  %14 = load i64* %argno3
  %15 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @318, i32 0, i32 0))
  %16 = call i64 @macke_fork_several_sizes(i32 %15)
  %17 = mul i64 %16, 24
  %18 = call i8* @malloc(i64 %17)
  call void @klee_make_symbolic(i8* %18, i64 %17, i8* getelementptr inbounds ([7 x i8]* @319, i32 0, i32 0))
  %19 = bitcast i8* %18 to %struct.dir_list*
  %20 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @320, i32 0, i32 0))
  %21 = call i64 @macke_fork_several_sizes(i32 %20)
  %22 = mul i64 %21, 64
  %23 = call i8* @malloc(i64 %22)
  call void @klee_make_symbolic(i8* %23, i64 %22, i8* getelementptr inbounds ([7 x i8]* @321, i32 0, i32 0))
  %24 = bitcast i8* %23 to %struct.cp_options*
  %argno6 = alloca i1
  %25 = bitcast i1* %argno6 to i8*
  call void @klee_make_symbolic(i8* %25, i64 1, i8* getelementptr inbounds ([7 x i8]* @322, i32 0, i32 0))
  %26 = load i1* %argno6
  %27 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @323, i32 0, i32 0))
  %28 = call i64 @macke_fork_several_sizes(i32 %27)
  %29 = mul i64 %28, 1
  %30 = call i8* @malloc(i64 %29)
  call void @klee_make_symbolic(i8* %30, i64 %29, i8* getelementptr inbounds ([7 x i8]* @324, i32 0, i32 0))
  %31 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @325, i32 0, i32 0))
  %32 = call i64 @macke_fork_several_sizes(i32 %31)
  %33 = mul i64 %32, 1
  %34 = call i8* @malloc(i64 %33)
  call void @klee_make_symbolic(i8* %34, i64 %33, i8* getelementptr inbounds ([7 x i8]* @326, i32 0, i32 0))
  %35 = call i1 @copy_internal(i8* %6, i8* %10, i1 %12, i64 %14, %struct.dir_list* %19, %struct.cp_options* %24, i1 %26, i8* %30, i8* %34)
  call void @free(i8* %6)
  call void @free(i8* %10)
  call void @free(i8* %18)
  call void @free(i8* %23)
  call void @free(i8* %30)
  call void @free(i8* %34)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_copy_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @327, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @328, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @329, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @330, i32 0, i32 0))
  %argno2 = alloca i1
  %11 = bitcast i1* %argno2 to i8*
  call void @klee_make_symbolic(i8* %11, i64 1, i8* getelementptr inbounds ([7 x i8]* @331, i32 0, i32 0))
  %12 = load i1* %argno2
  %13 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @332, i32 0, i32 0))
  %14 = call i64 @macke_fork_several_sizes(i32 %13)
  %15 = mul i64 %14, 64
  %16 = call i8* @malloc(i64 %15)
  call void @klee_make_symbolic(i8* %16, i64 %15, i8* getelementptr inbounds ([7 x i8]* @333, i32 0, i32 0))
  %17 = bitcast i8* %16 to %struct.cp_options*
  %18 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @334, i32 0, i32 0))
  %19 = call i64 @macke_fork_several_sizes(i32 %18)
  %20 = mul i64 %19, 1
  %21 = call i8* @malloc(i64 %20)
  call void @klee_make_symbolic(i8* %21, i64 %20, i8* getelementptr inbounds ([7 x i8]* @335, i32 0, i32 0))
  %22 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @336, i32 0, i32 0))
  %23 = call i64 @macke_fork_several_sizes(i32 %22)
  %24 = mul i64 %23, 1
  %25 = call i8* @malloc(i64 %24)
  call void @klee_make_symbolic(i8* %25, i64 %24, i8* getelementptr inbounds ([7 x i8]* @337, i32 0, i32 0))
  %26 = call i1 @copy(i8* %6, i8* %10, i1 %12, %struct.cp_options* %17, i8* %21, i8* %25)
  call void @free(i8* %6)
  call void @free(i8* %10)
  call void @free(i8* %16)
  call void @free(i8* %21)
  call void @free(i8* %25)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_klee_change_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @338, i32 0, i32 0))
  %4 = load i64* %argno0
  %argno1 = alloca i64
  %5 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([7 x i8]* @339, i32 0, i32 0))
  %6 = load i64* %argno1
  %7 = call i64 @klee_change(i64 %4, i64 %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_rm_option_init_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @340, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 32
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @341, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.rm_options*
  call void @rm_option_init(%struct.rm_options* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_ds_init_main(i32, i8**) #13 {
  %3 = call %struct.dirstack_state* @ds_init()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_dot_or_dotdot172_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @342, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @343, i32 0, i32 0))
  %7 = call i1 @dot_or_dotdot172(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cache_stat_init_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @344, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @345, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call %struct.stat* @cache_stat_init(%struct.stat* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cycle_check_init_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @346, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 32
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @347, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.cycle_check_state*
  call void @cycle_check_init(%struct.cycle_check_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cache_fstatat_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @348, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @349, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @350, i32 0, i32 0))
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @351, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 144
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @352, i32 0, i32 0))
  %13 = bitcast i8* %12 to %struct.stat*
  %argno3 = alloca i32
  %14 = bitcast i32* %argno3 to i8*
  call void @klee_make_symbolic(i8* %14, i64 4, i8* getelementptr inbounds ([7 x i8]* @353, i32 0, i32 0))
  %15 = load i32* %argno3
  %16 = call i32 @cache_fstatat(i32 %4, i8* %8, %struct.stat* %13, i32 %15)
  call void @free(i8* %8)
  call void @free(i8* %12)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_nonexistent_file_errno_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @354, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i1 @nonexistent_file_errno(i32 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_ignorable_missing_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @355, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 32
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @356, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.rm_options*
  %argno1 = alloca i32
  %8 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %8, i64 4, i8* getelementptr inbounds ([7 x i8]* @357, i32 0, i32 0))
  %9 = load i32* %argno1
  %10 = call i1 @ignorable_missing(%struct.rm_options* %7, i32 %9)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_stack_top_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @358, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @359, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_push_initial_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @360, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @361, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @AD_push_initial(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_klee_get_false_main(i32, i8**) #13 {
  %3 = call i32 @klee_get_false()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_full_filename__main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @362, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @363, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @364, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @365, i32 0, i32 0))
  %12 = call i8* @full_filename_(%struct.dirstack_state* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_euidaccess_stat_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @366, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @367, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %argno1 = alloca i32
  %8 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %8, i64 4, i8* getelementptr inbounds ([7 x i8]* @368, i32 0, i32 0))
  %9 = load i32* %argno1
  %10 = call i1 @euidaccess_stat(%struct.stat* %7, i32 %9)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_write_protected_non_symlink_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @369, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @370, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @371, i32 0, i32 0))
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @372, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 496
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @373, i32 0, i32 0))
  %13 = bitcast i8* %12 to %struct.dirstack_state*
  %14 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @374, i32 0, i32 0))
  %15 = call i64 @macke_fork_several_sizes(i32 %14)
  %16 = mul i64 %15, 144
  %17 = call i8* @malloc(i64 %16)
  call void @klee_make_symbolic(i8* %17, i64 %16, i8* getelementptr inbounds ([7 x i8]* @375, i32 0, i32 0))
  %18 = bitcast i8* %17 to %struct.stat*
  %19 = call i1 @write_protected_non_symlink(i32 %4, i8* %8, %struct.dirstack_state* %13, %struct.stat* %18)
  call void @free(i8* %8)
  call void @free(i8* %12)
  call void @free(i8* %17)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_readdir_ignoring_dot_and_dotdot_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @376, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @377, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.__dirstream*
  %8 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_is_empty_dir_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @378, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @379, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @380, i32 0, i32 0))
  %9 = call i1 @is_empty_dir(i32 %4, i8* %8)
  call void @free(i8* %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_file_type_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @381, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @382, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call i8* @file_type(%struct.stat* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_prompt_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @383, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @384, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 496
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @385, i32 0, i32 0))
  %9 = bitcast i8* %8 to %struct.dirstack_state*
  %10 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @386, i32 0, i32 0))
  %11 = call i64 @macke_fork_several_sizes(i32 %10)
  %12 = mul i64 %11, 1
  %13 = call i8* @malloc(i64 %12)
  call void @klee_make_symbolic(i8* %13, i64 %12, i8* getelementptr inbounds ([7 x i8]* @387, i32 0, i32 0))
  %14 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @388, i32 0, i32 0))
  %15 = call i64 @macke_fork_several_sizes(i32 %14)
  %16 = mul i64 %15, 144
  %17 = call i8* @malloc(i64 %16)
  call void @klee_make_symbolic(i8* %17, i64 %16, i8* getelementptr inbounds ([7 x i8]* @389, i32 0, i32 0))
  %18 = bitcast i8* %17 to %struct.stat*
  %19 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @390, i32 0, i32 0))
  %20 = call i64 @macke_fork_several_sizes(i32 %19)
  %21 = mul i64 %20, 32
  %22 = call i8* @malloc(i64 %21)
  call void @klee_make_symbolic(i8* %22, i64 %21, i8* getelementptr inbounds ([7 x i8]* @391, i32 0, i32 0))
  %23 = bitcast i8* %22 to %struct.rm_options*
  %argno5 = alloca i32
  %24 = bitcast i32* %argno5 to i8*
  call void @klee_make_symbolic(i8* %24, i64 4, i8* getelementptr inbounds ([7 x i8]* @392, i32 0, i32 0))
  %25 = load i32* %argno5
  %26 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @393, i32 0, i32 0))
  %27 = call i64 @macke_fork_several_sizes(i32 %26)
  %28 = mul i64 %27, 4
  %29 = call i8* @malloc(i64 %28)
  call void @klee_make_symbolic(i8* %29, i64 %28, i8* getelementptr inbounds ([7 x i8]* @394, i32 0, i32 0))
  %30 = bitcast i8* %29 to i32*
  %31 = call i32 @prompt(i32 %4, %struct.dirstack_state* %9, i8* %13, %struct.stat* %18, %struct.rm_options* %23, i32 %25, i32* %30)
  call void @free(i8* %8)
  call void @free(i8* %13)
  call void @free(i8* %17)
  call void @free(i8* %22)
  call void @free(i8* %29)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cache_stat_ok_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @395, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @396, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call i1 @cache_stat_ok(%struct.stat* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_is_dir_lstat_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @397, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @398, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @399, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 144
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @400, i32 0, i32 0))
  %11 = bitcast i8* %10 to %struct.stat*
  %12 = call i1 @is_dir_lstat(i8* %6, %struct.stat* %11)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_remove_entry_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @401, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @402, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 496
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @403, i32 0, i32 0))
  %9 = bitcast i8* %8 to %struct.dirstack_state*
  %10 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @404, i32 0, i32 0))
  %11 = call i64 @macke_fork_several_sizes(i32 %10)
  %12 = mul i64 %11, 1
  %13 = call i8* @malloc(i64 %12)
  call void @klee_make_symbolic(i8* %13, i64 %12, i8* getelementptr inbounds ([7 x i8]* @405, i32 0, i32 0))
  %14 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @406, i32 0, i32 0))
  %15 = call i64 @macke_fork_several_sizes(i32 %14)
  %16 = mul i64 %15, 144
  %17 = call i8* @malloc(i64 %16)
  call void @klee_make_symbolic(i8* %17, i64 %16, i8* getelementptr inbounds ([7 x i8]* @407, i32 0, i32 0))
  %18 = bitcast i8* %17 to %struct.stat*
  %19 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @408, i32 0, i32 0))
  %20 = call i64 @macke_fork_several_sizes(i32 %19)
  %21 = mul i64 %20, 32
  %22 = call i8* @malloc(i64 %21)
  call void @klee_make_symbolic(i8* %22, i64 %21, i8* getelementptr inbounds ([7 x i8]* @409, i32 0, i32 0))
  %23 = bitcast i8* %22 to %struct.rm_options*
  %24 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @410, i32 0, i32 0))
  %25 = call i64 @macke_fork_several_sizes(i32 %24)
  %26 = mul i64 %25, 280
  %27 = call i8* @malloc(i64 %26)
  call void @klee_make_symbolic(i8* %27, i64 %26, i8* getelementptr inbounds ([7 x i8]* @411, i32 0, i32 0))
  %28 = bitcast i8* %27 to %struct.dirent*
  %29 = call i32 @remove_entry(i32 %4, %struct.dirstack_state* %9, i8* %13, %struct.stat* %18, %struct.rm_options* %23, %struct.dirent* %28)
  call void @free(i8* %8)
  call void @free(i8* %13)
  call void @free(i8* %17)
  call void @free(i8* %22)
  call void @free(i8* %27)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_fd_to_subdirp_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @412, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @413, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @414, i32 0, i32 0))
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @415, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 32
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @416, i32 0, i32 0))
  %13 = bitcast i8* %12 to %struct.rm_options*
  %argno3 = alloca i32
  %14 = bitcast i32* %argno3 to i8*
  call void @klee_make_symbolic(i8* %14, i64 4, i8* getelementptr inbounds ([7 x i8]* @417, i32 0, i32 0))
  %15 = load i32* %argno3
  %16 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @418, i32 0, i32 0))
  %17 = call i64 @macke_fork_several_sizes(i32 %16)
  %18 = mul i64 %17, 144
  %19 = call i8* @malloc(i64 %18)
  call void @klee_make_symbolic(i8* %19, i64 %18, i8* getelementptr inbounds ([7 x i8]* @419, i32 0, i32 0))
  %20 = bitcast i8* %19 to %struct.stat*
  %21 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @420, i32 0, i32 0))
  %22 = call i64 @macke_fork_several_sizes(i32 %21)
  %23 = mul i64 %22, 4
  %24 = call i8* @malloc(i64 %23)
  call void @klee_make_symbolic(i8* %24, i64 %23, i8* getelementptr inbounds ([7 x i8]* @421, i32 0, i32 0))
  %25 = bitcast i8* %24 to i32*
  %26 = call %struct.__dirstream* @fd_to_subdirp(i32 %4, i8* %8, %struct.rm_options* %13, i32 %15, %struct.stat* %20, i32* %25)
  call void @free(i8* %8)
  call void @free(i8* %12)
  call void @free(i8* %19)
  call void @free(i8* %24)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_push_dir_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @422, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @423, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @424, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @425, i32 0, i32 0))
  call void @push_dir(%struct.dirstack_state* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_is_zero_or_power_of_two_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @426, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i1 @is_zero_or_power_of_two(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cycle_check_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @427, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 32
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @428, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.cycle_check_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @429, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 144
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @430, i32 0, i32 0))
  %12 = bitcast i8* %11 to %struct.stat*
  %13 = call i1 @cycle_check(%struct.cycle_check_state* %7, %struct.stat* %12)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_stack_height_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @431, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @432, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i64 @AD_stack_height(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_push_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @433, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @434, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 496
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @435, i32 0, i32 0))
  %9 = bitcast i8* %8 to %struct.dirstack_state*
  %10 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @436, i32 0, i32 0))
  %11 = call i64 @macke_fork_several_sizes(i32 %10)
  %12 = mul i64 %11, 1
  %13 = call i8* @malloc(i64 %12)
  call void @klee_make_symbolic(i8* %13, i64 %12, i8* getelementptr inbounds ([7 x i8]* @437, i32 0, i32 0))
  %14 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @438, i32 0, i32 0))
  %15 = call i64 @macke_fork_several_sizes(i32 %14)
  %16 = mul i64 %15, 144
  %17 = call i8* @malloc(i64 %16)
  call void @klee_make_symbolic(i8* %17, i64 %16, i8* getelementptr inbounds ([7 x i8]* @439, i32 0, i32 0))
  %18 = bitcast i8* %17 to %struct.stat*
  call void @AD_push(i32 %4, %struct.dirstack_state* %9, i8* %13, %struct.stat* %18)
  call void @free(i8* %8)
  call void @free(i8* %13)
  call void @free(i8* %17)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_is_removable_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @440, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @441, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @442, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @443, i32 0, i32 0))
  %12 = call i1 @AD_is_removable(%struct.dirstack_state* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_mark_as_unremovable_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @444, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @445, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @446, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @447, i32 0, i32 0))
  call void @AD_mark_as_unremovable(%struct.dirstack_state* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_top_dir_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @448, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @449, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i8* @top_dir(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @main(i32, i8**) #13 {
  call void @klee_mark_arg_symbolic(i32 %0, i8** %1)
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @450, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @451, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @AD_mark_current_as_unremovable(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_free_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @452, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @453, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  call void @hash_free(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_stack_pop_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @454, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @455, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @AD_stack_pop(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_pop_dir_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @456, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @457, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @pop_dir(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_pop_and_chdir_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @458, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @459, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.__dirstream*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @460, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 4
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @461, i32 0, i32 0))
  %12 = bitcast i8* %11 to i32*
  %13 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @462, i32 0, i32 0))
  %14 = call i64 @macke_fork_several_sizes(i32 %13)
  %15 = mul i64 %14, 496
  %16 = call i8* @malloc(i64 %15)
  call void @klee_make_symbolic(i8* %16, i64 %15, i8* getelementptr inbounds ([7 x i8]* @463, i32 0, i32 0))
  %17 = bitcast i8* %16 to %struct.dirstack_state*
  %18 = call i8* @AD_pop_and_chdir(%struct.__dirstream* %7, i32* %12, %struct.dirstack_state* %17)
  call void @free(i8* %6)
  call void @free(i8* %11)
  call void @free(i8* %16)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_remove_dir_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @464, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @465, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 496
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @466, i32 0, i32 0))
  %9 = bitcast i8* %8 to %struct.dirstack_state*
  %10 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @467, i32 0, i32 0))
  %11 = call i64 @macke_fork_several_sizes(i32 %10)
  %12 = mul i64 %11, 1
  %13 = call i8* @malloc(i64 %12)
  call void @klee_make_symbolic(i8* %13, i64 %12, i8* getelementptr inbounds ([7 x i8]* @468, i32 0, i32 0))
  %14 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @469, i32 0, i32 0))
  %15 = call i64 @macke_fork_several_sizes(i32 %14)
  %16 = mul i64 %15, 144
  %17 = call i8* @malloc(i64 %16)
  call void @klee_make_symbolic(i8* %17, i64 %16, i8* getelementptr inbounds ([7 x i8]* @470, i32 0, i32 0))
  %18 = bitcast i8* %17 to %struct.stat*
  %19 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @471, i32 0, i32 0))
  %20 = call i64 @macke_fork_several_sizes(i32 %19)
  %21 = mul i64 %20, 32
  %22 = call i8* @malloc(i64 %21)
  call void @klee_make_symbolic(i8* %22, i64 %21, i8* getelementptr inbounds ([7 x i8]* @472, i32 0, i32 0))
  %23 = bitcast i8* %22 to %struct.rm_options*
  %24 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @473, i32 0, i32 0))
  %25 = call i64 @macke_fork_several_sizes(i32 %24)
  %26 = mul i64 %25, 4
  %27 = call i8* @malloc(i64 %26)
  call void @klee_make_symbolic(i8* %27, i64 %26, i8* getelementptr inbounds ([7 x i8]* @474, i32 0, i32 0))
  %28 = bitcast i8* %27 to i32*
  %29 = call i32 @remove_dir(i32 %4, %struct.dirstack_state* %9, i8* %13, %struct.stat* %18, %struct.rm_options* %23, i32* %28)
  call void @free(i8* %8)
  call void @free(i8* %13)
  call void @free(i8* %17)
  call void @free(i8* %22)
  call void @free(i8* %27)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_stack_clear_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @475, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @476, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @AD_stack_clear(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_ds_clear_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @477, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @478, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @ds_clear(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_rm_1_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @479, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @480, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @481, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @482, i32 0, i32 0))
  %12 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @483, i32 0, i32 0))
  %13 = call i64 @macke_fork_several_sizes(i32 %12)
  %14 = mul i64 %13, 32
  %15 = call i8* @malloc(i64 %14)
  call void @klee_make_symbolic(i8* %15, i64 %14, i8* getelementptr inbounds ([7 x i8]* @484, i32 0, i32 0))
  %16 = bitcast i8* %15 to %struct.rm_options*
  %17 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @485, i32 0, i32 0))
  %18 = call i64 @macke_fork_several_sizes(i32 %17)
  %19 = mul i64 %18, 4
  %20 = call i8* @malloc(i64 %19)
  call void @klee_make_symbolic(i8* %20, i64 %19, i8* getelementptr inbounds ([7 x i8]* @486, i32 0, i32 0))
  %21 = bitcast i8* %20 to i32*
  %22 = call i32 @rm_1(%struct.dirstack_state* %7, i8* %11, %struct.rm_options* %16, i32* %21)
  call void @free(i8* %6)
  call void @free(i8* %11)
  call void @free(i8* %15)
  call void @free(i8* %20)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_ds_free_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @487, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @488, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @ds_free(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_do_move_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @489, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @490, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @491, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @492, i32 0, i32 0))
  %11 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @493, i32 0, i32 0))
  %12 = call i64 @macke_fork_several_sizes(i32 %11)
  %13 = mul i64 %12, 64
  %14 = call i8* @malloc(i64 %13)
  call void @klee_make_symbolic(i8* %14, i64 %13, i8* getelementptr inbounds ([7 x i8]* @494, i32 0, i32 0))
  %15 = bitcast i8* %14 to %struct.cp_options*
  %16 = call i1 @do_move(i8* %6, i8* %10, %struct.cp_options* %15)
  call void @free(i8* %6)
  call void @free(i8* %10)
  call void @free(i8* %14)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_movefile_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @495, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @496, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @497, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @498, i32 0, i32 0))
  %argno2 = alloca i1
  %11 = bitcast i1* %argno2 to i8*
  call void @klee_make_symbolic(i8* %11, i64 1, i8* getelementptr inbounds ([7 x i8]* @499, i32 0, i32 0))
  %12 = load i1* %argno2
  %13 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @500, i32 0, i32 0))
  %14 = call i64 @macke_fork_several_sizes(i32 %13)
  %15 = mul i64 %14, 64
  %16 = call i8* @malloc(i64 %15)
  call void @klee_make_symbolic(i8* %16, i64 %15, i8* getelementptr inbounds ([7 x i8]* @501, i32 0, i32 0))
  %17 = bitcast i8* %16 to %struct.cp_options*
  %18 = call i1 @movefile(i8* %6, i8* %10, i1 %12, %struct.cp_options* %17)
  call void @free(i8* %6)
  call void @free(i8* %10)
  call void @free(i8* %16)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_src_info_init_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @502, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 64
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @503, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.cp_options*
  call void @src_info_init(%struct.cp_options* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_pjw_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @504, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @505, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @506, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i64 @hash_pjw(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_triple_hash_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @507, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @508, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @509, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i64 @triple_hash(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_triple_compare_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @510, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @511, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @512, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @513, i32 0, i32 0))
  %11 = call i1 @triple_compare(i8* %6, i8* %10)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_triple_hash_no_name_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @514, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @515, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @516, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i64 @triple_hash_no_name(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_remember_created_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @517, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @518, i32 0, i32 0))
  %7 = call i1 @remember_created(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_forget_all_main(i32, i8**) #13 {
  call void @forget_all()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_src_to_dest_hash_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @519, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @520, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @521, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i64 @src_to_dest_hash(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_src_to_dest_compare_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @522, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @523, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @524, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @525, i32 0, i32 0))
  %11 = call i1 @src_to_dest_compare(i8* %6, i8* %10)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_klee_get_true_main(i32, i8**) #13 {
  %3 = call i32 @klee_get_true()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_freer_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @526, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @527, i32 0, i32 0))
  call void @hash_freer(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_compare_strings_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @528, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @529, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @530, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @531, i32 0, i32 0))
  %11 = call i1 @hash_compare_strings(i8* %6, i8* %10)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_file_has_acl_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @532, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @533, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @534, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 144
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @535, i32 0, i32 0))
  %11 = bitcast i8* %10 to %struct.stat*
  %12 = call i32 @file_has_acl(i8* %6, %struct.stat* %11)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke___argmatch_die_main(i32, i8**) #13 {
  call void @__argmatch_die()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xstrndup_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @536, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @537, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @538, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i8* @xstrndup(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_base_name_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @539, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @540, i32 0, i32 0))
  %7 = call i8* @base_name(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_close_stdout_set_file_name_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @541, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @542, i32 0, i32 0))
  call void @close_stdout_set_file_name(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_close_stream_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @543, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 216
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @544, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct._IO_FILE*
  %8 = call i32 @close_stream(%struct._IO_FILE* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_set_char_quoting_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @545, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 36
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @546, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.quoting_options*
  %argno1 = alloca i8
  call void @klee_make_symbolic(i8* %argno1, i64 1, i8* getelementptr inbounds ([7 x i8]* @547, i32 0, i32 0))
  %8 = load i8* %argno1
  %argno2 = alloca i32
  %9 = bitcast i32* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 4, i8* getelementptr inbounds ([7 x i8]* @548, i32 0, i32 0))
  %10 = load i32* %argno2
  %11 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 %8, i32 %10)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_char_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @549, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @550, i32 0, i32 0))
  %argno1 = alloca i8
  call void @klee_make_symbolic(i8* %argno1, i64 1, i8* getelementptr inbounds ([7 x i8]* @551, i32 0, i32 0))
  %7 = load i8* %argno1
  %8 = call i8* @quotearg_char(i8* %6, i8 %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_colon_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @552, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @553, i32 0, i32 0))
  %7 = call i8* @quotearg_colon(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_close_stdout_main(i32, i8**) #13 {
  call void @close_stdout()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_n_buckets_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @554, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @555, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i64 @hash_get_n_buckets(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_n_buckets_used_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @556, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @557, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_n_entries_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @558, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @559, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i64 @hash_get_n_entries(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_max_bucket_length_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @560, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @561, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_table_ok_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @562, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @563, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i1 @hash_table_ok(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_print_statistics_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @564, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @565, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @566, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 216
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @567, i32 0, i32 0))
  %12 = bitcast i8* %11 to %struct._IO_FILE*
  call void @hash_print_statistics(%struct.hash_table* %7, %struct._IO_FILE* %12)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_first_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @568, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @569, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i8* @hash_get_first(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_next_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @570, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @571, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @572, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @573, i32 0, i32 0))
  %12 = call i8* @hash_get_next(%struct.hash_table* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_string_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @574, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @575, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @576, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i64 @hash_string(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_reset_tuning_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @577, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 20
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @578, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_tuning*
  call void @hash_reset_tuning(%struct.hash_tuning* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_clear_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @579, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @580, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  call void @hash_clear(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_clone_quoting_options_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @581, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 36
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @582, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.quoting_options*
  %8 = call %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_get_quoting_style_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @583, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 36
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @584, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.quoting_options*
  %8 = call i32 @get_quoting_style(%struct.quoting_options* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_set_quoting_style_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @585, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 36
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @586, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.quoting_options*
  %argno1 = alloca i32
  %8 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %8, i64 4, i8* getelementptr inbounds ([7 x i8]* @587, i32 0, i32 0))
  %9 = load i32* %argno1
  call void @set_quoting_style(%struct.quoting_options* %7, i32 %9)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_alloc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @588, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @589, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @590, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @591, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 36
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @592, i32 0, i32 0))
  %13 = bitcast i8* %12 to %struct.quoting_options*
  %14 = call i8* @quotearg_alloc(i8* %6, i64 %8, %struct.quoting_options* %13)
  call void @free(i8* %6)
  call void @free(i8* %12)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_free_main(i32, i8**) #13 {
  call void @quotearg_free()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_n_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @593, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @594, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @595, i32 0, i32 0))
  %9 = call i8* @quotearg_n(i32 %4, i8* %8)
  call void @free(i8* %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @596, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @597, i32 0, i32 0))
  %7 = call i8* @quotearg(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_n_style_mem_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @598, i32 0, i32 0))
  %4 = load i32* %argno0
  %argno1 = alloca i32
  %5 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 4, i8* getelementptr inbounds ([7 x i8]* @599, i32 0, i32 0))
  %6 = load i32* %argno1
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @600, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @601, i32 0, i32 0))
  %argno3 = alloca i64
  %11 = bitcast i64* %argno3 to i8*
  call void @klee_make_symbolic(i8* %11, i64 8, i8* getelementptr inbounds ([7 x i8]* @602, i32 0, i32 0))
  %12 = load i64* %argno3
  %13 = call i8* @quotearg_n_style_mem(i32 %4, i32 %6, i8* %10, i64 %12)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_style_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @603, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @604, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @605, i32 0, i32 0))
  %9 = call i8* @quotearg_style(i32 %4, i8* %8)
  call void @free(i8* %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_fdsavedir_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @606, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i8* @fdsavedir(i32 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_dev_info_hash_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @607, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @608, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @609, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i64 @dev_info_hash(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_dev_info_compare_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @610, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @611, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @612, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @613, i32 0, i32 0))
  %11 = call i1 @dev_info_compare(i8* %6, i8* %10)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xnmalloc_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @614, i32 0, i32 0))
  %4 = load i64* %argno0
  %argno1 = alloca i64
  %5 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([7 x i8]* @615, i32 0, i32 0))
  %6 = load i64* %argno1
  %7 = call i8* @xnmalloc(i64 %4, i64 %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_x2nrealloc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @616, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @617, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @618, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 8
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @619, i32 0, i32 0))
  %11 = bitcast i8* %10 to i64*
  %argno2 = alloca i64
  %12 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %12, i64 8, i8* getelementptr inbounds ([7 x i8]* @620, i32 0, i32 0))
  %13 = load i64* %argno2
  %14 = call i8* @x2nrealloc(i8* %6, i64* %11, i64 %13)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_x2realloc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @621, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @622, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @623, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 8
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @624, i32 0, i32 0))
  %11 = bitcast i8* %10 to i64*
  %12 = call i8* @x2realloc(i8* %6, i64* %11)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xzalloc_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @625, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i8* @xzalloc(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xcalloc_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @626, i32 0, i32 0))
  %4 = load i64* %argno0
  %argno1 = alloca i64
  %5 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([7 x i8]* @627, i32 0, i32 0))
  %6 = load i64* %argno1
  %7 = call i8* @xcalloc(i64 %4, i64 %6)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define void @klee_div_zero_check(i64 %z) #14 {
  %1 = icmp eq i64 %z, 0, !dbg !5357
  br i1 %1, label %2, label %3, !dbg !5357

; <label>:2                                       ; preds = %0
  tail call void @klee_report_error(i8* getelementptr inbounds ([64 x i8]* @.str57, i64 0, i64 0), i32 14, i8* getelementptr inbounds ([15 x i8]* @.str158, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str259, i64 0, i64 0)) #21, !dbg !5359
  unreachable, !dbg !5359

; <label>:3                                       ; preds = %0
  ret void, !dbg !5360
}

; Function Attrs: noreturn
declare void @klee_report_error(i8*, i32, i8*, i8*) #15

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata) #1

; Function Attrs: nounwind uwtable
define i32 @klee_int(i8* %name) #14 {
  %x = alloca i32, align 4
  %1 = bitcast i32* %x to i8*, !dbg !5361
  call void @klee_make_symbolic(i8* %1, i64 4, i8* %name) #22, !dbg !5361
  %2 = load i32* %x, align 4, !dbg !5362, !tbaa !5363
  ret i32 %2, !dbg !5362
}

; Function Attrs: nounwind uwtable
define void @klee_mark_arg_symbolic(i32 %argc, i8** nocapture readonly %argv) #14 {
  %1 = icmp sgt i32 %argc, 1, !dbg !5367
  br i1 %1, label %.lr.ph5, label %._crit_edge6, !dbg !5367

.lr.ph5:                                          ; preds = %._crit_edge, %0
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %._crit_edge ], [ 1, %0 ]
  %2 = getelementptr inbounds i8** %argv, i64 %indvars.iv8, !dbg !5369
  %3 = load i8** %2, align 8, !dbg !5369, !tbaa !5371
  br label %4, !dbg !5373

; <label>:4                                       ; preds = %4, %.lr.ph5
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %4 ], [ 0, %.lr.ph5 ]
  %i.0.i = phi i32 [ %5, %4 ], [ 0, %.lr.ph5 ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !5373
  %5 = add nsw i32 %i.0.i, 1, !dbg !5373
  %6 = getelementptr inbounds i8* %3, i64 %indvars.iv.i, !dbg !5373
  %7 = load i8* %6, align 1, !dbg !5373, !tbaa !5374
  %8 = icmp eq i8 %7, 0, !dbg !5373
  br i1 %8, label %my_strlen.exit, label %4, !dbg !5373

my_strlen.exit:                                   ; preds = %4
  %9 = sext i32 %5 to i64, !dbg !5375
  tail call void @klee_make_symbolic(i8* %3, i64 %9, i8* getelementptr inbounds ([5 x i8]* @.str360, i64 0, i64 0)) #22, !dbg !5375
  %10 = sext i32 %i.0.i to i64, !dbg !5376
  %11 = load i8** %2, align 8, !dbg !5376, !tbaa !5371
  %12 = getelementptr inbounds i8* %11, i64 %10, !dbg !5376
  %13 = load i8* %12, align 1, !dbg !5376, !tbaa !5374
  %14 = icmp eq i8 %13, 0, !dbg !5376
  %15 = zext i1 %14 to i64, !dbg !5376
  tail call void @klee_assume(i64 %15) #22, !dbg !5376
  %16 = icmp sgt i32 %i.0.i, 0, !dbg !5377
  %17 = load i8** %2, align 8, !dbg !5379, !tbaa !5371
  br i1 %16, label %.lr.ph, label %._crit_edge, !dbg !5377

.lr.ph:                                           ; preds = %.lr.ph, %my_strlen.exit
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %my_strlen.exit ]
  %18 = phi i8* [ %24, %.lr.ph ], [ %17, %my_strlen.exit ]
  %19 = getelementptr inbounds i8* %18, i64 %indvars.iv, !dbg !5379
  %20 = load i8* %19, align 1, !dbg !5379, !tbaa !5374
  %21 = icmp sgt i8 %20, 31, !dbg !5381
  %22 = icmp ne i8 %20, 127, !dbg !5381
  %..i = and i1 %21, %22, !dbg !5381
  %23 = zext i1 %..i to i64, !dbg !5379
  tail call void @klee_prefer_cex(i8* %18, i64 %23) #22, !dbg !5379
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5377
  %24 = load i8** %2, align 8, !dbg !5379, !tbaa !5371
  %lftr.wideiv4 = trunc i64 %indvars.iv.next to i32, !dbg !5377
  %exitcond5 = icmp eq i32 %lftr.wideiv4, %i.0.i, !dbg !5377
  br i1 %exitcond5, label %._crit_edge, label %.lr.ph, !dbg !5377

._crit_edge:                                      ; preds = %.lr.ph, %my_strlen.exit
  %.lcssa1 = phi i8* [ %17, %my_strlen.exit ], [ %24, %.lr.ph ]
  %25 = getelementptr inbounds i8* %.lcssa1, i64 %10, !dbg !5382
  store i8 0, i8* %25, align 1, !dbg !5382, !tbaa !5374
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !5367
  %lftr.wideiv = trunc i64 %indvars.iv.next9 to i32, !dbg !5367
  %exitcond = icmp eq i32 %lftr.wideiv, %argc, !dbg !5367
  br i1 %exitcond, label %._crit_edge6, label %.lr.ph5, !dbg !5367

._crit_edge6:                                     ; preds = %._crit_edge, %0
  ret void, !dbg !5383
}

declare void @klee_assume(i64) #16

declare void @klee_prefer_cex(i8*, i64) #16

; Function Attrs: nounwind uwtable
define void @klee_overshift_check(i64 %bitWidth, i64 %shift) #14 {
  %1 = icmp ult i64 %shift, %bitWidth, !dbg !5384
  br i1 %1, label %3, label %2, !dbg !5384

; <label>:2                                       ; preds = %0
  tail call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str461, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1562, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2663, i64 0, i64 0)) #21, !dbg !5386
  unreachable, !dbg !5386

; <label>:3                                       ; preds = %0
  ret void, !dbg !5388
}

; Function Attrs: nounwind uwtable
define i32 @klee_range(i32 %start, i32 %end, i8* %name) #14 {
  %x = alloca i32, align 4
  %1 = icmp slt i32 %start, %end, !dbg !5389
  br i1 %1, label %3, label %2, !dbg !5389

; <label>:2                                       ; preds = %0
  call void @klee_report_error(i8* getelementptr inbounds ([55 x i8]* @.str764, i64 0, i64 0), i32 17, i8* getelementptr inbounds ([14 x i8]* @.str1865, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str2966, i64 0, i64 0)) #21, !dbg !5391
  unreachable, !dbg !5391

; <label>:3                                       ; preds = %0
  %4 = add nsw i32 %start, 1, !dbg !5392
  %5 = icmp eq i32 %4, %end, !dbg !5392
  br i1 %5, label %21, label %6, !dbg !5392

; <label>:6                                       ; preds = %3
  %7 = bitcast i32* %x to i8*, !dbg !5394
  call void @klee_make_symbolic(i8* %7, i64 4, i8* %name) #22, !dbg !5394
  %8 = icmp eq i32 %start, 0, !dbg !5396
  %9 = load i32* %x, align 4, !dbg !5398, !tbaa !5363
  br i1 %8, label %10, label %13, !dbg !5396

; <label>:10                                      ; preds = %6
  %11 = icmp ult i32 %9, %end, !dbg !5398
  %12 = zext i1 %11 to i64, !dbg !5398
  call void @klee_assume(i64 %12) #22, !dbg !5398
  br label %19, !dbg !5400

; <label>:13                                      ; preds = %6
  %14 = icmp sge i32 %9, %start, !dbg !5401
  %15 = zext i1 %14 to i64, !dbg !5401
  call void @klee_assume(i64 %15) #22, !dbg !5401
  %16 = load i32* %x, align 4, !dbg !5403, !tbaa !5363
  %17 = icmp slt i32 %16, %end, !dbg !5403
  %18 = zext i1 %17 to i64, !dbg !5403
  call void @klee_assume(i64 %18) #22, !dbg !5403
  br label %19

; <label>:19                                      ; preds = %13, %10
  %20 = load i32* %x, align 4, !dbg !5404, !tbaa !5363
  br label %21, !dbg !5404

; <label>:21                                      ; preds = %19, %3
  %.0 = phi i32 [ %20, %19 ], [ %start, %3 ]
  ret i32 %.0, !dbg !5405
}

; Function Attrs: nounwind uwtable
define weak i8* @memcpy(i8* %destaddr, i8* %srcaddr, i64 %len) #14 {
  %1 = icmp eq i64 %len, 0, !dbg !5406
  br i1 %1, label %._crit_edge, label %.lr.ph.preheader, !dbg !5406

.lr.ph.preheader:                                 ; preds = %0
  %n.vec = and i64 %len, -32
  %cmp.zero = icmp eq i64 %n.vec, 0
  %2 = add i64 %len, -1
  br i1 %cmp.zero, label %middle.block, label %vector.memcheck

vector.memcheck:                                  ; preds = %.lr.ph.preheader
  %scevgep4 = getelementptr i8* %srcaddr, i64 %2
  %scevgep = getelementptr i8* %destaddr, i64 %2
  %bound1 = icmp uge i8* %scevgep, %srcaddr
  %bound0 = icmp uge i8* %scevgep4, %destaddr
  %memcheck.conflict = and i1 %bound0, %bound1
  %ptr.ind.end = getelementptr i8* %srcaddr, i64 %n.vec
  %ptr.ind.end6 = getelementptr i8* %destaddr, i64 %n.vec
  %rev.ind.end = sub i64 %len, %n.vec
  br i1 %memcheck.conflict, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.memcheck
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.memcheck ]
  %next.gep = getelementptr i8* %srcaddr, i64 %index
  %next.gep103 = getelementptr i8* %destaddr, i64 %index
  %3 = bitcast i8* %next.gep to <16 x i8>*, !dbg !5407
  %wide.load = load <16 x i8>* %3, align 1, !dbg !5407
  %next.gep.sum279 = or i64 %index, 16, !dbg !5407
  %4 = getelementptr i8* %srcaddr, i64 %next.gep.sum279, !dbg !5407
  %5 = bitcast i8* %4 to <16 x i8>*, !dbg !5407
  %wide.load200 = load <16 x i8>* %5, align 1, !dbg !5407
  %6 = bitcast i8* %next.gep103 to <16 x i8>*, !dbg !5407
  store <16 x i8> %wide.load, <16 x i8>* %6, align 1, !dbg !5407
  %7 = getelementptr i8* %destaddr, i64 %next.gep.sum279, !dbg !5407
  %8 = bitcast i8* %7 to <16 x i8>*, !dbg !5407
  store <16 x i8> %wide.load200, <16 x i8>* %8, align 1, !dbg !5407
  %index.next = add i64 %index, 32
  %9 = icmp eq i64 %index.next, %n.vec
  br i1 %9, label %middle.block, label %vector.body, !llvm.loop !5408

middle.block:                                     ; preds = %vector.body, %vector.memcheck, %.lr.ph.preheader
  %resume.val = phi i8* [ %srcaddr, %.lr.ph.preheader ], [ %srcaddr, %vector.memcheck ], [ %ptr.ind.end, %vector.body ]
  %resume.val5 = phi i8* [ %destaddr, %.lr.ph.preheader ], [ %destaddr, %vector.memcheck ], [ %ptr.ind.end6, %vector.body ]
  %resume.val7 = phi i64 [ %len, %.lr.ph.preheader ], [ %len, %vector.memcheck ], [ %rev.ind.end, %vector.body ]
  %new.indc.resume.val = phi i64 [ 0, %.lr.ph.preheader ], [ 0, %vector.memcheck ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %new.indc.resume.val, %len
  br i1 %cmp.n, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %middle.block
  %src.03 = phi i8* [ %11, %.lr.ph ], [ %resume.val, %middle.block ]
  %dest.02 = phi i8* [ %13, %.lr.ph ], [ %resume.val5, %middle.block ]
  %.01 = phi i64 [ %10, %.lr.ph ], [ %resume.val7, %middle.block ]
  %10 = add i64 %.01, -1, !dbg !5406
  %11 = getelementptr inbounds i8* %src.03, i64 1, !dbg !5407
  %12 = load i8* %src.03, align 1, !dbg !5407, !tbaa !5374
  %13 = getelementptr inbounds i8* %dest.02, i64 1, !dbg !5407
  store i8 %12, i8* %dest.02, align 1, !dbg !5407, !tbaa !5374
  %14 = icmp eq i64 %10, 0, !dbg !5406
  br i1 %14, label %._crit_edge, label %.lr.ph, !dbg !5406, !llvm.loop !5411

._crit_edge:                                      ; preds = %.lr.ph, %middle.block, %0
  ret i8* %destaddr, !dbg !5412
}

; Function Attrs: nounwind uwtable
define weak i8* @memmove(i8* %dst, i8* %src, i64 %count) #14 {
  %1 = icmp eq i8* %src, %dst, !dbg !5413
  br i1 %1, label %.loopexit, label %2, !dbg !5413

; <label>:2                                       ; preds = %0
  %3 = icmp ugt i8* %src, %dst, !dbg !5415
  br i1 %3, label %.preheader, label %18, !dbg !5415

.preheader:                                       ; preds = %2
  %4 = icmp eq i64 %count, 0, !dbg !5417
  br i1 %4, label %.loopexit, label %.lr.ph.preheader, !dbg !5417

.lr.ph.preheader:                                 ; preds = %.preheader
  %n.vec = and i64 %count, -32
  %cmp.zero = icmp eq i64 %n.vec, 0
  %5 = add i64 %count, -1
  br i1 %cmp.zero, label %middle.block, label %vector.memcheck

vector.memcheck:                                  ; preds = %.lr.ph.preheader
  %scevgep11 = getelementptr i8* %src, i64 %5
  %scevgep = getelementptr i8* %dst, i64 %5
  %bound1 = icmp uge i8* %scevgep, %src
  %bound0 = icmp uge i8* %scevgep11, %dst
  %memcheck.conflict = and i1 %bound0, %bound1
  %ptr.ind.end = getelementptr i8* %src, i64 %n.vec
  %ptr.ind.end13 = getelementptr i8* %dst, i64 %n.vec
  %rev.ind.end = sub i64 %count, %n.vec
  br i1 %memcheck.conflict, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.memcheck
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.memcheck ]
  %next.gep = getelementptr i8* %src, i64 %index
  %next.gep110 = getelementptr i8* %dst, i64 %index
  %6 = bitcast i8* %next.gep to <16 x i8>*, !dbg !5417
  %wide.load = load <16 x i8>* %6, align 1, !dbg !5417
  %next.gep.sum586 = or i64 %index, 16, !dbg !5417
  %7 = getelementptr i8* %src, i64 %next.gep.sum586, !dbg !5417
  %8 = bitcast i8* %7 to <16 x i8>*, !dbg !5417
  %wide.load207 = load <16 x i8>* %8, align 1, !dbg !5417
  %9 = bitcast i8* %next.gep110 to <16 x i8>*, !dbg !5417
  store <16 x i8> %wide.load, <16 x i8>* %9, align 1, !dbg !5417
  %10 = getelementptr i8* %dst, i64 %next.gep.sum586, !dbg !5417
  %11 = bitcast i8* %10 to <16 x i8>*, !dbg !5417
  store <16 x i8> %wide.load207, <16 x i8>* %11, align 1, !dbg !5417
  %index.next = add i64 %index, 32
  %12 = icmp eq i64 %index.next, %n.vec
  br i1 %12, label %middle.block, label %vector.body, !llvm.loop !5419

middle.block:                                     ; preds = %vector.body, %vector.memcheck, %.lr.ph.preheader
  %resume.val = phi i8* [ %src, %.lr.ph.preheader ], [ %src, %vector.memcheck ], [ %ptr.ind.end, %vector.body ]
  %resume.val12 = phi i8* [ %dst, %.lr.ph.preheader ], [ %dst, %vector.memcheck ], [ %ptr.ind.end13, %vector.body ]
  %resume.val14 = phi i64 [ %count, %.lr.ph.preheader ], [ %count, %vector.memcheck ], [ %rev.ind.end, %vector.body ]
  %new.indc.resume.val = phi i64 [ 0, %.lr.ph.preheader ], [ 0, %vector.memcheck ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %new.indc.resume.val, %count
  br i1 %cmp.n, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %middle.block
  %b.04 = phi i8* [ %14, %.lr.ph ], [ %resume.val, %middle.block ]
  %a.03 = phi i8* [ %16, %.lr.ph ], [ %resume.val12, %middle.block ]
  %.02 = phi i64 [ %13, %.lr.ph ], [ %resume.val14, %middle.block ]
  %13 = add i64 %.02, -1, !dbg !5417
  %14 = getelementptr inbounds i8* %b.04, i64 1, !dbg !5417
  %15 = load i8* %b.04, align 1, !dbg !5417, !tbaa !5374
  %16 = getelementptr inbounds i8* %a.03, i64 1, !dbg !5417
  store i8 %15, i8* %a.03, align 1, !dbg !5417, !tbaa !5374
  %17 = icmp eq i64 %13, 0, !dbg !5417
  br i1 %17, label %.loopexit, label %.lr.ph, !dbg !5417, !llvm.loop !5420

; <label>:18                                      ; preds = %2
  %19 = add i64 %count, -1, !dbg !5421
  %20 = icmp eq i64 %count, 0, !dbg !5423
  br i1 %20, label %.loopexit, label %.lr.ph9, !dbg !5423

.lr.ph9:                                          ; preds = %18
  %21 = getelementptr inbounds i8* %src, i64 %19, !dbg !5424
  %22 = getelementptr inbounds i8* %dst, i64 %19, !dbg !5421
  %n.vec215 = and i64 %count, -32
  %cmp.zero217 = icmp eq i64 %n.vec215, 0
  br i1 %cmp.zero217, label %middle.block210, label %vector.memcheck224

vector.memcheck224:                               ; preds = %.lr.ph9
  %bound1221 = icmp ule i8* %21, %dst
  %bound0220 = icmp ule i8* %22, %src
  %memcheck.conflict223 = and i1 %bound0220, %bound1221
  %.sum = sub i64 %19, %n.vec215
  %rev.ptr.ind.end = getelementptr i8* %src, i64 %.sum
  %rev.ptr.ind.end229 = getelementptr i8* %dst, i64 %.sum
  %rev.ind.end231 = sub i64 %count, %n.vec215
  br i1 %memcheck.conflict223, label %middle.block210, label %vector.body209

vector.body209:                                   ; preds = %vector.body209, %vector.memcheck224
  %index212 = phi i64 [ %index.next234, %vector.body209 ], [ 0, %vector.memcheck224 ]
  %.sum440 = sub i64 %19, %index212
  %next.gep236.sum = add i64 %.sum440, -15, !dbg !5423
  %23 = getelementptr i8* %src, i64 %next.gep236.sum, !dbg !5423
  %24 = bitcast i8* %23 to <16 x i8>*, !dbg !5423
  %wide.load434 = load <16 x i8>* %24, align 1, !dbg !5423
  %reverse = shufflevector <16 x i8> %wide.load434, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>, !dbg !5423
  %.sum505 = add i64 %.sum440, -31, !dbg !5423
  %25 = getelementptr i8* %src, i64 %.sum505, !dbg !5423
  %26 = bitcast i8* %25 to <16 x i8>*, !dbg !5423
  %wide.load435 = load <16 x i8>* %26, align 1, !dbg !5423
  %reverse436 = shufflevector <16 x i8> %wide.load435, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>, !dbg !5423
  %reverse437 = shufflevector <16 x i8> %reverse, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>, !dbg !5423
  %27 = getelementptr i8* %dst, i64 %next.gep236.sum, !dbg !5423
  %28 = bitcast i8* %27 to <16 x i8>*, !dbg !5423
  store <16 x i8> %reverse437, <16 x i8>* %28, align 1, !dbg !5423
  %reverse438 = shufflevector <16 x i8> %reverse436, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>, !dbg !5423
  %29 = getelementptr i8* %dst, i64 %.sum505, !dbg !5423
  %30 = bitcast i8* %29 to <16 x i8>*, !dbg !5423
  store <16 x i8> %reverse438, <16 x i8>* %30, align 1, !dbg !5423
  %index.next234 = add i64 %index212, 32
  %31 = icmp eq i64 %index.next234, %n.vec215
  br i1 %31, label %middle.block210, label %vector.body209, !llvm.loop !5425

middle.block210:                                  ; preds = %vector.body209, %vector.memcheck224, %.lr.ph9
  %resume.val225 = phi i8* [ %21, %.lr.ph9 ], [ %21, %vector.memcheck224 ], [ %rev.ptr.ind.end, %vector.body209 ]
  %resume.val227 = phi i8* [ %22, %.lr.ph9 ], [ %22, %vector.memcheck224 ], [ %rev.ptr.ind.end229, %vector.body209 ]
  %resume.val230 = phi i64 [ %count, %.lr.ph9 ], [ %count, %vector.memcheck224 ], [ %rev.ind.end231, %vector.body209 ]
  %new.indc.resume.val232 = phi i64 [ 0, %.lr.ph9 ], [ 0, %vector.memcheck224 ], [ %n.vec215, %vector.body209 ]
  %cmp.n233 = icmp eq i64 %new.indc.resume.val232, %count
  br i1 %cmp.n233, label %.loopexit, label %scalar.ph211

scalar.ph211:                                     ; preds = %scalar.ph211, %middle.block210
  %b.18 = phi i8* [ %33, %scalar.ph211 ], [ %resume.val225, %middle.block210 ]
  %a.17 = phi i8* [ %35, %scalar.ph211 ], [ %resume.val227, %middle.block210 ]
  %.16 = phi i64 [ %32, %scalar.ph211 ], [ %resume.val230, %middle.block210 ]
  %32 = add i64 %.16, -1, !dbg !5423
  %33 = getelementptr inbounds i8* %b.18, i64 -1, !dbg !5423
  %34 = load i8* %b.18, align 1, !dbg !5423, !tbaa !5374
  %35 = getelementptr inbounds i8* %a.17, i64 -1, !dbg !5423
  store i8 %34, i8* %a.17, align 1, !dbg !5423, !tbaa !5374
  %36 = icmp eq i64 %32, 0, !dbg !5423
  br i1 %36, label %.loopexit, label %scalar.ph211, !dbg !5423, !llvm.loop !5426

.loopexit:                                        ; preds = %scalar.ph211, %middle.block210, %18, %.lr.ph, %middle.block, %.preheader, %0
  ret i8* %dst, !dbg !5427
}

; Function Attrs: nounwind uwtable
define weak i8* @mempcpy(i8* %destaddr, i8* %srcaddr, i64 %len) #14 {
  %1 = icmp eq i64 %len, 0, !dbg !5428
  br i1 %1, label %15, label %.lr.ph.preheader, !dbg !5428

.lr.ph.preheader:                                 ; preds = %0
  %n.vec = and i64 %len, -32
  %cmp.zero = icmp eq i64 %n.vec, 0
  %2 = add i64 %len, -1
  br i1 %cmp.zero, label %middle.block, label %vector.memcheck

vector.memcheck:                                  ; preds = %.lr.ph.preheader
  %scevgep5 = getelementptr i8* %srcaddr, i64 %2
  %scevgep4 = getelementptr i8* %destaddr, i64 %2
  %bound1 = icmp uge i8* %scevgep4, %srcaddr
  %bound0 = icmp uge i8* %scevgep5, %destaddr
  %memcheck.conflict = and i1 %bound0, %bound1
  %ptr.ind.end = getelementptr i8* %srcaddr, i64 %n.vec
  %ptr.ind.end7 = getelementptr i8* %destaddr, i64 %n.vec
  %rev.ind.end = sub i64 %len, %n.vec
  br i1 %memcheck.conflict, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.memcheck
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.memcheck ]
  %next.gep = getelementptr i8* %srcaddr, i64 %index
  %next.gep104 = getelementptr i8* %destaddr, i64 %index
  %3 = bitcast i8* %next.gep to <16 x i8>*, !dbg !5429
  %wide.load = load <16 x i8>* %3, align 1, !dbg !5429
  %next.gep.sum280 = or i64 %index, 16, !dbg !5429
  %4 = getelementptr i8* %srcaddr, i64 %next.gep.sum280, !dbg !5429
  %5 = bitcast i8* %4 to <16 x i8>*, !dbg !5429
  %wide.load201 = load <16 x i8>* %5, align 1, !dbg !5429
  %6 = bitcast i8* %next.gep104 to <16 x i8>*, !dbg !5429
  store <16 x i8> %wide.load, <16 x i8>* %6, align 1, !dbg !5429
  %7 = getelementptr i8* %destaddr, i64 %next.gep.sum280, !dbg !5429
  %8 = bitcast i8* %7 to <16 x i8>*, !dbg !5429
  store <16 x i8> %wide.load201, <16 x i8>* %8, align 1, !dbg !5429
  %index.next = add i64 %index, 32
  %9 = icmp eq i64 %index.next, %n.vec
  br i1 %9, label %middle.block, label %vector.body, !llvm.loop !5430

middle.block:                                     ; preds = %vector.body, %vector.memcheck, %.lr.ph.preheader
  %resume.val = phi i8* [ %srcaddr, %.lr.ph.preheader ], [ %srcaddr, %vector.memcheck ], [ %ptr.ind.end, %vector.body ]
  %resume.val6 = phi i8* [ %destaddr, %.lr.ph.preheader ], [ %destaddr, %vector.memcheck ], [ %ptr.ind.end7, %vector.body ]
  %resume.val8 = phi i64 [ %len, %.lr.ph.preheader ], [ %len, %vector.memcheck ], [ %rev.ind.end, %vector.body ]
  %new.indc.resume.val = phi i64 [ 0, %.lr.ph.preheader ], [ 0, %vector.memcheck ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %new.indc.resume.val, %len
  br i1 %cmp.n, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %middle.block
  %src.03 = phi i8* [ %11, %.lr.ph ], [ %resume.val, %middle.block ]
  %dest.02 = phi i8* [ %13, %.lr.ph ], [ %resume.val6, %middle.block ]
  %.01 = phi i64 [ %10, %.lr.ph ], [ %resume.val8, %middle.block ]
  %10 = add i64 %.01, -1, !dbg !5428
  %11 = getelementptr inbounds i8* %src.03, i64 1, !dbg !5429
  %12 = load i8* %src.03, align 1, !dbg !5429, !tbaa !5374
  %13 = getelementptr inbounds i8* %dest.02, i64 1, !dbg !5429
  store i8 %12, i8* %dest.02, align 1, !dbg !5429, !tbaa !5374
  %14 = icmp eq i64 %10, 0, !dbg !5428
  br i1 %14, label %._crit_edge, label %.lr.ph, !dbg !5428, !llvm.loop !5431

._crit_edge:                                      ; preds = %.lr.ph, %middle.block
  %scevgep = getelementptr i8* %destaddr, i64 %len
  br label %15, !dbg !5428

; <label>:15                                      ; preds = %._crit_edge, %0
  %dest.0.lcssa = phi i8* [ %scevgep, %._crit_edge ], [ %destaddr, %0 ]
  ret i8* %dest.0.lcssa, !dbg !5432
}

; Function Attrs: nounwind uwtable
define weak i8* @memset(i8* %dst, i32 %s, i64 %count) #14 {
  %1 = icmp eq i64 %count, 0, !dbg !5433
  br i1 %1, label %._crit_edge, label %.lr.ph, !dbg !5433

.lr.ph:                                           ; preds = %0
  %2 = trunc i32 %s to i8, !dbg !5434
  br label %3, !dbg !5433

; <label>:3                                       ; preds = %3, %.lr.ph
  %a.02 = phi i8* [ %dst, %.lr.ph ], [ %5, %3 ]
  %.01 = phi i64 [ %count, %.lr.ph ], [ %4, %3 ]
  %4 = add i64 %.01, -1, !dbg !5433
  %5 = getelementptr inbounds i8* %a.02, i64 1, !dbg !5434
  store volatile i8 %2, i8* %a.02, align 1, !dbg !5434, !tbaa !5374
  %6 = icmp eq i64 %4, 0, !dbg !5433
  br i1 %6, label %._crit_edge, label %3, !dbg !5433

._crit_edge:                                      ; preds = %3, %0
  ret i8* %dst, !dbg !5435
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float
attributes #1 = { nounwind readnone }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-floa
attributes #4 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false
attributes #5 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-floa
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-floa
attributes #8 = { inlinehint nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use
attributes #9 = { noinline nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-s
attributes #10 = { nounwind returns_twice "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-sof
attributes #11 = { noreturn nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-
attributes #12 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="fals
attributes #13 = { noinline optnone }
attributes #14 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind readonly }
attributes #19 = { noreturn }
attributes #20 = { nounwind returns_twice }
attributes #21 = { nobuiltin noreturn nounwind }
attributes #22 = { nobuiltin nounwind }

!llvm.dbg.cu = !{!0, !167, !351, !383, !687, !695, !703, !774, !782, !787, !795, !847, !884, !946, !958, !968, !1021, !1030, !1036, !1066, !1076, !1236, !1243, !1251, !1346, !1359, !1366, !1381, !1388, !1452, !1468, !1507, !1515, !1520, !1550, !1558, !16
!llvm.module.flags = !{!1741, !1742}
!llvm.ident = !{!1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, !1743, 

!0 = metadata !{i32 786449, metadata !1, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !2, metadata !43, metadata !44, metadata !142, metadata !43, metadata !""} ; [ DW_TAG_compile_unit ] [/
!1 = metadata !{metadata !"mv.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!2 = metadata !{metadata !3, metadata !10, metadata !17, metadata !23, metadata !29, metadata !37}
!3 = metadata !{i32 786436, metadata !4, null, metadata !"backup_type", i32 30, i64 32, i64 32, i32 0, i32 0, null, metadata !5, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [backup_type] [line 30, size 32, align 32, offset 0] [def] [from ]
!4 = metadata !{metadata !"../lib/backupfile.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!5 = metadata !{metadata !6, metadata !7, metadata !8, metadata !9}
!6 = metadata !{i32 786472, metadata !"no_backups", i64 0} ; [ DW_TAG_enumerator ] [no_backups :: 0]
!7 = metadata !{i32 786472, metadata !"simple_backups", i64 1} ; [ DW_TAG_enumerator ] [simple_backups :: 1]
!8 = metadata !{i32 786472, metadata !"numbered_existing_backups", i64 2} ; [ DW_TAG_enumerator ] [numbered_existing_backups :: 2]
!9 = metadata !{i32 786472, metadata !"numbered_backups", i64 3} ; [ DW_TAG_enumerator ] [numbered_backups :: 3]
!10 = metadata !{i32 786436, metadata !11, null, metadata !"Dereference_symlink", i32 58, i64 32, i64 32, i32 0, i32 0, null, metadata !12, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [Dereference_symlink] [line 58, size 32, align 32, offset 0
!11 = metadata !{metadata !"./copy.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!12 = metadata !{metadata !13, metadata !14, metadata !15, metadata !16}
!13 = metadata !{i32 786472, metadata !"DEREF_UNDEFINED", i64 1} ; [ DW_TAG_enumerator ] [DEREF_UNDEFINED :: 1]
!14 = metadata !{i32 786472, metadata !"DEREF_NEVER", i64 2} ; [ DW_TAG_enumerator ] [DEREF_NEVER :: 2]
!15 = metadata !{i32 786472, metadata !"DEREF_COMMAND_LINE_ARGUMENTS", i64 3} ; [ DW_TAG_enumerator ] [DEREF_COMMAND_LINE_ARGUMENTS :: 3]
!16 = metadata !{i32 786472, metadata !"DEREF_ALWAYS", i64 4} ; [ DW_TAG_enumerator ] [DEREF_ALWAYS :: 4]
!17 = metadata !{i32 786436, metadata !11, null, metadata !"Interactive", i32 49, i64 32, i64 32, i32 0, i32 0, null, metadata !18, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [Interactive] [line 49, size 32, align 32, offset 0] [def] [from ]
!18 = metadata !{metadata !19, metadata !20, metadata !21, metadata !22}
!19 = metadata !{i32 786472, metadata !"I_ALWAYS_YES", i64 1} ; [ DW_TAG_enumerator ] [I_ALWAYS_YES :: 1]
!20 = metadata !{i32 786472, metadata !"I_ALWAYS_NO", i64 2} ; [ DW_TAG_enumerator ] [I_ALWAYS_NO :: 2]
!21 = metadata !{i32 786472, metadata !"I_ASK_USER", i64 3} ; [ DW_TAG_enumerator ] [I_ASK_USER :: 3]
!22 = metadata !{i32 786472, metadata !"I_UNSPECIFIED", i64 4} ; [ DW_TAG_enumerator ] [I_UNSPECIFIED :: 4]
!23 = metadata !{i32 786436, metadata !11, null, metadata !"Sparse_type", i32 28, i64 32, i64 32, i32 0, i32 0, null, metadata !24, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [Sparse_type] [line 28, size 32, align 32, offset 0] [def] [from ]
!24 = metadata !{metadata !25, metadata !26, metadata !27, metadata !28}
!25 = metadata !{i32 786472, metadata !"SPARSE_UNUSED", i64 0} ; [ DW_TAG_enumerator ] [SPARSE_UNUSED :: 0]
!26 = metadata !{i32 786472, metadata !"SPARSE_NEVER", i64 1} ; [ DW_TAG_enumerator ] [SPARSE_NEVER :: 1]
!27 = metadata !{i32 786472, metadata !"SPARSE_AUTO", i64 2} ; [ DW_TAG_enumerator ] [SPARSE_AUTO :: 2]
!28 = metadata !{i32 786472, metadata !"SPARSE_ALWAYS", i64 3} ; [ DW_TAG_enumerator ] [SPARSE_ALWAYS :: 3]
!29 = metadata !{i32 786436, metadata !30, null, metadata !"rm_interactive", i32 25, i64 32, i64 32, i32 0, i32 0, null, metadata !31, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [rm_interactive] [line 25, size 32, align 32, offset 0] [def] [f
!30 = metadata !{metadata !"./remove.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!31 = metadata !{metadata !32, metadata !33, metadata !34, metadata !35, metadata !36}
!32 = metadata !{i32 786472, metadata !"RMI_OLD_FALSE", i64 0} ; [ DW_TAG_enumerator ] [RMI_OLD_FALSE :: 0]
!33 = metadata !{i32 786472, metadata !"RMI_OLD_TRUE", i64 1} ; [ DW_TAG_enumerator ] [RMI_OLD_TRUE :: 1]
!34 = metadata !{i32 786472, metadata !"RMI_ALWAYS", i64 3} ; [ DW_TAG_enumerator ] [RMI_ALWAYS :: 3]
!35 = metadata !{i32 786472, metadata !"RMI_SOMETIMES", i64 4} ; [ DW_TAG_enumerator ] [RMI_SOMETIMES :: 4]
!36 = metadata !{i32 786472, metadata !"RMI_NEVER", i64 5} ; [ DW_TAG_enumerator ] [RMI_NEVER :: 5]
!37 = metadata !{i32 786436, metadata !30, null, metadata !"RM_status", i32 78, i64 32, i64 32, i32 0, i32 0, null, metadata !38, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [RM_status] [line 78, size 32, align 32, offset 0] [def] [from ]
!38 = metadata !{metadata !39, metadata !40, metadata !41, metadata !42}
!39 = metadata !{i32 786472, metadata !"RM_OK", i64 2} ; [ DW_TAG_enumerator ] [RM_OK :: 2]
!40 = metadata !{i32 786472, metadata !"RM_USER_DECLINED", i64 3} ; [ DW_TAG_enumerator ] [RM_USER_DECLINED :: 3]
!41 = metadata !{i32 786472, metadata !"RM_ERROR", i64 4} ; [ DW_TAG_enumerator ] [RM_ERROR :: 4]
!42 = metadata !{i32 786472, metadata !"RM_NONEMPTY_DIR", i64 5} ; [ DW_TAG_enumerator ] [RM_NONEMPTY_DIR :: 5]
!43 = metadata !{i32 0}
!44 = metadata !{metadata !45, metadata !50, metadata !56, metadata !96, metadata !101, metadata !127, metadata !130, metadata !138}
!45 = metadata !{i32 786478, metadata !1, metadata !46, metadata !"usage", metadata !"usage", metadata !"", i32 295, metadata !47, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32)* @usage, null, null, metadata !43, i32 296} ; [ DW_TAG
!46 = metadata !{i32 786473, metadata !1}         ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!47 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !48, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!48 = metadata !{null, metadata !49}
!49 = metadata !{i32 786468, null, null, metadata !"int", i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
!50 = metadata !{i32 786478, metadata !1, metadata !46, metadata !"main", metadata !"main", metadata !"", i32 355, metadata !51, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**)* @__main_old, null, null, metadata !43, i32 356} ; 
!51 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !52, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!52 = metadata !{metadata !49, metadata !49, metadata !53}
!53 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !54} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!54 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !55} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from char]
!55 = metadata !{i32 786468, null, null, metadata !"char", i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ] [char] [line 0, size 8, align 8, offset 0, enc DW_ATE_signed_char]
!56 = metadata !{i32 786478, metadata !1, metadata !46, metadata !"movefile", metadata !"movefile", metadata !"", i32 262, metadata !57, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*, i1, %struct.cp_options*)* @movefile, null, nul
!57 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !58, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!58 = metadata !{metadata !59, metadata !54, metadata !54, metadata !59, metadata !60}
!59 = metadata !{i32 786468, null, null, metadata !"_Bool", i32 0, i64 8, i64 8, i64 0, i32 0, i32 2} ; [ DW_TAG_base_type ] [_Bool] [line 0, size 8, align 8, offset 0, enc DW_ATE_boolean]
!60 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !61} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!61 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !62} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from cp_options]
!62 = metadata !{i32 786451, metadata !11, null, metadata !"cp_options", i32 82, i64 512, i64 64, i32 0, i32 0, null, metadata !63, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [cp_options] [line 82, size 512, align 64, offset 0] [def] [from ]
!63 = metadata !{metadata !64, metadata !65, metadata !66, metadata !67, metadata !68, metadata !69, metadata !70, metadata !71, metadata !72, metadata !73, metadata !74, metadata !75, metadata !76, metadata !77, metadata !78, metadata !79, metadata !80,
!64 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"backup_type", i32 84, i64 32, i64 32, i64 0, i32 0, metadata !3} ; [ DW_TAG_member ] [backup_type] [line 84, size 32, align 32, offset 0] [from backup_type]
!65 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"copy_as_regular", i32 88, i64 8, i64 8, i64 32, i32 0, metadata !59} ; [ DW_TAG_member ] [copy_as_regular] [line 88, size 8, align 8, offset 32] [from _Bool]
!66 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"dereference", i32 91, i64 32, i64 32, i64 64, i32 0, metadata !10} ; [ DW_TAG_member ] [dereference] [line 91, size 32, align 32, offset 64] [from Dereference_symlink]
!67 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"unlink_dest_before_opening", i32 95, i64 8, i64 8, i64 96, i32 0, metadata !59} ; [ DW_TAG_member ] [unlink_dest_before_opening] [line 95, size 8, align 8, offset 96] [from _Bool]
!68 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"unlink_dest_after_failed_open", i32 102, i64 8, i64 8, i64 104, i32 0, metadata !59} ; [ DW_TAG_member ] [unlink_dest_after_failed_open] [line 102, size 8, align 8, offset 104] [from _Bo
!69 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"hard_link", i32 106, i64 8, i64 8, i64 112, i32 0, metadata !59} ; [ DW_TAG_member ] [hard_link] [line 106, size 8, align 8, offset 112] [from _Bool]
!70 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"interactive", i32 111, i64 32, i64 32, i64 128, i32 0, metadata !17} ; [ DW_TAG_member ] [interactive] [line 111, size 32, align 32, offset 128] [from Interactive]
!71 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"move_mode", i32 115, i64 8, i64 8, i64 160, i32 0, metadata !59} ; [ DW_TAG_member ] [move_mode] [line 115, size 8, align 8, offset 160] [from _Bool]
!72 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"chown_privileges", i32 119, i64 8, i64 8, i64 168, i32 0, metadata !59} ; [ DW_TAG_member ] [chown_privileges] [line 119, size 8, align 8, offset 168] [from _Bool]
!73 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"one_file_system", i32 123, i64 8, i64 8, i64 176, i32 0, metadata !59} ; [ DW_TAG_member ] [one_file_system] [line 123, size 8, align 8, offset 176] [from _Bool]
!74 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"preserve_ownership", i32 127, i64 8, i64 8, i64 184, i32 0, metadata !59} ; [ DW_TAG_member ] [preserve_ownership] [line 127, size 8, align 8, offset 184] [from _Bool]
!75 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"preserve_mode", i32 128, i64 8, i64 8, i64 192, i32 0, metadata !59} ; [ DW_TAG_member ] [preserve_mode] [line 128, size 8, align 8, offset 192] [from _Bool]
!76 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"preserve_timestamps", i32 129, i64 8, i64 8, i64 200, i32 0, metadata !59} ; [ DW_TAG_member ] [preserve_timestamps] [line 129, size 8, align 8, offset 200] [from _Bool]
!77 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"preserve_links", i32 141, i64 8, i64 8, i64 208, i32 0, metadata !59} ; [ DW_TAG_member ] [preserve_links] [line 141, size 8, align 8, offset 208] [from _Bool]
!78 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"require_preserve", i32 147, i64 8, i64 8, i64 216, i32 0, metadata !59} ; [ DW_TAG_member ] [require_preserve] [line 147, size 8, align 8, offset 216] [from _Bool]
!79 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"recursive", i32 151, i64 8, i64 8, i64 224, i32 0, metadata !59} ; [ DW_TAG_member ] [recursive] [line 151, size 8, align 8, offset 224] [from _Bool]
!80 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"set_mode", i32 155, i64 8, i64 8, i64 232, i32 0, metadata !59} ; [ DW_TAG_member ] [set_mode] [line 155, size 8, align 8, offset 232] [from _Bool]
!81 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"mode", i32 159, i64 32, i64 32, i64 256, i32 0, metadata !82} ; [ DW_TAG_member ] [mode] [line 159, size 32, align 32, offset 256] [from mode_t]
!82 = metadata !{i32 786454, metadata !11, null, metadata !"mode_t", i32 70, i64 0, i64 0, i64 0, i32 0, metadata !83} ; [ DW_TAG_typedef ] [mode_t] [line 70, size 0, align 0, offset 0] [from __mode_t]
!83 = metadata !{i32 786454, metadata !11, null, metadata !"__mode_t", i32 129, i64 0, i64 0, i64 0, i32 0, metadata !84} ; [ DW_TAG_typedef ] [__mode_t] [line 129, size 0, align 0, offset 0] [from unsigned int]
!84 = metadata !{i32 786468, null, null, metadata !"unsigned int", i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ] [unsigned int] [line 0, size 32, align 32, offset 0, enc DW_ATE_unsigned]
!85 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"sparse_mode", i32 162, i64 32, i64 32, i64 288, i32 0, metadata !23} ; [ DW_TAG_member ] [sparse_mode] [line 162, size 32, align 32, offset 288] [from Sparse_type]
!86 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"symbolic_link", i32 166, i64 8, i64 8, i64 320, i32 0, metadata !59} ; [ DW_TAG_member ] [symbolic_link] [line 166, size 8, align 8, offset 320] [from _Bool]
!87 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"update", i32 170, i64 8, i64 8, i64 328, i32 0, metadata !59} ; [ DW_TAG_member ] [update] [line 170, size 8, align 8, offset 328] [from _Bool]
!88 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"verbose", i32 173, i64 8, i64 8, i64 336, i32 0, metadata !59} ; [ DW_TAG_member ] [verbose] [line 173, size 8, align 8, offset 336] [from _Bool]
!89 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"stdin_tty", i32 176, i64 8, i64 8, i64 344, i32 0, metadata !59} ; [ DW_TAG_member ] [stdin_tty] [line 176, size 8, align 8, offset 344] [from _Bool]
!90 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"dest_info", i32 187, i64 64, i64 64, i64 384, i32 0, metadata !91} ; [ DW_TAG_member ] [dest_info] [line 187, size 64, align 64, offset 384] [from ]
!91 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !92} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Hash_table]
!92 = metadata !{i32 786454, metadata !11, null, metadata !"Hash_table", i32 57, i64 0, i64 0, i64 0, i32 0, metadata !93} ; [ DW_TAG_typedef ] [Hash_table] [line 57, size 0, align 0, offset 0] [from hash_table]
!93 = metadata !{i32 786451, metadata !94, null, metadata !"hash_table", i32 55, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [hash_table] [line 55, size 0, align 0, offset 0] [decl] [from ]
!94 = metadata !{metadata !"../lib/hash.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!95 = metadata !{i32 786445, metadata !11, metadata !62, metadata !"src_info", i32 190, i64 64, i64 64, i64 448, i32 0, metadata !91} ; [ DW_TAG_member ] [src_info] [line 190, size 64, align 64, offset 448] [from ]
!96 = metadata !{i32 786478, metadata !1, metadata !46, metadata !"do_move", metadata !"do_move", metadata !"", i32 181, metadata !97, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*, %struct.cp_options*)* @do_move, null, null, meta
!97 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !98, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!98 = metadata !{metadata !59, metadata !99, metadata !99, metadata !60}
!99 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !100} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!100 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !55} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from char]
!101 = metadata !{i32 786478, metadata !1, metadata !46, metadata !"rm_option_init", metadata !"rm_option_init", metadata !"", i32 110, metadata !102, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.rm_options*)* @rm_option_init, n
!102 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !103, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!103 = metadata !{null, metadata !104}
!104 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !105} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from rm_options]
!105 = metadata !{i32 786451, metadata !30, null, metadata !"rm_options", i32 40, i64 256, i64 64, i32 0, i32 0, null, metadata !106, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [rm_options] [line 40, size 256, align 64, offset 0] [def] [from ]
!106 = metadata !{metadata !107, metadata !108, metadata !109, metadata !110, metadata !111, metadata !124, metadata !125, metadata !126}
!107 = metadata !{i32 786445, metadata !30, metadata !105, metadata !"ignore_missing_files", i32 43, i64 8, i64 8, i64 0, i32 0, metadata !59} ; [ DW_TAG_member ] [ignore_missing_files] [line 43, size 8, align 8, offset 0] [from _Bool]
!108 = metadata !{i32 786445, metadata !30, metadata !105, metadata !"interactive", i32 46, i64 32, i64 32, i64 32, i32 0, metadata !29} ; [ DW_TAG_member ] [interactive] [line 46, size 32, align 32, offset 32] [from rm_interactive]
!109 = metadata !{i32 786445, metadata !30, metadata !105, metadata !"one_file_system", i32 54, i64 8, i64 8, i64 64, i32 0, metadata !59} ; [ DW_TAG_member ] [one_file_system] [line 54, size 8, align 8, offset 64] [from _Bool]
!110 = metadata !{i32 786445, metadata !30, metadata !105, metadata !"recursive", i32 57, i64 8, i64 8, i64 72, i32 0, metadata !59} ; [ DW_TAG_member ] [recursive] [line 57, size 8, align 8, offset 72] [from _Bool]
!111 = metadata !{i32 786445, metadata !30, metadata !105, metadata !"root_dev_ino", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !112} ; [ DW_TAG_member ] [root_dev_ino] [line 61, size 64, align 64, offset 128] [from ]
!112 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !113} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from dev_ino]
!113 = metadata !{i32 786451, metadata !114, null, metadata !"dev_ino", i32 7, i64 128, i64 64, i32 0, i32 0, null, metadata !115, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dev_ino] [line 7, size 128, align 64, offset 0] [def] [from ]
!114 = metadata !{metadata !"../lib/dev-ino.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!115 = metadata !{metadata !116, metadata !121}
!116 = metadata !{i32 786445, metadata !114, metadata !113, metadata !"st_ino", i32 9, i64 64, i64 64, i64 0, i32 0, metadata !117} ; [ DW_TAG_member ] [st_ino] [line 9, size 64, align 64, offset 0] [from ino_t]
!117 = metadata !{i32 786454, metadata !114, null, metadata !"ino_t", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !118} ; [ DW_TAG_typedef ] [ino_t] [line 48, size 0, align 0, offset 0] [from __ino_t]
!118 = metadata !{i32 786454, metadata !119, null, metadata !"__ino_t", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__ino_t] [line 127, size 0, align 0, offset 0] [from long unsigned int]
!119 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/stat.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!120 = metadata !{i32 786468, null, null, metadata !"long unsigned int", i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ] [long unsigned int] [line 0, size 64, align 64, offset 0, enc DW_ATE_unsigned]
!121 = metadata !{i32 786445, metadata !114, metadata !113, metadata !"st_dev", i32 10, i64 64, i64 64, i64 64, i32 0, metadata !122} ; [ DW_TAG_member ] [st_dev] [line 10, size 64, align 64, offset 64] [from dev_t]
!122 = metadata !{i32 786454, metadata !114, null, metadata !"dev_t", i32 60, i64 0, i64 0, i64 0, i32 0, metadata !123} ; [ DW_TAG_typedef ] [dev_t] [line 60, size 0, align 0, offset 0] [from __dev_t]
!123 = metadata !{i32 786454, metadata !119, null, metadata !"__dev_t", i32 124, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__dev_t] [line 124, size 0, align 0, offset 0] [from long unsigned int]
!124 = metadata !{i32 786445, metadata !30, metadata !105, metadata !"stdin_tty", i32 64, i64 8, i64 8, i64 192, i32 0, metadata !59} ; [ DW_TAG_member ] [stdin_tty] [line 64, size 8, align 8, offset 192] [from _Bool]
!125 = metadata !{i32 786445, metadata !30, metadata !105, metadata !"verbose", i32 67, i64 8, i64 8, i64 200, i32 0, metadata !59} ; [ DW_TAG_member ] [verbose] [line 67, size 8, align 8, offset 200] [from _Bool]
!126 = metadata !{i32 786445, metadata !30, metadata !105, metadata !"require_restore_cwd", i32 75, i64 8, i64 8, i64 208, i32 0, metadata !59} ; [ DW_TAG_member ] [require_restore_cwd] [line 75, size 8, align 8, offset 208] [from _Bool]
!127 = metadata !{i32 786478, metadata !1, metadata !46, metadata !"target_directory_operand", metadata !"target_directory_operand", metadata !"", i32 166, metadata !128, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*)* @target_director
!128 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !129, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!129 = metadata !{metadata !59, metadata !99}
!130 = metadata !{i32 786478, metadata !1, metadata !46, metadata !"klee_compatible_error", metadata !"klee_compatible_error", metadata !"", i32 97, metadata !131, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32* (...)*, i8*, ...)
!131 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !132, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!132 = metadata !{null, metadata !49, metadata !133, metadata !99}
!133 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !134} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!134 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !135, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!135 = metadata !{metadata !136, metadata !137}
!136 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !49} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from int]
!137 = metadata !{i32 786456}
!138 = metadata !{i32 786478, metadata !1, metadata !46, metadata !"cp_option_init", metadata !"cp_option_init", metadata !"", i32 132, metadata !139, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.cp_options*)* @cp_option_init, n
!139 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !140, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!140 = metadata !{null, metadata !141}
!141 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !62} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from cp_options]
!142 = metadata !{metadata !143, metadata !144, metadata !145, metadata !150, metadata !155}
!143 = metadata !{i32 786484, i32 0, null, metadata !"program_name", metadata !"program_name", metadata !"", metadata !46, i32 62, metadata !54, i32 0, i32 1, i8** @program_name, null} ; [ DW_TAG_variable ] [program_name] [line 62] [def]
!144 = metadata !{i32 786484, i32 0, null, metadata !"remove_trailing_slashes", metadata !"remove_trailing_slashes", metadata !"", metadata !46, i32 65, metadata !59, i32 1, i32 1, i8* @remove_trailing_slashes, null} ; [ DW_TAG_variable ] [remove_trailin
!145 = metadata !{i32 786484, i32 0, null, metadata !"reply_vals", metadata !"reply_vals", metadata !"", metadata !46, i32 74, metadata !146, i32 1, i32 1, [3 x i32]* @reply_vals, null} ; [ DW_TAG_variable ] [reply_vals] [line 74] [local] [def]
!146 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 96, i64 32, i32 0, i32 0, metadata !147, metadata !148, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 96, align 32, offset 0] [from ]
!147 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !49} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from int]
!148 = metadata !{metadata !149}
!149 = metadata !{i32 786465, i64 0, i64 3}       ; [ DW_TAG_subrange_type ] [0, 2]
!150 = metadata !{i32 786484, i32 0, null, metadata !"reply_args", metadata !"reply_args", metadata !"", metadata !46, i32 68, metadata !151, i32 1, i32 1, [4 x i8*]* @reply_args, null} ; [ DW_TAG_variable ] [reply_args] [line 68] [local] [def]
!151 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 256, i64 64, i32 0, i32 0, metadata !152, metadata !153, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 256, align 64, offset 0] [from ]
!152 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !99} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from ]
!153 = metadata !{metadata !154}
!154 = metadata !{i32 786465, i64 0, i64 4}       ; [ DW_TAG_subrange_type ] [0, 3]
!155 = metadata !{i32 786484, i32 0, null, metadata !"long_options", metadata !"long_options", metadata !"", metadata !46, i32 79, metadata !156, i32 1, i32 1, <{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32
!156 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 3328, i64 64, i32 0, i32 0, metadata !157, metadata !165, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 3328, align 64, offset 0] [from ]
!157 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !158} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from option]
!158 = metadata !{i32 786451, metadata !159, null, metadata !"option", i32 104, i64 256, i64 64, i32 0, i32 0, null, metadata !160, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [option] [line 104, size 256, align 64, offset 0] [def] [from ]
!159 = metadata !{metadata !"/usr/include/getopt.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!160 = metadata !{metadata !161, metadata !162, metadata !163, metadata !164}
!161 = metadata !{i32 786445, metadata !159, metadata !158, metadata !"name", i32 106, i64 64, i64 64, i64 0, i32 0, metadata !99} ; [ DW_TAG_member ] [name] [line 106, size 64, align 64, offset 0] [from ]
!162 = metadata !{i32 786445, metadata !159, metadata !158, metadata !"has_arg", i32 109, i64 32, i64 32, i64 64, i32 0, metadata !49} ; [ DW_TAG_member ] [has_arg] [line 109, size 32, align 32, offset 64] [from int]
!163 = metadata !{i32 786445, metadata !159, metadata !158, metadata !"flag", i32 110, i64 64, i64 64, i64 128, i32 0, metadata !136} ; [ DW_TAG_member ] [flag] [line 110, size 64, align 64, offset 128] [from ]
!164 = metadata !{i32 786445, metadata !159, metadata !158, metadata !"val", i32 111, i64 32, i64 32, i64 192, i32 0, metadata !49} ; [ DW_TAG_member ] [val] [line 111, size 32, align 32, offset 192] [from int]
!165 = metadata !{metadata !166}
!166 = metadata !{i32 786465, i64 0, i64 13}      ; [ DW_TAG_subrange_type ] [0, 12]
!167 = metadata !{i32 786449, metadata !168, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !169, metadata !43, metadata !247, metadata !347, metadata !43, metadata !""} ; [ DW_TAG_compile_un
!168 = metadata !{metadata !"copy.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!169 = metadata !{metadata !3, metadata !10, metadata !17, metadata !23, metadata !170, metadata !174}
!170 = metadata !{i32 786436, metadata !171, null, metadata !"", i32 28, i64 32, i64 32, i32 0, i32 0, null, metadata !172, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 28, size 32, align 32, offset 0] [def] [from ]
!171 = metadata !{metadata !"../lib/utimecmp.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!172 = metadata !{metadata !173}
!173 = metadata !{i32 786472, metadata !"UTIMECMP_TRUNCATE_SOURCE", i64 1} ; [ DW_TAG_enumerator ] [UTIMECMP_TRUNCATE_SOURCE :: 1]
!174 = metadata !{i32 786436, metadata !168, metadata !175, metadata !"", i32 392, i64 32, i64 32, i32 0, i32 0, null, metadata !245, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 392, size 32, align 32, offset 0] [def] [from ]
!175 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"copy_reg", metadata !"copy_reg", metadata !"", i32 271, metadata !177, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*, %struct.cp_options*, i32, i32, i8*, %stru
!176 = metadata !{i32 786473, metadata !168}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!177 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !178, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!178 = metadata !{metadata !59, metadata !99, metadata !99, metadata !179, metadata !82, metadata !82, metadata !208, metadata !209}
!179 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !180} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!180 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from cp_options]
!181 = metadata !{i32 786451, metadata !11, null, metadata !"cp_options", i32 82, i64 512, i64 64, i32 0, i32 0, null, metadata !182, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [cp_options] [line 82, size 512, align 64, offset 0] [def] [from ]
!182 = metadata !{metadata !183, metadata !184, metadata !185, metadata !186, metadata !187, metadata !188, metadata !189, metadata !190, metadata !191, metadata !192, metadata !193, metadata !194, metadata !195, metadata !196, metadata !197, metadata !1
!183 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"backup_type", i32 84, i64 32, i64 32, i64 0, i32 0, metadata !3} ; [ DW_TAG_member ] [backup_type] [line 84, size 32, align 32, offset 0] [from backup_type]
!184 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"copy_as_regular", i32 88, i64 8, i64 8, i64 32, i32 0, metadata !59} ; [ DW_TAG_member ] [copy_as_regular] [line 88, size 8, align 8, offset 32] [from _Bool]
!185 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"dereference", i32 91, i64 32, i64 32, i64 64, i32 0, metadata !10} ; [ DW_TAG_member ] [dereference] [line 91, size 32, align 32, offset 64] [from Dereference_symlink]
!186 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"unlink_dest_before_opening", i32 95, i64 8, i64 8, i64 96, i32 0, metadata !59} ; [ DW_TAG_member ] [unlink_dest_before_opening] [line 95, size 8, align 8, offset 96] [from _Bool]
!187 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"unlink_dest_after_failed_open", i32 102, i64 8, i64 8, i64 104, i32 0, metadata !59} ; [ DW_TAG_member ] [unlink_dest_after_failed_open] [line 102, size 8, align 8, offset 104] [from _
!188 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"hard_link", i32 106, i64 8, i64 8, i64 112, i32 0, metadata !59} ; [ DW_TAG_member ] [hard_link] [line 106, size 8, align 8, offset 112] [from _Bool]
!189 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"interactive", i32 111, i64 32, i64 32, i64 128, i32 0, metadata !17} ; [ DW_TAG_member ] [interactive] [line 111, size 32, align 32, offset 128] [from Interactive]
!190 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"move_mode", i32 115, i64 8, i64 8, i64 160, i32 0, metadata !59} ; [ DW_TAG_member ] [move_mode] [line 115, size 8, align 8, offset 160] [from _Bool]
!191 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"chown_privileges", i32 119, i64 8, i64 8, i64 168, i32 0, metadata !59} ; [ DW_TAG_member ] [chown_privileges] [line 119, size 8, align 8, offset 168] [from _Bool]
!192 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"one_file_system", i32 123, i64 8, i64 8, i64 176, i32 0, metadata !59} ; [ DW_TAG_member ] [one_file_system] [line 123, size 8, align 8, offset 176] [from _Bool]
!193 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"preserve_ownership", i32 127, i64 8, i64 8, i64 184, i32 0, metadata !59} ; [ DW_TAG_member ] [preserve_ownership] [line 127, size 8, align 8, offset 184] [from _Bool]
!194 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"preserve_mode", i32 128, i64 8, i64 8, i64 192, i32 0, metadata !59} ; [ DW_TAG_member ] [preserve_mode] [line 128, size 8, align 8, offset 192] [from _Bool]
!195 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"preserve_timestamps", i32 129, i64 8, i64 8, i64 200, i32 0, metadata !59} ; [ DW_TAG_member ] [preserve_timestamps] [line 129, size 8, align 8, offset 200] [from _Bool]
!196 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"preserve_links", i32 141, i64 8, i64 8, i64 208, i32 0, metadata !59} ; [ DW_TAG_member ] [preserve_links] [line 141, size 8, align 8, offset 208] [from _Bool]
!197 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"require_preserve", i32 147, i64 8, i64 8, i64 216, i32 0, metadata !59} ; [ DW_TAG_member ] [require_preserve] [line 147, size 8, align 8, offset 216] [from _Bool]
!198 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"recursive", i32 151, i64 8, i64 8, i64 224, i32 0, metadata !59} ; [ DW_TAG_member ] [recursive] [line 151, size 8, align 8, offset 224] [from _Bool]
!199 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"set_mode", i32 155, i64 8, i64 8, i64 232, i32 0, metadata !59} ; [ DW_TAG_member ] [set_mode] [line 155, size 8, align 8, offset 232] [from _Bool]
!200 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"mode", i32 159, i64 32, i64 32, i64 256, i32 0, metadata !82} ; [ DW_TAG_member ] [mode] [line 159, size 32, align 32, offset 256] [from mode_t]
!201 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"sparse_mode", i32 162, i64 32, i64 32, i64 288, i32 0, metadata !23} ; [ DW_TAG_member ] [sparse_mode] [line 162, size 32, align 32, offset 288] [from Sparse_type]
!202 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"symbolic_link", i32 166, i64 8, i64 8, i64 320, i32 0, metadata !59} ; [ DW_TAG_member ] [symbolic_link] [line 166, size 8, align 8, offset 320] [from _Bool]
!203 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"update", i32 170, i64 8, i64 8, i64 328, i32 0, metadata !59} ; [ DW_TAG_member ] [update] [line 170, size 8, align 8, offset 328] [from _Bool]
!204 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"verbose", i32 173, i64 8, i64 8, i64 336, i32 0, metadata !59} ; [ DW_TAG_member ] [verbose] [line 173, size 8, align 8, offset 336] [from _Bool]
!205 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"stdin_tty", i32 176, i64 8, i64 8, i64 344, i32 0, metadata !59} ; [ DW_TAG_member ] [stdin_tty] [line 176, size 8, align 8, offset 344] [from _Bool]
!206 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"dest_info", i32 187, i64 64, i64 64, i64 384, i32 0, metadata !91} ; [ DW_TAG_member ] [dest_info] [line 187, size 64, align 64, offset 384] [from ]
!207 = metadata !{i32 786445, metadata !11, metadata !181, metadata !"src_info", i32 190, i64 64, i64 64, i64 448, i32 0, metadata !91} ; [ DW_TAG_member ] [src_info] [line 190, size 64, align 64, offset 448] [from ]
!208 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !59} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _Bool]
!209 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !210} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!210 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !211} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from stat]
!211 = metadata !{i32 786451, metadata !119, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !212, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!212 = metadata !{metadata !213, metadata !215, metadata !217, metadata !219, metadata !220, metadata !222, metadata !224, metadata !225, metadata !226, metadata !229, metadata !231, metadata !233, metadata !241, metadata !242, metadata !243}
!213 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !214} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!214 = metadata !{i32 786454, metadata !168, null, metadata !"__dev_t", i32 124, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__dev_t] [line 124, size 0, align 0, offset 0] [from long unsigned int]
!215 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !216} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!216 = metadata !{i32 786454, metadata !168, null, metadata !"__ino_t", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__ino_t] [line 127, size 0, align 0, offset 0] [from long unsigned int]
!217 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !218} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!218 = metadata !{i32 786454, metadata !119, null, metadata !"__nlink_t", i32 130, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__nlink_t] [line 130, size 0, align 0, offset 0] [from long unsigned int]
!219 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !83} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!220 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !221} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!221 = metadata !{i32 786454, metadata !119, null, metadata !"__uid_t", i32 125, i64 0, i64 0, i64 0, i32 0, metadata !84} ; [ DW_TAG_typedef ] [__uid_t] [line 125, size 0, align 0, offset 0] [from unsigned int]
!222 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !223} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!223 = metadata !{i32 786454, metadata !119, null, metadata !"__gid_t", i32 126, i64 0, i64 0, i64 0, i32 0, metadata !84} ; [ DW_TAG_typedef ] [__gid_t] [line 126, size 0, align 0, offset 0] [from unsigned int]
!224 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !49} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!225 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !214} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!226 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !227} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!227 = metadata !{i32 786454, metadata !119, null, metadata !"__off_t", i32 131, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__off_t] [line 131, size 0, align 0, offset 0] [from long int]
!228 = metadata !{i32 786468, null, null, metadata !"long int", i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [long int] [line 0, size 64, align 64, offset 0, enc DW_ATE_signed]
!229 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !230} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!230 = metadata !{i32 786454, metadata !119, null, metadata !"__blksize_t", i32 153, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__blksize_t] [line 153, size 0, align 0, offset 0] [from long int]
!231 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !232} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!232 = metadata !{i32 786454, metadata !119, null, metadata !"__blkcnt_t", i32 158, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__blkcnt_t] [line 158, size 0, align 0, offset 0] [from long int]
!233 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !234} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!234 = metadata !{i32 786451, metadata !235, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !236, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!235 = metadata !{metadata !"/usr/include/time.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!236 = metadata !{metadata !237, metadata !239}
!237 = metadata !{i32 786445, metadata !235, metadata !234, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !238} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!238 = metadata !{i32 786454, metadata !235, null, metadata !"__time_t", i32 139, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__time_t] [line 139, size 0, align 0, offset 0] [from long int]
!239 = metadata !{i32 786445, metadata !235, metadata !234, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !240} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!240 = metadata !{i32 786454, metadata !235, null, metadata !"__syscall_slong_t", i32 175, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__syscall_slong_t] [line 175, size 0, align 0, offset 0] [from long int]
!241 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !234} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!242 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !234} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!243 = metadata !{i32 786445, metadata !119, metadata !211, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !244} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!244 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 192, i64 64, i32 0, i32 0, metadata !240, metadata !148, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 192, align 64, offset 0] [from __syscall_slong_t]
!245 = metadata !{metadata !246}
!246 = metadata !{i32 786472, metadata !"SMALL_BUF_SIZE", i64 8192} ; [ DW_TAG_enumerator ] [SMALL_BUF_SIZE :: 8192]
!247 = metadata !{metadata !248, metadata !252, metadata !253, metadata !256, metadata !259, metadata !262, metadata !265, metadata !276, metadata !279, metadata !284, metadata !289, metadata !175, metadata !290, metadata !293, metadata !302, metadata !3
!248 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"dest_info_init", metadata !"dest_info_init", metadata !"", i32 865, metadata !249, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.cp_options*)* @dest_info_ini
!249 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !250, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!250 = metadata !{null, metadata !251}
!251 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !181} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from cp_options]
!252 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"src_info_init", metadata !"src_info_init", metadata !"", i32 878, metadata !249, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.cp_options*)* @src_info_init, 
!253 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"copy", metadata !"copy", metadata !"", i32 1935, metadata !254, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*, i1, %struct.cp_options*, i8*, i8*)* @copy, null
!254 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !255, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!255 = metadata !{metadata !59, metadata !99, metadata !99, metadata !59, metadata !179, metadata !208, metadata !208}
!256 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"chown_privileges", metadata !"chown_privileges", metadata !"", i32 1959, metadata !257, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 ()* @chown_privileges, null, null,
!257 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !258, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!258 = metadata !{metadata !59}
!259 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"chown_failure_ok", metadata !"chown_failure_ok", metadata !"", i32 1980, metadata !260, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.cp_options*)* @chown_fail
!260 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !261, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!261 = metadata !{metadata !59, metadata !179}
!262 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"cached_umask", metadata !"cached_umask", metadata !"", i32 1992, metadata !263, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 ()* @cached_umask, null, null, metadata !
!263 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !264, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!264 = metadata !{metadata !82}
!265 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"copy_internal", metadata !"copy_internal", metadata !"", i32 1007, metadata !266, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*, i1, i64, %struct.dir_list*, %s
!266 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !267, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!267 = metadata !{metadata !59, metadata !99, metadata !99, metadata !59, metadata !268, metadata !269, metadata !179, metadata !59, metadata !208, metadata !208}
!268 = metadata !{i32 786454, metadata !168, null, metadata !"dev_t", i32 60, i64 0, i64 0, i64 0, i32 0, metadata !214} ; [ DW_TAG_typedef ] [dev_t] [line 60, size 0, align 0, offset 0] [from __dev_t]
!269 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !270} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from dir_list]
!270 = metadata !{i32 786451, metadata !168, null, metadata !"dir_list", i32 70, i64 192, i64 64, i32 0, i32 0, null, metadata !271, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dir_list] [line 70, size 192, align 64, offset 0] [def] [from ]
!271 = metadata !{metadata !272, metadata !273, metadata !275}
!272 = metadata !{i32 786445, metadata !168, metadata !270, metadata !"parent", i32 72, i64 64, i64 64, i64 0, i32 0, metadata !269} ; [ DW_TAG_member ] [parent] [line 72, size 64, align 64, offset 0] [from ]
!273 = metadata !{i32 786445, metadata !168, metadata !270, metadata !"ino", i32 73, i64 64, i64 64, i64 64, i32 0, metadata !274} ; [ DW_TAG_member ] [ino] [line 73, size 64, align 64, offset 64] [from ino_t]
!274 = metadata !{i32 786454, metadata !168, null, metadata !"ino_t", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !216} ; [ DW_TAG_typedef ] [ino_t] [line 48, size 0, align 0, offset 0] [from __ino_t]
!275 = metadata !{i32 786445, metadata !168, metadata !270, metadata !"dev", i32 74, i64 64, i64 64, i64 128, i32 0, metadata !268} ; [ DW_TAG_member ] [dev] [line 74, size 64, align 64, offset 128] [from dev_t]
!276 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"set_author", metadata !"set_author", metadata !"", i32 225, metadata !277, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i32, %struct.stat*)* @set_author, null, 
!277 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !278, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!278 = metadata !{null, metadata !99, metadata !49, metadata !209}
!279 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"set_owner", metadata !"set_owner", metadata !"", i32 194, metadata !280, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.cp_options*, i8*, i32, i32, i32)* @set_o
!280 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !281, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!281 = metadata !{metadata !49, metadata !179, metadata !99, metadata !49, metadata !282, metadata !283}
!282 = metadata !{i32 786454, metadata !168, null, metadata !"uid_t", i32 80, i64 0, i64 0, i64 0, i32 0, metadata !221} ; [ DW_TAG_typedef ] [uid_t] [line 80, size 0, align 0, offset 0] [from __uid_t]
!283 = metadata !{i32 786454, metadata !168, null, metadata !"gid_t", i32 65, i64 0, i64 0, i64 0, i32 0, metadata !223} ; [ DW_TAG_typedef ] [gid_t] [line 65, size 0, align 0, offset 0] [from __gid_t]
!284 = metadata !{i32 786478, metadata !285, metadata !286, metadata !"get_stat_mtime", metadata !"get_stat_mtime", metadata !"", i32 122, metadata !287, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, { i64, i64 } (%struct.stat*)* @get_stat_mti
!285 = metadata !{metadata !"../lib/stat-time.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!286 = metadata !{i32 786473, metadata !285}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/../lib/stat-time.h]
!287 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !288, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!288 = metadata !{metadata !234, metadata !209}
!289 = metadata !{i32 786478, metadata !285, metadata !286, metadata !"get_stat_atime", metadata !"get_stat_atime", metadata !"", i32 94, metadata !287, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, { i64, i64 } (%struct.stat*)* @get_stat_atim
!290 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"fchmod_or_lchmod", metadata !"fchmod_or_lchmod", metadata !"", i32 249, metadata !291, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8*, i32)* @fchmod_or_lchmod,
!291 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !292, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!292 = metadata !{metadata !49, metadata !49, metadata !99, metadata !82}
!293 = metadata !{i32 786478, metadata !294, metadata !295, metadata !"ptr_align", metadata !"ptr_align", metadata !"", i32 562, metadata !296, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64)* @ptr_align, null, null, metadata !43,
!294 = metadata !{metadata !"./system.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!295 = metadata !{i32 786473, metadata !294}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!296 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !297, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!297 = metadata !{metadata !298, metadata !299, metadata !301}
!298 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!299 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !300} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!300 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from ]
!301 = metadata !{i32 786454, metadata !168, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!302 = metadata !{i32 786478, metadata !294, metadata !295, metadata !"lcm", metadata !"lcm", metadata !"", i32 551, metadata !303, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i64, i64)* @lcm, null, null, metadata !43, i32 552} ; [ DW_T
!303 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !304, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!304 = metadata !{metadata !301, metadata !301, metadata !301}
!305 = metadata !{i32 786478, metadata !294, metadata !295, metadata !"gcd", metadata !"gcd", metadata !"", i32 533, metadata !303, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i64, i64)* @gcd, null, null, metadata !43, i32 534} ; [ DW_T
!306 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"copy_dir", metadata !"copy_dir", metadata !"", i32 142, metadata !307, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*, i1, %struct.stat*, %struct.dir_list*, %st
!307 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !308, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!308 = metadata !{metadata !59, metadata !99, metadata !99, metadata !59, metadata !209, metadata !269, metadata !179, metadata !208}
!309 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"is_ancestor", metadata !"is_ancestor", metadata !"", i32 122, metadata !310, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.stat*, %struct.dir_list*)* @is_ancest
!310 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !311, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!311 = metadata !{metadata !59, metadata !209, metadata !312}
!312 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !313} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!313 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !270} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from dir_list]
!314 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"emit_verbose", metadata !"emit_verbose", metadata !"", i32 987, metadata !315, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i8*, i8*)* @emit_verbose, null, null
!315 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !316, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!316 = metadata !{null, metadata !99, metadata !99, metadata !99}
!317 = metadata !{i32 786478, metadata !294, metadata !295, metadata !"dot_or_dotdot", metadata !"dot_or_dotdot", metadata !"", i32 369, metadata !128, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*)* @dot_or_dotdot, null, null, metadat
!318 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"overwrite_prompt", metadata !"overwrite_prompt", metadata !"", i32 798, metadata !319, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, %struct.stat*)* @overwrite_p
!319 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !320, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!320 = metadata !{null, metadata !99, metadata !209}
!321 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"abandon_move", metadata !"abandon_move", metadata !"", i32 969, metadata !322, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.cp_options*, i8*, %struct.stat*)* @
!322 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !323, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!323 = metadata !{metadata !59, metadata !179, metadata !99, metadata !209}
!324 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"same_file_ok", metadata !"same_file_ok", metadata !"", i32 609, metadata !325, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, %struct.stat*, i8*, %struct.stat*, %st
!325 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !326, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!326 = metadata !{metadata !59, metadata !99, metadata !209, metadata !99, metadata !209, metadata !179, metadata !208, metadata !208}
!327 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"record_file", metadata !"record_file", metadata !"", i32 921, metadata !328, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_table*, i8*, %struct.stat*)* @
!328 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !329, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!329 = metadata !{null, metadata !91, metadata !99, metadata !209}
!330 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"seen_file", metadata !"seen_file", metadata !"", i32 900, metadata !331, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.hash_table*, i8*, %struct.stat*)* @seen_f
!331 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !332, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!332 = metadata !{metadata !59, metadata !333, metadata !99, metadata !209}
!333 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !334} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!334 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !92} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from Hash_table]
!335 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"klee_compatible_error", metadata !"klee_compatible_error", metadata !"", i32 104, metadata !131, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32* (...)*, i8*, 
!336 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"valid_options", metadata !"valid_options", metadata !"", i32 1916, metadata !260, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.cp_options*)* @valid_options, nu
!337 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"triple_hash_no_name", metadata !"triple_hash_no_name", metadata !"", i32 836, metadata !338, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64)* @triple_hash_no_n
!338 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !339, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!339 = metadata !{metadata !301, metadata !299, metadata !301}
!340 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"triple_free", metadata !"triple_free", metadata !"", i32 855, metadata !341, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*)* @triple_free, null, null, metadata !4
!341 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !342, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!342 = metadata !{null, metadata !298}
!343 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"triple_compare", metadata !"triple_compare", metadata !"", i32 846, metadata !344, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*)* @triple_compare, null, null,
!344 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !345, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!345 = metadata !{metadata !59, metadata !299, metadata !299}
!346 = metadata !{i32 786478, metadata !168, metadata !176, metadata !"triple_hash", metadata !"triple_hash", metadata !"", i32 816, metadata !338, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64)* @triple_hash, null, null, metadat
!347 = metadata !{metadata !348, metadata !349, metadata !350}
!348 = metadata !{i32 786484, i32 0, metadata !262, metadata !"mask", metadata !"mask", metadata !"", metadata !176, i32 1994, metadata !82, i32 1, i32 1, i32* @cached_umask.mask, null} ; [ DW_TAG_variable ] [mask] [line 1994] [local] [def]
!349 = metadata !{i32 786484, i32 0, null, metadata !"top_level_src_name", metadata !"top_level_src_name", metadata !"", metadata !176, i32 98, metadata !99, i32 1, i32 1, i8** @top_level_src_name, null} ; [ DW_TAG_variable ] [top_level_src_name] [line 9
!350 = metadata !{i32 786484, i32 0, null, metadata !"top_level_dst_name", metadata !"top_level_dst_name", metadata !"", metadata !176, i32 99, metadata !99, i32 1, i32 1, i8** @top_level_dst_name, null} ; [ DW_TAG_variable ] [top_level_dst_name] [line 9
!351 = metadata !{i32 786449, metadata !352, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !353, metadata !379, metadata !43, metadata !""} ; [ DW_TAG_compile_uni
!352 = metadata !{metadata !"cp-hash.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!353 = metadata !{metadata !354, metadata !362, metadata !363, metadata !366, metadata !369, metadata !372, metadata !373, metadata !374, metadata !378}
!354 = metadata !{i32 786478, metadata !352, metadata !355, metadata !"forget_created", metadata !"forget_created", metadata !"", i32 87, metadata !356, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i64, i64)* @forget_created, null, nul
!355 = metadata !{i32 786473, metadata !352}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/cp-hash.c]
!356 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !357, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!357 = metadata !{null, metadata !358, metadata !360}
!358 = metadata !{i32 786454, metadata !352, null, metadata !"ino_t", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !359} ; [ DW_TAG_typedef ] [ino_t] [line 48, size 0, align 0, offset 0] [from __ino_t]
!359 = metadata !{i32 786454, metadata !352, null, metadata !"__ino_t", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__ino_t] [line 127, size 0, align 0, offset 0] [from long unsigned int]
!360 = metadata !{i32 786454, metadata !352, null, metadata !"dev_t", i32 60, i64 0, i64 0, i64 0, i32 0, metadata !361} ; [ DW_TAG_typedef ] [dev_t] [line 60, size 0, align 0, offset 0] [from __dev_t]
!361 = metadata !{i32 786454, metadata !352, null, metadata !"__dev_t", i32 124, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__dev_t] [line 124, size 0, align 0, offset 0] [from long unsigned int]
!362 = metadata !{i32 786478, metadata !352, metadata !355, metadata !"remember_created", metadata !"remember_created", metadata !"", i32 105, metadata !128, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*)* @remember_created, null, nul
!363 = metadata !{i32 786478, metadata !352, metadata !355, metadata !"src_to_dest_lookup", metadata !"src_to_dest_lookup", metadata !"", i32 123, metadata !364, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i64, i64)* @src_to_dest_looku
!364 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !365, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!365 = metadata !{metadata !54, metadata !358, metadata !360}
!366 = metadata !{i32 786478, metadata !352, metadata !355, metadata !"remember_copied", metadata !"remember_copied", metadata !"", i32 138, metadata !367, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64, i64)* @remember_copied, n
!367 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !368, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!368 = metadata !{metadata !54, metadata !99, metadata !358, metadata !360}
!369 = metadata !{i32 786478, metadata !352, metadata !355, metadata !"hash_init", metadata !"hash_init", metadata !"", i32 170, metadata !370, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @hash_init, null, null, metadata !43, i32 1
!370 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !371, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!371 = metadata !{null}
!372 = metadata !{i32 786478, metadata !352, metadata !355, metadata !"forget_all", metadata !"forget_all", metadata !"", i32 184, metadata !370, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @forget_all, null, null, metadata !43, i3
!373 = metadata !{i32 786478, metadata !352, metadata !355, metadata !"src_to_dest_compare", metadata !"src_to_dest_compare", metadata !"", i32 69, metadata !344, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*)* @src_to_dest_compar
!374 = metadata !{i32 786478, metadata !352, metadata !355, metadata !"src_to_dest_hash", metadata !"src_to_dest_hash", metadata !"", i32 56, metadata !375, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64)* @src_to_dest_hash, null,
!375 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !376, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!376 = metadata !{metadata !377, metadata !299, metadata !377}
!377 = metadata !{i32 786454, metadata !352, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!378 = metadata !{i32 786478, metadata !352, metadata !355, metadata !"src_to_dest_free", metadata !"src_to_dest_free", metadata !"", i32 77, metadata !341, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*)* @src_to_dest_free, null, nul
!379 = metadata !{metadata !380}
!380 = metadata !{i32 786484, i32 0, null, metadata !"src_to_dest", metadata !"src_to_dest", metadata !"", metadata !355, i32 50, metadata !381, i32 1, i32 1, %struct.hash_table** @src_to_dest, null} ; [ DW_TAG_variable ] [src_to_dest] [line 50] [local] 
!381 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !382} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Hash_table]
!382 = metadata !{i32 786454, metadata !352, null, metadata !"Hash_table", i32 57, i64 0, i64 0, i64 0, i32 0, metadata !93} ; [ DW_TAG_typedef ] [Hash_table] [line 57, size 0, align 0, offset 0] [from hash_table]
!383 = metadata !{i32 786449, metadata !384, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !385, metadata !43, metadata !413, metadata !677, metadata !43, metadata !""} ; [ DW_TAG_compile_un
!384 = metadata !{metadata !"remove.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!385 = metadata !{metadata !37, metadata !29, metadata !386, metadata !391, metadata !395, metadata !398, metadata !401}
!386 = metadata !{i32 786436, metadata !384, null, metadata !"Ternary", i32 76, i64 32, i64 32, i32 0, i32 0, null, metadata !387, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [Ternary] [line 76, size 32, align 32, offset 0] [def] [from ]
!387 = metadata !{metadata !388, metadata !389, metadata !390}
!388 = metadata !{i32 786472, metadata !"T_UNKNOWN", i64 2} ; [ DW_TAG_enumerator ] [T_UNKNOWN :: 2]
!389 = metadata !{i32 786472, metadata !"T_NO", i64 3} ; [ DW_TAG_enumerator ] [T_NO :: 3]
!390 = metadata !{i32 786472, metadata !"T_YES", i64 4} ; [ DW_TAG_enumerator ] [T_YES :: 4]
!391 = metadata !{i32 786436, metadata !384, null, metadata !"Prompt_action", i32 87, i64 32, i64 32, i32 0, i32 0, null, metadata !392, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [Prompt_action] [line 87, size 32, align 32, offset 0] [def] [
!392 = metadata !{metadata !393, metadata !394}
!393 = metadata !{i32 786472, metadata !"PA_DESCEND_INTO_DIR", i64 2} ; [ DW_TAG_enumerator ] [PA_DESCEND_INTO_DIR :: 2]
!394 = metadata !{i32 786472, metadata !"PA_REMOVE_DIR", i64 3} ; [ DW_TAG_enumerator ] [PA_REMOVE_DIR :: 3]
!395 = metadata !{i32 786436, metadata !384, null, metadata !"", i32 95, i64 32, i64 32, i32 0, i32 0, null, metadata !396, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 95, size 32, align 32, offset 0] [def] [from ]
!396 = metadata !{metadata !397}
!397 = metadata !{i32 786472, metadata !"HT_UNREMOVABLE_INITIAL_CAPACITY", i64 13} ; [ DW_TAG_enumerator ] [HT_UNREMOVABLE_INITIAL_CAPACITY :: 13]
!398 = metadata !{i32 786436, metadata !384, null, metadata !"", i32 65, i64 32, i64 32, i32 0, i32 0, null, metadata !399, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 65, size 32, align 32, offset 0] [def] [from ]
!399 = metadata !{metadata !400}
!400 = metadata !{i32 786472, metadata !"CONSECUTIVE_READDIR_UNLINK_THRESHOLD", i64 10} ; [ DW_TAG_enumerator ] [CONSECUTIVE_READDIR_UNLINK_THRESHOLD :: 10]
!401 = metadata !{i32 786436, metadata !402, null, metadata !"", i32 97, i64 32, i64 32, i32 0, i32 0, null, metadata !403, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 97, size 32, align 32, offset 0] [def] [from ]
!402 = metadata !{metadata !"/usr/include/dirent.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!403 = metadata !{metadata !404, metadata !405, metadata !406, metadata !407, metadata !408, metadata !409, metadata !410, metadata !411, metadata !412}
!404 = metadata !{i32 786472, metadata !"DT_UNKNOWN", i64 0} ; [ DW_TAG_enumerator ] [DT_UNKNOWN :: 0]
!405 = metadata !{i32 786472, metadata !"DT_FIFO", i64 1} ; [ DW_TAG_enumerator ] [DT_FIFO :: 1]
!406 = metadata !{i32 786472, metadata !"DT_CHR", i64 2} ; [ DW_TAG_enumerator ] [DT_CHR :: 2]
!407 = metadata !{i32 786472, metadata !"DT_DIR", i64 4} ; [ DW_TAG_enumerator ] [DT_DIR :: 4]
!408 = metadata !{i32 786472, metadata !"DT_BLK", i64 6} ; [ DW_TAG_enumerator ] [DT_BLK :: 6]
!409 = metadata !{i32 786472, metadata !"DT_REG", i64 8} ; [ DW_TAG_enumerator ] [DT_REG :: 8]
!410 = metadata !{i32 786472, metadata !"DT_LNK", i64 10} ; [ DW_TAG_enumerator ] [DT_LNK :: 10]
!411 = metadata !{i32 786472, metadata !"DT_SOCK", i64 12} ; [ DW_TAG_enumerator ] [DT_SOCK :: 12]
!412 = metadata !{i32 786472, metadata !"DT_WHT", i64 14} ; [ DW_TAG_enumerator ] [DT_WHT :: 14]
!413 = metadata !{metadata !414, metadata !420, metadata !425, metadata !426, metadata !454, metadata !527, metadata !530, metadata !531, metadata !532, metadata !537, metadata !538, metadata !565, metadata !568, metadata !574, metadata !577, metadata !5
!414 = metadata !{i32 786478, metadata !415, metadata !416, metadata !"klee_change", metadata !"klee_change", metadata !"", i32 18, metadata !417, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i64, i64)* @klee_change, null, null, metadat
!415 = metadata !{metadata !"/home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!416 = metadata !{i32 786473, metadata !415}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!417 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !418, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!418 = metadata !{metadata !419, metadata !419, metadata !419}
!419 = metadata !{i32 786454, metadata !415, null, metadata !"uintptr_t", i32 247, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [uintptr_t] [line 247, size 0, align 0, offset 0] [from long unsigned int]
!420 = metadata !{i32 786478, metadata !421, metadata !422, metadata !"klee_get_true", metadata !"klee_get_true", metadata !"", i32 4, metadata !423, i1 false, i1 true, i32 0, i32 0, null, i32 0, i1 false, i32 ()* @klee_get_true, null, null, metadata !43
!421 = metadata !{metadata !"/home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_functions.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!422 = metadata !{i32 786473, metadata !421}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_functions.h]
!423 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !424, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!424 = metadata !{metadata !49}
!425 = metadata !{i32 786478, metadata !421, metadata !422, metadata !"klee_get_false", metadata !"klee_get_false", metadata !"", i32 5, metadata !423, i1 false, i1 true, i32 0, i32 0, null, i32 0, i1 false, i32 ()* @klee_get_false, null, null, metadata 
!426 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"rm", metadata !"rm", metadata !"", i32 1628, metadata !428, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i64, i8**, %struct.rm_options*)* @rm, null, null, metadata !
!427 = metadata !{i32 786473, metadata !384}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!428 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !429, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!429 = metadata !{metadata !37, metadata !430, metadata !432, metadata !433}
!430 = metadata !{i32 786454, metadata !431, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!431 = metadata !{metadata !"/usr/include/libio.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!432 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !152} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!433 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !434} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!434 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !435} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from rm_options]
!435 = metadata !{i32 786451, metadata !30, null, metadata !"rm_options", i32 40, i64 256, i64 64, i32 0, i32 0, null, metadata !436, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [rm_options] [line 40, size 256, align 64, offset 0] [def] [from ]
!436 = metadata !{metadata !437, metadata !438, metadata !439, metadata !440, metadata !441, metadata !451, metadata !452, metadata !453}
!437 = metadata !{i32 786445, metadata !30, metadata !435, metadata !"ignore_missing_files", i32 43, i64 8, i64 8, i64 0, i32 0, metadata !59} ; [ DW_TAG_member ] [ignore_missing_files] [line 43, size 8, align 8, offset 0] [from _Bool]
!438 = metadata !{i32 786445, metadata !30, metadata !435, metadata !"interactive", i32 46, i64 32, i64 32, i64 32, i32 0, metadata !29} ; [ DW_TAG_member ] [interactive] [line 46, size 32, align 32, offset 32] [from rm_interactive]
!439 = metadata !{i32 786445, metadata !30, metadata !435, metadata !"one_file_system", i32 54, i64 8, i64 8, i64 64, i32 0, metadata !59} ; [ DW_TAG_member ] [one_file_system] [line 54, size 8, align 8, offset 64] [from _Bool]
!440 = metadata !{i32 786445, metadata !30, metadata !435, metadata !"recursive", i32 57, i64 8, i64 8, i64 72, i32 0, metadata !59} ; [ DW_TAG_member ] [recursive] [line 57, size 8, align 8, offset 72] [from _Bool]
!441 = metadata !{i32 786445, metadata !30, metadata !435, metadata !"root_dev_ino", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !442} ; [ DW_TAG_member ] [root_dev_ino] [line 61, size 64, align 64, offset 128] [from ]
!442 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !443} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from dev_ino]
!443 = metadata !{i32 786451, metadata !114, null, metadata !"dev_ino", i32 7, i64 128, i64 64, i32 0, i32 0, null, metadata !444, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dev_ino] [line 7, size 128, align 64, offset 0] [def] [from ]
!444 = metadata !{metadata !445, metadata !448}
!445 = metadata !{i32 786445, metadata !114, metadata !443, metadata !"st_ino", i32 9, i64 64, i64 64, i64 0, i32 0, metadata !446} ; [ DW_TAG_member ] [st_ino] [line 9, size 64, align 64, offset 0] [from ino_t]
!446 = metadata !{i32 786454, metadata !114, null, metadata !"ino_t", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !447} ; [ DW_TAG_typedef ] [ino_t] [line 48, size 0, align 0, offset 0] [from __ino_t]
!447 = metadata !{i32 786454, metadata !114, null, metadata !"__ino_t", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__ino_t] [line 127, size 0, align 0, offset 0] [from long unsigned int]
!448 = metadata !{i32 786445, metadata !114, metadata !443, metadata !"st_dev", i32 10, i64 64, i64 64, i64 64, i32 0, metadata !449} ; [ DW_TAG_member ] [st_dev] [line 10, size 64, align 64, offset 64] [from dev_t]
!449 = metadata !{i32 786454, metadata !114, null, metadata !"dev_t", i32 60, i64 0, i64 0, i64 0, i32 0, metadata !450} ; [ DW_TAG_typedef ] [dev_t] [line 60, size 0, align 0, offset 0] [from __dev_t]
!450 = metadata !{i32 786454, metadata !114, null, metadata !"__dev_t", i32 124, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__dev_t] [line 124, size 0, align 0, offset 0] [from long unsigned int]
!451 = metadata !{i32 786445, metadata !30, metadata !435, metadata !"stdin_tty", i32 64, i64 8, i64 8, i64 192, i32 0, metadata !59} ; [ DW_TAG_member ] [stdin_tty] [line 64, size 8, align 8, offset 192] [from _Bool]
!452 = metadata !{i32 786445, metadata !30, metadata !435, metadata !"verbose", i32 67, i64 8, i64 8, i64 200, i32 0, metadata !59} ; [ DW_TAG_member ] [verbose] [line 67, size 8, align 8, offset 200] [from _Bool]
!453 = metadata !{i32 786445, metadata !30, metadata !435, metadata !"require_restore_cwd", i32 75, i64 8, i64 8, i64 208, i32 0, metadata !59} ; [ DW_TAG_member ] [require_restore_cwd] [line 75, size 8, align 8, offset 208] [from _Bool]
!454 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"ds_free", metadata !"ds_free", metadata !"", i32 428, metadata !455, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @ds_free, null, null, met
!455 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !456, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!456 = metadata !{null, metadata !457}
!457 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !458} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Dirstack_state]
!458 = metadata !{i32 786454, metadata !384, null, metadata !"Dirstack_state", i32 152, i64 0, i64 0, i64 0, i32 0, metadata !459} ; [ DW_TAG_typedef ] [Dirstack_state] [line 152, size 0, align 0, offset 0] [from dirstack_state]
!459 = metadata !{i32 786451, metadata !384, null, metadata !"dirstack_state", i32 120, i64 3968, i64 64, i32 0, i32 0, null, metadata !460, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dirstack_state] [line 120, size 3968, align 64, offset 0] [
!460 = metadata !{metadata !461, metadata !495, metadata !496, metadata !497, metadata !504}
!461 = metadata !{i32 786445, metadata !384, metadata !459, metadata !"dir_stack", i32 127, i64 704, i64 64, i64 0, i32 0, metadata !462} ; [ DW_TAG_member ] [dir_stack] [line 127, size 704, align 64, offset 0] [from obstack]
!462 = metadata !{i32 786451, metadata !463, null, metadata !"obstack", i32 150, i64 704, i64 64, i32 0, i32 0, null, metadata !464, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [obstack] [line 150, size 704, align 64, offset 0] [def] [from ]
!463 = metadata !{metadata !"../lib/obstack.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!464 = metadata !{metadata !465, metadata !466, metadata !474, metadata !475, metadata !476, metadata !477, metadata !482, metadata !483, metadata !487, metadata !491, metadata !492, metadata !493, metadata !494}
!465 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"chunk_size", i32 152, i64 64, i64 64, i64 0, i32 0, metadata !228} ; [ DW_TAG_member ] [chunk_size] [line 152, size 64, align 64, offset 0] [from long int]
!466 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"chunk", i32 153, i64 64, i64 64, i64 64, i32 0, metadata !467} ; [ DW_TAG_member ] [chunk] [line 153, size 64, align 64, offset 64] [from ]
!467 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !468} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _obstack_chunk]
!468 = metadata !{i32 786451, metadata !463, null, metadata !"_obstack_chunk", i32 143, i64 192, i64 64, i32 0, i32 0, null, metadata !469, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_obstack_chunk] [line 143, size 192, align 64, offset 0] [de
!469 = metadata !{metadata !470, metadata !471, metadata !472}
!470 = metadata !{i32 786445, metadata !463, metadata !468, metadata !"limit", i32 145, i64 64, i64 64, i64 0, i32 0, metadata !54} ; [ DW_TAG_member ] [limit] [line 145, size 64, align 64, offset 0] [from ]
!471 = metadata !{i32 786445, metadata !463, metadata !468, metadata !"prev", i32 146, i64 64, i64 64, i64 64, i32 0, metadata !467} ; [ DW_TAG_member ] [prev] [line 146, size 64, align 64, offset 64] [from ]
!472 = metadata !{i32 786445, metadata !463, metadata !468, metadata !"contents", i32 147, i64 32, i64 8, i64 128, i32 0, metadata !473} ; [ DW_TAG_member ] [contents] [line 147, size 32, align 8, offset 128] [from ]
!473 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 32, i64 8, i32 0, i32 0, metadata !55, metadata !153, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 32, align 8, offset 0] [from char]
!474 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"object_base", i32 154, i64 64, i64 64, i64 128, i32 0, metadata !54} ; [ DW_TAG_member ] [object_base] [line 154, size 64, align 64, offset 128] [from ]
!475 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"next_free", i32 155, i64 64, i64 64, i64 192, i32 0, metadata !54} ; [ DW_TAG_member ] [next_free] [line 155, size 64, align 64, offset 192] [from ]
!476 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"chunk_limit", i32 156, i64 64, i64 64, i64 256, i32 0, metadata !54} ; [ DW_TAG_member ] [chunk_limit] [line 156, size 64, align 64, offset 256] [from ]
!477 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"temp", i32 161, i64 64, i64 64, i64 320, i32 0, metadata !478} ; [ DW_TAG_member ] [temp] [line 161, size 64, align 64, offset 320] [from ]
!478 = metadata !{i32 786455, metadata !463, metadata !462, metadata !"", i32 157, i64 64, i64 64, i64 0, i32 0, null, metadata !479, i32 0, null, null, null} ; [ DW_TAG_union_type ] [line 157, size 64, align 64, offset 0] [def] [from ]
!479 = metadata !{metadata !480, metadata !481}
!480 = metadata !{i32 786445, metadata !463, metadata !478, metadata !"tempint", i32 159, i64 64, i64 64, i64 0, i32 0, metadata !228} ; [ DW_TAG_member ] [tempint] [line 159, size 64, align 64, offset 0] [from long int]
!481 = metadata !{i32 786445, metadata !463, metadata !478, metadata !"tempptr", i32 160, i64 64, i64 64, i64 0, i32 0, metadata !298} ; [ DW_TAG_member ] [tempptr] [line 160, size 64, align 64, offset 0] [from ]
!482 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"alignment_mask", i32 162, i64 32, i64 32, i64 384, i32 0, metadata !49} ; [ DW_TAG_member ] [alignment_mask] [line 162, size 32, align 32, offset 384] [from int]
!483 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"chunkfun", i32 166, i64 64, i64 64, i64 448, i32 0, metadata !484} ; [ DW_TAG_member ] [chunkfun] [line 166, size 64, align 64, offset 448] [from ]
!484 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !485} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!485 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !486, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!486 = metadata !{metadata !467, metadata !298, metadata !228}
!487 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"freefun", i32 167, i64 64, i64 64, i64 512, i32 0, metadata !488} ; [ DW_TAG_member ] [freefun] [line 167, size 64, align 64, offset 512] [from ]
!488 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !489} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!489 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !490, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!490 = metadata !{null, metadata !298, metadata !467}
!491 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"extra_arg", i32 168, i64 64, i64 64, i64 576, i32 0, metadata !298} ; [ DW_TAG_member ] [extra_arg] [line 168, size 64, align 64, offset 576] [from ]
!492 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"use_extra_arg", i32 169, i64 1, i64 32, i64 640, i32 0, metadata !84} ; [ DW_TAG_member ] [use_extra_arg] [line 169, size 1, align 32, offset 640] [from unsigned int]
!493 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"maybe_empty_object", i32 170, i64 1, i64 32, i64 641, i32 0, metadata !84} ; [ DW_TAG_member ] [maybe_empty_object] [line 170, size 1, align 32, offset 641] [from unsigned int]
!494 = metadata !{i32 786445, metadata !463, metadata !462, metadata !"alloc_failed", i32 174, i64 1, i64 32, i64 642, i32 0, metadata !84} ; [ DW_TAG_member ] [alloc_failed] [line 174, size 1, align 32, offset 642] [from unsigned int]
!495 = metadata !{i32 786445, metadata !384, metadata !459, metadata !"len_stack", i32 133, i64 704, i64 64, i64 704, i32 0, metadata !462} ; [ DW_TAG_member ] [len_stack] [line 133, size 704, align 64, offset 704] [from obstack]
!496 = metadata !{i32 786445, metadata !384, metadata !459, metadata !"Active_dir", i32 140, i64 704, i64 64, i64 1408, i32 0, metadata !462} ; [ DW_TAG_member ] [Active_dir] [line 140, size 704, align 64, offset 1408] [from obstack]
!497 = metadata !{i32 786445, metadata !384, metadata !459, metadata !"cycle_check_state", i32 143, i64 256, i64 64, i64 2112, i32 0, metadata !498} ; [ DW_TAG_member ] [cycle_check_state] [line 143, size 256, align 64, offset 2112] [from cycle_check_sta
!498 = metadata !{i32 786451, metadata !499, null, metadata !"cycle_check_state", i32 30, i64 256, i64 64, i32 0, i32 0, null, metadata !500, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [cycle_check_state] [line 30, size 256, align 64, offset 0]
!499 = metadata !{metadata !"../lib/cycle-check.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!500 = metadata !{metadata !501, metadata !502, metadata !503}
!501 = metadata !{i32 786445, metadata !499, metadata !498, metadata !"dev_ino", i32 32, i64 128, i64 64, i64 0, i32 0, metadata !443} ; [ DW_TAG_member ] [dev_ino] [line 32, size 128, align 64, offset 0] [from dev_ino]
!502 = metadata !{i32 786445, metadata !499, metadata !498, metadata !"chdir_counter", i32 33, i64 64, i64 64, i64 128, i32 0, metadata !120} ; [ DW_TAG_member ] [chdir_counter] [line 33, size 64, align 64, offset 128] [from long unsigned int]
!503 = metadata !{i32 786445, metadata !499, metadata !498, metadata !"magic", i32 34, i64 32, i64 32, i64 192, i32 0, metadata !49} ; [ DW_TAG_member ] [magic] [line 34, size 32, align 32, offset 192] [from int]
!504 = metadata !{i32 786445, metadata !384, metadata !459, metadata !"current_arg_jumpbuf", i32 150, i64 1600, i64 64, i64 2368, i32 0, metadata !505} ; [ DW_TAG_member ] [current_arg_jumpbuf] [line 150, size 1600, align 64, offset 2368] [from jmp_buf]
!505 = metadata !{i32 786454, metadata !384, null, metadata !"jmp_buf", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !506} ; [ DW_TAG_typedef ] [jmp_buf] [line 48, size 0, align 0, offset 0] [from ]
!506 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 1600, i64 64, i32 0, i32 0, metadata !507, metadata !525, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 1600, align 64, offset 0] [from __jmp_buf_tag]
!507 = metadata !{i32 786451, metadata !508, null, metadata !"__jmp_buf_tag", i32 34, i64 1600, i64 64, i32 0, i32 0, null, metadata !509, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [__jmp_buf_tag] [line 34, size 1600, align 64, offset 0] [def]
!508 = metadata !{metadata !"/usr/include/setjmp.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!509 = metadata !{metadata !510, metadata !515, metadata !516}
!510 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"__jmpbuf", i32 40, i64 512, i64 64, i64 0, i32 0, metadata !511} ; [ DW_TAG_member ] [__jmpbuf] [line 40, size 512, align 64, offset 0] [from __jmp_buf]
!511 = metadata !{i32 786454, metadata !508, null, metadata !"__jmp_buf", i32 31, i64 0, i64 0, i64 0, i32 0, metadata !512} ; [ DW_TAG_typedef ] [__jmp_buf] [line 31, size 0, align 0, offset 0] [from ]
!512 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 512, i64 64, i32 0, i32 0, metadata !228, metadata !513, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 512, align 64, offset 0] [from long int]
!513 = metadata !{metadata !514}
!514 = metadata !{i32 786465, i64 0, i64 8}       ; [ DW_TAG_subrange_type ] [0, 7]
!515 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"__mask_was_saved", i32 41, i64 32, i64 32, i64 512, i32 0, metadata !49} ; [ DW_TAG_member ] [__mask_was_saved] [line 41, size 32, align 32, offset 512] [from int]
!516 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"__saved_mask", i32 42, i64 1024, i64 64, i64 576, i32 0, metadata !517} ; [ DW_TAG_member ] [__saved_mask] [line 42, size 1024, align 64, offset 576] [from __sigset_t]
!517 = metadata !{i32 786454, metadata !508, null, metadata !"__sigset_t", i32 30, i64 0, i64 0, i64 0, i32 0, metadata !518} ; [ DW_TAG_typedef ] [__sigset_t] [line 30, size 0, align 0, offset 0] [from ]
!518 = metadata !{i32 786451, metadata !519, null, metadata !"", i32 27, i64 1024, i64 64, i32 0, i32 0, null, metadata !520, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [line 27, size 1024, align 64, offset 0] [def] [from ]
!519 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/sigset.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!520 = metadata !{metadata !521}
!521 = metadata !{i32 786445, metadata !519, metadata !518, metadata !"__val", i32 29, i64 1024, i64 64, i64 0, i32 0, metadata !522} ; [ DW_TAG_member ] [__val] [line 29, size 1024, align 64, offset 0] [from ]
!522 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 1024, i64 64, i32 0, i32 0, metadata !120, metadata !523, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 1024, align 64, offset 0] [from long unsigned int]
!523 = metadata !{metadata !524}
!524 = metadata !{i32 786465, i64 0, i64 16}      ; [ DW_TAG_subrange_type ] [0, 15]
!525 = metadata !{metadata !526}
!526 = metadata !{i32 786465, i64 0, i64 1}       ; [ DW_TAG_subrange_type ] [0, 0]
!527 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"rm_1", metadata !"rm_1", metadata !"", i32 1561, metadata !528, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.dirstack_state*, i8*, %struct.rm_options*, i32*)*
!528 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !529, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!529 = metadata !{metadata !37, metadata !457, metadata !99, metadata !433, metadata !136}
!530 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"ds_clear", metadata !"ds_clear", metadata !"", i32 418, metadata !455, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @ds_clear, null, null, 
!531 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_stack_pop", metadata !"AD_stack_pop", metadata !"", i32 387, metadata !455, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @AD_stack_pop, 
!532 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_stack_height", metadata !"AD_stack_height", metadata !"", i32 374, metadata !533, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.dirstack_state*)* @AD_stack_
!533 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !534, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!534 = metadata !{metadata !430, metadata !535}
!535 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !536} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!536 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !458} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from Dirstack_state]
!537 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_stack_clear", metadata !"AD_stack_clear", metadata !"", i32 399, metadata !455, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @AD_stack_c
!538 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"remove_dir", metadata !"remove_dir", metadata !"", i32 1373, metadata !539, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %struct.dirstack_state*, i8*, %struct.st
!539 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !540, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!540 = metadata !{metadata !37, metadata !49, metadata !457, metadata !99, metadata !541, metadata !433, metadata !136}
!541 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !542} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from stat]
!542 = metadata !{i32 786451, metadata !119, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !543, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!543 = metadata !{metadata !544, metadata !545, metadata !546, metadata !547, metadata !549, metadata !550, metadata !551, metadata !552, metadata !553, metadata !555, metadata !556, metadata !557, metadata !562, metadata !563, metadata !564}
!544 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !450} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!545 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !447} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!546 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !218} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!547 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !548} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!548 = metadata !{i32 786454, metadata !119, null, metadata !"__mode_t", i32 129, i64 0, i64 0, i64 0, i32 0, metadata !84} ; [ DW_TAG_typedef ] [__mode_t] [line 129, size 0, align 0, offset 0] [from unsigned int]
!549 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !221} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!550 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !223} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!551 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !49} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!552 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !450} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!553 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !554} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!554 = metadata !{i32 786454, metadata !431, null, metadata !"__off_t", i32 131, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__off_t] [line 131, size 0, align 0, offset 0] [from long int]
!555 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !230} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!556 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !232} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!557 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !558} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!558 = metadata !{i32 786451, metadata !235, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !559, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!559 = metadata !{metadata !560, metadata !561}
!560 = metadata !{i32 786445, metadata !235, metadata !558, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !238} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!561 = metadata !{i32 786445, metadata !235, metadata !558, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !240} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!562 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !558} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!563 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !558} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!564 = metadata !{i32 786445, metadata !119, metadata !542, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !244} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!565 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_mark_as_unremovable", metadata !"AD_mark_as_unremovable", metadata !"", i32 598, metadata !566, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_stat
!566 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !567, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!567 = metadata !{null, metadata !457, metadata !99}
!568 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_mark_helper", metadata !"AD_mark_helper", metadata !"", i32 584, metadata !569, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_table**, i8*)* @AD_mark_
!569 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !570, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!570 = metadata !{null, metadata !571, metadata !54}
!571 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !572} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!572 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !573} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Hash_table]
!573 = metadata !{i32 786454, metadata !384, null, metadata !"Hash_table", i32 57, i64 0, i64 0, i64 0, i32 0, metadata !93} ; [ DW_TAG_typedef ] [Hash_table] [line 57, size 0, align 0, offset 0] [from hash_table]
!574 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_ensure_initialized", metadata !"AD_ensure_initialized", metadata !"", i32 568, metadata !575, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.hash_table* (%struct.
!575 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !576, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!576 = metadata !{metadata !572, metadata !571}
!577 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"hash_freer", metadata !"hash_freer", metadata !"", i32 206, metadata !341, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*)* @hash_freer, null, null, metadata !43, 
!578 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"hash_compare_strings", metadata !"hash_compare_strings", metadata !"", i32 212, metadata !344, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*)* @hash_compare_st
!579 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"prompt", metadata !"prompt", metadata !"", i32 837, metadata !580, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %struct.dirstack_state*, i8*, %struct.stat*, %str
!580 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !581, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!581 = metadata !{metadata !37, metadata !49, metadata !535, metadata !99, metadata !541, metadata !433, metadata !391, metadata !582}
!582 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !583} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Ternary]
!583 = metadata !{i32 786454, metadata !384, null, metadata !"Ternary", i32 82, i64 0, i64 0, i64 0, i32 0, metadata !386} ; [ DW_TAG_typedef ] [Ternary] [line 82, size 0, align 0, offset 0] [from Ternary]
!584 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"is_empty_dir", metadata !"is_empty_dir", metadata !"", i32 724, metadata !585, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i32, i8*)* @is_empty_dir, null, null, metad
!585 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !586, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!586 = metadata !{metadata !59, metadata !49, metadata !99}
!587 = metadata !{i32 786478, metadata !294, metadata !295, metadata !"readdir_ignoring_dot_and_dotdot", metadata !"readdir_ignoring_dot_and_dotdot", metadata !"", i32 382, metadata !588, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.d
!588 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !589, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!589 = metadata !{metadata !590, metadata !605}
!590 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !591} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!591 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !592} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from dirent]
!592 = metadata !{i32 786451, metadata !593, null, metadata !"dirent", i32 22, i64 2240, i64 64, i32 0, i32 0, null, metadata !594, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dirent] [line 22, size 2240, align 64, offset 0] [def] [from ]
!593 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/dirent.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!594 = metadata !{metadata !595, metadata !596, metadata !597, metadata !599, metadata !601}
!595 = metadata !{i32 786445, metadata !593, metadata !592, metadata !"d_ino", i32 25, i64 64, i64 64, i64 0, i32 0, metadata !447} ; [ DW_TAG_member ] [d_ino] [line 25, size 64, align 64, offset 0] [from __ino_t]
!596 = metadata !{i32 786445, metadata !593, metadata !592, metadata !"d_off", i32 26, i64 64, i64 64, i64 64, i32 0, metadata !554} ; [ DW_TAG_member ] [d_off] [line 26, size 64, align 64, offset 64] [from __off_t]
!597 = metadata !{i32 786445, metadata !593, metadata !592, metadata !"d_reclen", i32 31, i64 16, i64 16, i64 128, i32 0, metadata !598} ; [ DW_TAG_member ] [d_reclen] [line 31, size 16, align 16, offset 128] [from unsigned short]
!598 = metadata !{i32 786468, null, null, metadata !"unsigned short", i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ] [unsigned short] [line 0, size 16, align 16, offset 0, enc DW_ATE_unsigned]
!599 = metadata !{i32 786445, metadata !593, metadata !592, metadata !"d_type", i32 32, i64 8, i64 8, i64 144, i32 0, metadata !600} ; [ DW_TAG_member ] [d_type] [line 32, size 8, align 8, offset 144] [from unsigned char]
!600 = metadata !{i32 786468, null, null, metadata !"unsigned char", i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ] [unsigned char] [line 0, size 8, align 8, offset 0, enc DW_ATE_unsigned_char]
!601 = metadata !{i32 786445, metadata !593, metadata !592, metadata !"d_name", i32 33, i64 2048, i64 8, i64 152, i32 0, metadata !602} ; [ DW_TAG_member ] [d_name] [line 33, size 2048, align 8, offset 152] [from ]
!602 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 2048, i64 8, i32 0, i32 0, metadata !55, metadata !603, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 2048, align 8, offset 0] [from char]
!603 = metadata !{metadata !604}
!604 = metadata !{i32 786465, i64 0, i64 256}     ; [ DW_TAG_subrange_type ] [0, 255]
!605 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !606} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from DIR]
!606 = metadata !{i32 786454, metadata !384, null, metadata !"DIR", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !607} ; [ DW_TAG_typedef ] [DIR] [line 127, size 0, align 0, offset 0] [from __dirstream]
!607 = metadata !{i32 786451, metadata !402, null, metadata !"__dirstream", i32 127, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [__dirstream] [line 127, size 0, align 0, offset 0] [decl] [from ]
!608 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"write_protected_non_symlink", metadata !"write_protected_non_symlink", metadata !"", i32 757, metadata !609, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i32, i8*, %st
!609 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !610, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!610 = metadata !{metadata !59, metadata !49, metadata !99, metadata !535, metadata !541}
!611 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_pop_and_chdir", metadata !"AD_pop_and_chdir", metadata !"", i32 461, metadata !612, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.__dirstream*, i32*, %struc
!612 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !613, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!613 = metadata !{metadata !54, metadata !605, metadata !136, metadata !457}
!614 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"pop_dir", metadata !"pop_dir", metadata !"", i32 251, metadata !455, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @pop_dir, null, null, met
!615 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"top_dir", metadata !"top_dir", metadata !"", i32 238, metadata !616, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.dirstack_state*)* @top_dir, null, null, meta
!616 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !617, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!617 = metadata !{metadata !54, metadata !535}
!618 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_mark_current_as_unremovable", metadata !"AD_mark_current_as_unremovable", metadata !"", i32 608, metadata !455, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%stru
!619 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"remove_cwd_entries", metadata !"remove_cwd_entries", metadata !"", i32 1223, metadata !620, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__dirstream**, %struc
!620 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !621, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!621 = metadata !{metadata !37, metadata !622, metadata !457, metadata !53, metadata !541, metadata !433}
!622 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !605} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!623 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_is_removable", metadata !"AD_is_removable", metadata !"", i32 716, metadata !624, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.dirstack_state*, i8*)* @AD_is
!624 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !625, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!625 = metadata !{metadata !59, metadata !535, metadata !99}
!626 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_push", metadata !"AD_push", metadata !"", i32 648, metadata !627, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, %struct.dirstack_state*, i8*, %struct.stat*)* 
!627 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !628, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!628 = metadata !{null, metadata !49, metadata !457, metadata !99, metadata !629}
!629 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !630} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!630 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !542} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from stat]
!631 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"push_dir", metadata !"push_dir", metadata !"", i32 218, metadata !566, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*, i8*)* @push_dir, null, n
!632 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"full_filename_", metadata !"full_filename_", metadata !"", i32 307, metadata !633, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.dirstack_state*, i8*)* @full_f
!633 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !634, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!634 = metadata !{metadata !54, metadata !535, metadata !99}
!635 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"right_justify", metadata !"right_justify", metadata !"", i32 276, metadata !636, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, i8*, i64, i8**, i8*)* @right_j
!636 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !637, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!637 = metadata !{metadata !430, metadata !54, metadata !430, metadata !99, metadata !430, metadata !53, metadata !208}
!638 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"fd_to_subdirp", metadata !"fd_to_subdirp", metadata !"", i32 1181, metadata !639, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.__dirstream* (i32, i8*, %struct.rm_o
!639 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !640, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!640 = metadata !{metadata !605, metadata !49, metadata !99, metadata !433, metadata !49, metadata !541, metadata !136}
!641 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"remove_entry", metadata !"remove_entry", metadata !"", i32 1018, metadata !642, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %struct.dirstack_state*, i8*, %struc
!642 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !643, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!643 = metadata !{metadata !37, metadata !49, metadata !535, metadata !99, metadata !541, metadata !433, metadata !590}
!644 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"is_dir_lstat", metadata !"is_dir_lstat", metadata !"", i32 927, metadata !645, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, %struct.stat*)* @is_dir_lstat, null, n
!645 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !646, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!646 = metadata !{metadata !59, metadata !99, metadata !541}
!647 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"cache_stat_ok", metadata !"cache_stat_ok", metadata !"", i32 199, metadata !648, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.stat*)* @cache_stat_ok, null, nul
!648 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !649, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!649 = metadata !{metadata !59, metadata !541}
!650 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_stack_top", metadata !"AD_stack_top", metadata !"", i32 380, metadata !651, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.AD_ent* (%struct.dirstack_state*)* @AD_
!651 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !652, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!652 = metadata !{metadata !653, metadata !535}
!653 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !654} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from AD_ent]
!654 = metadata !{i32 786451, metadata !384, null, metadata !"AD_ent", i32 99, i64 256, i64 64, i32 0, i32 0, null, metadata !655, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [AD_ent] [line 99, size 256, align 64, offset 0] [def] [from ]
!655 = metadata !{metadata !656, metadata !657, metadata !658}
!656 = metadata !{i32 786445, metadata !384, metadata !654, metadata !"unremovable", i32 105, i64 64, i64 64, i64 0, i32 0, metadata !572} ; [ DW_TAG_member ] [unremovable] [line 105, size 64, align 64, offset 0] [from ]
!657 = metadata !{i32 786445, metadata !384, metadata !654, metadata !"status", i32 110, i64 32, i64 32, i64 64, i32 0, metadata !37} ; [ DW_TAG_member ] [status] [line 110, size 32, align 32, offset 64] [from RM_status]
!658 = metadata !{i32 786445, metadata !384, metadata !654, metadata !"dev_ino", i32 115, i64 128, i64 64, i64 128, i32 0, metadata !443} ; [ DW_TAG_member ] [dev_ino] [line 115, size 128, align 64, offset 128] [from dev_ino]
!659 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"AD_push_initial", metadata !"AD_push_initial", metadata !"", i32 622, metadata !455, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @AD_push_
!660 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"ignorable_missing", metadata !"ignorable_missing", metadata !"", i32 1008, metadata !661, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.rm_options*, i32)* @igno
!661 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !662, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!662 = metadata !{metadata !59, metadata !433, metadata !49}
!663 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"nonexistent_file_errno", metadata !"nonexistent_file_errno", metadata !"", i32 988, metadata !664, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i32)* @nonexistent_file
!664 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !665, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!665 = metadata !{metadata !59, metadata !49}
!666 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"cache_fstatat", metadata !"cache_fstatat", metadata !"", i32 172, metadata !667, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8*, %struct.stat*, i32)* @cache_fs
!667 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !668, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!668 = metadata !{metadata !49, metadata !49, metadata !99, metadata !541, metadata !49}
!669 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"cache_stat_init", metadata !"cache_stat_init", metadata !"", i32 184, metadata !670, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.stat* (%struct.stat*)* @cache_sta
!670 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !671, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!671 = metadata !{metadata !541, metadata !541}
!672 = metadata !{i32 786478, metadata !294, metadata !295, metadata !"dot_or_dotdot", metadata !"dot_or_dotdot", metadata !"", i32 369, metadata !128, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*)* @dot_or_dotdot172, null, null, meta
!673 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"klee_compatible_error", metadata !"klee_compatible_error", metadata !"", i32 155, metadata !131, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32* (...)*, i8*, 
!674 = metadata !{i32 786478, metadata !384, metadata !427, metadata !"ds_init", metadata !"ds_init", metadata !"", i32 408, metadata !675, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.dirstack_state* ()* @ds_init, null, null, metadat
!675 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !676, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!676 = metadata !{metadata !457}
!677 = metadata !{metadata !678, metadata !679, metadata !680, metadata !681, metadata !682, metadata !683}
!678 = metadata !{i32 786484, i32 0, null, metadata !"after_divergence", metadata !"after_divergence", metadata !"", metadata !416, i32 14, metadata !49, i32 0, i32 1, i32* @after_divergence, null} ; [ DW_TAG_variable ] [after_divergence] [line 14] [def]
!679 = metadata !{i32 786484, i32 0, null, metadata !"klee_div_file_env", metadata !"klee_div_file_env", metadata !"", metadata !416, i32 15, metadata !99, i32 0, i32 1, i8** @klee_div_file_env, null} ; [ DW_TAG_variable ] [klee_div_file_env] [line 15] [
!680 = metadata !{i32 786484, i32 0, null, metadata !"klee_div_marker_file_env", metadata !"klee_div_marker_file_env", metadata !"", metadata !416, i32 16, metadata !99, i32 0, i32 1, i8** @klee_div_marker_file_env, null} ; [ DW_TAG_variable ] [klee_div_
!681 = metadata !{i32 786484, i32 0, metadata !632, metadata !"buf", metadata !"buf", metadata !"", metadata !427, i32 309, metadata !54, i32 1, i32 1, i8** @full_filename_.buf, null} ; [ DW_TAG_variable ] [buf] [line 309] [local] [def]
!682 = metadata !{i32 786484, i32 0, metadata !632, metadata !"n_allocated", metadata !"n_allocated", metadata !"", metadata !427, i32 310, metadata !430, i32 1, i32 1, i64* @full_filename_.n_allocated, null} ; [ DW_TAG_variable ] [n_allocated] [line 310
!683 = metadata !{i32 786484, i32 0, metadata !632, metadata !"static_buf", metadata !"static_buf", metadata !"", metadata !427, i32 334, metadata !684, i32 1, i32 1, [512 x i8]* @full_filename_.static_buf, null} ; [ DW_TAG_variable ] [static_buf] [line 
!684 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 4096, i64 8, i32 0, i32 0, metadata !55, metadata !685, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 4096, align 8, offset 0] [from char]
!685 = metadata !{metadata !686}
!686 = metadata !{i32 786465, i64 0, i64 512}     ; [ DW_TAG_subrange_type ] [0, 511]
!687 = metadata !{i32 786449, metadata !688, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !689, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit
!688 = metadata !{metadata !"full-write.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!689 = metadata !{metadata !690}
!690 = metadata !{i32 786478, metadata !688, metadata !691, metadata !"full_write", metadata !"full_write", metadata !"", i32 60, metadata !692, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32, i8*, i64)* @full_write, null, null, metad
!691 = metadata !{i32 786473, metadata !688}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/full-write.c]
!692 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !693, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!693 = metadata !{metadata !694, metadata !49, metadata !299, metadata !694}
!694 = metadata !{i32 786454, metadata !688, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!695 = metadata !{i32 786449, metadata !696, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !697, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit
!696 = metadata !{metadata !"hash-pjw.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!697 = metadata !{metadata !698}
!698 = metadata !{i32 786478, metadata !696, metadata !699, metadata !"hash_pjw", metadata !"hash_pjw", metadata !"", i32 32, metadata !700, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64)* @hash_pjw, null, null, metadata !43, i3
!699 = metadata !{i32 786473, metadata !696}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash-pjw.c]
!700 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !701, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!701 = metadata !{metadata !702, metadata !299, metadata !702}
!702 = metadata !{i32 786454, metadata !696, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!703 = metadata !{i32 786449, metadata !704, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !705, metadata !43, metadata !709, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_uni
!704 = metadata !{metadata !"version-etc.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!705 = metadata !{metadata !706}
!706 = metadata !{i32 786436, metadata !704, null, metadata !"", i32 36, i64 32, i64 32, i32 0, i32 0, null, metadata !707, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 36, size 32, align 32, offset 0] [def] [from ]
!707 = metadata !{metadata !708}
!708 = metadata !{i32 786472, metadata !"COPYRIGHT_YEAR", i64 2006} ; [ DW_TAG_enumerator ] [COPYRIGHT_YEAR :: 2006]
!709 = metadata !{metadata !710, metadata !771}
!710 = metadata !{i32 786478, metadata !704, metadata !711, metadata !"version_etc_va", metadata !"version_etc_va", metadata !"", i32 41, metadata !712, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct._IO_FILE*, i8*, i8*, i8*, %st
!711 = metadata !{i32 786473, metadata !704}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/version-etc.c]
!712 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !713, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!713 = metadata !{null, metadata !714, metadata !99, metadata !99, metadata !99, metadata !763}
!714 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !715} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from FILE]
!715 = metadata !{i32 786454, metadata !704, null, metadata !"FILE", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !716} ; [ DW_TAG_typedef ] [FILE] [line 48, size 0, align 0, offset 0] [from _IO_FILE]
!716 = metadata !{i32 786451, metadata !717, null, metadata !"_IO_FILE", i32 245, i64 1728, i64 64, i32 0, i32 0, null, metadata !718, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_FILE] [line 245, size 1728, align 64, offset 0] [def] [from ]
!717 = metadata !{metadata !"/usr/include/libio.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!718 = metadata !{metadata !719, metadata !720, metadata !721, metadata !722, metadata !723, metadata !724, metadata !725, metadata !726, metadata !727, metadata !728, metadata !729, metadata !730, metadata !731, metadata !739, metadata !740, metadata !7
!719 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_flags", i32 246, i64 32, i64 32, i64 0, i32 0, metadata !49} ; [ DW_TAG_member ] [_flags] [line 246, size 32, align 32, offset 0] [from int]
!720 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_IO_read_ptr", i32 251, i64 64, i64 64, i64 64, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_read_ptr] [line 251, size 64, align 64, offset 64] [from ]
!721 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_IO_read_end", i32 252, i64 64, i64 64, i64 128, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_read_end] [line 252, size 64, align 64, offset 128] [from ]
!722 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_IO_read_base", i32 253, i64 64, i64 64, i64 192, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_read_base] [line 253, size 64, align 64, offset 192] [from ]
!723 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_IO_write_base", i32 254, i64 64, i64 64, i64 256, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_write_base] [line 254, size 64, align 64, offset 256] [from ]
!724 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_IO_write_ptr", i32 255, i64 64, i64 64, i64 320, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_write_ptr] [line 255, size 64, align 64, offset 320] [from ]
!725 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_IO_write_end", i32 256, i64 64, i64 64, i64 384, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_write_end] [line 256, size 64, align 64, offset 384] [from ]
!726 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_IO_buf_base", i32 257, i64 64, i64 64, i64 448, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_buf_base] [line 257, size 64, align 64, offset 448] [from ]
!727 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_IO_buf_end", i32 258, i64 64, i64 64, i64 512, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_buf_end] [line 258, size 64, align 64, offset 512] [from ]
!728 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_IO_save_base", i32 260, i64 64, i64 64, i64 576, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_save_base] [line 260, size 64, align 64, offset 576] [from ]
!729 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_IO_backup_base", i32 261, i64 64, i64 64, i64 640, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_backup_base] [line 261, size 64, align 64, offset 640] [from ]
!730 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_IO_save_end", i32 262, i64 64, i64 64, i64 704, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_save_end] [line 262, size 64, align 64, offset 704] [from ]
!731 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_markers", i32 264, i64 64, i64 64, i64 768, i32 0, metadata !732} ; [ DW_TAG_member ] [_markers] [line 264, size 64, align 64, offset 768] [from ]
!732 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !733} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_marker]
!733 = metadata !{i32 786451, metadata !717, null, metadata !"_IO_marker", i32 160, i64 192, i64 64, i32 0, i32 0, null, metadata !734, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_marker] [line 160, size 192, align 64, offset 0] [def] [from
!734 = metadata !{metadata !735, metadata !736, metadata !738}
!735 = metadata !{i32 786445, metadata !717, metadata !733, metadata !"_next", i32 161, i64 64, i64 64, i64 0, i32 0, metadata !732} ; [ DW_TAG_member ] [_next] [line 161, size 64, align 64, offset 0] [from ]
!736 = metadata !{i32 786445, metadata !717, metadata !733, metadata !"_sbuf", i32 162, i64 64, i64 64, i64 64, i32 0, metadata !737} ; [ DW_TAG_member ] [_sbuf] [line 162, size 64, align 64, offset 64] [from ]
!737 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !716} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_FILE]
!738 = metadata !{i32 786445, metadata !717, metadata !733, metadata !"_pos", i32 166, i64 32, i64 32, i64 128, i32 0, metadata !49} ; [ DW_TAG_member ] [_pos] [line 166, size 32, align 32, offset 128] [from int]
!739 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_chain", i32 266, i64 64, i64 64, i64 832, i32 0, metadata !737} ; [ DW_TAG_member ] [_chain] [line 266, size 64, align 64, offset 832] [from ]
!740 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_fileno", i32 268, i64 32, i64 32, i64 896, i32 0, metadata !49} ; [ DW_TAG_member ] [_fileno] [line 268, size 32, align 32, offset 896] [from int]
!741 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_flags2", i32 272, i64 32, i64 32, i64 928, i32 0, metadata !49} ; [ DW_TAG_member ] [_flags2] [line 272, size 32, align 32, offset 928] [from int]
!742 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_old_offset", i32 274, i64 64, i64 64, i64 960, i32 0, metadata !743} ; [ DW_TAG_member ] [_old_offset] [line 274, size 64, align 64, offset 960] [from __off_t]
!743 = metadata !{i32 786454, metadata !717, null, metadata !"__off_t", i32 131, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__off_t] [line 131, size 0, align 0, offset 0] [from long int]
!744 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_cur_column", i32 278, i64 16, i64 16, i64 1024, i32 0, metadata !598} ; [ DW_TAG_member ] [_cur_column] [line 278, size 16, align 16, offset 1024] [from unsigned short]
!745 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_vtable_offset", i32 279, i64 8, i64 8, i64 1040, i32 0, metadata !746} ; [ DW_TAG_member ] [_vtable_offset] [line 279, size 8, align 8, offset 1040] [from signed char]
!746 = metadata !{i32 786468, null, null, metadata !"signed char", i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ] [signed char] [line 0, size 8, align 8, offset 0, enc DW_ATE_signed_char]
!747 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_shortbuf", i32 280, i64 8, i64 8, i64 1048, i32 0, metadata !748} ; [ DW_TAG_member ] [_shortbuf] [line 280, size 8, align 8, offset 1048] [from ]
!748 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 8, i64 8, i32 0, i32 0, metadata !55, metadata !525, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 8, align 8, offset 0] [from char]
!749 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_lock", i32 284, i64 64, i64 64, i64 1088, i32 0, metadata !298} ; [ DW_TAG_member ] [_lock] [line 284, size 64, align 64, offset 1088] [from ]
!750 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_offset", i32 293, i64 64, i64 64, i64 1152, i32 0, metadata !751} ; [ DW_TAG_member ] [_offset] [line 293, size 64, align 64, offset 1152] [from __off64_t]
!751 = metadata !{i32 786454, metadata !717, null, metadata !"__off64_t", i32 132, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__off64_t] [line 132, size 0, align 0, offset 0] [from long int]
!752 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"__pad1", i32 302, i64 64, i64 64, i64 1216, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad1] [line 302, size 64, align 64, offset 1216] [from ]
!753 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"__pad2", i32 303, i64 64, i64 64, i64 1280, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad2] [line 303, size 64, align 64, offset 1280] [from ]
!754 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"__pad3", i32 304, i64 64, i64 64, i64 1344, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad3] [line 304, size 64, align 64, offset 1344] [from ]
!755 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"__pad4", i32 305, i64 64, i64 64, i64 1408, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad4] [line 305, size 64, align 64, offset 1408] [from ]
!756 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"__pad5", i32 306, i64 64, i64 64, i64 1472, i32 0, metadata !757} ; [ DW_TAG_member ] [__pad5] [line 306, size 64, align 64, offset 1472] [from size_t]
!757 = metadata !{i32 786454, metadata !717, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!758 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_mode", i32 308, i64 32, i64 32, i64 1536, i32 0, metadata !49} ; [ DW_TAG_member ] [_mode] [line 308, size 32, align 32, offset 1536] [from int]
!759 = metadata !{i32 786445, metadata !717, metadata !716, metadata !"_unused2", i32 310, i64 160, i64 8, i64 1568, i32 0, metadata !760} ; [ DW_TAG_member ] [_unused2] [line 310, size 160, align 8, offset 1568] [from ]
!760 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 160, i64 8, i32 0, i32 0, metadata !55, metadata !761, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 160, align 8, offset 0] [from char]
!761 = metadata !{metadata !762}
!762 = metadata !{i32 786465, i64 0, i64 20}      ; [ DW_TAG_subrange_type ] [0, 19]
!763 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !764} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from __va_list_tag]
!764 = metadata !{i32 786454, metadata !704, null, metadata !"__va_list_tag", i32 44, i64 0, i64 0, i64 0, i32 0, metadata !765} ; [ DW_TAG_typedef ] [__va_list_tag] [line 44, size 0, align 0, offset 0] [from __va_list_tag]
!765 = metadata !{i32 786451, metadata !704, null, metadata !"__va_list_tag", i32 44, i64 192, i64 64, i32 0, i32 0, null, metadata !766, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [__va_list_tag] [line 44, size 192, align 64, offset 0] [def] [
!766 = metadata !{metadata !767, metadata !768, metadata !769, metadata !770}
!767 = metadata !{i32 786445, metadata !704, metadata !765, metadata !"gp_offset", i32 44, i64 32, i64 32, i64 0, i32 0, metadata !84} ; [ DW_TAG_member ] [gp_offset] [line 44, size 32, align 32, offset 0] [from unsigned int]
!768 = metadata !{i32 786445, metadata !704, metadata !765, metadata !"fp_offset", i32 44, i64 32, i64 32, i64 32, i32 0, metadata !84} ; [ DW_TAG_member ] [fp_offset] [line 44, size 32, align 32, offset 32] [from unsigned int]
!769 = metadata !{i32 786445, metadata !704, metadata !765, metadata !"overflow_arg_area", i32 44, i64 64, i64 64, i64 64, i32 0, metadata !298} ; [ DW_TAG_member ] [overflow_arg_area] [line 44, size 64, align 64, offset 64] [from ]
!770 = metadata !{i32 786445, metadata !704, metadata !765, metadata !"reg_save_area", i32 44, i64 64, i64 64, i64 128, i32 0, metadata !298} ; [ DW_TAG_member ] [reg_save_area] [line 44, size 64, align 64, offset 128] [from ]
!771 = metadata !{i32 786478, metadata !704, metadata !711, metadata !"version_etc", metadata !"version_etc", metadata !"", i32 165, metadata !772, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct._IO_FILE*, i8*, i8*, i8*, ...)* @v
!772 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !773, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!773 = metadata !{null, metadata !714, metadata !99, metadata !99, metadata !99}
!774 = metadata !{i32 786449, metadata !775, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !43, metadata !776, metadata !43, metadata !""} ; [ DW_TAG_compile_unit
!775 = metadata !{metadata !"version-etc-fsf.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!776 = metadata !{metadata !777}
!777 = metadata !{i32 786484, i32 0, null, metadata !"version_etc_copyright", metadata !"version_etc_copyright", metadata !"", metadata !778, i32 27, metadata !779, i32 0, i32 1, [47 x i8]* @version_etc_copyright, null} ; [ DW_TAG_variable ] [version_etc
!778 = metadata !{i32 786473, metadata !775}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/version-etc-fsf.c]
!779 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 376, i64 8, i32 0, i32 0, metadata !100, metadata !780, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 376, align 8, offset 0] [from ]
!780 = metadata !{metadata !781}
!781 = metadata !{i32 786465, i64 0, i64 47}      ; [ DW_TAG_subrange_type ] [0, 46]
!782 = metadata !{i32 786449, metadata !783, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !784, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit
!783 = metadata !{metadata !"xalloc-die.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!784 = metadata !{metadata !785}
!785 = metadata !{i32 786478, metadata !783, metadata !786, metadata !"xalloc_die", metadata !"xalloc_die", metadata !"", i32 33, metadata !370, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @xalloc_die, null, null, metadata !43, i32
!786 = metadata !{i32 786473, metadata !783}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xalloc-die.c]
!787 = metadata !{i32 786449, metadata !788, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !789, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit
!788 = metadata !{metadata !"buffer-lcm.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!789 = metadata !{metadata !790}
!790 = metadata !{i32 786478, metadata !788, metadata !791, metadata !"buffer_lcm", metadata !"buffer_lcm", metadata !"", i32 28, metadata !792, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i64, i64, i64)* @buffer_lcm, null, null, metad
!791 = metadata !{i32 786473, metadata !788}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/buffer-lcm.c]
!792 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !793, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!793 = metadata !{metadata !794, metadata !794, metadata !794, metadata !794}
!794 = metadata !{i32 786454, metadata !788, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!795 = metadata !{i32 786449, metadata !796, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !797, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit
!796 = metadata !{metadata !"acl.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!797 = metadata !{metadata !798, metadata !804, metadata !843, metadata !846}
!798 = metadata !{i32 786478, metadata !796, metadata !799, metadata !"chmod_or_fchmod", metadata !"chmod_or_fchmod", metadata !"", i32 120, metadata !800, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i32, i32)* @chmod_or_fchmod, n
!799 = metadata !{i32 786473, metadata !796}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/acl.c]
!800 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !801, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!801 = metadata !{metadata !49, metadata !99, metadata !49, metadata !802}
!802 = metadata !{i32 786454, metadata !796, null, metadata !"mode_t", i32 70, i64 0, i64 0, i64 0, i32 0, metadata !803} ; [ DW_TAG_typedef ] [mode_t] [line 70, size 0, align 0, offset 0] [from __mode_t]
!803 = metadata !{i32 786454, metadata !796, null, metadata !"__mode_t", i32 129, i64 0, i64 0, i64 0, i32 0, metadata !84} ; [ DW_TAG_typedef ] [__mode_t] [line 129, size 0, align 0, offset 0] [from unsigned int]
!804 = metadata !{i32 786478, metadata !796, metadata !799, metadata !"file_has_acl", metadata !"file_has_acl", metadata !"", i32 133, metadata !805, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, %struct.stat*)* @file_has_acl, null,
!805 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !806, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!806 = metadata !{metadata !49, metadata !99, metadata !807}
!807 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !808} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!808 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !809} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from stat]
!809 = metadata !{i32 786451, metadata !810, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !811, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!810 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/stat.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!811 = metadata !{metadata !812, metadata !814, metadata !816, metadata !818, metadata !819, metadata !821, metadata !823, metadata !824, metadata !825, metadata !827, metadata !829, metadata !831, metadata !839, metadata !840, metadata !841}
!812 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !813} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!813 = metadata !{i32 786454, metadata !810, null, metadata !"__dev_t", i32 124, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__dev_t] [line 124, size 0, align 0, offset 0] [from long unsigned int]
!814 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !815} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!815 = metadata !{i32 786454, metadata !810, null, metadata !"__ino_t", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__ino_t] [line 127, size 0, align 0, offset 0] [from long unsigned int]
!816 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !817} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!817 = metadata !{i32 786454, metadata !810, null, metadata !"__nlink_t", i32 130, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__nlink_t] [line 130, size 0, align 0, offset 0] [from long unsigned int]
!818 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !803} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!819 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !820} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!820 = metadata !{i32 786454, metadata !810, null, metadata !"__uid_t", i32 125, i64 0, i64 0, i64 0, i32 0, metadata !84} ; [ DW_TAG_typedef ] [__uid_t] [line 125, size 0, align 0, offset 0] [from unsigned int]
!821 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !822} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!822 = metadata !{i32 786454, metadata !810, null, metadata !"__gid_t", i32 126, i64 0, i64 0, i64 0, i32 0, metadata !84} ; [ DW_TAG_typedef ] [__gid_t] [line 126, size 0, align 0, offset 0] [from unsigned int]
!823 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !49} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!824 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !813} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!825 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !826} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!826 = metadata !{i32 786454, metadata !810, null, metadata !"__off_t", i32 131, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__off_t] [line 131, size 0, align 0, offset 0] [from long int]
!827 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !828} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!828 = metadata !{i32 786454, metadata !810, null, metadata !"__blksize_t", i32 153, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__blksize_t] [line 153, size 0, align 0, offset 0] [from long int]
!829 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !830} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!830 = metadata !{i32 786454, metadata !810, null, metadata !"__blkcnt_t", i32 158, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__blkcnt_t] [line 158, size 0, align 0, offset 0] [from long int]
!831 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !832} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!832 = metadata !{i32 786451, metadata !833, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !834, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!833 = metadata !{metadata !"/usr/include/time.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!834 = metadata !{metadata !835, metadata !837}
!835 = metadata !{i32 786445, metadata !833, metadata !832, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !836} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!836 = metadata !{i32 786454, metadata !833, null, metadata !"__time_t", i32 139, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__time_t] [line 139, size 0, align 0, offset 0] [from long int]
!837 = metadata !{i32 786445, metadata !833, metadata !832, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !838} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!838 = metadata !{i32 786454, metadata !833, null, metadata !"__syscall_slong_t", i32 175, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [__syscall_slong_t] [line 175, size 0, align 0, offset 0] [from long int]
!839 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !832} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!840 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !832} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!841 = metadata !{i32 786445, metadata !810, metadata !809, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !842} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!842 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 192, i64 64, i32 0, i32 0, metadata !838, metadata !148, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 192, align 64, offset 0] [from __syscall_slong_t]
!843 = metadata !{i32 786478, metadata !796, metadata !799, metadata !"copy_acl", metadata !"copy_acl", metadata !"", i32 201, metadata !844, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i32, i8*, i32, i32)* @copy_acl, null, null, 
!844 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !845, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!845 = metadata !{metadata !49, metadata !99, metadata !49, metadata !99, metadata !49, metadata !802}
!846 = metadata !{i32 786478, metadata !796, metadata !799, metadata !"set_acl", metadata !"set_acl", metadata !"", i32 310, metadata !800, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i32, i32)* @set_acl, null, null, metadata !43,
!847 = metadata !{i32 786449, metadata !848, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !849, metadata !43, metadata !860, metadata !882, metadata !43, metadata !""} ; [ DW_TAG_compile_un
!848 = metadata !{metadata !"argmatch.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!849 = metadata !{metadata !850}
!850 = metadata !{i32 786436, metadata !851, null, metadata !"quoting_style", i32 28, i64 32, i64 32, i32 0, i32 0, null, metadata !852, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [quoting_style] [line 28, size 32, align 32, offset 0] [def] [
!851 = metadata !{metadata !"./quotearg.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!852 = metadata !{metadata !853, metadata !854, metadata !855, metadata !856, metadata !857, metadata !858, metadata !859}
!853 = metadata !{i32 786472, metadata !"literal_quoting_style", i64 0} ; [ DW_TAG_enumerator ] [literal_quoting_style :: 0]
!854 = metadata !{i32 786472, metadata !"shell_quoting_style", i64 1} ; [ DW_TAG_enumerator ] [shell_quoting_style :: 1]
!855 = metadata !{i32 786472, metadata !"shell_always_quoting_style", i64 2} ; [ DW_TAG_enumerator ] [shell_always_quoting_style :: 2]
!856 = metadata !{i32 786472, metadata !"c_quoting_style", i64 3} ; [ DW_TAG_enumerator ] [c_quoting_style :: 3]
!857 = metadata !{i32 786472, metadata !"escape_quoting_style", i64 4} ; [ DW_TAG_enumerator ] [escape_quoting_style :: 4]
!858 = metadata !{i32 786472, metadata !"locale_quoting_style", i64 5} ; [ DW_TAG_enumerator ] [locale_quoting_style :: 5]
!859 = metadata !{i32 786472, metadata !"clocale_quoting_style", i64 6} ; [ DW_TAG_enumerator ] [clocale_quoting_style :: 6]
!860 = metadata !{metadata !861, metadata !867, metadata !870, metadata !873, metadata !878, metadata !881}
!861 = metadata !{i32 786478, metadata !848, metadata !862, metadata !"argmatch", metadata !"argmatch", metadata !"", i32 85, metadata !863, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8**, i8*, i64)* @argmatch, null, null, metad
!862 = metadata !{i32 786473, metadata !848}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!863 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !864, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!864 = metadata !{metadata !865, metadata !99, metadata !432, metadata !99, metadata !866}
!865 = metadata !{i32 786454, metadata !848, null, metadata !"ptrdiff_t", i32 34, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ] [ptrdiff_t] [line 34, size 0, align 0, offset 0] [from long int]
!866 = metadata !{i32 786454, metadata !848, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!867 = metadata !{i32 786478, metadata !848, metadata !862, metadata !"argmatch_invalid", metadata !"argmatch_invalid", metadata !"", i32 132, metadata !868, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i8*, i64)* @argmatch_invali
!868 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !869, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!869 = metadata !{null, metadata !99, metadata !99, metadata !865}
!870 = metadata !{i32 786478, metadata !848, metadata !862, metadata !"argmatch_valid", metadata !"argmatch_valid", metadata !"", i32 147, metadata !871, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8**, i8*, i64)* @argmatch_valid, nu
!871 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !872, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!872 = metadata !{null, metadata !432, metadata !99, metadata !866}
!873 = metadata !{i32 786478, metadata !848, metadata !862, metadata !"__xargmatch_internal", metadata !"__xargmatch_internal", metadata !"", i32 177, metadata !874, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8*, i8**, i8*, i64,
!874 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !875, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!875 = metadata !{metadata !865, metadata !99, metadata !99, metadata !432, metadata !99, metadata !866, metadata !876}
!876 = metadata !{i32 786454, metadata !848, null, metadata !"argmatch_exit_fn", i32 52, i64 0, i64 0, i64 0, i32 0, metadata !877} ; [ DW_TAG_typedef ] [argmatch_exit_fn] [line 52, size 0, align 0, offset 0] [from ]
!877 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !370} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!878 = metadata !{i32 786478, metadata !848, metadata !862, metadata !"argmatch_to_argument", metadata !"argmatch_to_argument", metadata !"", i32 198, metadata !879, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8**, i8*, i64)* @ar
!879 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !880, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!880 = metadata !{metadata !99, metadata !99, metadata !432, metadata !99, metadata !866}
!881 = metadata !{i32 786478, metadata !848, metadata !862, metadata !"__argmatch_die", metadata !"__argmatch_die", metadata !"", i32 63, metadata !370, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @__argmatch_die, null, null, metada
!882 = metadata !{metadata !883}
!883 = metadata !{i32 786484, i32 0, null, metadata !"argmatch_die", metadata !"argmatch_die", metadata !"", metadata !862, i32 70, metadata !876, i32 0, i32 1, void ()** @argmatch_die, null} ; [ DW_TAG_variable ] [argmatch_die] [line 70] [def]
!884 = metadata !{i32 786449, metadata !885, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !886, metadata !43, metadata !925, metadata !937, metadata !43, metadata !""} ; [ DW_TAG_compile_un
!885 = metadata !{metadata !"backupfile.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!886 = metadata !{metadata !887, metadata !889, metadata !896, metadata !920}
!887 = metadata !{i32 786436, metadata !888, null, metadata !"backup_type", i32 30, i64 32, i64 32, i32 0, i32 0, null, metadata !5, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [backup_type] [line 30, size 32, align 32, offset 0] [def] [from ]
!888 = metadata !{metadata !"./backupfile.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!889 = metadata !{i32 786436, metadata !885, metadata !890, metadata !"", i32 279, i64 32, i64 32, i32 0, i32 0, null, metadata !894, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 279, size 32, align 32, offset 0] [def] [from ]
!890 = metadata !{i32 786478, metadata !885, metadata !891, metadata !"find_backup_file_name", metadata !"find_backup_file_name", metadata !"", i32 268, metadata !892, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32)* @find_backup
!891 = metadata !{i32 786473, metadata !885}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!892 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !893, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!893 = metadata !{metadata !54, metadata !99, metadata !887}
!894 = metadata !{metadata !895}
!895 = metadata !{i32 786472, metadata !"GUESS", i64 9} ; [ DW_TAG_enumerator ] [GUESS :: 9]
!896 = metadata !{i32 786436, metadata !897, null, metadata !"", i32 24, i64 32, i64 32, i32 0, i32 0, null, metadata !898, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 24, size 32, align 32, offset 0] [def] [from ]
!897 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/confname.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!898 = metadata !{metadata !899, metadata !900, metadata !901, metadata !902, metadata !903, metadata !904, metadata !905, metadata !906, metadata !907, metadata !908, metadata !909, metadata !910, metadata !911, metadata !912, metadata !913, metadata !9
!899 = metadata !{i32 786472, metadata !"_PC_LINK_MAX", i64 0} ; [ DW_TAG_enumerator ] [_PC_LINK_MAX :: 0]
!900 = metadata !{i32 786472, metadata !"_PC_MAX_CANON", i64 1} ; [ DW_TAG_enumerator ] [_PC_MAX_CANON :: 1]
!901 = metadata !{i32 786472, metadata !"_PC_MAX_INPUT", i64 2} ; [ DW_TAG_enumerator ] [_PC_MAX_INPUT :: 2]
!902 = metadata !{i32 786472, metadata !"_PC_NAME_MAX", i64 3} ; [ DW_TAG_enumerator ] [_PC_NAME_MAX :: 3]
!903 = metadata !{i32 786472, metadata !"_PC_PATH_MAX", i64 4} ; [ DW_TAG_enumerator ] [_PC_PATH_MAX :: 4]
!904 = metadata !{i32 786472, metadata !"_PC_PIPE_BUF", i64 5} ; [ DW_TAG_enumerator ] [_PC_PIPE_BUF :: 5]
!905 = metadata !{i32 786472, metadata !"_PC_CHOWN_RESTRICTED", i64 6} ; [ DW_TAG_enumerator ] [_PC_CHOWN_RESTRICTED :: 6]
!906 = metadata !{i32 786472, metadata !"_PC_NO_TRUNC", i64 7} ; [ DW_TAG_enumerator ] [_PC_NO_TRUNC :: 7]
!907 = metadata !{i32 786472, metadata !"_PC_VDISABLE", i64 8} ; [ DW_TAG_enumerator ] [_PC_VDISABLE :: 8]
!908 = metadata !{i32 786472, metadata !"_PC_SYNC_IO", i64 9} ; [ DW_TAG_enumerator ] [_PC_SYNC_IO :: 9]
!909 = metadata !{i32 786472, metadata !"_PC_ASYNC_IO", i64 10} ; [ DW_TAG_enumerator ] [_PC_ASYNC_IO :: 10]
!910 = metadata !{i32 786472, metadata !"_PC_PRIO_IO", i64 11} ; [ DW_TAG_enumerator ] [_PC_PRIO_IO :: 11]
!911 = metadata !{i32 786472, metadata !"_PC_SOCK_MAXBUF", i64 12} ; [ DW_TAG_enumerator ] [_PC_SOCK_MAXBUF :: 12]
!912 = metadata !{i32 786472, metadata !"_PC_FILESIZEBITS", i64 13} ; [ DW_TAG_enumerator ] [_PC_FILESIZEBITS :: 13]
!913 = metadata !{i32 786472, metadata !"_PC_REC_INCR_XFER_SIZE", i64 14} ; [ DW_TAG_enumerator ] [_PC_REC_INCR_XFER_SIZE :: 14]
!914 = metadata !{i32 786472, metadata !"_PC_REC_MAX_XFER_SIZE", i64 15} ; [ DW_TAG_enumerator ] [_PC_REC_MAX_XFER_SIZE :: 15]
!915 = metadata !{i32 786472, metadata !"_PC_REC_MIN_XFER_SIZE", i64 16} ; [ DW_TAG_enumerator ] [_PC_REC_MIN_XFER_SIZE :: 16]
!916 = metadata !{i32 786472, metadata !"_PC_REC_XFER_ALIGN", i64 17} ; [ DW_TAG_enumerator ] [_PC_REC_XFER_ALIGN :: 17]
!917 = metadata !{i32 786472, metadata !"_PC_ALLOC_SIZE_MIN", i64 18} ; [ DW_TAG_enumerator ] [_PC_ALLOC_SIZE_MIN :: 18]
!918 = metadata !{i32 786472, metadata !"_PC_SYMLINK_MAX", i64 19} ; [ DW_TAG_enumerator ] [_PC_SYMLINK_MAX :: 19]
!919 = metadata !{i32 786472, metadata !"_PC_2_SYMLINKS", i64 20} ; [ DW_TAG_enumerator ] [_PC_2_SYMLINKS :: 20]
!920 = metadata !{i32 786436, metadata !885, null, metadata !"numbered_backup_result", i32 150, i64 32, i64 32, i32 0, i32 0, null, metadata !921, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [numbered_backup_result] [line 150, size 32, align 3
!921 = metadata !{metadata !922, metadata !923, metadata !924}
!922 = metadata !{i32 786472, metadata !"BACKUP_IS_SAME_LENGTH", i64 0} ; [ DW_TAG_enumerator ] [BACKUP_IS_SAME_LENGTH :: 0]
!923 = metadata !{i32 786472, metadata !"BACKUP_IS_LONGER", i64 1} ; [ DW_TAG_enumerator ] [BACKUP_IS_LONGER :: 1]
!924 = metadata !{i32 786472, metadata !"BACKUP_IS_NEW", i64 2} ; [ DW_TAG_enumerator ] [BACKUP_IS_NEW :: 2]
!925 = metadata !{metadata !890, metadata !926, metadata !929, metadata !930, metadata !934}
!926 = metadata !{i32 786478, metadata !885, metadata !891, metadata !"get_version", metadata !"get_version", metadata !"", i32 337, metadata !927, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*)* @get_version, null, null, metada
!927 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !928, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!928 = metadata !{metadata !887, metadata !99, metadata !99}
!929 = metadata !{i32 786478, metadata !885, metadata !891, metadata !"xget_version", metadata !"xget_version", metadata !"", i32 353, metadata !927, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*)* @xget_version, null, null, met
!930 = metadata !{i32 786478, metadata !885, metadata !891, metadata !"check_extension", metadata !"check_extension", metadata !"", i32 96, metadata !931, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i64, i8)* @check_extension, nul
!931 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !932, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!932 = metadata !{null, metadata !54, metadata !933, metadata !55}
!933 = metadata !{i32 786454, metadata !885, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!934 = metadata !{i32 786478, metadata !885, metadata !891, metadata !"numbered_backup", metadata !"numbered_backup", metadata !"", i32 176, metadata !935, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8**, i64, i64)* @numbered_backup, n
!935 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !936, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!936 = metadata !{metadata !920, metadata !53, metadata !933, metadata !933}
!937 = metadata !{metadata !938, metadata !939, metadata !942}
!938 = metadata !{i32 786484, i32 0, null, metadata !"simple_backup_suffix", metadata !"simple_backup_suffix", metadata !"", metadata !891, i32 87, metadata !99, i32 0, i32 1, i8** @simple_backup_suffix, null} ; [ DW_TAG_variable ] [simple_backup_suffix]
!939 = metadata !{i32 786484, i32 0, null, metadata !"backup_types", metadata !"backup_types", metadata !"", metadata !891, i32 319, metadata !940, i32 1, i32 1, [8 x i32]* @backup_types, null} ; [ DW_TAG_variable ] [backup_types] [line 319] [local] [def
!940 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 256, i64 32, i32 0, i32 0, metadata !941, metadata !513, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 256, align 32, offset 0] [from ]
!941 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !887} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from backup_type]
!942 = metadata !{i32 786484, i32 0, null, metadata !"backup_args", metadata !"backup_args", metadata !"", metadata !891, i32 308, metadata !943, i32 1, i32 1, [9 x i8*]* @backup_args, null} ; [ DW_TAG_variable ] [backup_args] [line 308] [local] [def]
!943 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 576, i64 64, i32 0, i32 0, metadata !152, metadata !944, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 576, align 64, offset 0] [from ]
!944 = metadata !{metadata !945}
!945 = metadata !{i32 786465, i64 0, i64 9}       ; [ DW_TAG_subrange_type ] [0, 8]
!946 = metadata !{i32 786449, metadata !947, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !948, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit
!947 = metadata !{metadata !"basename.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!948 = metadata !{metadata !949, metadata !953, metadata !954}
!949 = metadata !{i32 786478, metadata !947, metadata !950, metadata !"last_component", metadata !"last_component", metadata !"", i32 33, metadata !951, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @last_component, null, null, met
!950 = metadata !{i32 786473, metadata !947}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!951 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !952, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!952 = metadata !{metadata !54, metadata !99}
!953 = metadata !{i32 786478, metadata !947, metadata !950, metadata !"base_name", metadata !"base_name", metadata !"", i32 75, metadata !951, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @base_name, null, null, metadata !43, i32 
!954 = metadata !{i32 786478, metadata !947, metadata !950, metadata !"base_len", metadata !"base_len", metadata !"", i32 112, metadata !955, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*)* @base_len, null, null, metadata !43, i32 11
!955 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !956, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!956 = metadata !{metadata !957, metadata !99}
!957 = metadata !{i32 786454, metadata !947, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!958 = metadata !{i32 786449, metadata !959, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !960, metadata !966, metadata !43, metadata !""} ; [ DW_TAG_compile_uni
!959 = metadata !{metadata !"closeout.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!960 = metadata !{metadata !961, metadata !965}
!961 = metadata !{i32 786478, metadata !959, metadata !962, metadata !"close_stdout_set_file_name", metadata !"close_stdout_set_file_name", metadata !"", i32 41, metadata !963, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*)* @close_
!962 = metadata !{i32 786473, metadata !959}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/closeout.c]
!963 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !964, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!964 = metadata !{null, metadata !99}
!965 = metadata !{i32 786478, metadata !959, metadata !962, metadata !"close_stdout", metadata !"close_stdout", metadata !"", i32 70, metadata !370, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @close_stdout, null, null, metadata !4
!966 = metadata !{metadata !967}
!967 = metadata !{i32 786484, i32 0, null, metadata !"file_name", metadata !"file_name", metadata !"", metadata !962, i32 36, metadata !99, i32 1, i32 1, i8** @file_name, null} ; [ DW_TAG_variable ] [file_name] [line 36] [local] [def]
!968 = metadata !{i32 786449, metadata !969, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !970, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit
!969 = metadata !{metadata !"cycle-check.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!970 = metadata !{metadata !971, metadata !991, metadata !1018}
!971 = metadata !{i32 786478, metadata !969, metadata !972, metadata !"cycle_check_init", metadata !"cycle_check_init", metadata !"", i32 45, metadata !973, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.cycle_check_state*)* @cyc
!972 = metadata !{i32 786473, metadata !969}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/cycle-check.c]
!973 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !974, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!974 = metadata !{null, metadata !975}
!975 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !976} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from cycle_check_state]
!976 = metadata !{i32 786451, metadata !977, null, metadata !"cycle_check_state", i32 30, i64 256, i64 64, i32 0, i32 0, null, metadata !978, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [cycle_check_state] [line 30, size 256, align 64, offset 0]
!977 = metadata !{metadata !"./cycle-check.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!978 = metadata !{metadata !979, metadata !989, metadata !990}
!979 = metadata !{i32 786445, metadata !977, metadata !976, metadata !"dev_ino", i32 32, i64 128, i64 64, i64 0, i32 0, metadata !980} ; [ DW_TAG_member ] [dev_ino] [line 32, size 128, align 64, offset 0] [from dev_ino]
!980 = metadata !{i32 786451, metadata !981, null, metadata !"dev_ino", i32 7, i64 128, i64 64, i32 0, i32 0, null, metadata !982, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dev_ino] [line 7, size 128, align 64, offset 0] [def] [from ]
!981 = metadata !{metadata !"./dev-ino.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!982 = metadata !{metadata !983, metadata !986}
!983 = metadata !{i32 786445, metadata !981, metadata !980, metadata !"st_ino", i32 9, i64 64, i64 64, i64 0, i32 0, metadata !984} ; [ DW_TAG_member ] [st_ino] [line 9, size 64, align 64, offset 0] [from ino_t]
!984 = metadata !{i32 786454, metadata !981, null, metadata !"ino_t", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !985} ; [ DW_TAG_typedef ] [ino_t] [line 48, size 0, align 0, offset 0] [from __ino_t]
!985 = metadata !{i32 786454, metadata !981, null, metadata !"__ino_t", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__ino_t] [line 127, size 0, align 0, offset 0] [from long unsigned int]
!986 = metadata !{i32 786445, metadata !981, metadata !980, metadata !"st_dev", i32 10, i64 64, i64 64, i64 64, i32 0, metadata !987} ; [ DW_TAG_member ] [st_dev] [line 10, size 64, align 64, offset 64] [from dev_t]
!987 = metadata !{i32 786454, metadata !981, null, metadata !"dev_t", i32 60, i64 0, i64 0, i64 0, i32 0, metadata !988} ; [ DW_TAG_typedef ] [dev_t] [line 60, size 0, align 0, offset 0] [from __dev_t]
!988 = metadata !{i32 786454, metadata !981, null, metadata !"__dev_t", i32 124, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__dev_t] [line 124, size 0, align 0, offset 0] [from long unsigned int]
!989 = metadata !{i32 786445, metadata !977, metadata !976, metadata !"chdir_counter", i32 33, i64 64, i64 64, i64 128, i32 0, metadata !120} ; [ DW_TAG_member ] [chdir_counter] [line 33, size 64, align 64, offset 128] [from long unsigned int]
!990 = metadata !{i32 786445, metadata !977, metadata !976, metadata !"magic", i32 34, i64 32, i64 32, i64 192, i32 0, metadata !49} ; [ DW_TAG_member ] [magic] [line 34, size 32, align 32, offset 192] [from int]
!991 = metadata !{i32 786478, metadata !969, metadata !972, metadata !"cycle_check", metadata !"cycle_check", metadata !"", i32 60, metadata !992, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.cycle_check_state*, %struct.stat*)* @
!992 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !993, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!993 = metadata !{metadata !59, metadata !975, metadata !994}
!994 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !995} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!995 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !996} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from stat]
!996 = metadata !{i32 786451, metadata !810, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !997, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!997 = metadata !{metadata !998, metadata !999, metadata !1000, metadata !1001, metadata !1003, metadata !1004, metadata !1005, metadata !1006, metadata !1007, metadata !1008, metadata !1009, metadata !1010, metadata !1015, metadata !1016, metadata !1017
!998 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !988} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!999 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !985} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!1000 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !817} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!1001 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !1002} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!1002 = metadata !{i32 786454, metadata !810, null, metadata !"__mode_t", i32 129, i64 0, i64 0, i64 0, i32 0, metadata !84} ; [ DW_TAG_typedef ] [__mode_t] [line 129, size 0, align 0, offset 0] [from unsigned int]
!1003 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !820} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!1004 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !822} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!1005 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !49} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!1006 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !988} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!1007 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !826} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!1008 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !828} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!1009 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !830} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!1010 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !1011} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!1011 = metadata !{i32 786451, metadata !833, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !1012, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!1012 = metadata !{metadata !1013, metadata !1014}
!1013 = metadata !{i32 786445, metadata !833, metadata !1011, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !836} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!1014 = metadata !{i32 786445, metadata !833, metadata !1011, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !838} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!1015 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !1011} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!1016 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !1011} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!1017 = metadata !{i32 786445, metadata !810, metadata !996, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !842} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!1018 = metadata !{i32 786478, metadata !969, metadata !972, metadata !"is_zero_or_power_of_two", metadata !"is_zero_or_power_of_two", metadata !"", i32 39, metadata !1019, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i64)* @is_zero_or_po
!1019 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1020, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1020 = metadata !{metadata !59, metadata !120}
!1021 = metadata !{i32 786449, metadata !1022, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1023, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1022 = metadata !{metadata !"dirname.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1023 = metadata !{metadata !1024, metadata !1029}
!1024 = metadata !{i32 786478, metadata !1022, metadata !1025, metadata !"dir_len", metadata !"dir_len", metadata !"", i32 33, metadata !1026, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*)* @dir_len, null, null, metadata !43, i32 34
!1025 = metadata !{i32 786473, metadata !1022}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/dirname.c]
!1026 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1027, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1027 = metadata !{metadata !1028, metadata !99}
!1028 = metadata !{i32 786454, metadata !1022, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1029 = metadata !{i32 786478, metadata !1022, metadata !1025, metadata !"dir_name", metadata !"dir_name", metadata !"", i32 72, metadata !951, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @dir_name, null, null, metadata !43, i32 
!1030 = metadata !{i32 786449, metadata !1031, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !43, metadata !1032, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1031 = metadata !{metadata !"exitfail.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1032 = metadata !{metadata !1033}
!1033 = metadata !{i32 786484, i32 0, null, metadata !"exit_failure", metadata !"exit_failure", metadata !"", metadata !1034, i32 25, metadata !1035, i32 0, i32 1, i32* @exit_failure, null} ; [ DW_TAG_variable ] [exit_failure] [line 25] [def]
!1034 = metadata !{i32 786473, metadata !1031}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/exitfail.c]
!1035 = metadata !{i32 786485, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !49} ; [ DW_TAG_volatile_type ] [line 0, size 0, align 0, offset 0] [from int]
!1036 = metadata !{i32 786449, metadata !1037, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1038, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1037 = metadata !{metadata !"file-type.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1038 = metadata !{metadata !1039}
!1039 = metadata !{i32 786478, metadata !1037, metadata !1040, metadata !"file_type", metadata !"file_type", metadata !"", i32 30, metadata !1041, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.stat*)* @file_type, null, null, meta
!1040 = metadata !{i32 786473, metadata !1037}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!1041 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1042, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1042 = metadata !{metadata !99, metadata !1043}
!1043 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1044} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1044 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1045} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from stat]
!1045 = metadata !{i32 786451, metadata !810, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !1046, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!1046 = metadata !{metadata !1047, metadata !1048, metadata !1049, metadata !1050, metadata !1051, metadata !1052, metadata !1053, metadata !1054, metadata !1055, metadata !1056, metadata !1057, metadata !1058, metadata !1063, metadata !1064, metadata !1
!1047 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !813} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!1048 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !815} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!1049 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !817} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!1050 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !1002} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!1051 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !820} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!1052 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !822} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!1053 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !49} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!1054 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !813} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!1055 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !826} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!1056 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !828} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!1057 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !830} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!1058 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !1059} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!1059 = metadata !{i32 786451, metadata !833, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !1060, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!1060 = metadata !{metadata !1061, metadata !1062}
!1061 = metadata !{i32 786445, metadata !833, metadata !1059, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !836} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!1062 = metadata !{i32 786445, metadata !833, metadata !1059, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !838} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!1063 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !1059} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!1064 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !1059} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!1065 = metadata !{i32 786445, metadata !810, metadata !1045, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !842} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!1066 = metadata !{i32 786449, metadata !1067, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1068, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1067 = metadata !{metadata !"filenamecat.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1068 = metadata !{metadata !1069, metadata !1073}
!1069 = metadata !{i32 786478, metadata !1067, metadata !1070, metadata !"file_name_concat", metadata !"file_name_concat", metadata !"", i32 63, metadata !1071, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i8**)* @file_name_co
!1070 = metadata !{i32 786473, metadata !1067}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/filenamecat.c]
!1071 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1072, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1072 = metadata !{metadata !54, metadata !99, metadata !99, metadata !53}
!1073 = metadata !{i32 786478, metadata !1067, metadata !1070, metadata !"longest_relative_suffix", metadata !"longest_relative_suffix", metadata !"", i32 40, metadata !1074, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @longest_re
!1074 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1075, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1075 = metadata !{metadata !99, metadata !99}
!1076 = metadata !{i32 786449, metadata !1077, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1078, metadata !1234, metadata !43, metadata !""} ; [ DW_TAG_compile
!1077 = metadata !{metadata !"hash.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1078 = metadata !{metadata !1079, metadata !1126, metadata !1127, metadata !1128, metadata !1129, metadata !1132, metadata !1175, metadata !1178, metadata !1181, metadata !1182, metadata !1186, metadata !1193, metadata !1196, metadata !1200, metadata !1
!1079 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_get_n_buckets", metadata !"hash_get_n_buckets", metadata !"", i32 148, metadata !1081, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.hash_table*)* @ha
!1080 = metadata !{i32 786473, metadata !1077}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!1081 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1082, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1082 = metadata !{metadata !1083, metadata !1084}
!1083 = metadata !{i32 786454, metadata !1077, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1084 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1085} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1085 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1086} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from Hash_table]
!1086 = metadata !{i32 786454, metadata !1077, null, metadata !"Hash_table", i32 57, i64 0, i64 0, i64 0, i32 0, metadata !1087} ; [ DW_TAG_typedef ] [Hash_table] [line 57, size 0, align 0, offset 0] [from hash_table]
!1087 = metadata !{i32 786451, metadata !1077, null, metadata !"hash_table", i32 50, i64 640, i64 64, i32 0, i32 0, null, metadata !1088, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [hash_table] [line 50, size 640, align 64, offset 0] [def] [fro
!1088 = metadata !{metadata !1089, metadata !1096, metadata !1099, metadata !1100, metadata !1101, metadata !1102, metadata !1114, metadata !1119, metadata !1122, metadata !1125}
!1089 = metadata !{i32 786445, metadata !1077, metadata !1087, metadata !"bucket", i32 55, i64 64, i64 64, i64 0, i32 0, metadata !1090} ; [ DW_TAG_member ] [bucket] [line 55, size 64, align 64, offset 0] [from ]
!1090 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1091} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from hash_entry]
!1091 = metadata !{i32 786451, metadata !1092, null, metadata !"hash_entry", i32 35, i64 128, i64 64, i32 0, i32 0, null, metadata !1093, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [hash_entry] [line 35, size 128, align 64, offset 0] [def] [fro
!1092 = metadata !{metadata !"./hash.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1093 = metadata !{metadata !1094, metadata !1095}
!1094 = metadata !{i32 786445, metadata !1092, metadata !1091, metadata !"data", i32 37, i64 64, i64 64, i64 0, i32 0, metadata !298} ; [ DW_TAG_member ] [data] [line 37, size 64, align 64, offset 0] [from ]
!1095 = metadata !{i32 786445, metadata !1092, metadata !1091, metadata !"next", i32 38, i64 64, i64 64, i64 64, i32 0, metadata !1090} ; [ DW_TAG_member ] [next] [line 38, size 64, align 64, offset 64] [from ]
!1096 = metadata !{i32 786445, metadata !1077, metadata !1087, metadata !"bucket_limit", i32 56, i64 64, i64 64, i64 64, i32 0, metadata !1097} ; [ DW_TAG_member ] [bucket_limit] [line 56, size 64, align 64, offset 64] [from ]
!1097 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1098} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1098 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1091} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from hash_entry]
!1099 = metadata !{i32 786445, metadata !1077, metadata !1087, metadata !"n_buckets", i32 57, i64 64, i64 64, i64 128, i32 0, metadata !1083} ; [ DW_TAG_member ] [n_buckets] [line 57, size 64, align 64, offset 128] [from size_t]
!1100 = metadata !{i32 786445, metadata !1077, metadata !1087, metadata !"n_buckets_used", i32 58, i64 64, i64 64, i64 192, i32 0, metadata !1083} ; [ DW_TAG_member ] [n_buckets_used] [line 58, size 64, align 64, offset 192] [from size_t]
!1101 = metadata !{i32 786445, metadata !1077, metadata !1087, metadata !"n_entries", i32 59, i64 64, i64 64, i64 256, i32 0, metadata !1083} ; [ DW_TAG_member ] [n_entries] [line 59, size 64, align 64, offset 256] [from size_t]
!1102 = metadata !{i32 786445, metadata !1077, metadata !1087, metadata !"tuning", i32 62, i64 64, i64 64, i64 320, i32 0, metadata !1103} ; [ DW_TAG_member ] [tuning] [line 62, size 64, align 64, offset 320] [from ]
!1103 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1104} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1104 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1105} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from Hash_tuning]
!1105 = metadata !{i32 786454, metadata !1077, null, metadata !"Hash_tuning", i32 53, i64 0, i64 0, i64 0, i32 0, metadata !1106} ; [ DW_TAG_typedef ] [Hash_tuning] [line 53, size 0, align 0, offset 0] [from hash_tuning]
!1106 = metadata !{i32 786451, metadata !1092, null, metadata !"hash_tuning", i32 41, i64 160, i64 32, i32 0, i32 0, null, metadata !1107, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [hash_tuning] [line 41, size 160, align 32, offset 0] [def] [f
!1107 = metadata !{metadata !1108, metadata !1110, metadata !1111, metadata !1112, metadata !1113}
!1108 = metadata !{i32 786445, metadata !1092, metadata !1106, metadata !"shrink_threshold", i32 46, i64 32, i64 32, i64 0, i32 0, metadata !1109} ; [ DW_TAG_member ] [shrink_threshold] [line 46, size 32, align 32, offset 0] [from float]
!1109 = metadata !{i32 786468, null, null, metadata !"float", i32 0, i64 32, i64 32, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ] [float] [line 0, size 32, align 32, offset 0, enc DW_ATE_float]
!1110 = metadata !{i32 786445, metadata !1092, metadata !1106, metadata !"shrink_factor", i32 47, i64 32, i64 32, i64 32, i32 0, metadata !1109} ; [ DW_TAG_member ] [shrink_factor] [line 47, size 32, align 32, offset 32] [from float]
!1111 = metadata !{i32 786445, metadata !1092, metadata !1106, metadata !"growth_threshold", i32 48, i64 32, i64 32, i64 64, i32 0, metadata !1109} ; [ DW_TAG_member ] [growth_threshold] [line 48, size 32, align 32, offset 64] [from float]
!1112 = metadata !{i32 786445, metadata !1092, metadata !1106, metadata !"growth_factor", i32 49, i64 32, i64 32, i64 96, i32 0, metadata !1109} ; [ DW_TAG_member ] [growth_factor] [line 49, size 32, align 32, offset 96] [from float]
!1113 = metadata !{i32 786445, metadata !1092, metadata !1106, metadata !"is_n_buckets", i32 50, i64 8, i64 8, i64 128, i32 0, metadata !59} ; [ DW_TAG_member ] [is_n_buckets] [line 50, size 8, align 8, offset 128] [from _Bool]
!1114 = metadata !{i32 786445, metadata !1077, metadata !1087, metadata !"hasher", i32 69, i64 64, i64 64, i64 384, i32 0, metadata !1115} ; [ DW_TAG_member ] [hasher] [line 69, size 64, align 64, offset 384] [from Hash_hasher]
!1115 = metadata !{i32 786454, metadata !1077, null, metadata !"Hash_hasher", i32 30, i64 0, i64 0, i64 0, i32 0, metadata !1116} ; [ DW_TAG_typedef ] [Hash_hasher] [line 30, size 0, align 0, offset 0] [from ]
!1116 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1117} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1117 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1118, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1118 = metadata !{metadata !1083, metadata !299, metadata !1083}
!1119 = metadata !{i32 786445, metadata !1077, metadata !1087, metadata !"comparator", i32 70, i64 64, i64 64, i64 448, i32 0, metadata !1120} ; [ DW_TAG_member ] [comparator] [line 70, size 64, align 64, offset 448] [from Hash_comparator]
!1120 = metadata !{i32 786454, metadata !1077, null, metadata !"Hash_comparator", i32 31, i64 0, i64 0, i64 0, i32 0, metadata !1121} ; [ DW_TAG_typedef ] [Hash_comparator] [line 31, size 0, align 0, offset 0] [from ]
!1121 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !344} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1122 = metadata !{i32 786445, metadata !1077, metadata !1087, metadata !"data_freer", i32 71, i64 64, i64 64, i64 512, i32 0, metadata !1123} ; [ DW_TAG_member ] [data_freer] [line 71, size 64, align 64, offset 512] [from Hash_data_freer]
!1123 = metadata !{i32 786454, metadata !1077, null, metadata !"Hash_data_freer", i32 32, i64 0, i64 0, i64 0, i32 0, metadata !1124} ; [ DW_TAG_typedef ] [Hash_data_freer] [line 32, size 0, align 0, offset 0] [from ]
!1124 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !341} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1125 = metadata !{i32 786445, metadata !1077, metadata !1087, metadata !"free_entry_list", i32 74, i64 64, i64 64, i64 576, i32 0, metadata !1090} ; [ DW_TAG_member ] [free_entry_list] [line 74, size 64, align 64, offset 576] [from ]
!1126 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_get_n_buckets_used", metadata !"hash_get_n_buckets_used", metadata !"", i32 156, metadata !1081, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.hash_ta
!1127 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_get_n_entries", metadata !"hash_get_n_entries", metadata !"", i32 164, metadata !1081, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.hash_table*)* @ha
!1128 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_get_max_bucket_length", metadata !"hash_get_max_bucket_length", metadata !"", i32 172, metadata !1081, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.h
!1129 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_table_ok", metadata !"hash_table_ok", metadata !"", i32 199, metadata !1130, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.hash_table*)* @hash_table_ok
!1130 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1131, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1131 = metadata !{metadata !59, metadata !1084}
!1132 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_print_statistics", metadata !"hash_print_statistics", metadata !"", i32 228, metadata !1133, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_table
!1133 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1134, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1134 = metadata !{null, metadata !1084, metadata !1135}
!1135 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1136} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from FILE]
!1136 = metadata !{i32 786454, metadata !1077, null, metadata !"FILE", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !1137} ; [ DW_TAG_typedef ] [FILE] [line 48, size 0, align 0, offset 0] [from _IO_FILE]
!1137 = metadata !{i32 786451, metadata !717, null, metadata !"_IO_FILE", i32 245, i64 1728, i64 64, i32 0, i32 0, null, metadata !1138, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_FILE] [line 245, size 1728, align 64, offset 0] [def] [from
!1138 = metadata !{metadata !1139, metadata !1140, metadata !1141, metadata !1142, metadata !1143, metadata !1144, metadata !1145, metadata !1146, metadata !1147, metadata !1148, metadata !1149, metadata !1150, metadata !1151, metadata !1159, metadata !1
!1139 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_flags", i32 246, i64 32, i64 32, i64 0, i32 0, metadata !49} ; [ DW_TAG_member ] [_flags] [line 246, size 32, align 32, offset 0] [from int]
!1140 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_IO_read_ptr", i32 251, i64 64, i64 64, i64 64, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_read_ptr] [line 251, size 64, align 64, offset 64] [from ]
!1141 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_IO_read_end", i32 252, i64 64, i64 64, i64 128, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_read_end] [line 252, size 64, align 64, offset 128] [from ]
!1142 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_IO_read_base", i32 253, i64 64, i64 64, i64 192, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_read_base] [line 253, size 64, align 64, offset 192] [from ]
!1143 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_IO_write_base", i32 254, i64 64, i64 64, i64 256, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_write_base] [line 254, size 64, align 64, offset 256] [from ]
!1144 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_IO_write_ptr", i32 255, i64 64, i64 64, i64 320, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_write_ptr] [line 255, size 64, align 64, offset 320] [from ]
!1145 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_IO_write_end", i32 256, i64 64, i64 64, i64 384, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_write_end] [line 256, size 64, align 64, offset 384] [from ]
!1146 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_IO_buf_base", i32 257, i64 64, i64 64, i64 448, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_buf_base] [line 257, size 64, align 64, offset 448] [from ]
!1147 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_IO_buf_end", i32 258, i64 64, i64 64, i64 512, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_buf_end] [line 258, size 64, align 64, offset 512] [from ]
!1148 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_IO_save_base", i32 260, i64 64, i64 64, i64 576, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_save_base] [line 260, size 64, align 64, offset 576] [from ]
!1149 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_IO_backup_base", i32 261, i64 64, i64 64, i64 640, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_backup_base] [line 261, size 64, align 64, offset 640] [from ]
!1150 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_IO_save_end", i32 262, i64 64, i64 64, i64 704, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_save_end] [line 262, size 64, align 64, offset 704] [from ]
!1151 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_markers", i32 264, i64 64, i64 64, i64 768, i32 0, metadata !1152} ; [ DW_TAG_member ] [_markers] [line 264, size 64, align 64, offset 768] [from ]
!1152 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1153} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_marker]
!1153 = metadata !{i32 786451, metadata !717, null, metadata !"_IO_marker", i32 160, i64 192, i64 64, i32 0, i32 0, null, metadata !1154, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_marker] [line 160, size 192, align 64, offset 0] [def] [fr
!1154 = metadata !{metadata !1155, metadata !1156, metadata !1158}
!1155 = metadata !{i32 786445, metadata !717, metadata !1153, metadata !"_next", i32 161, i64 64, i64 64, i64 0, i32 0, metadata !1152} ; [ DW_TAG_member ] [_next] [line 161, size 64, align 64, offset 0] [from ]
!1156 = metadata !{i32 786445, metadata !717, metadata !1153, metadata !"_sbuf", i32 162, i64 64, i64 64, i64 64, i32 0, metadata !1157} ; [ DW_TAG_member ] [_sbuf] [line 162, size 64, align 64, offset 64] [from ]
!1157 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1137} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_FILE]
!1158 = metadata !{i32 786445, metadata !717, metadata !1153, metadata !"_pos", i32 166, i64 32, i64 32, i64 128, i32 0, metadata !49} ; [ DW_TAG_member ] [_pos] [line 166, size 32, align 32, offset 128] [from int]
!1159 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_chain", i32 266, i64 64, i64 64, i64 832, i32 0, metadata !1157} ; [ DW_TAG_member ] [_chain] [line 266, size 64, align 64, offset 832] [from ]
!1160 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_fileno", i32 268, i64 32, i64 32, i64 896, i32 0, metadata !49} ; [ DW_TAG_member ] [_fileno] [line 268, size 32, align 32, offset 896] [from int]
!1161 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_flags2", i32 272, i64 32, i64 32, i64 928, i32 0, metadata !49} ; [ DW_TAG_member ] [_flags2] [line 272, size 32, align 32, offset 928] [from int]
!1162 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_old_offset", i32 274, i64 64, i64 64, i64 960, i32 0, metadata !743} ; [ DW_TAG_member ] [_old_offset] [line 274, size 64, align 64, offset 960] [from __off_t]
!1163 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_cur_column", i32 278, i64 16, i64 16, i64 1024, i32 0, metadata !598} ; [ DW_TAG_member ] [_cur_column] [line 278, size 16, align 16, offset 1024] [from unsigned short]
!1164 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_vtable_offset", i32 279, i64 8, i64 8, i64 1040, i32 0, metadata !746} ; [ DW_TAG_member ] [_vtable_offset] [line 279, size 8, align 8, offset 1040] [from signed char]
!1165 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_shortbuf", i32 280, i64 8, i64 8, i64 1048, i32 0, metadata !748} ; [ DW_TAG_member ] [_shortbuf] [line 280, size 8, align 8, offset 1048] [from ]
!1166 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_lock", i32 284, i64 64, i64 64, i64 1088, i32 0, metadata !298} ; [ DW_TAG_member ] [_lock] [line 284, size 64, align 64, offset 1088] [from ]
!1167 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_offset", i32 293, i64 64, i64 64, i64 1152, i32 0, metadata !751} ; [ DW_TAG_member ] [_offset] [line 293, size 64, align 64, offset 1152] [from __off64_t]
!1168 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"__pad1", i32 302, i64 64, i64 64, i64 1216, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad1] [line 302, size 64, align 64, offset 1216] [from ]
!1169 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"__pad2", i32 303, i64 64, i64 64, i64 1280, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad2] [line 303, size 64, align 64, offset 1280] [from ]
!1170 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"__pad3", i32 304, i64 64, i64 64, i64 1344, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad3] [line 304, size 64, align 64, offset 1344] [from ]
!1171 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"__pad4", i32 305, i64 64, i64 64, i64 1408, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad4] [line 305, size 64, align 64, offset 1408] [from ]
!1172 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"__pad5", i32 306, i64 64, i64 64, i64 1472, i32 0, metadata !1083} ; [ DW_TAG_member ] [__pad5] [line 306, size 64, align 64, offset 1472] [from size_t]
!1173 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_mode", i32 308, i64 32, i64 32, i64 1536, i32 0, metadata !49} ; [ DW_TAG_member ] [_mode] [line 308, size 32, align 32, offset 1536] [from int]
!1174 = metadata !{i32 786445, metadata !717, metadata !1137, metadata !"_unused2", i32 310, i64 160, i64 8, i64 1568, i32 0, metadata !760} ; [ DW_TAG_member ] [_unused2] [line 310, size 160, align 8, offset 1568] [from ]
!1175 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_lookup", metadata !"hash_lookup", metadata !"", i32 248, metadata !1176, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*, i8*)* @hash_lookup
!1176 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1177, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1177 = metadata !{metadata !298, metadata !1084, metadata !299}
!1178 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_get_first", metadata !"hash_get_first", metadata !"", i32 277, metadata !1179, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*)* @hash_get_f
!1179 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1180, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1180 = metadata !{metadata !298, metadata !1084}
!1181 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_get_next", metadata !"hash_get_next", metadata !"", i32 296, metadata !1176, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*, i8*)* @hash_ge
!1182 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_get_entries", metadata !"hash_get_entries", metadata !"", i32 324, metadata !1183, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.hash_table*, i8**, i6
!1183 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1184, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1184 = metadata !{metadata !1083, metadata !1084, metadata !1185, metadata !1083}
!1185 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !298} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1186 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_do_for_each", metadata !"hash_do_for_each", metadata !"", i32 356, metadata !1187, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.hash_table*, i1 (i8*,
!1187 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1188, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1188 = metadata !{metadata !1083, metadata !1084, metadata !1189, metadata !298}
!1189 = metadata !{i32 786454, metadata !1077, null, metadata !"Hash_processor", i32 33, i64 0, i64 0, i64 0, i32 0, metadata !1190} ; [ DW_TAG_typedef ] [Hash_processor] [line 33, size 0, align 0, offset 0] [from ]
!1190 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1191} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1191 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1192, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1192 = metadata !{metadata !59, metadata !298, metadata !298}
!1193 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_string", metadata !"hash_string", metadata !"", i32 419, metadata !1194, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64)* @hash_string, null, null, me
!1194 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1195, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1195 = metadata !{metadata !1083, metadata !99, metadata !1083}
!1196 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_reset_tuning", metadata !"hash_reset_tuning", metadata !"", i32 470, metadata !1197, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_tuning*)* @ha
!1197 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1198, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1198 = metadata !{null, metadata !1199}
!1199 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1105} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Hash_tuning]
!1200 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_initialize", metadata !"hash_initialize", metadata !"", i32 538, metadata !1201, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.hash_table* (i64, %struct.ha
!1201 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1202, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1202 = metadata !{metadata !1203, metadata !1083, metadata !1103, metadata !1115, metadata !1120, metadata !1123}
!1203 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1086} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Hash_table]
!1204 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_clear", metadata !"hash_clear", metadata !"", i32 603, metadata !1205, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_table*)* @hash_clear, null,
!1205 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1206, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1206 = metadata !{null, metadata !1203}
!1207 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_free", metadata !"hash_free", metadata !"", i32 646, metadata !1205, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_table*)* @hash_free, null, nu
!1208 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_rehash", metadata !"hash_rehash", metadata !"", i32 817, metadata !1209, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.hash_table*, i64)* @hash_rehash,
!1209 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1210, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1210 = metadata !{metadata !59, metadata !1203, metadata !1083}
!1211 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_insert", metadata !"hash_insert", metadata !"", i32 906, metadata !1212, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*, i8*)* @hash_insert
!1212 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1213, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1213 = metadata !{metadata !298, metadata !1203, metadata !299}
!1214 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_delete", metadata !"hash_delete", metadata !"", i32 981, metadata !1212, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*, i8*)* @hash_delete
!1215 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"hash_find_entry", metadata !"hash_find_entry", metadata !"", i32 742, metadata !1216, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*, i8*, %struc
!1216 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1217, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1217 = metadata !{metadata !298, metadata !1203, metadata !299, metadata !1218, metadata !59}
!1218 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1090} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1219 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"free_entry", metadata !"free_entry", metadata !"", i32 728, metadata !1220, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_table*, %struct.hash_entry*)
!1220 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1221, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1221 = metadata !{null, metadata !1203, metadata !1090}
!1222 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"allocate_entry", metadata !"allocate_entry", metadata !"", i32 703, metadata !1223, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.hash_entry* (%struct.hash_table
!1223 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1224, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1224 = metadata !{metadata !1090, metadata !1203}
!1225 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"next_prime", metadata !"next_prime", metadata !"", i32 454, metadata !1226, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i64)* @next_prime, null, null, metadata !4
!1226 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1227, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1227 = metadata !{metadata !1083, metadata !1083}
!1228 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"is_prime", metadata !"is_prime", metadata !"", i32 435, metadata !1229, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i64)* @is_prime, null, null, metadata !43, i32 
!1229 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1230, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1230 = metadata !{metadata !59, metadata !1083}
!1231 = metadata !{i32 786478, metadata !1077, metadata !1080, metadata !"check_tuning", metadata !"check_tuning", metadata !"", i32 482, metadata !1232, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.hash_table*)* @check_tuning, nu
!1232 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1233, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1233 = metadata !{metadata !59, metadata !1203}
!1234 = metadata !{metadata !1235}
!1235 = metadata !{i32 786484, i32 0, null, metadata !"default_tuning", metadata !"default_tuning", metadata !"", metadata !1080, i32 128, metadata !1104, i32 1, i32 1, { float, float, float, float, i8, [3 x i8] }* @default_tuning, null} ; [ DW_TAG_varia
!1236 = metadata !{i32 786449, metadata !1237, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1238, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1237 = metadata !{metadata !"open-safer.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1238 = metadata !{metadata !1239}
!1239 = metadata !{i32 786478, metadata !1237, metadata !1240, metadata !"open_safer", metadata !"open_safer", metadata !"", i32 30, metadata !1241, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i32, ...)* @open_safer, null, null, m
!1240 = metadata !{i32 786473, metadata !1237}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/open-safer.c]
!1241 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1242, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1242 = metadata !{metadata !49, metadata !99, metadata !49}
!1243 = metadata !{i32 786449, metadata !1244, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !849, metadata !43, metadata !1245, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_
!1244 = metadata !{metadata !"quote.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1245 = metadata !{metadata !1246, metadata !1250}
!1246 = metadata !{i32 786478, metadata !1244, metadata !1247, metadata !"quote_n", metadata !"quote_n", metadata !"", i32 30, metadata !1248, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8*)* @quote_n, null, null, metadata !43, i
!1247 = metadata !{i32 786473, metadata !1244}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quote.c]
!1248 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1249, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1249 = metadata !{metadata !99, metadata !49, metadata !99}
!1250 = metadata !{i32 786478, metadata !1244, metadata !1247, metadata !"quote", metadata !"quote", metadata !"", i32 38, metadata !1074, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @quote, null, null, metadata !43, i32 39} ; [ 
!1251 = metadata !{i32 786449, metadata !1252, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !1253, metadata !43, metadata !1269, metadata !1328, metadata !43, metadata !""} ; [ DW_TAG_compi
!1252 = metadata !{metadata !"quotearg.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1253 = metadata !{metadata !850, metadata !1254}
!1254 = metadata !{i32 786436, metadata !1255, null, metadata !"", i32 46, i64 32, i64 32, i32 0, i32 0, null, metadata !1256, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 46, size 32, align 32, offset 0] [def] [from ]
!1255 = metadata !{metadata !"/usr/include/ctype.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1256 = metadata !{metadata !1257, metadata !1258, metadata !1259, metadata !1260, metadata !1261, metadata !1262, metadata !1263, metadata !1264, metadata !1265, metadata !1266, metadata !1267, metadata !1268}
!1257 = metadata !{i32 786472, metadata !"_ISupper", i64 256} ; [ DW_TAG_enumerator ] [_ISupper :: 256]
!1258 = metadata !{i32 786472, metadata !"_ISlower", i64 512} ; [ DW_TAG_enumerator ] [_ISlower :: 512]
!1259 = metadata !{i32 786472, metadata !"_ISalpha", i64 1024} ; [ DW_TAG_enumerator ] [_ISalpha :: 1024]
!1260 = metadata !{i32 786472, metadata !"_ISdigit", i64 2048} ; [ DW_TAG_enumerator ] [_ISdigit :: 2048]
!1261 = metadata !{i32 786472, metadata !"_ISxdigit", i64 4096} ; [ DW_TAG_enumerator ] [_ISxdigit :: 4096]
!1262 = metadata !{i32 786472, metadata !"_ISspace", i64 8192} ; [ DW_TAG_enumerator ] [_ISspace :: 8192]
!1263 = metadata !{i32 786472, metadata !"_ISprint", i64 16384} ; [ DW_TAG_enumerator ] [_ISprint :: 16384]
!1264 = metadata !{i32 786472, metadata !"_ISgraph", i64 32768} ; [ DW_TAG_enumerator ] [_ISgraph :: 32768]
!1265 = metadata !{i32 786472, metadata !"_ISblank", i64 1} ; [ DW_TAG_enumerator ] [_ISblank :: 1]
!1266 = metadata !{i32 786472, metadata !"_IScntrl", i64 2} ; [ DW_TAG_enumerator ] [_IScntrl :: 2]
!1267 = metadata !{i32 786472, metadata !"_ISpunct", i64 4} ; [ DW_TAG_enumerator ] [_ISpunct :: 4]
!1268 = metadata !{i32 786472, metadata !"_ISalnum", i64 8} ; [ DW_TAG_enumerator ] [_ISalnum :: 8]
!1269 = metadata !{metadata !1270, metadata !1280, metadata !1283, metadata !1286, metadata !1289, metadata !1295, metadata !1298, metadata !1299, metadata !1302, metadata !1303, metadata !1306, metadata !1309, metadata !1312, metadata !1315, metadata !1
!1270 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"clone_quoting_options", metadata !"clone_quoting_options", metadata !"", i32 115, metadata !1272, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.quoting_options*
!1271 = metadata !{i32 786473, metadata !1252}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!1272 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1273, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1273 = metadata !{metadata !1274, metadata !1274}
!1274 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1275} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from quoting_options]
!1275 = metadata !{i32 786451, metadata !1252, null, metadata !"quoting_options", i32 73, i64 288, i64 32, i32 0, i32 0, null, metadata !1276, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [quoting_options] [line 73, size 288, align 32, offset 0] 
!1276 = metadata !{metadata !1277, metadata !1278}
!1277 = metadata !{i32 786445, metadata !1252, metadata !1275, metadata !"style", i32 76, i64 32, i64 32, i64 0, i32 0, metadata !850} ; [ DW_TAG_member ] [style] [line 76, size 32, align 32, offset 0] [from quoting_style]
!1278 = metadata !{i32 786445, metadata !1252, metadata !1275, metadata !"quote_these_too", i32 80, i64 256, i64 32, i64 32, i32 0, metadata !1279} ; [ DW_TAG_member ] [quote_these_too] [line 80, size 256, align 32, offset 32] [from ]
!1279 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 256, i64 32, i32 0, i32 0, metadata !84, metadata !513, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 256, align 32, offset 0] [from unsigned int]
!1280 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"get_quoting_style", metadata !"get_quoting_style", metadata !"", i32 126, metadata !1281, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.quoting_options*)* 
!1281 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1282, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1282 = metadata !{metadata !850, metadata !1274}
!1283 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"set_quoting_style", metadata !"set_quoting_style", metadata !"", i32 134, metadata !1284, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.quoting_options*, 
!1284 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1285, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1285 = metadata !{null, metadata !1274, metadata !850}
!1286 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"set_char_quoting", metadata !"set_char_quoting", metadata !"", i32 145, metadata !1287, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.quoting_options*, i8,
!1287 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1288, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1288 = metadata !{metadata !49, metadata !1274, metadata !55, metadata !49}
!1289 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg_buffer", metadata !"quotearg_buffer", metadata !"", i32 530, metadata !1290, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, i8*, i64, %struct.quo
!1290 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1291, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1291 = metadata !{metadata !1292, metadata !54, metadata !1292, metadata !99, metadata !1292, metadata !1293}
!1292 = metadata !{i32 786454, metadata !1252, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1293 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1294} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1294 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1275} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from quoting_options]
!1295 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg_alloc", metadata !"quotearg_alloc", metadata !"", i32 545, metadata !1296, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64, %struct.quoting_options
!1296 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1297, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1297 = metadata !{metadata !54, metadata !99, metadata !1292, metadata !1293}
!1298 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg_free", metadata !"quotearg_free", metadata !"", i32 571, metadata !370, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @quotearg_free, null, null, meta
!1299 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg_n", metadata !"quotearg_n", metadata !"", i32 651, metadata !1300, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8*)* @quotearg_n, null, null, metad
!1300 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1301, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1301 = metadata !{metadata !54, metadata !49, metadata !99}
!1302 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg", metadata !"quotearg", metadata !"", i32 657, metadata !951, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @quotearg, null, null, metadata !43, i32
!1303 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg_n_style", metadata !"quotearg_n_style", metadata !"", i32 673, metadata !1304, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i32, i8*)* @quotearg_n_s
!1304 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1305, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1305 = metadata !{metadata !54, metadata !49, metadata !850, metadata !99}
!1306 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg_n_style_mem", metadata !"quotearg_n_style_mem", metadata !"", i32 680, metadata !1307, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i32, i8*, i64)* 
!1307 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1308, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1308 = metadata !{metadata !54, metadata !49, metadata !850, metadata !99, metadata !1292}
!1309 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg_style", metadata !"quotearg_style", metadata !"", i32 688, metadata !1310, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8*)* @quotearg_style, null,
!1310 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1311, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1311 = metadata !{metadata !54, metadata !850, metadata !99}
!1312 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg_char", metadata !"quotearg_char", metadata !"", i32 694, metadata !1313, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8)* @quotearg_char, null, nul
!1313 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1314, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1314 = metadata !{metadata !54, metadata !99, metadata !55}
!1315 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg_colon", metadata !"quotearg_colon", metadata !"", i32 703, metadata !951, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @quotearg_colon, null, null,
!1316 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quoting_options_from_style", metadata !"quoting_options_from_style", metadata !"", i32 664, metadata !1317, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.q
!1317 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1318, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1318 = metadata !{metadata !1275, metadata !850}
!1319 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg_n_options", metadata !"quotearg_n_options", metadata !"", i32 600, metadata !1320, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8*, i64, %struct.quo
!1320 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1321, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1321 = metadata !{metadata !54, metadata !49, metadata !99, metadata !1292, metadata !1293}
!1322 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"quotearg_buffer_restyled", metadata !"quotearg_buffer_restyled", metadata !"", i32 181, metadata !1323, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, i8*,
!1323 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1324, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1324 = metadata !{metadata !1292, metadata !54, metadata !1292, metadata !99, metadata !1292, metadata !850, metadata !1293}
!1325 = metadata !{i32 786478, metadata !1252, metadata !1271, metadata !"gettext_quote", metadata !"gettext_quote", metadata !"", i32 159, metadata !1326, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32)* @gettext_quote, null, nul
!1326 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1327, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1327 = metadata !{metadata !99, metadata !99, metadata !850}
!1328 = metadata !{metadata !1329, metadata !1331, metadata !1336, metadata !1337, metadata !1338, metadata !1343, metadata !1344}
!1329 = metadata !{i32 786484, i32 0, null, metadata !"quoting_style_args", metadata !"quoting_style_args", metadata !"", metadata !1271, i32 84, metadata !1330, i32 0, i32 1, [8 x i8*]* @quoting_style_args, null} ; [ DW_TAG_variable ] [quoting_style_arg
!1330 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 512, i64 64, i32 0, i32 0, metadata !152, metadata !513, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 512, align 64, offset 0] [from ]
!1331 = metadata !{i32 786484, i32 0, null, metadata !"quoting_style_vals", metadata !"quoting_style_vals", metadata !"", metadata !1271, i32 97, metadata !1332, i32 0, i32 1, [7 x i32]* @quoting_style_vals, null} ; [ DW_TAG_variable ] [quoting_style_val
!1332 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 224, i64 32, i32 0, i32 0, metadata !1333, metadata !1334, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 224, align 32, offset 0] [from ]
!1333 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !850} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from quoting_style]
!1334 = metadata !{metadata !1335}
!1335 = metadata !{i32 786465, i64 0, i64 7}      ; [ DW_TAG_subrange_type ] [0, 6]
!1336 = metadata !{i32 786484, i32 0, null, metadata !"default_quoting_options", metadata !"default_quoting_options", metadata !"", metadata !1271, i32 109, metadata !1275, i32 1, i32 1, %struct.quoting_options* @default_quoting_options, null} ; [ DW_TAG
!1337 = metadata !{i32 786484, i32 0, null, metadata !"slot0", metadata !"slot0", metadata !"", metadata !1271, i32 565, metadata !602, i32 1, i32 1, [256 x i8]* @slot0, null} ; [ DW_TAG_variable ] [slot0] [line 565] [local] [def]
!1338 = metadata !{i32 786484, i32 0, null, metadata !"slotvec0", metadata !"slotvec0", metadata !"", metadata !1271, i32 567, metadata !1339, i32 1, i32 1, %struct.slotvec* @slotvec0, null} ; [ DW_TAG_variable ] [slotvec0] [line 567] [local] [def]
!1339 = metadata !{i32 786451, metadata !1252, null, metadata !"slotvec", i32 557, i64 128, i64 64, i32 0, i32 0, null, metadata !1340, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [slotvec] [line 557, size 128, align 64, offset 0] [def] [from ]
!1340 = metadata !{metadata !1341, metadata !1342}
!1341 = metadata !{i32 786445, metadata !1252, metadata !1339, metadata !"size", i32 559, i64 64, i64 64, i64 0, i32 0, metadata !1292} ; [ DW_TAG_member ] [size] [line 559, size 64, align 64, offset 0] [from size_t]
!1342 = metadata !{i32 786445, metadata !1252, metadata !1339, metadata !"val", i32 560, i64 64, i64 64, i64 64, i32 0, metadata !54} ; [ DW_TAG_member ] [val] [line 560, size 64, align 64, offset 64] [from ]
!1343 = metadata !{i32 786484, i32 0, null, metadata !"nslots", metadata !"nslots", metadata !"", metadata !1271, i32 566, metadata !84, i32 1, i32 1, i32* @nslots, null} ; [ DW_TAG_variable ] [nslots] [line 566] [local] [def]
!1344 = metadata !{i32 786484, i32 0, null, metadata !"slotvec", metadata !"slotvec", metadata !"", metadata !1271, i32 568, metadata !1345, i32 1, i32 1, %struct.slotvec** @slotvec, null} ; [ DW_TAG_variable ] [slotvec] [line 568] [local] [def]
!1345 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1339} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from slotvec]
!1346 = metadata !{i32 786449, metadata !1347, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !1348, metadata !43, metadata !1358, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile
!1347 = metadata !{metadata !"safe-write.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1348 = metadata !{metadata !1349}
!1349 = metadata !{i32 786436, metadata !1350, metadata !1351, metadata !"", i32 63, i64 32, i64 32, i32 0, i32 0, null, metadata !1356, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 63, size 32, align 32, offset 0] [def] [from ]
!1350 = metadata !{metadata !"./safe-read.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1351 = metadata !{i32 786478, metadata !1350, metadata !1352, metadata !"safe_write", metadata !"safe_write", metadata !"", i32 57, metadata !1353, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32, i8*, i64)* @safe_write, null, null, m
!1352 = metadata !{i32 786473, metadata !1350}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./safe-read.c]
!1353 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1354, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1354 = metadata !{metadata !1355, metadata !49, metadata !299, metadata !1355}
!1355 = metadata !{i32 786454, metadata !1350, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1356 = metadata !{metadata !1357}
!1357 = metadata !{i32 786472, metadata !"BUGGY_READ_MAXIMUM", i64 2147475456} ; [ DW_TAG_enumerator ] [BUGGY_READ_MAXIMUM :: 2147475456]
!1358 = metadata !{metadata !1351}
!1359 = metadata !{i32 786449, metadata !1360, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1361, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1360 = metadata !{metadata !"same.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1361 = metadata !{metadata !1362}
!1362 = metadata !{i32 786478, metadata !1360, metadata !1363, metadata !"same_name", metadata !"same_name", metadata !"", i32 54, metadata !1364, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*)* @same_name, null, null, metadata !
!1363 = metadata !{i32 786473, metadata !1360}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/same.c]
!1364 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1365, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1365 = metadata !{metadata !59, metadata !99, metadata !99}
!1366 = metadata !{i32 786449, metadata !1367, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1368, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1367 = metadata !{metadata !"savedir.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1368 = metadata !{metadata !1369, metadata !1371, metadata !1374}
!1369 = metadata !{i32 786478, metadata !1367, metadata !1370, metadata !"savedir", metadata !"savedir", metadata !"", i32 118, metadata !951, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @savedir, null, null, metadata !43, i32 11
!1370 = metadata !{i32 786473, metadata !1367}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!1371 = metadata !{i32 786478, metadata !1367, metadata !1370, metadata !"fdsavedir", metadata !"fdsavedir", metadata !"", i32 129, metadata !1372, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32)* @fdsavedir, null, null, metadata !43,
!1372 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1373, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1373 = metadata !{metadata !54, metadata !49}
!1374 = metadata !{i32 786478, metadata !1367, metadata !1370, metadata !"savedirstream", metadata !"savedirstream", metadata !"", i32 53, metadata !1375, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.__dirstream*)* @savedirstream
!1375 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1376, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1376 = metadata !{metadata !54, metadata !1377}
!1377 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1378} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from DIR]
!1378 = metadata !{i32 786454, metadata !1367, null, metadata !"DIR", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !1379} ; [ DW_TAG_typedef ] [DIR] [line 127, size 0, align 0, offset 0] [from __dirstream]
!1379 = metadata !{i32 786451, metadata !1380, null, metadata !"__dirstream", i32 127, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [__dirstream] [line 127, size 0, align 0, offset 0] [decl] [from ]
!1380 = metadata !{metadata !"/usr/include/dirent.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1381 = metadata !{i32 786449, metadata !1382, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1383, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1382 = metadata !{metadata !"stripslash.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1383 = metadata !{metadata !1384}
!1384 = metadata !{i32 786478, metadata !1382, metadata !1385, metadata !"strip_trailing_slashes", metadata !"strip_trailing_slashes", metadata !"", i32 31, metadata !1386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*)* @strip_traili
!1385 = metadata !{i32 786473, metadata !1382}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/stripslash.c]
!1386 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1387, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1387 = metadata !{metadata !59, metadata !54}
!1388 = metadata !{i32 786449, metadata !1389, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !1390, metadata !43, metadata !1399, metadata !1439, metadata !43, metadata !""} ; [ DW_TAG_compi
!1389 = metadata !{metadata !"utimecmp.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1390 = metadata !{metadata !1391, metadata !1393, metadata !1396}
!1391 = metadata !{i32 786436, metadata !1392, null, metadata !"", i32 28, i64 32, i64 32, i32 0, i32 0, null, metadata !172, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 28, size 32, align 32, offset 0] [def] [from ]
!1392 = metadata !{metadata !"./utimecmp.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1393 = metadata !{i32 786436, metadata !1389, null, metadata !"", i32 41, i64 32, i64 32, i32 0, i32 0, null, metadata !1394, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 41, size 32, align 32, offset 0] [def] [from ]
!1394 = metadata !{metadata !1395}
!1395 = metadata !{i32 786472, metadata !"BILLION", i64 1000000000} ; [ DW_TAG_enumerator ] [BILLION :: 1000000000]
!1396 = metadata !{i32 786436, metadata !1389, null, metadata !"", i32 52, i64 32, i64 32, i32 0, i32 0, null, metadata !1397, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 52, size 32, align 32, offset 0] [def] [from ]
!1397 = metadata !{metadata !1398}
!1398 = metadata !{i32 786472, metadata !"SYSCALL_RESOLUTION", i64 1000} ; [ DW_TAG_enumerator ] [SYSCALL_RESOLUTION :: 1000]
!1399 = metadata !{metadata !1400, metadata !1427, metadata !1432, metadata !1433, metadata !1434, metadata !1438}
!1400 = metadata !{i32 786478, metadata !1389, metadata !1401, metadata !"utimecmp", metadata !"utimecmp", metadata !"", i32 112, metadata !1402, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, %struct.stat*, %struct.stat*, i32)* @uti
!1401 = metadata !{i32 786473, metadata !1389}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!1402 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1403, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1403 = metadata !{metadata !49, metadata !99, metadata !1404, metadata !1404, metadata !49}
!1404 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1405} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1405 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1406} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from stat]
!1406 = metadata !{i32 786451, metadata !810, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !1407, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!1407 = metadata !{metadata !1408, metadata !1409, metadata !1410, metadata !1411, metadata !1412, metadata !1413, metadata !1414, metadata !1415, metadata !1416, metadata !1417, metadata !1418, metadata !1419, metadata !1424, metadata !1425, metadata !1
!1408 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !813} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!1409 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !815} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!1410 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !817} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!1411 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !1002} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!1412 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !820} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!1413 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !822} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!1414 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !49} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!1415 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !813} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!1416 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !826} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!1417 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !828} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!1418 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !830} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!1419 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !1420} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!1420 = metadata !{i32 786451, metadata !833, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !1421, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!1421 = metadata !{metadata !1422, metadata !1423}
!1422 = metadata !{i32 786445, metadata !833, metadata !1420, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !836} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!1423 = metadata !{i32 786445, metadata !833, metadata !1420, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !838} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!1424 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !1420} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!1425 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !1420} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!1426 = metadata !{i32 786445, metadata !810, metadata !1406, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !842} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!1427 = metadata !{i32 786478, metadata !1428, metadata !1429, metadata !"get_stat_ctime_ns", metadata !"get_stat_ctime_ns", metadata !"", i32 64, metadata !1430, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.stat*)* @get_stat_cti
!1428 = metadata !{metadata !"./stat-time.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1429 = metadata !{i32 786473, metadata !1428}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./stat-time.h]
!1430 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1431, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1431 = metadata !{metadata !228, metadata !1404}
!1432 = metadata !{i32 786478, metadata !1428, metadata !1429, metadata !"get_stat_atime_ns", metadata !"get_stat_atime_ns", metadata !"", i32 49, metadata !1430, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.stat*)* @get_stat_ati
!1433 = metadata !{i32 786478, metadata !1389, metadata !1401, metadata !"dev_info_compare", metadata !"dev_info_compare", metadata !"", i32 93, metadata !344, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*)* @dev_info_compare, nul
!1434 = metadata !{i32 786478, metadata !1389, metadata !1401, metadata !"dev_info_hash", metadata !"dev_info_hash", metadata !"", i32 77, metadata !1435, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64)* @dev_info_hash, null, null
!1435 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1436, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1436 = metadata !{metadata !1437, metadata !299, metadata !1437}
!1437 = metadata !{i32 786454, metadata !1389, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1438 = metadata !{i32 786478, metadata !1428, metadata !1429, metadata !"get_stat_mtime_ns", metadata !"get_stat_mtime_ns", metadata !"", i32 79, metadata !1430, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.stat*)* @get_stat_mti
!1439 = metadata !{metadata !1440, metadata !1444}
!1440 = metadata !{i32 786484, i32 0, metadata !1400, metadata !"ht", metadata !"ht", metadata !"", metadata !1401, i32 142, metadata !1441, i32 1, i32 1, %struct.hash_table** @utimecmp.ht, null} ; [ DW_TAG_variable ] [ht] [line 142] [local] [def]
!1441 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1442} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Hash_table]
!1442 = metadata !{i32 786454, metadata !1389, null, metadata !"Hash_table", i32 57, i64 0, i64 0, i64 0, i32 0, metadata !1443} ; [ DW_TAG_typedef ] [Hash_table] [line 57, size 0, align 0, offset 0] [from hash_table]
!1443 = metadata !{i32 786451, metadata !1092, null, metadata !"hash_table", i32 55, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [hash_table] [line 55, size 0, align 0, offset 0] [decl] [from ]
!1444 = metadata !{i32 786484, i32 0, metadata !1400, metadata !"new_dst_res", metadata !"new_dst_res", metadata !"", metadata !1401, i32 145, metadata !1445, i32 1, i32 1, %struct.fs_res** @utimecmp.new_dst_res, null} ; [ DW_TAG_variable ] [new_dst_res]
!1445 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1446} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from fs_res]
!1446 = metadata !{i32 786451, metadata !1389, null, metadata !"fs_res", i32 58, i64 128, i64 64, i32 0, i32 0, null, metadata !1447, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [fs_res] [line 58, size 128, align 64, offset 0] [def] [from ]
!1447 = metadata !{metadata !1448, metadata !1450, metadata !1451}
!1448 = metadata !{i32 786445, metadata !1389, metadata !1446, metadata !"dev", i32 61, i64 64, i64 64, i64 0, i32 0, metadata !1449} ; [ DW_TAG_member ] [dev] [line 61, size 64, align 64, offset 0] [from dev_t]
!1449 = metadata !{i32 786454, metadata !1389, null, metadata !"dev_t", i32 60, i64 0, i64 0, i64 0, i32 0, metadata !813} ; [ DW_TAG_typedef ] [dev_t] [line 60, size 0, align 0, offset 0] [from __dev_t]
!1450 = metadata !{i32 786445, metadata !1389, metadata !1446, metadata !"resolution", i32 68, i64 32, i64 32, i64 64, i32 0, metadata !49} ; [ DW_TAG_member ] [resolution] [line 68, size 32, align 32, offset 64] [from int]
!1451 = metadata !{i32 786445, metadata !1389, metadata !1446, metadata !"exact", i32 72, i64 8, i64 8, i64 96, i32 0, metadata !59} ; [ DW_TAG_member ] [exact] [line 72, size 8, align 8, offset 96] [from _Bool]
!1452 = metadata !{i32 786449, metadata !1453, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1454, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1453 = metadata !{metadata !"utimens.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1454 = metadata !{metadata !1455, metadata !1465}
!1455 = metadata !{i32 786478, metadata !1453, metadata !1456, metadata !"futimens1", metadata !"futimens1", metadata !"", i32 76, metadata !1457, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8*, %struct.timespec*)* @futimens1, nu
!1456 = metadata !{i32 786473, metadata !1453}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!1457 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1458, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1458 = metadata !{metadata !49, metadata !49, metadata !99, metadata !1459}
!1459 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1460} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1460 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1461} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from timespec]
!1461 = metadata !{i32 786451, metadata !833, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !1462, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!1462 = metadata !{metadata !1463, metadata !1464}
!1463 = metadata !{i32 786445, metadata !833, metadata !1461, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !836} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!1464 = metadata !{i32 786445, metadata !833, metadata !1461, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !838} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!1465 = metadata !{i32 786478, metadata !1453, metadata !1456, metadata !"utimens1", metadata !"utimens1", metadata !"", i32 184, metadata !1466, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, %struct.timespec*)* @utimens1, null, nul
!1466 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1467, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1467 = metadata !{metadata !49, metadata !99, metadata !1459}
!1468 = metadata !{i32 786449, metadata !1469, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !1470, metadata !43, metadata !1481, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile
!1469 = metadata !{metadata !"xmalloc.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1470 = metadata !{metadata !1471}
!1471 = metadata !{i32 786436, metadata !1472, metadata !1473, metadata !"", i32 199, i64 32, i64 32, i32 0, i32 0, null, metadata !1479, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 199, size 32, align 32, offset 0] [def] [from ]
!1472 = metadata !{metadata !"./xalloc.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1473 = metadata !{i32 786478, metadata !1472, metadata !1474, metadata !"x2nrealloc", metadata !"x2nrealloc", metadata !"", i32 187, metadata !1475, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64*, i64)* @x2nrealloc, null, null,
!1474 = metadata !{i32 786473, metadata !1472}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!1475 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1476, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1476 = metadata !{metadata !298, metadata !298, metadata !1477, metadata !1478}
!1477 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1478} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from size_t]
!1478 = metadata !{i32 786454, metadata !1472, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1479 = metadata !{metadata !1480}
!1480 = metadata !{i32 786472, metadata !"DEFAULT_MXFAST", i64 64} ; [ DW_TAG_enumerator ] [DEFAULT_MXFAST :: 64]
!1481 = metadata !{metadata !1482, metadata !1485, metadata !1473, metadata !1488, metadata !1491, metadata !1495, metadata !1498, metadata !1501, metadata !1502, metadata !1503, metadata !1506}
!1482 = metadata !{i32 786478, metadata !1472, metadata !1474, metadata !"xnmalloc", metadata !"xnmalloc", metadata !"", i32 113, metadata !1483, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i64, i64)* @xnmalloc, null, null, metadata !4
!1483 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1484, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1484 = metadata !{metadata !298, metadata !1478, metadata !1478}
!1485 = metadata !{i32 786478, metadata !1472, metadata !1474, metadata !"xnrealloc", metadata !"xnrealloc", metadata !"", i32 124, metadata !1486, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64, i64)* @xnrealloc, null, null, met
!1486 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1487, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1487 = metadata !{metadata !298, metadata !298, metadata !1478, metadata !1478}
!1488 = metadata !{i32 786478, metadata !1472, metadata !1474, metadata !"xcharalloc", metadata !"xcharalloc", metadata !"", i32 220, metadata !1489, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i64)* @xcharalloc, null, null, metadata !
!1489 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1490, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1490 = metadata !{metadata !54, metadata !1478}
!1491 = metadata !{i32 786478, metadata !1469, metadata !1492, metadata !"xmalloc", metadata !"xmalloc", metadata !"", i32 48, metadata !1493, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i64)* @xmalloc, null, null, metadata !43, i32 49
!1492 = metadata !{i32 786473, metadata !1469}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xmalloc.c]
!1493 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1494, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1494 = metadata !{metadata !298, metadata !1478}
!1495 = metadata !{i32 786478, metadata !1469, metadata !1492, metadata !"xrealloc", metadata !"xrealloc", metadata !"", i32 60, metadata !1496, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64)* @xrealloc, null, null, metadata !43
!1496 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1497, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1497 = metadata !{metadata !298, metadata !298, metadata !1478}
!1498 = metadata !{i32 786478, metadata !1469, metadata !1492, metadata !"x2realloc", metadata !"x2realloc", metadata !"", i32 75, metadata !1499, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64*)* @x2realloc, null, null, metadata
!1499 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1500, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1500 = metadata !{metadata !298, metadata !298, metadata !1477}
!1501 = metadata !{i32 786478, metadata !1469, metadata !1492, metadata !"xzalloc", metadata !"xzalloc", metadata !"", i32 85, metadata !1493, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i64)* @xzalloc, null, null, metadata !43, i32 86
!1502 = metadata !{i32 786478, metadata !1469, metadata !1492, metadata !"xcalloc", metadata !"xcalloc", metadata !"", i32 94, metadata !1483, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i64, i64)* @xcalloc, null, null, metadata !43, i
!1503 = metadata !{i32 786478, metadata !1469, metadata !1492, metadata !"xmemdup", metadata !"xmemdup", metadata !"", i32 112, metadata !1504, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64)* @xmemdup, null, null, metadata !43, 
!1504 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1505, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1505 = metadata !{metadata !298, metadata !299, metadata !1478}
!1506 = metadata !{i32 786478, metadata !1469, metadata !1492, metadata !"xstrdup", metadata !"xstrdup", metadata !"", i32 120, metadata !951, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @xstrdup, null, null, metadata !43, i32 12
!1507 = metadata !{i32 786449, metadata !1508, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1509, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1508 = metadata !{metadata !"xreadlink.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1509 = metadata !{metadata !1510}
!1510 = metadata !{i32 786478, metadata !1508, metadata !1511, metadata !"xreadlink", metadata !"xreadlink", metadata !"", i32 54, metadata !1512, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64)* @xreadlink, null, null, metadata 
!1511 = metadata !{i32 786473, metadata !1508}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xreadlink.c]
!1512 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1513, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1513 = metadata !{metadata !54, metadata !99, metadata !1514}
!1514 = metadata !{i32 786454, metadata !1508, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1515 = metadata !{i32 786449, metadata !1516, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1517, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1516 = metadata !{metadata !"yesno.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1517 = metadata !{metadata !1518}
!1518 = metadata !{i32 786478, metadata !1516, metadata !1519, metadata !"yesno", metadata !"yesno", metadata !"", i32 36, metadata !257, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 ()* @yesno, null, null, metadata !43, i32 37} ; [ DW_TA
!1519 = metadata !{i32 786473, metadata !1516}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/yesno.c]
!1520 = metadata !{i32 786449, metadata !1521, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1522, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1521 = metadata !{metadata !"euidaccess-stat.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1522 = metadata !{metadata !1523}
!1523 = metadata !{i32 786478, metadata !1521, metadata !1524, metadata !"euidaccess_stat", metadata !"euidaccess_stat", metadata !"", i32 51, metadata !1525, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.stat*, i32)* @euidaccess_
!1524 = metadata !{i32 786473, metadata !1521}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!1525 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1526, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1526 = metadata !{metadata !59, metadata !1527, metadata !49}
!1527 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1528} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1528 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1529} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from stat]
!1529 = metadata !{i32 786451, metadata !810, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !1530, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!1530 = metadata !{metadata !1531, metadata !1532, metadata !1533, metadata !1534, metadata !1535, metadata !1536, metadata !1537, metadata !1538, metadata !1539, metadata !1540, metadata !1541, metadata !1542, metadata !1547, metadata !1548, metadata !1
!1531 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !813} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!1532 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !815} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!1533 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !817} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!1534 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !1002} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!1535 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !820} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!1536 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !822} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!1537 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !49} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!1538 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !813} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!1539 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !826} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!1540 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !828} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!1541 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !830} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!1542 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !1543} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!1543 = metadata !{i32 786451, metadata !833, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !1544, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!1544 = metadata !{metadata !1545, metadata !1546}
!1545 = metadata !{i32 786445, metadata !833, metadata !1543, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !836} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!1546 = metadata !{i32 786445, metadata !833, metadata !1543, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !838} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!1547 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !1543} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!1548 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !1543} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!1549 = metadata !{i32 786445, metadata !810, metadata !1529, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !842} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!1550 = metadata !{i32 786449, metadata !1551, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1552, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1551 = metadata !{metadata !"xstrndup.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1552 = metadata !{metadata !1553}
!1553 = metadata !{i32 786478, metadata !1551, metadata !1554, metadata !"xstrndup", metadata !"xstrndup", metadata !"", i32 31, metadata !1555, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64)* @xstrndup, null, null, metadata !43
!1554 = metadata !{i32 786473, metadata !1551}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xstrndup.c]
!1555 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1556, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1556 = metadata !{metadata !54, metadata !99, metadata !1557}
!1557 = metadata !{i32 786454, metadata !1551, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1558 = metadata !{i32 786449, metadata !1559, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1560, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1559 = metadata !{metadata !"close-stream.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1560 = metadata !{metadata !1561}
!1561 = metadata !{i32 786478, metadata !1559, metadata !1562, metadata !"close_stream", metadata !"close_stream", metadata !"", i32 54, metadata !1563, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct._IO_FILE*)* @close_stream, nul
!1562 = metadata !{i32 786473, metadata !1559}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/close-stream.c]
!1563 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1564, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1564 = metadata !{metadata !49, metadata !1565}
!1565 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1566} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from FILE]
!1566 = metadata !{i32 786454, metadata !1559, null, metadata !"FILE", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !1567} ; [ DW_TAG_typedef ] [FILE] [line 48, size 0, align 0, offset 0] [from _IO_FILE]
!1567 = metadata !{i32 786451, metadata !717, null, metadata !"_IO_FILE", i32 245, i64 1728, i64 64, i32 0, i32 0, null, metadata !1568, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_FILE] [line 245, size 1728, align 64, offset 0] [def] [from
!1568 = metadata !{metadata !1569, metadata !1570, metadata !1571, metadata !1572, metadata !1573, metadata !1574, metadata !1575, metadata !1576, metadata !1577, metadata !1578, metadata !1579, metadata !1580, metadata !1581, metadata !1589, metadata !1
!1569 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_flags", i32 246, i64 32, i64 32, i64 0, i32 0, metadata !49} ; [ DW_TAG_member ] [_flags] [line 246, size 32, align 32, offset 0] [from int]
!1570 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_IO_read_ptr", i32 251, i64 64, i64 64, i64 64, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_read_ptr] [line 251, size 64, align 64, offset 64] [from ]
!1571 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_IO_read_end", i32 252, i64 64, i64 64, i64 128, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_read_end] [line 252, size 64, align 64, offset 128] [from ]
!1572 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_IO_read_base", i32 253, i64 64, i64 64, i64 192, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_read_base] [line 253, size 64, align 64, offset 192] [from ]
!1573 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_IO_write_base", i32 254, i64 64, i64 64, i64 256, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_write_base] [line 254, size 64, align 64, offset 256] [from ]
!1574 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_IO_write_ptr", i32 255, i64 64, i64 64, i64 320, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_write_ptr] [line 255, size 64, align 64, offset 320] [from ]
!1575 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_IO_write_end", i32 256, i64 64, i64 64, i64 384, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_write_end] [line 256, size 64, align 64, offset 384] [from ]
!1576 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_IO_buf_base", i32 257, i64 64, i64 64, i64 448, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_buf_base] [line 257, size 64, align 64, offset 448] [from ]
!1577 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_IO_buf_end", i32 258, i64 64, i64 64, i64 512, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_buf_end] [line 258, size 64, align 64, offset 512] [from ]
!1578 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_IO_save_base", i32 260, i64 64, i64 64, i64 576, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_save_base] [line 260, size 64, align 64, offset 576] [from ]
!1579 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_IO_backup_base", i32 261, i64 64, i64 64, i64 640, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_backup_base] [line 261, size 64, align 64, offset 640] [from ]
!1580 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_IO_save_end", i32 262, i64 64, i64 64, i64 704, i32 0, metadata !54} ; [ DW_TAG_member ] [_IO_save_end] [line 262, size 64, align 64, offset 704] [from ]
!1581 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_markers", i32 264, i64 64, i64 64, i64 768, i32 0, metadata !1582} ; [ DW_TAG_member ] [_markers] [line 264, size 64, align 64, offset 768] [from ]
!1582 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1583} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_marker]
!1583 = metadata !{i32 786451, metadata !717, null, metadata !"_IO_marker", i32 160, i64 192, i64 64, i32 0, i32 0, null, metadata !1584, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_marker] [line 160, size 192, align 64, offset 0] [def] [fr
!1584 = metadata !{metadata !1585, metadata !1586, metadata !1588}
!1585 = metadata !{i32 786445, metadata !717, metadata !1583, metadata !"_next", i32 161, i64 64, i64 64, i64 0, i32 0, metadata !1582} ; [ DW_TAG_member ] [_next] [line 161, size 64, align 64, offset 0] [from ]
!1586 = metadata !{i32 786445, metadata !717, metadata !1583, metadata !"_sbuf", i32 162, i64 64, i64 64, i64 64, i32 0, metadata !1587} ; [ DW_TAG_member ] [_sbuf] [line 162, size 64, align 64, offset 64] [from ]
!1587 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1567} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_FILE]
!1588 = metadata !{i32 786445, metadata !717, metadata !1583, metadata !"_pos", i32 166, i64 32, i64 32, i64 128, i32 0, metadata !49} ; [ DW_TAG_member ] [_pos] [line 166, size 32, align 32, offset 128] [from int]
!1589 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_chain", i32 266, i64 64, i64 64, i64 832, i32 0, metadata !1587} ; [ DW_TAG_member ] [_chain] [line 266, size 64, align 64, offset 832] [from ]
!1590 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_fileno", i32 268, i64 32, i64 32, i64 896, i32 0, metadata !49} ; [ DW_TAG_member ] [_fileno] [line 268, size 32, align 32, offset 896] [from int]
!1591 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_flags2", i32 272, i64 32, i64 32, i64 928, i32 0, metadata !49} ; [ DW_TAG_member ] [_flags2] [line 272, size 32, align 32, offset 928] [from int]
!1592 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_old_offset", i32 274, i64 64, i64 64, i64 960, i32 0, metadata !743} ; [ DW_TAG_member ] [_old_offset] [line 274, size 64, align 64, offset 960] [from __off_t]
!1593 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_cur_column", i32 278, i64 16, i64 16, i64 1024, i32 0, metadata !598} ; [ DW_TAG_member ] [_cur_column] [line 278, size 16, align 16, offset 1024] [from unsigned short]
!1594 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_vtable_offset", i32 279, i64 8, i64 8, i64 1040, i32 0, metadata !746} ; [ DW_TAG_member ] [_vtable_offset] [line 279, size 8, align 8, offset 1040] [from signed char]
!1595 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_shortbuf", i32 280, i64 8, i64 8, i64 1048, i32 0, metadata !748} ; [ DW_TAG_member ] [_shortbuf] [line 280, size 8, align 8, offset 1048] [from ]
!1596 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_lock", i32 284, i64 64, i64 64, i64 1088, i32 0, metadata !298} ; [ DW_TAG_member ] [_lock] [line 284, size 64, align 64, offset 1088] [from ]
!1597 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_offset", i32 293, i64 64, i64 64, i64 1152, i32 0, metadata !751} ; [ DW_TAG_member ] [_offset] [line 293, size 64, align 64, offset 1152] [from __off64_t]
!1598 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"__pad1", i32 302, i64 64, i64 64, i64 1216, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad1] [line 302, size 64, align 64, offset 1216] [from ]
!1599 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"__pad2", i32 303, i64 64, i64 64, i64 1280, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad2] [line 303, size 64, align 64, offset 1280] [from ]
!1600 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"__pad3", i32 304, i64 64, i64 64, i64 1344, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad3] [line 304, size 64, align 64, offset 1344] [from ]
!1601 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"__pad4", i32 305, i64 64, i64 64, i64 1408, i32 0, metadata !298} ; [ DW_TAG_member ] [__pad4] [line 305, size 64, align 64, offset 1408] [from ]
!1602 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"__pad5", i32 306, i64 64, i64 64, i64 1472, i32 0, metadata !757} ; [ DW_TAG_member ] [__pad5] [line 306, size 64, align 64, offset 1472] [from size_t]
!1603 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_mode", i32 308, i64 32, i64 32, i64 1536, i32 0, metadata !49} ; [ DW_TAG_member ] [_mode] [line 308, size 32, align 32, offset 1536] [from int]
!1604 = metadata !{i32 786445, metadata !717, metadata !1567, metadata !"_unused2", i32 310, i64 160, i64 8, i64 1568, i32 0, metadata !760} ; [ DW_TAG_member ] [_unused2] [line 310, size 160, align 8, offset 1568] [from ]
!1605 = metadata !{i32 786449, metadata !1606, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1607, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1606 = metadata !{metadata !"fd-safer.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1607 = metadata !{metadata !1608}
!1608 = metadata !{i32 786478, metadata !1606, metadata !1609, metadata !"fd_safer", metadata !"fd_safer", metadata !"", i32 45, metadata !1610, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @fd_safer, null, null, metadata !43, i32
!1609 = metadata !{i32 786473, metadata !1606}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/fd-safer.c]
!1610 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1611, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1611 = metadata !{metadata !49, metadata !49}
!1612 = metadata !{i32 786449, metadata !1613, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !43, metadata !43, metadata !1614, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_u
!1613 = metadata !{metadata !"dup-safer.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1614 = metadata !{metadata !1615}
!1615 = metadata !{i32 786478, metadata !1613, metadata !1616, metadata !"dup_safer", metadata !"dup_safer", metadata !"", i32 36, metadata !1610, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @dup_safer, null, null, metadata !43, 
!1616 = metadata !{i32 786473, metadata !1613}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/dup-safer.c]
!1617 = metadata !{i32 786449, metadata !1618, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !43, metadata !43, metadata !1619, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit ] 
!1618 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/klee_div_zero_check.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1619 = metadata !{metadata !1620}
!1620 = metadata !{i32 786478, metadata !1618, metadata !1621, metadata !"klee_div_zero_check", metadata !"klee_div_zero_check", metadata !"", i32 12, metadata !1622, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i64)* @klee_div_zero_che
!1621 = metadata !{i32 786473, metadata !1618}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_div_zero_check.c]
!1622 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1623, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1623 = metadata !{null, metadata !1624}
!1624 = metadata !{i32 786468, null, null, metadata !"long long int", i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [long long int] [line 0, size 64, align 64, offset 0, enc DW_ATE_signed]
!1625 = metadata !{metadata !1626}
!1626 = metadata !{i32 786689, metadata !1620, metadata !"z", metadata !1621, i32 16777228, metadata !1624, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [z] [line 12]
!1627 = metadata !{i32 786449, metadata !1628, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !43, metadata !43, metadata !1629, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit ] 
!1628 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/klee_int.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1629 = metadata !{metadata !1630}
!1630 = metadata !{i32 786478, metadata !1628, metadata !1631, metadata !"klee_int", metadata !"klee_int", metadata !"", i32 13, metadata !1632, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @klee_int, null, null, metadata !1634, i3
!1631 = metadata !{i32 786473, metadata !1628}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_int.c]
!1632 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1633, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1633 = metadata !{metadata !49, metadata !99}
!1634 = metadata !{metadata !1635, metadata !1636}
!1635 = metadata !{i32 786689, metadata !1630, metadata !"name", metadata !1631, i32 16777229, metadata !99, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [name] [line 13]
!1636 = metadata !{i32 786688, metadata !1630, metadata !"x", metadata !1631, i32 14, metadata !49, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [x] [line 14]
!1637 = metadata !{i32 786449, metadata !1638, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !43, metadata !43, metadata !1639, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit ] 
!1638 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1639 = metadata !{metadata !1640, metadata !1650, metadata !1655}
!1640 = metadata !{i32 786478, metadata !1638, metadata !1641, metadata !"klee_mark_arg_symbolic", metadata !"klee_mark_arg_symbolic", metadata !"", i32 23, metadata !1642, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i32, i8**)* @klee_
!1641 = metadata !{i32 786473, metadata !1638}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c]
!1642 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1643, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1643 = metadata !{null, metadata !49, metadata !53}
!1644 = metadata !{metadata !1645, metadata !1646, metadata !1647, metadata !1648, metadata !1649}
!1645 = metadata !{i32 786689, metadata !1640, metadata !"argc", metadata !1641, i32 16777239, metadata !49, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [argc] [line 23]
!1646 = metadata !{i32 786689, metadata !1640, metadata !"argv", metadata !1641, i32 33554455, metadata !53, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [argv] [line 23]
!1647 = metadata !{i32 786688, metadata !1640, metadata !"i", metadata !1641, i32 24, metadata !49, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 24]
!1648 = metadata !{i32 786688, metadata !1640, metadata !"j", metadata !1641, i32 24, metadata !49, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [j] [line 24]
!1649 = metadata !{i32 786688, metadata !1640, metadata !"len", metadata !1641, i32 24, metadata !49, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [len] [line 24]
!1650 = metadata !{i32 786478, metadata !1638, metadata !1641, metadata !"__isprint", metadata !"__isprint", metadata !"", i32 19, metadata !1651, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null, null, null, metadata !1653, i32 19} ; [ DW_TA
!1651 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1652, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1652 = metadata !{metadata !49, metadata !100}
!1653 = metadata !{metadata !1654}
!1654 = metadata !{i32 786689, metadata !1650, metadata !"c", metadata !1641, i32 16777235, metadata !100, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [c] [line 19]
!1655 = metadata !{i32 786478, metadata !1638, metadata !1641, metadata !"my_strlen", metadata !"my_strlen", metadata !"", i32 13, metadata !1656, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null, null, null, metadata !1658, i32 13} ; [ DW_TA
!1656 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1657, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1657 = metadata !{metadata !49, metadata !54}
!1658 = metadata !{metadata !1659, metadata !1660}
!1659 = metadata !{i32 786689, metadata !1655, metadata !"s", metadata !1641, i32 16777229, metadata !54, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [s] [line 13]
!1660 = metadata !{i32 786688, metadata !1655, metadata !"i", metadata !1641, i32 14, metadata !49, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 14]
!1661 = metadata !{i32 786449, metadata !1662, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !43, metadata !43, metadata !1663, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit ] 
!1662 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/klee_overshift_check.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1663 = metadata !{metadata !1664}
!1664 = metadata !{i32 786478, metadata !1662, metadata !1665, metadata !"klee_overshift_check", metadata !"klee_overshift_check", metadata !"", i32 20, metadata !1666, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i64, i64)* @klee_overs
!1665 = metadata !{i32 786473, metadata !1662}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_overshift_check.c]
!1666 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1667, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1667 = metadata !{null, metadata !1668, metadata !1668}
!1668 = metadata !{i32 786468, null, null, metadata !"long long unsigned int", i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ] [long long unsigned int] [line 0, size 64, align 64, offset 0, enc DW_ATE_unsigned]
!1669 = metadata !{metadata !1670, metadata !1671}
!1670 = metadata !{i32 786689, metadata !1664, metadata !"bitWidth", metadata !1665, i32 16777236, metadata !1668, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [bitWidth] [line 20]
!1671 = metadata !{i32 786689, metadata !1664, metadata !"shift", metadata !1665, i32 33554452, metadata !1668, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [shift] [line 20]
!1672 = metadata !{i32 786449, metadata !1673, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !43, metadata !43, metadata !1674, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit ] 
!1673 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1674 = metadata !{metadata !1675}
!1675 = metadata !{i32 786478, metadata !1673, metadata !1676, metadata !"klee_range", metadata !"klee_range", metadata !"", i32 13, metadata !1677, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i8*)* @klee_range, null, null, me
!1676 = metadata !{i32 786473, metadata !1673}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!1677 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1678, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1678 = metadata !{metadata !49, metadata !49, metadata !49, metadata !99}
!1679 = metadata !{metadata !1680, metadata !1681, metadata !1682, metadata !1683}
!1680 = metadata !{i32 786689, metadata !1675, metadata !"start", metadata !1676, i32 16777229, metadata !49, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [start] [line 13]
!1681 = metadata !{i32 786689, metadata !1675, metadata !"end", metadata !1676, i32 33554445, metadata !49, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [end] [line 13]
!1682 = metadata !{i32 786689, metadata !1675, metadata !"name", metadata !1676, i32 50331661, metadata !99, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [name] [line 13]
!1683 = metadata !{i32 786688, metadata !1675, metadata !"x", metadata !1676, i32 14, metadata !49, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [x] [line 14]
!1684 = metadata !{i32 786449, metadata !1685, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !43, metadata !43, metadata !1686, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit ] 
!1685 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/memcpy.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1686 = metadata !{metadata !1687}
!1687 = metadata !{i32 786478, metadata !1685, metadata !1688, metadata !"memcpy", metadata !"memcpy", metadata !"", i32 12, metadata !1689, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i8*, i64)* @memcpy, null, null, metadata !1692
!1688 = metadata !{i32 786473, metadata !1685}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memcpy.c]
!1689 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1690, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1690 = metadata !{metadata !298, metadata !298, metadata !299, metadata !1691}
!1691 = metadata !{i32 786454, metadata !1685, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1692 = metadata !{metadata !1693, metadata !1694, metadata !1695, metadata !1696, metadata !1697}
!1693 = metadata !{i32 786689, metadata !1687, metadata !"destaddr", metadata !1688, i32 16777228, metadata !298, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [destaddr] [line 12]
!1694 = metadata !{i32 786689, metadata !1687, metadata !"srcaddr", metadata !1688, i32 33554444, metadata !299, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [srcaddr] [line 12]
!1695 = metadata !{i32 786689, metadata !1687, metadata !"len", metadata !1688, i32 50331660, metadata !1691, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [len] [line 12]
!1696 = metadata !{i32 786688, metadata !1687, metadata !"dest", metadata !1688, i32 13, metadata !54, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [dest] [line 13]
!1697 = metadata !{i32 786688, metadata !1687, metadata !"src", metadata !1688, i32 14, metadata !99, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [src] [line 14]
!1698 = metadata !{i32 786449, metadata !1699, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !43, metadata !43, metadata !1700, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit ] 
!1699 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/memmove.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1700 = metadata !{metadata !1701}
!1701 = metadata !{i32 786478, metadata !1699, metadata !1702, metadata !"memmove", metadata !"memmove", metadata !"", i32 12, metadata !1703, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i8*, i64)* @memmove, null, null, metadata !1
!1702 = metadata !{i32 786473, metadata !1699}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memmove.c]
!1703 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1704, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1704 = metadata !{metadata !298, metadata !298, metadata !299, metadata !1705}
!1705 = metadata !{i32 786454, metadata !1699, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1706 = metadata !{metadata !1707, metadata !1708, metadata !1709, metadata !1710, metadata !1711}
!1707 = metadata !{i32 786689, metadata !1701, metadata !"dst", metadata !1702, i32 16777228, metadata !298, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [dst] [line 12]
!1708 = metadata !{i32 786689, metadata !1701, metadata !"src", metadata !1702, i32 33554444, metadata !299, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [src] [line 12]
!1709 = metadata !{i32 786689, metadata !1701, metadata !"count", metadata !1702, i32 50331660, metadata !1705, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [count] [line 12]
!1710 = metadata !{i32 786688, metadata !1701, metadata !"a", metadata !1702, i32 13, metadata !54, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [a] [line 13]
!1711 = metadata !{i32 786688, metadata !1701, metadata !"b", metadata !1702, i32 14, metadata !99, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [b] [line 14]
!1712 = metadata !{i32 786449, metadata !1713, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !43, metadata !43, metadata !1714, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit ] 
!1713 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/mempcpy.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1714 = metadata !{metadata !1715}
!1715 = metadata !{i32 786478, metadata !1713, metadata !1716, metadata !"mempcpy", metadata !"mempcpy", metadata !"", i32 11, metadata !1717, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i8*, i64)* @mempcpy, null, null, metadata !1
!1716 = metadata !{i32 786473, metadata !1713}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/mempcpy.c]
!1717 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1718, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1718 = metadata !{metadata !298, metadata !298, metadata !299, metadata !1719}
!1719 = metadata !{i32 786454, metadata !1713, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1720 = metadata !{metadata !1721, metadata !1722, metadata !1723, metadata !1724, metadata !1725}
!1721 = metadata !{i32 786689, metadata !1715, metadata !"destaddr", metadata !1716, i32 16777227, metadata !298, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [destaddr] [line 11]
!1722 = metadata !{i32 786689, metadata !1715, metadata !"srcaddr", metadata !1716, i32 33554443, metadata !299, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [srcaddr] [line 11]
!1723 = metadata !{i32 786689, metadata !1715, metadata !"len", metadata !1716, i32 50331659, metadata !1719, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [len] [line 11]
!1724 = metadata !{i32 786688, metadata !1715, metadata !"dest", metadata !1716, i32 12, metadata !54, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [dest] [line 12]
!1725 = metadata !{i32 786688, metadata !1715, metadata !"src", metadata !1716, i32 13, metadata !99, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [src] [line 13]
!1726 = metadata !{i32 786449, metadata !1727, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !43, metadata !43, metadata !1728, metadata !43, metadata !43, metadata !""} ; [ DW_TAG_compile_unit ] 
!1727 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/memset.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1728 = metadata !{metadata !1729}
!1729 = metadata !{i32 786478, metadata !1727, metadata !1730, metadata !"memset", metadata !"memset", metadata !"", i32 11, metadata !1731, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i32, i64)* @memset, null, null, metadata !1734
!1730 = metadata !{i32 786473, metadata !1727}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memset.c]
!1731 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1732, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1732 = metadata !{metadata !298, metadata !298, metadata !49, metadata !1733}
!1733 = metadata !{i32 786454, metadata !1727, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1734 = metadata !{metadata !1735, metadata !1736, metadata !1737, metadata !1738}
!1735 = metadata !{i32 786689, metadata !1729, metadata !"dst", metadata !1730, i32 16777227, metadata !298, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [dst] [line 11]
!1736 = metadata !{i32 786689, metadata !1729, metadata !"s", metadata !1730, i32 33554443, metadata !49, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [s] [line 11]
!1737 = metadata !{i32 786689, metadata !1729, metadata !"count", metadata !1730, i32 50331659, metadata !1733, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [count] [line 11]
!1738 = metadata !{i32 786688, metadata !1729, metadata !"a", metadata !1730, i32 12, metadata !1739, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [a] [line 12]
!1739 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1740} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1740 = metadata !{i32 786485, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !55} ; [ DW_TAG_volatile_type ] [line 0, size 0, align 0, offset 0] [from char]
!1741 = metadata !{i32 2, metadata !"Dwarf Version", i32 4}
!1742 = metadata !{i32 1, metadata !"Debug Info Version", i32 1}
!1743 = metadata !{metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"}
!1744 = metadata !{metadata !"clang version 3.4.2 (tags/RELEASE_342/final)"}
!1745 = metadata !{i32 297, i32 0, metadata !1746, null}
!1746 = metadata !{i32 786443, metadata !1, metadata !45, i32 297, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1747 = metadata !{i32 298, i32 0, metadata !1746, null}
!1748 = metadata !{i32 302, i32 0, metadata !1749, null}
!1749 = metadata !{i32 786443, metadata !1, metadata !1746, i32 301, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1750 = metadata !{i32 308, i32 0, metadata !1749, null}
!1751 = metadata !{i32 312, i32 0, metadata !1749, null}
!1752 = metadata !{i32 315, i32 0, metadata !1749, null}
!1753 = metadata !{i32 321, i32 0, metadata !1749, null}
!1754 = metadata !{i32 326, i32 0, metadata !1749, null}
!1755 = metadata !{i32 334, i32 0, metadata !1749, null}
!1756 = metadata !{i32 335, i32 0, metadata !1749, null}
!1757 = metadata !{i32 336, i32 0, metadata !1749, null}
!1758 = metadata !{i32 343, i32 0, metadata !1749, null}
!1759 = metadata !{i32 349, i32 0, metadata !1749, null}
!1760 = metadata !{i32 351, i32 0, metadata !45, null}
!1761 = metadata !{i32 359, i32 0, metadata !50, null}
!1762 = metadata !{i32 361, i32 0, metadata !50, null}
!1763 = metadata !{i32 363, i32 0, metadata !50, null}
!1764 = metadata !{i32 364, i32 0, metadata !50, null}
!1765 = metadata !{i32 369, i32 0, metadata !50, null}
!1766 = metadata !{i32 370, i32 0, metadata !50, null}
!1767 = metadata !{i32 374, i32 0, metadata !50, null}
!1768 = metadata !{i32 376, i32 0, metadata !50, null}
!1769 = metadata !{i32 380, i32 0, metadata !50, null}
!1770 = metadata !{i32 382, i32 0, metadata !50, null}
!1771 = metadata !{i32 385, i32 0, metadata !1772, null}
!1772 = metadata !{i32 786443, metadata !1, metadata !50, i32 384, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1773 = metadata !{i32 388, i32 0, metadata !1774, null}
!1774 = metadata !{i32 786443, metadata !1, metadata !1772, i32 386, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1775 = metadata !{i32 389, i32 0, metadata !1776, null}
!1776 = metadata !{i32 786443, metadata !1, metadata !1774, i32 389, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1777 = metadata !{i32 390, i32 0, metadata !1776, null}
!1778 = metadata !{i32 393, i32 0, metadata !1774, null}
!1779 = metadata !{i32 394, i32 0, metadata !1774, null}
!1780 = metadata !{i32 396, i32 0, metadata !1774, null}
!1781 = metadata !{i32 397, i32 0, metadata !1774, null}
!1782 = metadata !{i32 399, i32 0, metadata !1774, null}
!1783 = metadata !{i32 401, i32 0, metadata !1774, null}
!1784 = metadata !{i32 403, i32 0, metadata !1774, null}
!1785 = metadata !{i32 405, i32 0, metadata !1774, null}
!1786 = metadata !{i32 406, i32 0, metadata !1774, null}
!1787 = metadata !{i32 408, i32 0, metadata !1788, null}
!1788 = metadata !{i32 786443, metadata !1, metadata !1774, i32 408, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1789 = metadata !{i32 409, i32 0, metadata !1788, null}
!1790 = metadata !{i32 413, i32 0, metadata !1791, null}
!1791 = metadata !{i32 786443, metadata !1, metadata !1792, i32 413, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1792 = metadata !{i32 786443, metadata !1, metadata !1788, i32 411, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1793 = metadata !{i32 414, i32 0, metadata !1791, null}
!1794 = metadata !{i32 415, i32 0, metadata !1795, null}
!1795 = metadata !{i32 786443, metadata !1, metadata !1792, i32 415, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1796 = metadata !{i32 417, i32 0, metadata !1795, null}
!1797 = metadata !{i32 416, i32 0, metadata !1795, null}
!1798 = metadata !{i32 419, i32 0, metadata !1774, null}
!1799 = metadata !{i32 420, i32 0, metadata !1774, null}
!1800 = metadata !{i32 422, i32 0, metadata !1774, null}
!1801 = metadata !{i32 423, i32 0, metadata !1774, null}
!1802 = metadata !{i32 425, i32 0, metadata !1774, null}
!1803 = metadata !{i32 426, i32 0, metadata !1774, null}
!1804 = metadata !{i32 428, i32 0, metadata !1774, null}
!1805 = metadata !{i32 429, i32 0, metadata !1774, null}
!1806 = metadata !{i32 431, i32 0, metadata !1774, null}
!1807 = metadata !{i32 432, i32 0, metadata !1774, null}
!1808 = metadata !{i32 433, i32 0, metadata !1774, null}
!1809 = metadata !{i32 434, i32 0, metadata !1774, null}
!1810 = metadata !{i32 435, i32 0, metadata !1774, null}
!1811 = metadata !{i32 437, i32 0, metadata !1774, null}
!1812 = metadata !{i32 438, i32 0, metadata !1774, null}
!1813 = metadata !{i32 441, i32 0, metadata !50, null}
!1814 = metadata !{i32 442, i32 0, metadata !50, null}
!1815 = metadata !{i32 444, i32 0, metadata !1816, null}
!1816 = metadata !{i32 786443, metadata !1, metadata !50, i32 444, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1817 = metadata !{i32 446, i32 0, metadata !1818, null}
!1818 = metadata !{i32 786443, metadata !1, metadata !1819, i32 446, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1819 = metadata !{i32 786443, metadata !1, metadata !1816, i32 445, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1820 = metadata !{i32 447, i32 0, metadata !1818, null}
!1821 = metadata !{i32 450, i32 0, metadata !1818, null}
!1822 = metadata !{i32 449, i32 0, metadata !1818, null}
!1823 = metadata !{i32 451, i32 0, metadata !1819, null}
!1824 = metadata !{i32 452, i32 0, metadata !1819, null}
!1825 = metadata !{i32 454, i32 0, metadata !1826, null}
!1826 = metadata !{i32 786443, metadata !1, metadata !50, i32 454, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1827 = metadata !{i32 456, i32 0, metadata !1828, null}
!1828 = metadata !{i32 786443, metadata !1, metadata !1829, i32 456, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1829 = metadata !{i32 786443, metadata !1, metadata !1826, i32 455, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1830 = metadata !{i32 457, i32 0, metadata !1828, null}
!1831 = metadata !{i32 460, i32 0, metadata !1832, null}
!1832 = metadata !{i32 786443, metadata !1, metadata !1829, i32 460, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1833 = metadata !{i32 462, i32 0, metadata !1834, null}
!1834 = metadata !{i32 786443, metadata !1, metadata !1832, i32 461, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1835 = metadata !{i32 463, i32 0, metadata !1834, null}
!1836 = metadata !{i32 464, i32 0, metadata !1834, null}
!1837 = metadata !{i32 466, i32 0, metadata !1838, null}
!1838 = metadata !{i32 786443, metadata !1, metadata !1826, i32 466, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1839 = metadata !{i32 468, i32 0, metadata !1840, null}
!1840 = metadata !{i32 786443, metadata !1, metadata !1838, i32 467, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1841 = metadata !{i32 469, i32 0, metadata !1842, null}
!1842 = metadata !{i32 786443, metadata !1, metadata !1840, i32 469, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1843 = metadata !{i32 470, i32 0, metadata !1842, null}
!1844 = metadata !{i32 471, i32 0, metadata !1845, null}
!1845 = metadata !{i32 786443, metadata !1, metadata !1842, i32 471, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1846 = metadata !{i32 473, i32 0, metadata !1845, null}
!1847 = metadata !{i32 472, i32 0, metadata !1845, null}
!1848 = metadata !{i32 476, i32 0, metadata !1849, null}
!1849 = metadata !{i32 786443, metadata !1, metadata !50, i32 476, i32 0, i32 21} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1850 = metadata !{i32 477, i32 0, metadata !1849, null}
!1851 = metadata !{i32 479, i32 0, metadata !50, null}
!1852 = metadata !{i32 480, i32 0, metadata !50, null}
!1853 = metadata !{i32 484, i32 0, metadata !50, null}
!1854 = metadata !{i32 486, i32 0, metadata !1855, null}
!1855 = metadata !{i32 786443, metadata !1, metadata !50, i32 486, i32 0, i32 22} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1856 = metadata !{i32 493, i32 0, metadata !1857, null}
!1857 = metadata !{i32 786443, metadata !1, metadata !1858, i32 493, i32 0, i32 24} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1858 = metadata !{i32 786443, metadata !1, metadata !1855, i32 487, i32 0, i32 23} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1859 = metadata !{i32 494, i32 0, metadata !1857, null}
!1860 = metadata !{i32 496, i32 0, metadata !1858, null}
!1861 = metadata !{i32 497, i32 0, metadata !1862, null}
!1862 = metadata !{i32 786443, metadata !1, metadata !1858, i32 497, i32 0, i32 25} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1863 = metadata !{i32 498, i32 0, metadata !1862, null}
!1864 = metadata !{i32 501, i32 0, metadata !1855, null}
!1865 = metadata !{i32 503, i32 0, metadata !50, null}
!1866 = metadata !{i32 134, i32 0, metadata !138, null}
!1867 = metadata !{i32 135, i32 0, metadata !138, null}
!1868 = metadata !{i32 136, i32 0, metadata !138, null}
!1869 = metadata !{i32 137, i32 0, metadata !138, null}
!1870 = metadata !{i32 138, i32 0, metadata !138, null}
!1871 = metadata !{i32 139, i32 0, metadata !138, null}
!1872 = metadata !{i32 140, i32 0, metadata !138, null}
!1873 = metadata !{i32 141, i32 0, metadata !138, null}
!1874 = metadata !{i32 142, i32 0, metadata !138, null}
!1875 = metadata !{i32 143, i32 0, metadata !138, null}
!1876 = metadata !{i32 144, i32 0, metadata !138, null}
!1877 = metadata !{i32 145, i32 0, metadata !138, null}
!1878 = metadata !{i32 146, i32 0, metadata !138, null}
!1879 = metadata !{i32 147, i32 0, metadata !138, null}
!1880 = metadata !{i32 148, i32 0, metadata !138, null}
!1881 = metadata !{i32 149, i32 0, metadata !138, null}
!1882 = metadata !{i32 150, i32 0, metadata !138, null}
!1883 = metadata !{i32 151, i32 0, metadata !138, null}
!1884 = metadata !{i32 152, i32 0, metadata !138, null}
!1885 = metadata !{i32 153, i32 0, metadata !138, null}
!1886 = metadata !{i32 155, i32 0, metadata !138, null}
!1887 = metadata !{i32 156, i32 0, metadata !138, null}
!1888 = metadata !{i32 157, i32 0, metadata !138, null}
!1889 = metadata !{i32 158, i32 0, metadata !138, null}
!1890 = metadata !{i32 159, i32 0, metadata !138, null}
!1891 = metadata !{i32 99, i32 0, metadata !130, null}
!1892 = metadata !{i32 100, i32 0, metadata !130, null}
!1893 = metadata !{i32 101, i32 0, metadata !130, null}
!1894 = metadata !{i32 102, i32 0, metadata !130, null}
!1895 = metadata !{i32 103, i32 0, metadata !130, null}
!1896 = metadata !{i32 104, i32 0, metadata !1897, null}
!1897 = metadata !{i32 786443, metadata !1, metadata !130, i32 104, i32 0, i32 41} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1898 = metadata !{i32 105, i32 0, metadata !1899, null}
!1899 = metadata !{i32 786443, metadata !1, metadata !1897, i32 104, i32 0, i32 42} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1900 = metadata !{i32 107, i32 0, metadata !130, null}
!1901 = metadata !{i32 169, i32 0, metadata !127, null}
!1902 = metadata !{i32 170, i32 0, metadata !127, null}
!1903 = metadata !{i32 171, i32 0, metadata !1904, null}
!1904 = metadata !{i32 786443, metadata !1, metadata !127, i32 171, i32 0, i32 40} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1905 = metadata !{i32 172, i32 0, metadata !1904, null}
!1906 = metadata !{i32 173, i32 0, metadata !127, null}
!1907 = metadata !{i32 274, i32 0, metadata !1908, null}
!1908 = metadata !{i32 786443, metadata !1, metadata !56, i32 274, i32 0, i32 26} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1909 = metadata !{i32 275, i32 0, metadata !1908, null}
!1910 = metadata !{i32 277, i32 0, metadata !1911, null}
!1911 = metadata !{i32 786443, metadata !1, metadata !56, i32 277, i32 0, i32 27} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1912 = metadata !{i32 280, i32 0, metadata !1913, null}
!1913 = metadata !{i32 786443, metadata !1, metadata !1911, i32 278, i32 0, i32 28} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1914 = metadata !{i32 281, i32 0, metadata !1913, null}
!1915 = metadata !{i32 282, i32 0, metadata !1913, null}
!1916 = metadata !{i32 283, i32 0, metadata !1913, null}
!1917 = metadata !{i32 284, i32 0, metadata !1913, null}
!1918 = metadata !{i32 285, i32 0, metadata !1913, null}
!1919 = metadata !{i32 288, i32 0, metadata !1920, null}
!1920 = metadata !{i32 786443, metadata !1, metadata !1911, i32 287, i32 0, i32 29} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1921 = metadata !{i32 291, i32 0, metadata !56, null}
!1922 = metadata !{i32 185, i32 0, metadata !96, null}
!1923 = metadata !{i32 187, i32 0, metadata !1924, null}
!1924 = metadata !{i32 786443, metadata !1, metadata !96, i32 187, i32 0, i32 30} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1925 = metadata !{i32 190, i32 0, metadata !1926, null}
!1926 = metadata !{i32 786443, metadata !1, metadata !1927, i32 190, i32 0, i32 32} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1927 = metadata !{i32 786443, metadata !1, metadata !1924, i32 188, i32 0, i32 31} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1928 = metadata !{i32 203, i32 0, metadata !1929, null}
!1929 = metadata !{i32 786443, metadata !1, metadata !1926, i32 191, i32 0, i32 33} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1930 = metadata !{i32 204, i32 0, metadata !1929, null}
!1931 = metadata !{i32 205, i32 0, metadata !1929, null}
!1932 = metadata !{i32 206, i32 0, metadata !1933, null}
!1933 = metadata !{i32 786443, metadata !1, metadata !1926, i32 206, i32 0, i32 34} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1934 = metadata !{i32 210, i32 0, metadata !1935, null}
!1935 = metadata !{i32 786443, metadata !1, metadata !1933, i32 207, i32 0, i32 35} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1936 = metadata !{i32 211, i32 0, metadata !1935, null}
!1937 = metadata !{i32 236, i32 0, metadata !1938, null}
!1938 = metadata !{i32 786443, metadata !1, metadata !1933, i32 213, i32 0, i32 36} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1939 = metadata !{i32 239, i32 0, metadata !1940, null}
!1940 = metadata !{i32 786443, metadata !1, metadata !1927, i32 239, i32 0, i32 37} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1941 = metadata !{i32 244, i32 0, metadata !1942, null}
!1942 = metadata !{i32 786443, metadata !1, metadata !1940, i32 240, i32 0, i32 38} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1943 = metadata !{i32 245, i32 0, metadata !1942, null}
!1944 = metadata !{i32 247, i32 0, metadata !1942, null}
!1945 = metadata !{i32 248, i32 0, metadata !1942, null}
!1946 = metadata !{i32 249, i32 0, metadata !1947, null}
!1947 = metadata !{i32 786443, metadata !1, metadata !1942, i32 249, i32 0, i32 39} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/mv.c]
!1948 = metadata !{i32 250, i32 0, metadata !1947, null}
!1949 = metadata !{i32 254, i32 0, metadata !96, null}
!1950 = metadata !{i32 112, i32 0, metadata !101, null}
!1951 = metadata !{i32 113, i32 0, metadata !101, null}
!1952 = metadata !{i32 114, i32 0, metadata !101, null}
!1953 = metadata !{i32 115, i32 0, metadata !101, null}
!1954 = metadata !{i32 119, i32 0, metadata !101, null}
!1955 = metadata !{i32 120, i32 0, metadata !101, null}
!1956 = metadata !{i32 122, i32 0, metadata !101, null}
!1957 = metadata !{i32 128, i32 0, metadata !101, null}
!1958 = metadata !{i32 129, i32 0, metadata !101, null}
!1959 = metadata !{i32 868, i32 0, metadata !248, null}
!1960 = metadata !{i32 873, i32 0, metadata !248, null}
!1961 = metadata !{i32 890, i32 0, metadata !252, null}
!1962 = metadata !{i32 895, i32 0, metadata !252, null}
!1963 = metadata !{i32 1939, i32 0, metadata !253, null}
!1964 = metadata !{i32 1948, i32 0, metadata !253, null}
!1965 = metadata !{i32 1949, i32 0, metadata !253, null}
!1966 = metadata !{i32 1951, i32 0, metadata !253, null}
!1967 = metadata !{i32 1971, i32 0, metadata !256, null}
!1968 = metadata !{i32 1986, i32 0, metadata !259, null}
!1969 = metadata !{i32 1987, i32 0, metadata !259, null}
!1970 = metadata !{i32 1995, i32 0, metadata !1971, null}
!1971 = metadata !{i32 786443, metadata !168, metadata !262, i32 1995, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!1972 = metadata !{i32 1997, i32 0, metadata !1973, null}
!1973 = metadata !{i32 786443, metadata !168, metadata !1971, i32 1996, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!1974 = metadata !{i32 1998, i32 0, metadata !1973, null}
!1975 = metadata !{i32 1999, i32 0, metadata !1973, null}
!1976 = metadata !{i32 2000, i32 0, metadata !262, null}
!1977 = metadata !{i32 818, i32 0, metadata !346, null}
!1978 = metadata !{i32 828, i32 0, metadata !346, null}
!1979 = metadata !{i32 831, i32 0, metadata !346, null}
!1980 = metadata !{i32 848, i32 0, metadata !343, null}
!1981 = metadata !{i32 849, i32 0, metadata !343, null}
!1982 = metadata !{i32 850, i32 0, metadata !343, null}
!1983 = metadata !{i32 851, i32 0, metadata !343, null}
!1984 = metadata !{i32 857, i32 0, metadata !340, null}
!1985 = metadata !{i32 858, i32 0, metadata !340, null}
!1986 = metadata !{i32 859, i32 0, metadata !340, null}
!1987 = metadata !{i32 860, i32 0, metadata !340, null}
!1988 = metadata !{i32 838, i32 0, metadata !337, null}
!1989 = metadata !{i32 841, i32 0, metadata !337, null}
!1990 = metadata !{i32 1918, i32 0, metadata !336, null}
!1991 = metadata !{i32 1919, i32 0, metadata !336, null}
!1992 = metadata !{i32 1920, i32 0, metadata !336, null}
!1993 = metadata !{i32 1921, i32 0, metadata !336, null}
!1994 = metadata !{i32 1922, i32 0, metadata !336, null}
!1995 = metadata !{i32 1021, i32 0, metadata !265, null}
!1996 = metadata !{i32 1022, i32 0, metadata !265, null}
!1997 = metadata !{i32 1023, i32 0, metadata !265, null}
!1998 = metadata !{i32 1024, i32 0, metadata !265, null}
!1999 = metadata !{i32 1026, i32 0, metadata !265, null}
!2000 = metadata !{i32 1029, i32 0, metadata !2001, null}
!2001 = metadata !{i32 786443, metadata !168, metadata !265, i32 1029, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2002 = metadata !{i32 1030, i32 0, metadata !2001, null}
!2003 = metadata !{i32 1032, i32 0, metadata !265, null}
!2004 = metadata !{i32 1034, i32 0, metadata !2005, null}
!2005 = metadata !{i32 786443, metadata !168, metadata !265, i32 1034, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2006 = metadata !{i32 1036, i32 0, metadata !2007, null}
!2007 = metadata !{i32 786443, metadata !168, metadata !2005, i32 1035, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2008 = metadata !{i32 1037, i32 0, metadata !2007, null}
!2009 = metadata !{i32 1040, i32 0, metadata !265, null}
!2010 = metadata !{i32 1042, i32 0, metadata !2011, null}
!2011 = metadata !{i32 786443, metadata !168, metadata !265, i32 1042, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2012 = metadata !{i32 1044, i32 0, metadata !2013, null}
!2013 = metadata !{i32 786443, metadata !168, metadata !2011, i32 1043, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2014 = metadata !{i32 1045, i32 0, metadata !2013, null}
!2015 = metadata !{i32 1052, i32 0, metadata !2016, null}
!2016 = metadata !{i32 786443, metadata !168, metadata !265, i32 1052, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2017 = metadata !{i32 1054, i32 0, metadata !2018, null}
!2018 = metadata !{i32 786443, metadata !168, metadata !2019, i32 1054, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2019 = metadata !{i32 786443, metadata !168, metadata !2016, i32 1053, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2020 = metadata !{i32 1056, i32 0, metadata !2018, null}
!2021 = metadata !{i32 1059, i32 0, metadata !2022, null}
!2022 = metadata !{i32 786443, metadata !168, metadata !2018, i32 1057, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2023 = metadata !{i32 1058, i32 0, metadata !2022, null}
!2024 = metadata !{i32 1060, i32 0, metadata !2022, null}
!2025 = metadata !{i32 1063, i32 0, metadata !2019, null}
!2026 = metadata !{i32 1064, i32 0, metadata !2019, null}
!2027 = metadata !{i32 1066, i32 0, metadata !2028, null}
!2028 = metadata !{i32 786443, metadata !168, metadata !265, i32 1066, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2029 = metadata !{i32 1068, i32 0, metadata !2030, null}
!2030 = metadata !{i32 786443, metadata !168, metadata !2031, i32 1068, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2031 = metadata !{i32 786443, metadata !168, metadata !2028, i32 1067, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2032 = metadata !{i32 1070, i32 0, metadata !2033, null}
!2033 = metadata !{i32 786443, metadata !168, metadata !2034, i32 1070, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2034 = metadata !{i32 786443, metadata !168, metadata !2030, i32 1069, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2035 = metadata !{i32 1072, i32 0, metadata !2036, null}
!2036 = metadata !{i32 786443, metadata !168, metadata !2033, i32 1071, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2037 = metadata !{i32 1073, i32 0, metadata !2036, null}
!2038 = metadata !{i32 1077, i32 0, metadata !2039, null}
!2039 = metadata !{i32 786443, metadata !168, metadata !2033, i32 1076, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2040 = metadata !{i32 1079, i32 0, metadata !2034, null}
!2041 = metadata !{i32 1086, i32 0, metadata !2042, null}
!2042 = metadata !{i32 786443, metadata !168, metadata !2043, i32 1086, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2043 = metadata !{i32 786443, metadata !168, metadata !2030, i32 1081, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2044 = metadata !{i32 1090, i32 0, metadata !2045, null}
!2045 = metadata !{i32 786443, metadata !168, metadata !2042, i32 1088, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2046 = metadata !{i32 1089, i32 0, metadata !2045, null}
!2047 = metadata !{i32 1091, i32 0, metadata !2045, null}
!2048 = metadata !{i32 1101, i32 0, metadata !2049, null}
!2049 = metadata !{i32 786443, metadata !168, metadata !2043, i32 1101, i32 0, i32 21} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2050 = metadata !{i32 1103, i32 0, metadata !2051, null}
!2051 = metadata !{i32 786443, metadata !168, metadata !2052, i32 1103, i32 0, i32 23} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2052 = metadata !{i32 786443, metadata !168, metadata !2049, i32 1102, i32 0, i32 22} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2053 = metadata !{i32 1104, i32 0, metadata !2051, null}
!2054 = metadata !{i32 1108, i32 0, metadata !2055, null}
!2055 = metadata !{i32 786443, metadata !168, metadata !2056, i32 1108, i32 0, i32 25} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2056 = metadata !{i32 786443, metadata !168, metadata !2051, i32 1105, i32 0, i32 24} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2057 = metadata !{i32 1109, i32 0, metadata !2055, null}
!2058 = metadata !{i32 1110, i32 0, metadata !2059, null}
!2059 = metadata !{i32 786443, metadata !168, metadata !2056, i32 1110, i32 0, i32 26} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2060 = metadata !{i32 1111, i32 0, metadata !2059, null}
!2061 = metadata !{i32 1112, i32 0, metadata !2056, null}
!2062 = metadata !{i32 1114, i32 0, metadata !2063, null}
!2063 = metadata !{i32 786443, metadata !168, metadata !2052, i32 1114, i32 0, i32 27} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2064 = metadata !{i32 1116, i32 0, metadata !2065, null}
!2065 = metadata !{i32 786443, metadata !168, metadata !2063, i32 1115, i32 0, i32 28} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2066 = metadata !{i32 1117, i32 0, metadata !2065, null}
!2067 = metadata !{i32 1122, i32 0, metadata !2068, null}
!2068 = metadata !{i32 786443, metadata !168, metadata !2069, i32 1122, i32 0, i32 30} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2069 = metadata !{i32 786443, metadata !168, metadata !2049, i32 1121, i32 0, i32 29} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2070 = metadata !{i32 1125, i32 0, metadata !2068, null}
!2071 = metadata !{i32 1126, i32 0, metadata !2068, null}
!2072 = metadata !{i32 1127, i32 0, metadata !2068, null}
!2073 = metadata !{i32 1130, i32 0, metadata !2074, null}
!2074 = metadata !{i32 786443, metadata !168, metadata !2043, i32 1130, i32 0, i32 31} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2075 = metadata !{i32 1131, i32 0, metadata !2074, null}
!2076 = metadata !{i32 1133, i32 0, metadata !2077, null}
!2077 = metadata !{i32 786443, metadata !168, metadata !2043, i32 1133, i32 0, i32 32} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2078 = metadata !{i32 1135, i32 0, metadata !2079, null}
!2079 = metadata !{i32 786443, metadata !168, metadata !2080, i32 1135, i32 0, i32 34} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2080 = metadata !{i32 786443, metadata !168, metadata !2077, i32 1134, i32 0, i32 33} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2081 = metadata !{i32 1137, i32 0, metadata !2082, null}
!2082 = metadata !{i32 786443, metadata !168, metadata !2083, i32 1137, i32 0, i32 36} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2083 = metadata !{i32 786443, metadata !168, metadata !2079, i32 1136, i32 0, i32 35} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2084 = metadata !{i32 1146, i32 0, metadata !2085, null}
!2085 = metadata !{i32 786443, metadata !168, metadata !2082, i32 1143, i32 0, i32 38} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2086 = metadata !{i32 1144, i32 0, metadata !2085, null}
!2087 = metadata !{i32 1147, i32 0, metadata !2085, null}
!2088 = metadata !{i32 1158, i32 0, metadata !2089, null}
!2089 = metadata !{i32 786443, metadata !168, metadata !2080, i32 1158, i32 0, i32 39} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2090 = metadata !{i32 1160, i32 0, metadata !2089, null}
!2091 = metadata !{i32 1164, i32 0, metadata !2092, null}
!2092 = metadata !{i32 786443, metadata !168, metadata !2089, i32 1161, i32 0, i32 40} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2093 = metadata !{i32 1162, i32 0, metadata !2092, null}
!2094 = metadata !{i32 1165, i32 0, metadata !2092, null}
!2095 = metadata !{i32 1169, i32 0, metadata !2096, null}
!2096 = metadata !{i32 786443, metadata !168, metadata !2043, i32 1169, i32 0, i32 41} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2097 = metadata !{i32 1171, i32 0, metadata !2098, null}
!2098 = metadata !{i32 786443, metadata !168, metadata !2099, i32 1171, i32 0, i32 43} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2099 = metadata !{i32 786443, metadata !168, metadata !2096, i32 1170, i32 0, i32 42} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2100 = metadata !{i32 1173, i32 0, metadata !2101, null}
!2101 = metadata !{i32 786443, metadata !168, metadata !2102, i32 1173, i32 0, i32 45} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2102 = metadata !{i32 786443, metadata !168, metadata !2098, i32 1172, i32 0, i32 44} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2103 = metadata !{i32 1182, i32 0, metadata !2104, null}
!2104 = metadata !{i32 786443, metadata !168, metadata !2101, i32 1179, i32 0, i32 47} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2105 = metadata !{i32 1180, i32 0, metadata !2104, null}
!2106 = metadata !{i32 1183, i32 0, metadata !2104, null}
!2107 = metadata !{i32 1187, i32 0, metadata !2108, null}
!2108 = metadata !{i32 786443, metadata !168, metadata !2099, i32 1187, i32 0, i32 48} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2109 = metadata !{i32 1193, i32 0, metadata !2110, null}
!2110 = metadata !{i32 786443, metadata !168, metadata !2108, i32 1188, i32 0, i32 49} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2111 = metadata !{i32 1199, i32 0, metadata !2112, null}
!2112 = metadata !{i32 786443, metadata !168, metadata !2110, i32 1199, i32 0, i32 50} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2113 = metadata !{i32 1205, i32 0, metadata !2114, null}
!2114 = metadata !{i32 786443, metadata !168, metadata !2115, i32 1205, i32 0, i32 52} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2115 = metadata !{i32 786443, metadata !168, metadata !2112, i32 1200, i32 0, i32 51} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2116 = metadata !{i32 1206, i32 0, metadata !2114, null}
!2117 = metadata !{i32 1207, i32 0, metadata !2115, null}
!2118 = metadata !{i32 1212, i32 0, metadata !2119, null}
!2119 = metadata !{i32 786443, metadata !168, metadata !2043, i32 1212, i32 0, i32 53} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2120 = metadata !{i32 1215, i32 0, metadata !2121, null}
!2121 = metadata !{i32 786443, metadata !168, metadata !2122, i32 1215, i32 0, i32 55} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2122 = metadata !{i32 786443, metadata !168, metadata !2119, i32 1213, i32 0, i32 54} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2123 = metadata !{i32 1220, i32 0, metadata !2124, null}
!2124 = metadata !{i32 786443, metadata !168, metadata !2121, i32 1217, i32 0, i32 56} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2125 = metadata !{i32 1218, i32 0, metadata !2124, null}
!2126 = metadata !{i32 1221, i32 0, metadata !2124, null}
!2127 = metadata !{i32 1225, i32 0, metadata !2128, null}
!2128 = metadata !{i32 786443, metadata !168, metadata !2043, i32 1225, i32 0, i32 57} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2129 = metadata !{i32 1228, i32 0, metadata !2128, null}
!2130 = metadata !{i32 1228, i32 13, metadata !2128, null}
!2131 = metadata !{i32 1236, i32 0, metadata !2132, null}
!2132 = metadata !{i32 786443, metadata !168, metadata !2128, i32 1235, i32 0, i32 58} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2133 = metadata !{i32 1245, i32 0, metadata !2134, null}
!2134 = metadata !{i32 786443, metadata !168, metadata !2132, i32 1245, i32 0, i32 59} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2135 = metadata !{i32 1248, i32 0, metadata !2136, null}
!2136 = metadata !{i32 786443, metadata !168, metadata !2134, i32 1246, i32 0, i32 60} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2137 = metadata !{i32 1251, i32 0, metadata !2136, null}
!2138 = metadata !{i32 1252, i32 0, metadata !2136, null}
!2139 = metadata !{i32 1253, i32 0, metadata !2136, null}
!2140 = metadata !{i32 1254, i32 0, metadata !2136, null}
!2141 = metadata !{i32 1255, i32 0, metadata !2136, null}
!2142 = metadata !{i32 1263, i32 0, metadata !2143, null}
!2143 = metadata !{i32 786443, metadata !168, metadata !2144, i32 1263, i32 0, i32 62} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2144 = metadata !{i32 786443, metadata !168, metadata !2132, i32 1263, i32 0, i32 61} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2145 = metadata !{i32 1264, i32 0, metadata !2132, null}
!2146 = metadata !{i32 1265, i32 0, metadata !2147, null}
!2147 = metadata !{i32 786443, metadata !168, metadata !2132, i32 1265, i32 0, i32 63} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2148 = metadata !{i32 1267, i32 0, metadata !2149, null}
!2149 = metadata !{i32 786443, metadata !168, metadata !2150, i32 1267, i32 0, i32 65} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2150 = metadata !{i32 786443, metadata !168, metadata !2147, i32 1266, i32 0, i32 64} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2151 = metadata !{i32 1269, i32 0, metadata !2152, null}
!2152 = metadata !{i32 786443, metadata !168, metadata !2149, i32 1268, i32 0, i32 66} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2153 = metadata !{i32 1270, i32 0, metadata !2152, null}
!2154 = metadata !{i32 1274, i32 0, metadata !2155, null}
!2155 = metadata !{i32 786443, metadata !168, metadata !2149, i32 1273, i32 0, i32 67} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2156 = metadata !{i32 1276, i32 0, metadata !2150, null}
!2157 = metadata !{i32 1279, i32 0, metadata !2158, null}
!2158 = metadata !{i32 786443, metadata !168, metadata !2147, i32 1278, i32 0, i32 68} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2159 = metadata !{i32 1281, i32 0, metadata !2132, null}
!2160 = metadata !{i32 1282, i32 0, metadata !2132, null}
!2161 = metadata !{i32 1283, i32 0, metadata !2162, null}
!2162 = metadata !{i32 786443, metadata !168, metadata !2128, i32 1283, i32 0, i32 69} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2163 = metadata !{i32 1291, i32 0, metadata !2164, null}
!2164 = metadata !{i32 786443, metadata !168, metadata !2165, i32 1291, i32 0, i32 71} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2165 = metadata !{i32 786443, metadata !168, metadata !2162, i32 1290, i32 0, i32 70} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2166 = metadata !{i32 1293, i32 0, metadata !2167, null}
!2167 = metadata !{i32 786443, metadata !168, metadata !2164, i32 1292, i32 0, i32 72} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2168 = metadata !{i32 1294, i32 0, metadata !2167, null}
!2169 = metadata !{i32 1296, i32 0, metadata !2165, null}
!2170 = metadata !{i32 1297, i32 0, metadata !2171, null}
!2171 = metadata !{i32 786443, metadata !168, metadata !2165, i32 1297, i32 0, i32 73} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2172 = metadata !{i32 1298, i32 0, metadata !2171, null}
!2173 = metadata !{i32 1306, i32 0, metadata !2174, null}
!2174 = metadata !{i32 786443, metadata !168, metadata !265, i32 1306, i32 0, i32 74} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2175 = metadata !{i32 1307, i32 0, metadata !2174, null}
!2176 = metadata !{i32 1340, i32 0, metadata !2177, null}
!2177 = metadata !{i32 786443, metadata !168, metadata !265, i32 1340, i32 0, i32 75} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2178 = metadata !{i32 1342, i32 0, metadata !2179, null}
!2179 = metadata !{i32 786443, metadata !168, metadata !2177, i32 1341, i32 0, i32 76} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2180 = metadata !{i32 1343, i32 0, metadata !2179, null}
!2181 = metadata !{i32 1344, i32 0, metadata !2182, null}
!2182 = metadata !{i32 786443, metadata !168, metadata !2177, i32 1344, i32 0, i32 77} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2183 = metadata !{i32 1351, i32 0, metadata !2184, null}
!2184 = metadata !{i32 786443, metadata !168, metadata !2182, i32 1350, i32 0, i32 78} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2185 = metadata !{i32 1352, i32 0, metadata !2184, null}
!2186 = metadata !{i32 1357, i32 0, metadata !2187, null}
!2187 = metadata !{i32 786443, metadata !168, metadata !265, i32 1357, i32 0, i32 79} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2188 = metadata !{i32 1362, i32 0, metadata !2189, null}
!2189 = metadata !{i32 786443, metadata !168, metadata !2190, i32 1362, i32 0, i32 81} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2190 = metadata !{i32 786443, metadata !168, metadata !2187, i32 1358, i32 0, i32 80} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2191 = metadata !{i32 1366, i32 0, metadata !2192, null}
!2192 = metadata !{i32 786443, metadata !168, metadata !2193, i32 1366, i32 0, i32 83} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2193 = metadata !{i32 786443, metadata !168, metadata !2189, i32 1363, i32 0, i32 82} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2194 = metadata !{i32 1369, i32 0, metadata !2195, null}
!2195 = metadata !{i32 786443, metadata !168, metadata !2192, i32 1367, i32 0, i32 84} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2196 = metadata !{i32 1370, i32 0, metadata !2195, null}
!2197 = metadata !{i32 1368, i32 0, metadata !2195, null}
!2198 = metadata !{i32 1371, i32 0, metadata !2195, null}
!2199 = metadata !{i32 1372, i32 0, metadata !2195, null}
!2200 = metadata !{i32 1374, i32 0, metadata !2201, null}
!2201 = metadata !{i32 786443, metadata !168, metadata !2192, i32 1374, i32 0, i32 85} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2202 = metadata !{i32 1386, i32 0, metadata !2203, null}
!2203 = metadata !{i32 786443, metadata !168, metadata !2201, i32 1384, i32 0, i32 87} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2204 = metadata !{i32 1385, i32 0, metadata !2203, null}
!2205 = metadata !{i32 1387, i32 0, metadata !2203, null}
!2206 = metadata !{i32 1392, i32 0, metadata !2207, null}
!2207 = metadata !{i32 786443, metadata !168, metadata !2189, i32 1391, i32 0, i32 88} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2208 = metadata !{i32 1396, i32 0, metadata !2209, null}
!2209 = metadata !{i32 786443, metadata !168, metadata !2207, i32 1396, i32 0, i32 89} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2210 = metadata !{i32 1398, i32 0, metadata !2211, null}
!2211 = metadata !{i32 786443, metadata !168, metadata !2212, i32 1398, i32 0, i32 91} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2212 = metadata !{i32 786443, metadata !168, metadata !2209, i32 1397, i32 0, i32 90} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2213 = metadata !{i32 1400, i32 0, metadata !2214, null}
!2214 = metadata !{i32 786443, metadata !168, metadata !2211, i32 1399, i32 0, i32 92} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2215 = metadata !{i32 1401, i32 0, metadata !2214, null}
!2216 = metadata !{i32 1403, i32 0, metadata !2217, null}
!2217 = metadata !{i32 786443, metadata !168, metadata !2212, i32 1403, i32 0, i32 93} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2218 = metadata !{i32 1404, i32 0, metadata !2217, null}
!2219 = metadata !{i32 1405, i32 0, metadata !2212, null}
!2220 = metadata !{i32 1406, i32 0, metadata !2212, null}
!2221 = metadata !{i32 1408, i32 0, metadata !2222, null}
!2222 = metadata !{i32 786443, metadata !168, metadata !2207, i32 1408, i32 0, i32 94} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2223 = metadata !{i32 1410, i32 0, metadata !2224, null}
!2224 = metadata !{i32 786443, metadata !168, metadata !2222, i32 1409, i32 0, i32 95} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2225 = metadata !{i32 1411, i32 0, metadata !2224, null}
!2226 = metadata !{i32 1412, i32 0, metadata !2224, null}
!2227 = metadata !{i32 1415, i32 0, metadata !2207, null}
!2228 = metadata !{i32 1419, i32 0, metadata !2229, null}
!2229 = metadata !{i32 786443, metadata !168, metadata !265, i32 1419, i32 0, i32 96} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2230 = metadata !{i32 1421, i32 0, metadata !2231, null}
!2231 = metadata !{i32 786443, metadata !168, metadata !2232, i32 1421, i32 0, i32 98} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2232 = metadata !{i32 786443, metadata !168, metadata !2229, i32 1420, i32 0, i32 97} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2233 = metadata !{i32 1423, i32 0, metadata !2234, null}
!2234 = metadata !{i32 786443, metadata !168, metadata !2235, i32 1423, i32 0, i32 100} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2235 = metadata !{i32 786443, metadata !168, metadata !2231, i32 1422, i32 0, i32 99} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2236 = metadata !{i32 1424, i32 0, metadata !2234, null}
!2237 = metadata !{i32 1427, i32 0, metadata !2238, null}
!2238 = metadata !{i32 786443, metadata !168, metadata !2235, i32 1427, i32 0, i32 101} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2239 = metadata !{i32 1428, i32 0, metadata !2238, null}
!2240 = metadata !{i32 1430, i32 0, metadata !2241, null}
!2241 = metadata !{i32 786443, metadata !168, metadata !2235, i32 1430, i32 0, i32 102} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2242 = metadata !{i32 1439, i32 0, metadata !2243, null}
!2243 = metadata !{i32 786443, metadata !168, metadata !2241, i32 1431, i32 0, i32 103} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2244 = metadata !{i32 1440, i32 0, metadata !2243, null}
!2245 = metadata !{i32 1442, i32 0, metadata !2235, null}
!2246 = metadata !{i32 1450, i32 0, metadata !2247, null}
!2247 = metadata !{i32 786443, metadata !168, metadata !2232, i32 1450, i32 0, i32 104} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2248 = metadata !{i32 1456, i32 0, metadata !2249, null}
!2249 = metadata !{i32 786443, metadata !168, metadata !2247, i32 1451, i32 0, i32 105} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2250 = metadata !{i32 1457, i32 0, metadata !2249, null}
!2251 = metadata !{i32 1455, i32 0, metadata !2249, null}
!2252 = metadata !{i32 1463, i32 0, metadata !2249, null}
!2253 = metadata !{i32 1467, i32 0, metadata !2249, null}
!2254 = metadata !{i32 1485, i32 0, metadata !2255, null}
!2255 = metadata !{i32 786443, metadata !168, metadata !2232, i32 1485, i32 0, i32 106} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2256 = metadata !{i32 1497, i32 0, metadata !2257, null}
!2257 = metadata !{i32 786443, metadata !168, metadata !2255, i32 1486, i32 0, i32 107} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2258 = metadata !{i32 1499, i32 0, metadata !2257, null}
!2259 = metadata !{i32 1500, i32 0, metadata !2257, null}
!2260 = metadata !{i32 1501, i32 0, metadata !2257, null}
!2261 = metadata !{i32 1507, i32 0, metadata !2262, null}
!2262 = metadata !{i32 786443, metadata !168, metadata !2232, i32 1507, i32 0, i32 108} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2263 = metadata !{i32 1509, i32 0, metadata !2264, null}
!2264 = metadata !{i32 786443, metadata !168, metadata !2262, i32 1508, i32 0, i32 109} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2265 = metadata !{i32 1511, i32 0, metadata !2264, null}
!2266 = metadata !{i32 1512, i32 0, metadata !2264, null}
!2267 = metadata !{i32 1513, i32 0, metadata !2264, null}
!2268 = metadata !{i32 1516, i32 0, metadata !2232, null}
!2269 = metadata !{i32 1517, i32 0, metadata !2232, null}
!2270 = metadata !{i32 1522, i32 0, metadata !265, null}
!2271 = metadata !{i32 1527, i32 0, metadata !265, null}
!2272 = metadata !{i32 1533, i32 0, metadata !265, null}
!2273 = metadata !{i32 1535, i32 0, metadata !2274, null}
!2274 = metadata !{i32 786443, metadata !168, metadata !265, i32 1535, i32 0, i32 110} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2275 = metadata !{i32 1544, i32 0, metadata !2276, null}
!2276 = metadata !{i32 786443, metadata !168, metadata !2277, i32 1544, i32 0, i32 112} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2277 = metadata !{i32 786443, metadata !168, metadata !2274, i32 1536, i32 0, i32 111} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2278 = metadata !{i32 1547, i32 0, metadata !2279, null}
!2279 = metadata !{i32 786443, metadata !168, metadata !2276, i32 1545, i32 0, i32 113} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2280 = metadata !{i32 1546, i32 0, metadata !2279, null}
!2281 = metadata !{i32 1548, i32 0, metadata !2279, null}
!2282 = metadata !{i32 1553, i32 0, metadata !2277, null}
!2283 = metadata !{i32 1554, i32 0, metadata !2277, null}
!2284 = metadata !{i32 1555, i32 0, metadata !2277, null}
!2285 = metadata !{i32 1556, i32 0, metadata !2277, null}
!2286 = metadata !{i32 1558, i32 0, metadata !2287, null}
!2287 = metadata !{i32 786443, metadata !168, metadata !2277, i32 1558, i32 0, i32 114} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2288 = metadata !{i32 1564, i32 0, metadata !2289, null}
!2289 = metadata !{i32 786443, metadata !168, metadata !2287, i32 1559, i32 0, i32 115} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2290 = metadata !{i32 1567, i32 0, metadata !2291, null}
!2291 = metadata !{i32 786443, metadata !168, metadata !2289, i32 1567, i32 0, i32 116} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2292 = metadata !{i32 1569, i32 0, metadata !2293, null}
!2293 = metadata !{i32 786443, metadata !168, metadata !2291, i32 1568, i32 0, i32 117} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2294 = metadata !{i32 1570, i32 0, metadata !2293, null}
!2295 = metadata !{i32 1571, i32 0, metadata !2293, null}
!2296 = metadata !{i32 1578, i32 0, metadata !2297, null}
!2297 = metadata !{i32 786443, metadata !168, metadata !2289, i32 1578, i32 0, i32 118} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2298 = metadata !{i32 1580, i32 0, metadata !2299, null}
!2299 = metadata !{i32 786443, metadata !168, metadata !2297, i32 1579, i32 0, i32 119} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2300 = metadata !{i32 1581, i32 0, metadata !2299, null}
!2301 = metadata !{i32 1583, i32 0, metadata !2302, null}
!2302 = metadata !{i32 786443, metadata !168, metadata !2297, i32 1583, i32 0, i32 120} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2303 = metadata !{i32 1587, i32 0, metadata !2304, null}
!2304 = metadata !{i32 786443, metadata !168, metadata !2302, i32 1584, i32 0, i32 121} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2305 = metadata !{i32 1588, i32 0, metadata !2304, null}
!2306 = metadata !{i32 1590, i32 0, metadata !2307, null}
!2307 = metadata !{i32 786443, metadata !168, metadata !2304, i32 1590, i32 0, i32 122} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2308 = metadata !{i32 1592, i32 0, metadata !2309, null}
!2309 = metadata !{i32 786443, metadata !168, metadata !2307, i32 1591, i32 0, i32 123} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2310 = metadata !{i32 1593, i32 0, metadata !2309, null}
!2311 = metadata !{i32 1594, i32 0, metadata !2309, null}
!2312 = metadata !{i32 1602, i32 0, metadata !2289, null}
!2313 = metadata !{i32 1604, i32 0, metadata !2314, null}
!2314 = metadata !{i32 786443, metadata !168, metadata !2289, i32 1604, i32 0, i32 124} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2315 = metadata !{i32 1605, i32 0, metadata !2314, null}
!2316 = metadata !{i32 1609, i32 0, metadata !2317, null}
!2317 = metadata !{i32 786443, metadata !168, metadata !2277, i32 1609, i32 0, i32 125} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2318 = metadata !{i32 1610, i32 0, metadata !2317, null}
!2319 = metadata !{i32 1614, i32 0, metadata !2320, null}
!2320 = metadata !{i32 786443, metadata !168, metadata !2277, i32 1614, i32 0, i32 126} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2321 = metadata !{i32 1620, i32 0, metadata !2322, null}
!2322 = metadata !{i32 786443, metadata !168, metadata !2320, i32 1616, i32 0, i32 127} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2323 = metadata !{i32 1621, i32 0, metadata !2322, null}
!2324 = metadata !{i32 1623, i32 0, metadata !2325, null}
!2325 = metadata !{i32 786443, metadata !168, metadata !2274, i32 1623, i32 0, i32 128} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2326 = metadata !{i32 1625, i32 0, metadata !2327, null}
!2327 = metadata !{i32 786443, metadata !168, metadata !2325, i32 1624, i32 0, i32 129} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2328 = metadata !{i32 1627, i32 0, metadata !2329, null}
!2329 = metadata !{i32 786443, metadata !168, metadata !2327, i32 1627, i32 0, i32 130} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2330 = metadata !{i32 1635, i32 0, metadata !2331, null}
!2331 = metadata !{i32 786443, metadata !168, metadata !2329, i32 1628, i32 0, i32 131} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2332 = metadata !{i32 1637, i32 0, metadata !2331, null}
!2333 = metadata !{i32 1641, i32 0, metadata !2331, null}
!2334 = metadata !{i32 1642, i32 0, metadata !2331, null}
!2335 = metadata !{i32 1644, i32 0, metadata !2331, null}
!2336 = metadata !{i32 1646, i32 0, metadata !2337, null}
!2337 = metadata !{i32 786443, metadata !168, metadata !2331, i32 1646, i32 0, i32 132} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2338 = metadata !{i32 1650, i32 0, metadata !2339, null}
!2339 = metadata !{i32 786443, metadata !168, metadata !2337, i32 1647, i32 0, i32 133} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2340 = metadata !{i32 1648, i32 0, metadata !2339, null}
!2341 = metadata !{i32 1651, i32 0, metadata !2339, null}
!2342 = metadata !{i32 1654, i32 0, metadata !2343, null}
!2343 = metadata !{i32 786443, metadata !168, metadata !2327, i32 1654, i32 0, i32 134} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2344 = metadata !{i32 1656, i32 0, metadata !2345, null}
!2345 = metadata !{i32 786443, metadata !168, metadata !2343, i32 1655, i32 0, i32 135} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2346 = metadata !{i32 1657, i32 0, metadata !2345, null}
!2347 = metadata !{i32 1658, i32 0, metadata !2345, null}
!2348 = metadata !{i32 1662, i32 0, metadata !2349, null}
!2349 = metadata !{i32 786443, metadata !168, metadata !2325, i32 1662, i32 0, i32 136} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2350 = metadata !{i32 1678, i32 0, metadata !2351, null}
!2351 = metadata !{i32 786443, metadata !168, metadata !2349, i32 1677, i32 0, i32 137} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2352 = metadata !{i32 1679, i32 0, metadata !2353, null}
!2353 = metadata !{i32 786443, metadata !168, metadata !2351, i32 1679, i32 0, i32 138} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2354 = metadata !{i32 1681, i32 0, metadata !2355, null}
!2355 = metadata !{i32 786443, metadata !168, metadata !2353, i32 1680, i32 0, i32 139} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2356 = metadata !{i32 1682, i32 0, metadata !2355, null}
!2357 = metadata !{i32 1685, i32 0, metadata !2358, null}
!2358 = metadata !{i32 786443, metadata !168, metadata !2349, i32 1685, i32 0, i32 140} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2359 = metadata !{i32 1688, i32 0, metadata !2360, null}
!2360 = metadata !{i32 786443, metadata !168, metadata !2358, i32 1687, i32 0, i32 141} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2361 = metadata !{i32 1693, i32 0, metadata !2362, null}
!2362 = metadata !{i32 786443, metadata !168, metadata !2360, i32 1693, i32 0, i32 142} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2363 = metadata !{i32 1697, i32 0, metadata !2364, null}
!2364 = metadata !{i32 786443, metadata !168, metadata !2358, i32 1697, i32 0, i32 143} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2365 = metadata !{i32 1703, i32 0, metadata !2366, null}
!2366 = metadata !{i32 786443, metadata !168, metadata !2367, i32 1703, i32 0, i32 145} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2367 = metadata !{i32 786443, metadata !168, metadata !2364, i32 1698, i32 0, i32 144} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2368 = metadata !{i32 1705, i32 0, metadata !2369, null}
!2369 = metadata !{i32 786443, metadata !168, metadata !2366, i32 1705, i32 0, i32 146} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2370 = metadata !{i32 1708, i32 0, metadata !2371, null}
!2371 = metadata !{i32 786443, metadata !168, metadata !2369, i32 1707, i32 0, i32 147} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2372 = metadata !{i32 1709, i32 0, metadata !2371, null}
!2373 = metadata !{i32 1712, i32 0, metadata !2374, null}
!2374 = metadata !{i32 786443, metadata !168, metadata !2364, i32 1712, i32 0, i32 148} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2375 = metadata !{i32 1714, i32 0, metadata !2376, null}
!2376 = metadata !{i32 786443, metadata !168, metadata !2377, i32 1714, i32 0, i32 150} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2377 = metadata !{i32 786443, metadata !168, metadata !2374, i32 1713, i32 0, i32 149} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2378 = metadata !{i32 1717, i32 0, metadata !2379, null}
!2379 = metadata !{i32 786443, metadata !168, metadata !2376, i32 1716, i32 0, i32 151} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2380 = metadata !{i32 1718, i32 0, metadata !2379, null}
!2381 = metadata !{i32 1719, i32 0, metadata !2379, null}
!2382 = metadata !{i32 1722, i32 0, metadata !2383, null}
!2383 = metadata !{i32 786443, metadata !168, metadata !2374, i32 1722, i32 0, i32 152} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2384 = metadata !{i32 1724, i32 0, metadata !2385, null}
!2385 = metadata !{i32 786443, metadata !168, metadata !2383, i32 1723, i32 0, i32 153} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2386 = metadata !{i32 1725, i32 0, metadata !2387, null}
!2387 = metadata !{i32 786443, metadata !168, metadata !2385, i32 1725, i32 0, i32 154} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2388 = metadata !{i32 1727, i32 0, metadata !2389, null}
!2389 = metadata !{i32 786443, metadata !168, metadata !2387, i32 1726, i32 0, i32 155} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2390 = metadata !{i32 1728, i32 0, metadata !2389, null}
!2391 = metadata !{i32 1731, i32 0, metadata !2392, null}
!2392 = metadata !{i32 786443, metadata !168, metadata !2385, i32 1731, i32 0, i32 156} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2393 = metadata !{i32 1732, i32 0, metadata !2392, null}
!2394 = metadata !{i32 1735, i32 0, metadata !2395, null}
!2395 = metadata !{i32 786443, metadata !168, metadata !2392, i32 1734, i32 0, i32 157} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2396 = metadata !{i32 1736, i32 0, metadata !2395, null}
!2397 = metadata !{i32 1737, i32 0, metadata !2398, null}
!2398 = metadata !{i32 786443, metadata !168, metadata !2395, i32 1737, i32 0, i32 158} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2399 = metadata !{i32 1738, i32 0, metadata !2398, null}
!2400 = metadata !{i32 1744, i32 0, metadata !2401, null}
!2401 = metadata !{i32 786443, metadata !168, metadata !2398, i32 1739, i32 0, i32 159} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2402 = metadata !{i32 1745, i32 0, metadata !2403, null}
!2403 = metadata !{i32 786443, metadata !168, metadata !2401, i32 1745, i32 0, i32 160} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2404 = metadata !{i32 1746, i32 0, metadata !2403, null}
!2405 = metadata !{i32 1747, i32 0, metadata !2401, null}
!2406 = metadata !{i32 1748, i32 0, metadata !2401, null}
!2407 = metadata !{i32 1749, i32 0, metadata !2395, null}
!2408 = metadata !{i32 1751, i32 0, metadata !2409, null}
!2409 = metadata !{i32 786443, metadata !168, metadata !2395, i32 1751, i32 0, i32 161} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2410 = metadata !{i32 1753, i32 0, metadata !2411, null}
!2411 = metadata !{i32 786443, metadata !168, metadata !2409, i32 1752, i32 0, i32 162} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2412 = metadata !{i32 1754, i32 0, metadata !2411, null}
!2413 = metadata !{i32 1755, i32 0, metadata !2411, null}
!2414 = metadata !{i32 1760, i32 0, metadata !2385, null}
!2415 = metadata !{i32 1762, i32 0, metadata !2416, null}
!2416 = metadata !{i32 786443, metadata !168, metadata !2385, i32 1762, i32 0, i32 163} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2417 = metadata !{i32 1767, i32 0, metadata !2418, null}
!2418 = metadata !{i32 786443, metadata !168, metadata !2419, i32 1767, i32 0, i32 165} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2419 = metadata !{i32 786443, metadata !168, metadata !2416, i32 1763, i32 0, i32 164} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2420 = metadata !{i32 1768, i32 0, metadata !2418, null}
!2421 = metadata !{i32 1770, i32 0, metadata !2422, null}
!2422 = metadata !{i32 786443, metadata !168, metadata !2418, i32 1769, i32 0, i32 166} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2423 = metadata !{i32 1772, i32 0, metadata !2422, null}
!2424 = metadata !{i32 1784, i32 0, metadata !2425, null}
!2425 = metadata !{i32 786443, metadata !168, metadata !2383, i32 1783, i32 0, i32 167} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2426 = metadata !{i32 1785, i32 0, metadata !2425, null}
!2427 = metadata !{i32 1788, i32 0, metadata !2428, null}
!2428 = metadata !{i32 786443, metadata !168, metadata !265, i32 1788, i32 0, i32 168} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2429 = metadata !{i32 1789, i32 0, metadata !2428, null}
!2430 = metadata !{i32 1791, i32 0, metadata !2431, null}
!2431 = metadata !{i32 786443, metadata !168, metadata !265, i32 1791, i32 0, i32 169} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2432 = metadata !{i32 1792, i32 0, metadata !2431, null}
!2433 = metadata !{i32 1794, i32 0, metadata !2434, null}
!2434 = metadata !{i32 786443, metadata !168, metadata !265, i32 1794, i32 0, i32 170} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2435 = metadata !{i32 1795, i32 0, metadata !2434, null}
!2436 = metadata !{i32 1809, i32 0, metadata !2437, null}
!2437 = metadata !{i32 786443, metadata !168, metadata !265, i32 1809, i32 0, i32 171} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2438 = metadata !{i32 1812, i32 0, metadata !2439, null}
!2439 = metadata !{i32 786443, metadata !168, metadata !2437, i32 1810, i32 0, i32 172} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2440 = metadata !{i32 1812, i32 21, metadata !2439, null}
!2441 = metadata !{i32 1813, i32 0, metadata !2439, null}
!2442 = metadata !{i32 1813, i32 21, metadata !2439, null}
!2443 = metadata !{i32 1815, i32 0, metadata !2444, null}
!2444 = metadata !{i32 786443, metadata !168, metadata !2439, i32 1815, i32 0, i32 173} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2445 = metadata !{i32 1817, i32 0, metadata !2446, null}
!2446 = metadata !{i32 786443, metadata !168, metadata !2444, i32 1816, i32 0, i32 174} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2447 = metadata !{i32 1818, i32 0, metadata !2448, null}
!2448 = metadata !{i32 786443, metadata !168, metadata !2446, i32 1818, i32 0, i32 175} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2449 = metadata !{i32 1819, i32 0, metadata !2448, null}
!2450 = metadata !{i32 1824, i32 0, metadata !2451, null}
!2451 = metadata !{i32 786443, metadata !168, metadata !265, i32 1824, i32 0, i32 176} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2452 = metadata !{i32 1827, i32 0, metadata !2453, null}
!2453 = metadata !{i32 786443, metadata !168, metadata !2451, i32 1826, i32 0, i32 177} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2454 = metadata !{i32 1830, i32 0, metadata !2455, null}
!2455 = metadata !{i32 786443, metadata !168, metadata !2453, i32 1828, i32 0, i32 178} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2456 = metadata !{i32 1833, i32 0, metadata !2455, null}
!2457 = metadata !{i32 1834, i32 0, metadata !2455, null}
!2458 = metadata !{i32 1838, i32 0, metadata !265, null}
!2459 = metadata !{i32 1840, i32 0, metadata !2460, null}
!2460 = metadata !{i32 786443, metadata !168, metadata !265, i32 1840, i32 0, i32 179} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2461 = metadata !{i32 1842, i32 0, metadata !2462, null}
!2462 = metadata !{i32 786443, metadata !168, metadata !2463, i32 1842, i32 0, i32 181} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2463 = metadata !{i32 786443, metadata !168, metadata !2460, i32 1841, i32 0, i32 180} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2464 = metadata !{i32 1844, i32 0, metadata !2462, null}
!2465 = metadata !{i32 1846, i32 0, metadata !2466, null}
!2466 = metadata !{i32 786443, metadata !168, metadata !2460, i32 1846, i32 0, i32 182} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2467 = metadata !{i32 1848, i32 0, metadata !2468, null}
!2468 = metadata !{i32 786443, metadata !168, metadata !2469, i32 1848, i32 0, i32 184} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2469 = metadata !{i32 786443, metadata !168, metadata !2466, i32 1847, i32 0, i32 183} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2470 = metadata !{i32 1849, i32 0, metadata !2468, null}
!2471 = metadata !{i32 1853, i32 0, metadata !2472, null}
!2472 = metadata !{i32 786443, metadata !168, metadata !2473, i32 1853, i32 0, i32 186} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2473 = metadata !{i32 786443, metadata !168, metadata !2466, i32 1852, i32 0, i32 185} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2474 = metadata !{i32 1855, i32 0, metadata !2475, null}
!2475 = metadata !{i32 786443, metadata !168, metadata !2472, i32 1854, i32 0, i32 187} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2476 = metadata !{i32 1857, i32 0, metadata !2477, null}
!2477 = metadata !{i32 786443, metadata !168, metadata !2475, i32 1857, i32 0, i32 188} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2478 = metadata !{i32 1865, i32 0, metadata !2479, null}
!2479 = metadata !{i32 786443, metadata !168, metadata !2480, i32 1865, i32 0, i32 190} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2480 = metadata !{i32 786443, metadata !168, metadata !2477, i32 1858, i32 0, i32 189} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2481 = metadata !{i32 1867, i32 0, metadata !2482, null}
!2482 = metadata !{i32 786443, metadata !168, metadata !2479, i32 1866, i32 0, i32 191} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2483 = metadata !{i32 1868, i32 0, metadata !2482, null}
!2484 = metadata !{i32 1870, i32 0, metadata !2480, null}
!2485 = metadata !{i32 1871, i32 0, metadata !2486, null}
!2486 = metadata !{i32 786443, metadata !168, metadata !2480, i32 1871, i32 0, i32 192} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2487 = metadata !{i32 1872, i32 0, metadata !2486, null}
!2488 = metadata !{i32 1876, i32 0, metadata !2489, null}
!2489 = metadata !{i32 786443, metadata !168, metadata !2473, i32 1876, i32 0, i32 193} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2490 = metadata !{i32 1878, i32 0, metadata !2491, null}
!2491 = metadata !{i32 786443, metadata !168, metadata !2492, i32 1878, i32 0, i32 195} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2492 = metadata !{i32 786443, metadata !168, metadata !2489, i32 1877, i32 0, i32 194} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2493 = metadata !{i32 1880, i32 0, metadata !2494, null}
!2494 = metadata !{i32 786443, metadata !168, metadata !2491, i32 1879, i32 0, i32 196} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2495 = metadata !{i32 1881, i32 0, metadata !2494, null}
!2496 = metadata !{i32 1882, i32 0, metadata !2497, null}
!2497 = metadata !{i32 786443, metadata !168, metadata !2494, i32 1882, i32 0, i32 197} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2498 = metadata !{i32 1883, i32 0, metadata !2497, null}
!2499 = metadata !{i32 1888, i32 0, metadata !265, null}
!2500 = metadata !{i32 1898, i32 0, metadata !2501, null}
!2501 = metadata !{i32 786443, metadata !168, metadata !265, i32 1898, i32 0, i32 198} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2502 = metadata !{i32 1899, i32 0, metadata !2501, null}
!2503 = metadata !{i32 1901, i32 0, metadata !2504, null}
!2504 = metadata !{i32 786443, metadata !168, metadata !265, i32 1901, i32 0, i32 199} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2505 = metadata !{i32 1903, i32 0, metadata !2506, null}
!2506 = metadata !{i32 786443, metadata !168, metadata !2507, i32 1903, i32 0, i32 201} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2507 = metadata !{i32 786443, metadata !168, metadata !2504, i32 1902, i32 0, i32 200} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2508 = metadata !{i32 1904, i32 0, metadata !2506, null}
!2509 = metadata !{i32 1907, i32 0, metadata !2510, null}
!2510 = metadata !{i32 786443, metadata !168, metadata !2511, i32 1907, i32 0, i32 203} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2511 = metadata !{i32 786443, metadata !168, metadata !2506, i32 1906, i32 0, i32 202} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2512 = metadata !{i32 1909, i32 0, metadata !2510, null}
!2513 = metadata !{i32 1908, i32 0, metadata !2510, null}
!2514 = metadata !{i32 1912, i32 0, metadata !265, null}
!2515 = metadata !{i32 1913, i32 0, metadata !265, null}
!2516 = metadata !{i32 277, i32 0, metadata !2517, null}
!2517 = metadata !{i32 786443, metadata !168, metadata !175} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2518 = metadata !{i32 280, i32 0, metadata !2517, null}
!2519 = metadata !{i32 283, i32 0, metadata !2517, null}
!2520 = metadata !{i32 285, i32 0, metadata !2517, null}
!2521 = metadata !{i32 286, i32 0, metadata !2522, null}
!2522 = metadata !{i32 786443, metadata !168, metadata !2517, i32 286, i32 0, i32 212} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2523 = metadata !{i32 288, i32 0, metadata !2524, null}
!2524 = metadata !{i32 786443, metadata !168, metadata !2522, i32 287, i32 0, i32 213} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2525 = metadata !{i32 289, i32 0, metadata !2524, null}
!2526 = metadata !{i32 292, i32 0, metadata !2527, null}
!2527 = metadata !{i32 786443, metadata !168, metadata !2517, i32 292, i32 0, i32 214} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2528 = metadata !{i32 294, i32 0, metadata !2529, null}
!2529 = metadata !{i32 786443, metadata !168, metadata !2527, i32 293, i32 0, i32 215} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2530 = metadata !{i32 295, i32 0, metadata !2529, null}
!2531 = metadata !{i32 296, i32 0, metadata !2529, null}
!2532 = metadata !{i32 301, i32 0, metadata !2533, null}
!2533 = metadata !{i32 786443, metadata !168, metadata !2517, i32 301, i32 0, i32 216} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2534 = metadata !{i32 305, i32 0, metadata !2535, null}
!2535 = metadata !{i32 786443, metadata !168, metadata !2533, i32 302, i32 0, i32 217} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2536 = metadata !{i32 303, i32 0, metadata !2535, null}
!2537 = metadata !{i32 306, i32 0, metadata !2535, null}
!2538 = metadata !{i32 307, i32 0, metadata !2535, null}
!2539 = metadata !{i32 312, i32 0, metadata !2540, null}
!2540 = metadata !{i32 786443, metadata !168, metadata !2517, i32 312, i32 0, i32 218} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2541 = metadata !{i32 314, i32 0, metadata !2542, null}
!2542 = metadata !{i32 786443, metadata !168, metadata !2540, i32 313, i32 0, i32 219} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2543 = metadata !{i32 316, i32 0, metadata !2544, null}
!2544 = metadata !{i32 786443, metadata !168, metadata !2542, i32 316, i32 0, i32 220} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2545 = metadata !{i32 318, i32 0, metadata !2546, null}
!2546 = metadata !{i32 786443, metadata !168, metadata !2547, i32 318, i32 0, i32 222} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2547 = metadata !{i32 786443, metadata !168, metadata !2544, i32 317, i32 0, i32 221} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2548 = metadata !{i32 320, i32 0, metadata !2549, null}
!2549 = metadata !{i32 786443, metadata !168, metadata !2546, i32 319, i32 0, i32 223} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2550 = metadata !{i32 321, i32 0, metadata !2549, null}
!2551 = metadata !{i32 322, i32 0, metadata !2549, null}
!2552 = metadata !{i32 324, i32 0, metadata !2553, null}
!2553 = metadata !{i32 786443, metadata !168, metadata !2547, i32 324, i32 0, i32 224} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2554 = metadata !{i32 325, i32 0, metadata !2553, null}
!2555 = metadata !{i32 328, i32 0, metadata !2547, null}
!2556 = metadata !{i32 329, i32 0, metadata !2547, null}
!2557 = metadata !{i32 332, i32 0, metadata !2558, null}
!2558 = metadata !{i32 786443, metadata !168, metadata !2517, i32 332, i32 0, i32 225} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2559 = metadata !{i32 333, i32 0, metadata !2558, null}
!2560 = metadata !{i32 336, i32 0, metadata !2558, null}
!2561 = metadata !{i32 338, i32 0, metadata !2562, null}
!2562 = metadata !{i32 786443, metadata !168, metadata !2517, i32 338, i32 0, i32 226} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2563 = metadata !{i32 340, i32 0, metadata !2564, null}
!2564 = metadata !{i32 786443, metadata !168, metadata !2562, i32 339, i32 0, i32 227} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2565 = metadata !{i32 341, i32 0, metadata !2564, null}
!2566 = metadata !{i32 342, i32 0, metadata !2564, null}
!2567 = metadata !{i32 345, i32 0, metadata !2568, null}
!2568 = metadata !{i32 786443, metadata !168, metadata !2517, i32 345, i32 0, i32 228} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2569 = metadata !{i32 347, i32 0, metadata !2570, null}
!2570 = metadata !{i32 786443, metadata !168, metadata !2568, i32 346, i32 0, i32 229} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2571 = metadata !{i32 348, i32 0, metadata !2570, null}
!2572 = metadata !{i32 349, i32 0, metadata !2570, null}
!2573 = metadata !{i32 352, i32 0, metadata !2574, null}
!2574 = metadata !{i32 786443, metadata !168, metadata !2517, i32 352, i32 0, i32 230} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2575 = metadata !{i32 355, i32 0, metadata !2576, null}
!2576 = metadata !{i32 786443, metadata !168, metadata !2574, i32 353, i32 0, i32 231} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2577 = metadata !{i32 358, i32 0, metadata !2576, null}
!2578 = metadata !{i32 358, i32 30, metadata !2576, null}
!2579 = metadata !{i32 359, i32 0, metadata !2576, null}
!2580 = metadata !{i32 360, i32 0, metadata !2576, null}
!2581 = metadata !{i32 363, i32 0, metadata !2576, null}
!2582 = metadata !{i32 364, i32 0, metadata !2576, null}
!2583 = metadata !{i32 366, i32 0, metadata !2584, null}
!2584 = metadata !{i32 786443, metadata !168, metadata !2576, i32 366, i32 0, i32 232} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2585 = metadata !{i32 370, i32 0, metadata !2586, null}
!2586 = metadata !{i32 786443, metadata !168, metadata !2587, i32 370, i32 0, i32 234} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2587 = metadata !{i32 786443, metadata !168, metadata !2584, i32 367, i32 0, i32 233} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2588 = metadata !{i32 371, i32 0, metadata !2586, null}
!2589 = metadata !{i32 378, i32 0, metadata !2590, null}
!2590 = metadata !{i32 786443, metadata !168, metadata !2587, i32 378, i32 0, i32 235} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2591 = metadata !{i32 380, i32 0, metadata !2590, null}
!2592 = metadata !{i32 386, i32 0, metadata !2593, null}
!2593 = metadata !{i32 786443, metadata !168, metadata !2576, i32 386, i32 0, i32 236} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2594 = metadata !{i32 396, i32 0, metadata !2595, null}
!2595 = metadata !{i32 786443, metadata !168, metadata !2593, i32 387, i32 0, i32 237} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2596 = metadata !{i32 397, i32 0, metadata !2595, null}
!2597 = metadata !{i32 401, i32 0, metadata !2595, null}
!2598 = metadata !{i32 405, i32 0, metadata !2599, null}
!2599 = metadata !{i32 786443, metadata !168, metadata !2595, i32 405, i32 0, i32 238} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2600 = metadata !{i32 406, i32 0, metadata !2599, null}
!2601 = metadata !{i32 411, i32 0, metadata !2595, null}
!2602 = metadata !{i32 412, i32 0, metadata !2595, null}
!2603 = metadata !{i32 413, i32 0, metadata !2604, null}
!2604 = metadata !{i32 786443, metadata !168, metadata !2595, i32 413, i32 0, i32 239} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2605 = metadata !{i32 414, i32 0, metadata !2604, null}
!2606 = metadata !{i32 418, i32 0, metadata !2576, null}
!2607 = metadata !{i32 419, i32 13, metadata !2576, null}
!2608 = metadata !{i32 421, i32 0, metadata !2609, null}
!2609 = metadata !{i32 786443, metadata !168, metadata !2576, i32 421, i32 0, i32 240} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2610 = metadata !{i32 423, i32 0, metadata !2611, null}
!2611 = metadata !{i32 786443, metadata !168, metadata !2609, i32 422, i32 0, i32 241} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2612 = metadata !{i32 425, i32 0, metadata !2611, null}
!2613 = metadata !{i32 426, i32 0, metadata !2614, null}
!2614 = metadata !{i32 786443, metadata !168, metadata !2611, i32 426, i32 0, i32 242} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2615 = metadata !{i32 429, i32 0, metadata !2616, null}
!2616 = metadata !{i32 786443, metadata !168, metadata !2617, i32 429, i32 0, i32 244} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2617 = metadata !{i32 786443, metadata !168, metadata !2614, i32 427, i32 0, i32 243} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2618 = metadata !{i32 432, i32 0, metadata !2617, null}
!2619 = metadata !{i32 433, i32 0, metadata !2617, null}
!2620 = metadata !{i32 434, i32 0, metadata !2617, null}
!2621 = metadata !{i32 436, i32 0, metadata !2622, null}
!2622 = metadata !{i32 786443, metadata !168, metadata !2611, i32 436, i32 0, i32 245} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2623 = metadata !{i32 439, i32 0, metadata !2611, null}
!2624 = metadata !{i32 441, i32 0, metadata !2625, null}
!2625 = metadata !{i32 786443, metadata !168, metadata !2611, i32 441, i32 0, i32 246} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2626 = metadata !{i32 445, i32 0, metadata !2627, null}
!2627 = metadata !{i32 786443, metadata !168, metadata !2625, i32 442, i32 0, i32 247} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2628 = metadata !{i32 449, i32 0, metadata !2627, null}
!2629 = metadata !{i32 450, i32 0, metadata !2627, null}
!2630 = metadata !{i32 455, i32 0, metadata !2627, null}
!2631 = metadata !{i32 456, i32 0, metadata !2627, null}
!2632 = metadata !{i32 459, i32 0, metadata !2633, null}
!2633 = metadata !{i32 786443, metadata !168, metadata !2627, i32 459, i32 0, i32 248} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2634 = metadata !{i32 461, i32 0, metadata !2633, null}
!2635 = metadata !{i32 466, i32 0, metadata !2636, null}
!2636 = metadata !{i32 786443, metadata !168, metadata !2637, i32 466, i32 0, i32 250} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2637 = metadata !{i32 786443, metadata !168, metadata !2633, i32 463, i32 0, i32 249} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2638 = metadata !{i32 468, i32 0, metadata !2639, null}
!2639 = metadata !{i32 786443, metadata !168, metadata !2636, i32 467, i32 0, i32 251} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2640 = metadata !{i32 469, i32 0, metadata !2639, null}
!2641 = metadata !{i32 470, i32 0, metadata !2639, null}
!2642 = metadata !{i32 472, i32 0, metadata !2637, null}
!2643 = metadata !{i32 476, i32 0, metadata !2644, null}
!2644 = metadata !{i32 786443, metadata !168, metadata !2611, i32 476, i32 0, i32 252} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2645 = metadata !{i32 478, i32 0, metadata !2646, null}
!2646 = metadata !{i32 786443, metadata !168, metadata !2644, i32 477, i32 0, i32 253} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2647 = metadata !{i32 479, i32 0, metadata !2648, null}
!2648 = metadata !{i32 786443, metadata !168, metadata !2646, i32 479, i32 0, i32 254} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2649 = metadata !{i32 481, i32 0, metadata !2650, null}
!2650 = metadata !{i32 786443, metadata !168, metadata !2648, i32 480, i32 0, i32 255} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2651 = metadata !{i32 482, i32 0, metadata !2650, null}
!2652 = metadata !{i32 483, i32 0, metadata !2650, null}
!2653 = metadata !{i32 485, i32 0, metadata !2646, null}
!2654 = metadata !{i32 488, i32 0, metadata !2655, null}
!2655 = metadata !{i32 786443, metadata !168, metadata !2646, i32 488, i32 0, i32 256} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2656 = metadata !{i32 499, i32 0, metadata !2657, null}
!2657 = metadata !{i32 786443, metadata !168, metadata !2576, i32 499, i32 0, i32 257} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2658 = metadata !{i32 504, i32 0, metadata !2659, null}
!2659 = metadata !{i32 786443, metadata !168, metadata !2660, i32 501, i32 0, i32 259} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2660 = metadata !{i32 786443, metadata !168, metadata !2657, i32 500, i32 0, i32 258} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2661 = metadata !{i32 509, i32 0, metadata !2662, null}
!2662 = metadata !{i32 786443, metadata !168, metadata !2659, i32 508, i32 0, i32 260} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2663 = metadata !{i32 510, i32 0, metadata !2662, null}
!2664 = metadata !{i32 511, i32 0, metadata !2662, null}
!2665 = metadata !{i32 516, i32 0, metadata !2666, null}
!2666 = metadata !{i32 786443, metadata !168, metadata !2517, i32 516, i32 0, i32 261} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2667 = metadata !{i32 519, i32 0, metadata !2668, null}
!2668 = metadata !{i32 786443, metadata !168, metadata !2666, i32 517, i32 0, i32 262} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2669 = metadata !{i32 519, i32 21, metadata !2668, null}
!2670 = metadata !{i32 520, i32 0, metadata !2668, null}
!2671 = metadata !{i32 520, i32 21, metadata !2668, null}
!2672 = metadata !{i32 522, i32 0, metadata !2673, null}
!2673 = metadata !{i32 786443, metadata !168, metadata !2668, i32 522, i32 0, i32 263} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2674 = metadata !{i32 524, i32 0, metadata !2675, null}
!2675 = metadata !{i32 786443, metadata !168, metadata !2673, i32 523, i32 0, i32 264} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2676 = metadata !{i32 525, i32 0, metadata !2677, null}
!2677 = metadata !{i32 786443, metadata !168, metadata !2675, i32 525, i32 0, i32 265} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2678 = metadata !{i32 527, i32 0, metadata !2679, null}
!2679 = metadata !{i32 786443, metadata !168, metadata !2677, i32 526, i32 0, i32 266} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2680 = metadata !{i32 528, i32 0, metadata !2679, null}
!2681 = metadata !{i32 533, i32 0, metadata !2682, null}
!2682 = metadata !{i32 786443, metadata !168, metadata !2517, i32 533, i32 0, i32 267} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2683 = metadata !{i32 535, i32 0, metadata !2684, null}
!2684 = metadata !{i32 786443, metadata !168, metadata !2682, i32 534, i32 0, i32 268} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2685 = metadata !{i32 539, i32 0, metadata !2686, null}
!2686 = metadata !{i32 786443, metadata !168, metadata !2684, i32 537, i32 0, i32 269} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2687 = metadata !{i32 540, i32 0, metadata !2686, null}
!2688 = metadata !{i32 543, i32 0, metadata !2686, null}
!2689 = metadata !{i32 544, i32 0, metadata !2686, null}
!2690 = metadata !{i32 548, i32 0, metadata !2517, null}
!2691 = metadata !{i32 550, i32 0, metadata !2692, null}
!2692 = metadata !{i32 786443, metadata !168, metadata !2517, i32 550, i32 0, i32 270} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2693 = metadata !{i32 552, i32 0, metadata !2694, null}
!2694 = metadata !{i32 786443, metadata !168, metadata !2695, i32 552, i32 0, i32 272} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2695 = metadata !{i32 786443, metadata !168, metadata !2692, i32 551, i32 0, i32 271} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2696 = metadata !{i32 554, i32 0, metadata !2694, null}
!2697 = metadata !{i32 556, i32 0, metadata !2698, null}
!2698 = metadata !{i32 786443, metadata !168, metadata !2692, i32 556, i32 0, i32 273} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2699 = metadata !{i32 558, i32 0, metadata !2700, null}
!2700 = metadata !{i32 786443, metadata !168, metadata !2701, i32 558, i32 0, i32 275} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2701 = metadata !{i32 786443, metadata !168, metadata !2698, i32 557, i32 0, i32 274} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2702 = metadata !{i32 559, i32 0, metadata !2700, null}
!2703 = metadata !{i32 561, i32 0, metadata !2704, null}
!2704 = metadata !{i32 786443, metadata !168, metadata !2698, i32 561, i32 0, i32 276} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2705 = metadata !{i32 563, i32 0, metadata !2706, null}
!2706 = metadata !{i32 786443, metadata !168, metadata !2704, i32 562, i32 0, i32 277} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2707 = metadata !{i32 564, i32 0, metadata !2708, null}
!2708 = metadata !{i32 786443, metadata !168, metadata !2706, i32 564, i32 0, i32 278} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2709 = metadata !{i32 565, i32 0, metadata !2708, null}
!2710 = metadata !{i32 567, i32 0, metadata !2711, null}
!2711 = metadata !{i32 786443, metadata !168, metadata !2708, i32 566, i32 0, i32 279} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2712 = metadata !{i32 568, i32 0, metadata !2711, null}
!2713 = metadata !{i32 569, i32 0, metadata !2714, null}
!2714 = metadata !{i32 786443, metadata !168, metadata !2711, i32 569, i32 0, i32 280} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2715 = metadata !{i32 570, i32 0, metadata !2714, null}
!2716 = metadata !{i32 575, i32 0, metadata !2717, null}
!2717 = metadata !{i32 786443, metadata !168, metadata !2517, i32 575, i32 0, i32 281} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2718 = metadata !{i32 577, i32 0, metadata !2719, null}
!2719 = metadata !{i32 786443, metadata !168, metadata !2717, i32 576, i32 0, i32 282} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2720 = metadata !{i32 578, i32 0, metadata !2719, null}
!2721 = metadata !{i32 579, i32 0, metadata !2719, null}
!2722 = metadata !{i32 581, i32 0, metadata !2723, null}
!2723 = metadata !{i32 786443, metadata !168, metadata !2517, i32 581, i32 0, i32 283} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2724 = metadata !{i32 583, i32 0, metadata !2725, null}
!2725 = metadata !{i32 786443, metadata !168, metadata !2723, i32 582, i32 0, i32 284} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2726 = metadata !{i32 584, i32 0, metadata !2725, null}
!2727 = metadata !{i32 585, i32 0, metadata !2725, null}
!2728 = metadata !{i32 587, i32 0, metadata !2517, null}
!2729 = metadata !{i32 588, i32 0, metadata !2517, null}
!2730 = metadata !{i32 589, i32 0, metadata !2517, null}
!2731 = metadata !{i32 243, i32 0, metadata !276, null}
!2732 = metadata !{i32 197, i32 0, metadata !2733, null}
!2733 = metadata !{i32 786443, metadata !168, metadata !279, i32 197, i32 0, i32 204} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2734 = metadata !{i32 199, i32 0, metadata !2735, null}
!2735 = metadata !{i32 786443, metadata !168, metadata !2736, i32 199, i32 0, i32 206} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2736 = metadata !{i32 786443, metadata !168, metadata !2733, i32 198, i32 0, i32 205} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2737 = metadata !{i32 200, i32 0, metadata !2735, null}
!2738 = metadata !{i32 204, i32 0, metadata !2739, null}
!2739 = metadata !{i32 786443, metadata !168, metadata !2740, i32 204, i32 0, i32 208} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2740 = metadata !{i32 786443, metadata !168, metadata !2733, i32 203, i32 0, i32 207} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2741 = metadata !{i32 205, i32 0, metadata !2739, null}
!2742 = metadata !{i32 208, i32 0, metadata !2743, null}
!2743 = metadata !{i32 786443, metadata !168, metadata !279, i32 208, i32 0, i32 209} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2744 = metadata !{i32 210, i32 0, metadata !2745, null}
!2745 = metadata !{i32 786443, metadata !168, metadata !2743, i32 209, i32 0, i32 210} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2746 = metadata !{i32 211, i32 0, metadata !2745, null}
!2747 = metadata !{i32 212, i32 0, metadata !2748, null}
!2748 = metadata !{i32 786443, metadata !168, metadata !2745, i32 212, i32 0, i32 211} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2749 = metadata !{i32 213, i32 0, metadata !2748, null}
!2750 = metadata !{i32 216, i32 0, metadata !279, null}
!2751 = metadata !{i32 217, i32 0, metadata !279, null}
!2752 = metadata !{i32 125, i32 0, metadata !2753, null}
!2753 = metadata !{i32 786443, metadata !285, metadata !284} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/../lib/stat-time.h]
!2754 = metadata !{i32 97, i32 0, metadata !289, null}
!2755 = metadata !{i32 252, i32 0, metadata !2756, null}
!2756 = metadata !{i32 786443, metadata !168, metadata !290, i32 252, i32 0, i32 285} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2757 = metadata !{i32 253, i32 0, metadata !2756, null}
!2758 = metadata !{i32 255, i32 0, metadata !290, null}
!2759 = metadata !{i32 256, i32 0, metadata !290, null}
!2760 = metadata !{i32 564, i32 0, metadata !2761, null}
!2761 = metadata !{i32 786443, metadata !294, metadata !293} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!2762 = metadata !{i32 565, i32 0, metadata !2761, null}
!2763 = metadata !{i32 566, i32 0, metadata !2761, null}
!2764 = metadata !{i32 553, i32 0, metadata !302, null}
!2765 = metadata !{i32 553, i32 19, metadata !302, null}
!2766 = metadata !{i32 535, i32 0, metadata !305, null}
!2767 = metadata !{i32 537, i32 0, metadata !2768, null}
!2768 = metadata !{i32 786443, metadata !294, metadata !305, i32 536, i32 0, i32 286} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!2769 = metadata !{i32 538, i32 0, metadata !2768, null}
!2770 = metadata !{i32 539, i32 0, metadata !2768, null}
!2771 = metadata !{i32 540, i32 0, metadata !2768, null}
!2772 = metadata !{i32 543, i32 0, metadata !305, null}
!2773 = metadata !{i32 148, i32 0, metadata !2774, null}
!2774 = metadata !{i32 786443, metadata !168, metadata !306} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2775 = metadata !{i32 149, i32 0, metadata !2774, null}
!2776 = metadata !{i32 151, i32 0, metadata !2774, null}
!2777 = metadata !{i32 152, i32 0, metadata !2778, null}
!2778 = metadata !{i32 786443, metadata !168, metadata !2774, i32 152, i32 0, i32 287} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2779 = metadata !{i32 156, i32 0, metadata !2780, null}
!2780 = metadata !{i32 786443, metadata !168, metadata !2778, i32 153, i32 0, i32 288} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2781 = metadata !{i32 157, i32 0, metadata !2780, null}
!2782 = metadata !{i32 162, i32 0, metadata !2783, null}
!2783 = metadata !{i32 786443, metadata !168, metadata !2774, i32 162, i32 0, i32 289} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2784 = metadata !{i32 163, i32 0, metadata !2783, null}
!2785 = metadata !{i32 165, i32 0, metadata !2774, null}
!2786 = metadata !{i32 166, i32 0, metadata !2774, null}
!2787 = metadata !{i32 169, i32 0, metadata !2788, null}
!2788 = metadata !{i32 786443, metadata !168, metadata !2774, i32 167, i32 0, i32 290} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2789 = metadata !{i32 170, i32 0, metadata !2788, null}
!2790 = metadata !{i32 172, i32 0, metadata !2788, null}
!2791 = metadata !{i32 175, i32 0, metadata !2788, null}
!2792 = metadata !{i32 177, i32 0, metadata !2788, null}
!2793 = metadata !{i32 178, i32 0, metadata !2788, null}
!2794 = metadata !{i32 180, i32 0, metadata !2788, null}
!2795 = metadata !{i32 181, i32 0, metadata !2788, null}
!2796 = metadata !{i32 182, i32 0, metadata !2774, null}
!2797 = metadata !{i32 183, i32 0, metadata !2774, null}
!2798 = metadata !{i32 184, i32 0, metadata !2774, null}
!2799 = metadata !{i32 124, i32 0, metadata !309, null}
!2800 = metadata !{i32 126, i32 0, metadata !2801, null}
!2801 = metadata !{i32 786443, metadata !168, metadata !2802, i32 126, i32 0, i32 292} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2802 = metadata !{i32 786443, metadata !168, metadata !309, i32 125, i32 0, i32 291} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2803 = metadata !{i32 127, i32 0, metadata !2801, null}
!2804 = metadata !{i32 128, i32 0, metadata !2802, null}
!2805 = metadata !{i32 129, i32 0, metadata !2802, null}
!2806 = metadata !{i32 130, i32 0, metadata !309, null}
!2807 = metadata !{i32 131, i32 0, metadata !309, null}
!2808 = metadata !{i32 989, i32 0, metadata !314, null}
!2809 = metadata !{i32 990, i32 0, metadata !2810, null}
!2810 = metadata !{i32 786443, metadata !168, metadata !314, i32 990, i32 0, i32 293} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2811 = metadata !{i32 991, i32 0, metadata !2810, null}
!2812 = metadata !{i32 992, i32 0, metadata !314, null}
!2813 = metadata !{i32 993, i32 0, metadata !314, null}
!2814 = metadata !{i32 371, i32 0, metadata !2815, null}
!2815 = metadata !{i32 786443, metadata !294, metadata !2816, i32 371, i32 0, i32 294} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!2816 = metadata !{i32 786443, metadata !294, metadata !317} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!2817 = metadata !{i32 373, i32 0, metadata !2818, null}
!2818 = metadata !{i32 786443, metadata !294, metadata !2815, i32 372, i32 0, i32 295} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!2819 = metadata !{i32 374, i32 0, metadata !2818, null}
!2820 = metadata !{i32 377, i32 0, metadata !2815, null}
!2821 = metadata !{i32 378, i32 0, metadata !2816, null}
!2822 = metadata !{i32 800, i32 0, metadata !2823, null}
!2823 = metadata !{i32 786443, metadata !168, metadata !2824, i32 800, i32 0, i32 296} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2824 = metadata !{i32 786443, metadata !168, metadata !318} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2825 = metadata !{i32 802, i32 0, metadata !2826, null}
!2826 = metadata !{i32 786443, metadata !168, metadata !2823, i32 801, i32 0, i32 297} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2827 = metadata !{i32 804, i32 0, metadata !2826, null}
!2828 = metadata !{i32 806, i32 0, metadata !2826, null}
!2829 = metadata !{i32 809, i32 0, metadata !2830, null}
!2830 = metadata !{i32 786443, metadata !168, metadata !2823, i32 808, i32 0, i32 298} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2831 = metadata !{i32 812, i32 0, metadata !2824, null}
!2832 = metadata !{i32 973, i32 0, metadata !321, null}
!2833 = metadata !{i32 974, i32 0, metadata !321, null}
!2834 = metadata !{i32 978, i32 0, metadata !321, null}
!2835 = metadata !{i32 979, i32 0, metadata !321, null}
!2836 = metadata !{i32 980, i32 0, metadata !321, null}
!2837 = metadata !{i32 981, i32 0, metadata !321, null}
!2838 = metadata !{i32 619, i32 0, metadata !324, null}
!2839 = metadata !{i32 621, i32 0, metadata !324, null}
!2840 = metadata !{i32 622, i32 0, metadata !324, null}
!2841 = metadata !{i32 629, i32 0, metadata !2842, null}
!2842 = metadata !{i32 786443, metadata !168, metadata !324, i32 629, i32 0, i32 299} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2843 = metadata !{i32 631, i32 0, metadata !2844, null}
!2844 = metadata !{i32 786443, metadata !168, metadata !2842, i32 630, i32 0, i32 300} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2845 = metadata !{i32 632, i32 0, metadata !2844, null}
!2846 = metadata !{i32 635, i32 0, metadata !2847, null}
!2847 = metadata !{i32 786443, metadata !168, metadata !324, i32 635, i32 0, i32 301} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2848 = metadata !{i32 637, i32 0, metadata !2849, null}
!2849 = metadata !{i32 786443, metadata !168, metadata !2847, i32 636, i32 0, i32 302} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2850 = metadata !{i32 642, i32 0, metadata !2851, null}
!2851 = metadata !{i32 786443, metadata !168, metadata !2849, i32 642, i32 0, i32 303} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2852 = metadata !{i32 643, i32 0, metadata !2851, null}
!2853 = metadata !{i32 645, i32 0, metadata !2849, null}
!2854 = metadata !{i32 646, i32 0, metadata !2849, null}
!2855 = metadata !{i32 647, i32 0, metadata !2849, null}
!2856 = metadata !{i32 650, i32 0, metadata !2857, null}
!2857 = metadata !{i32 786443, metadata !168, metadata !2858, i32 650, i32 0, i32 305} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2858 = metadata !{i32 786443, metadata !168, metadata !2847, i32 649, i32 0, i32 304} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2859 = metadata !{i32 651, i32 0, metadata !2857, null}
!2860 = metadata !{i32 653, i32 0, metadata !2861, null}
!2861 = metadata !{i32 786443, metadata !168, metadata !2858, i32 653, i32 0, i32 306} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2862 = metadata !{i32 654, i32 0, metadata !2861, null}
!2863 = metadata !{i32 655, i32 0, metadata !2861, null}
!2864 = metadata !{i32 657, i32 0, metadata !2858, null}
!2865 = metadata !{i32 658, i32 0, metadata !2858, null}
!2866 = metadata !{i32 660, i32 0, metadata !2858, null}
!2867 = metadata !{i32 667, i32 0, metadata !2868, null}
!2868 = metadata !{i32 786443, metadata !168, metadata !2858, i32 667, i32 0, i32 307} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2869 = metadata !{i32 669, i32 0, metadata !2868, null}
!2870 = metadata !{i32 677, i32 0, metadata !2871, null}
!2871 = metadata !{i32 786443, metadata !168, metadata !324, i32 677, i32 0, i32 308} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2872 = metadata !{i32 679, i32 0, metadata !2873, null}
!2873 = metadata !{i32 786443, metadata !168, metadata !2874, i32 679, i32 0, i32 310} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2874 = metadata !{i32 786443, metadata !168, metadata !2871, i32 678, i32 0, i32 309} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2875 = metadata !{i32 697, i32 0, metadata !2876, null}
!2876 = metadata !{i32 786443, metadata !168, metadata !2877, i32 697, i32 0, i32 312} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2877 = metadata !{i32 786443, metadata !168, metadata !2873, i32 680, i32 0, i32 311} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2878 = metadata !{i32 701, i32 0, metadata !2876, null}
!2879 = metadata !{i32 703, i32 0, metadata !2877, null}
!2880 = metadata !{i32 706, i32 0, metadata !2874, null}
!2881 = metadata !{i32 731, i32 0, metadata !2882, null}
!2882 = metadata !{i32 786443, metadata !168, metadata !324, i32 731, i32 0, i32 313} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2883 = metadata !{i32 733, i32 0, metadata !2884, null}
!2884 = metadata !{i32 786443, metadata !168, metadata !2885, i32 733, i32 0, i32 315} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2885 = metadata !{i32 786443, metadata !168, metadata !2882, i32 732, i32 0, i32 314} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2886 = metadata !{i32 734, i32 0, metadata !2884, null}
!2887 = metadata !{i32 736, i32 0, metadata !2888, null}
!2888 = metadata !{i32 786443, metadata !168, metadata !2885, i32 736, i32 0, i32 316} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2889 = metadata !{i32 738, i32 0, metadata !2888, null}
!2890 = metadata !{i32 740, i32 0, metadata !2891, null}
!2891 = metadata !{i32 786443, metadata !168, metadata !2892, i32 740, i32 0, i32 318} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2892 = metadata !{i32 786443, metadata !168, metadata !2888, i32 739, i32 0, i32 317} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2893 = metadata !{i32 742, i32 0, metadata !2894, null}
!2894 = metadata !{i32 786443, metadata !168, metadata !2891, i32 741, i32 0, i32 319} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2895 = metadata !{i32 743, i32 0, metadata !2894, null}
!2896 = metadata !{i32 744, i32 0, metadata !2894, null}
!2897 = metadata !{i32 745, i32 0, metadata !2892, null}
!2898 = metadata !{i32 751, i32 0, metadata !2899, null}
!2899 = metadata !{i32 786443, metadata !168, metadata !324, i32 751, i32 0, i32 320} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2900 = metadata !{i32 753, i32 0, metadata !2901, null}
!2901 = metadata !{i32 786443, metadata !168, metadata !2902, i32 753, i32 0, i32 322} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2902 = metadata !{i32 786443, metadata !168, metadata !2899, i32 752, i32 0, i32 321} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2903 = metadata !{i32 754, i32 0, metadata !2901, null}
!2904 = metadata !{i32 757, i32 0, metadata !2905, null}
!2905 = metadata !{i32 786443, metadata !168, metadata !2902, i32 757, i32 0, i32 323} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2906 = metadata !{i32 759, i32 0, metadata !2907, null}
!2907 = metadata !{i32 786443, metadata !168, metadata !2905, i32 758, i32 0, i32 324} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2908 = metadata !{i32 760, i32 0, metadata !2907, null}
!2909 = metadata !{i32 767, i32 0, metadata !2910, null}
!2910 = metadata !{i32 786443, metadata !168, metadata !324, i32 767, i32 0, i32 325} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2911 = metadata !{i32 769, i32 0, metadata !2910, null}
!2912 = metadata !{i32 771, i32 0, metadata !2913, null}
!2913 = metadata !{i32 786443, metadata !168, metadata !324, i32 771, i32 0, i32 326} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2914 = metadata !{i32 773, i32 0, metadata !2915, null}
!2915 = metadata !{i32 786443, metadata !168, metadata !2916, i32 773, i32 0, i32 328} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2916 = metadata !{i32 786443, metadata !168, metadata !2913, i32 772, i32 0, i32 327} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2917 = metadata !{i32 774, i32 0, metadata !2915, null}
!2918 = metadata !{i32 775, i32 0, metadata !2919, null}
!2919 = metadata !{i32 786443, metadata !168, metadata !2915, i32 775, i32 0, i32 329} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2920 = metadata !{i32 776, i32 0, metadata !2919, null}
!2921 = metadata !{i32 778, i32 0, metadata !2922, null}
!2922 = metadata !{i32 786443, metadata !168, metadata !2916, i32 778, i32 0, i32 330} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2923 = metadata !{i32 779, i32 0, metadata !2922, null}
!2924 = metadata !{i32 780, i32 0, metadata !2925, null}
!2925 = metadata !{i32 786443, metadata !168, metadata !2922, i32 780, i32 0, i32 331} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2926 = metadata !{i32 781, i32 0, metadata !2925, null}
!2927 = metadata !{i32 783, i32 0, metadata !2928, null}
!2928 = metadata !{i32 786443, metadata !168, metadata !2916, i32 783, i32 0, i32 332} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2929 = metadata !{i32 784, i32 0, metadata !2928, null}
!2930 = metadata !{i32 787, i32 0, metadata !2931, null}
!2931 = metadata !{i32 786443, metadata !168, metadata !2916, i32 787, i32 0, i32 333} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2932 = metadata !{i32 789, i32 0, metadata !2933, null}
!2933 = metadata !{i32 786443, metadata !168, metadata !2931, i32 788, i32 0, i32 334} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2934 = metadata !{i32 790, i32 0, metadata !2933, null}
!2935 = metadata !{i32 794, i32 0, metadata !324, null}
!2936 = metadata !{i32 795, i32 0, metadata !324, null}
!2937 = metadata !{i32 926, i32 0, metadata !2938, null}
!2938 = metadata !{i32 786443, metadata !168, metadata !327, i32 926, i32 0, i32 335} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2939 = metadata !{i32 929, i32 0, metadata !327, null}
!2940 = metadata !{i32 930, i32 0, metadata !327, null}
!2941 = metadata !{i32 931, i32 0, metadata !2942, null}
!2942 = metadata !{i32 786443, metadata !168, metadata !327, i32 931, i32 0, i32 336} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2943 = metadata !{i32 933, i32 0, metadata !2944, null}
!2944 = metadata !{i32 786443, metadata !168, metadata !2942, i32 932, i32 0, i32 337} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2945 = metadata !{i32 934, i32 0, metadata !2944, null}
!2946 = metadata !{i32 935, i32 0, metadata !2944, null}
!2947 = metadata !{i32 939, i32 0, metadata !2948, null}
!2948 = metadata !{i32 786443, metadata !168, metadata !2949, i32 939, i32 0, i32 339} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2949 = metadata !{i32 786443, metadata !168, metadata !2942, i32 937, i32 0, i32 338} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2950 = metadata !{i32 941, i32 0, metadata !2949, null}
!2951 = metadata !{i32 942, i32 0, metadata !2949, null}
!2952 = metadata !{i32 946, i32 0, metadata !2953, null}
!2953 = metadata !{i32 786443, metadata !168, metadata !327, i32 945, i32 0, i32 340} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2954 = metadata !{i32 947, i32 0, metadata !2955, null}
!2955 = metadata !{i32 786443, metadata !168, metadata !2953, i32 947, i32 0, i32 341} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2956 = metadata !{i32 950, i32 0, metadata !2957, null}
!2957 = metadata !{i32 786443, metadata !168, metadata !2955, i32 948, i32 0, i32 342} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2958 = metadata !{i32 953, i32 0, metadata !2959, null}
!2959 = metadata !{i32 786443, metadata !168, metadata !2953, i32 953, i32 0, i32 343} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2960 = metadata !{i32 957, i32 0, metadata !2961, null}
!2961 = metadata !{i32 786443, metadata !168, metadata !2959, i32 954, i32 0, i32 344} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2962 = metadata !{i32 958, i32 0, metadata !2961, null}
!2963 = metadata !{i32 960, i32 0, metadata !327, null}
!2964 = metadata !{i32 905, i32 0, metadata !2965, null}
!2965 = metadata !{i32 786443, metadata !168, metadata !330, i32 905, i32 0, i32 345} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2966 = metadata !{i32 906, i32 0, metadata !2965, null}
!2967 = metadata !{i32 908, i32 0, metadata !330, null}
!2968 = metadata !{i32 909, i32 0, metadata !330, null}
!2969 = metadata !{i32 910, i32 0, metadata !330, null}
!2970 = metadata !{i32 912, i32 0, metadata !330, null}
!2971 = metadata !{i32 913, i32 0, metadata !330, null}
!2972 = metadata !{i32 106, i32 0, metadata !335, null}
!2973 = metadata !{i32 107, i32 0, metadata !335, null}
!2974 = metadata !{i32 108, i32 0, metadata !335, null}
!2975 = metadata !{i32 109, i32 0, metadata !335, null}
!2976 = metadata !{i32 110, i32 0, metadata !335, null}
!2977 = metadata !{i32 111, i32 0, metadata !2978, null}
!2978 = metadata !{i32 786443, metadata !168, metadata !335, i32 111, i32 0, i32 346} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2979 = metadata !{i32 112, i32 0, metadata !2980, null}
!2980 = metadata !{i32 786443, metadata !168, metadata !2978, i32 111, i32 0, i32 347} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/copy.c]
!2981 = metadata !{i32 114, i32 0, metadata !335, null}
!2982 = metadata !{i32 92, i32 0, metadata !354, null}
!2983 = metadata !{i32 93, i32 0, metadata !354, null}
!2984 = metadata !{i32 94, i32 0, metadata !354, null}
!2985 = metadata !{i32 96, i32 0, metadata !354, null}
!2986 = metadata !{i32 97, i32 0, metadata !2987, null}
!2987 = metadata !{i32 786443, metadata !352, metadata !354, i32 97, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/cp-hash.c]
!2988 = metadata !{i32 98, i32 0, metadata !2987, null}
!2989 = metadata !{i32 99, i32 0, metadata !354, null}
!2990 = metadata !{i32 109, i32 0, metadata !2991, null}
!2991 = metadata !{i32 786443, metadata !352, metadata !362, i32 109, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/cp-hash.c]
!2992 = metadata !{i32 111, i32 0, metadata !2993, null}
!2993 = metadata !{i32 786443, metadata !352, metadata !2991, i32 110, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/cp-hash.c]
!2994 = metadata !{i32 112, i32 0, metadata !2993, null}
!2995 = metadata !{i32 115, i32 0, metadata !362, null}
!2996 = metadata !{i32 116, i32 0, metadata !362, null}
!2997 = metadata !{i32 117, i32 0, metadata !362, null}
!2998 = metadata !{i32 143, i32 0, metadata !366, null}
!2999 = metadata !{i32 144, i32 0, metadata !366, null}
!3000 = metadata !{i32 145, i32 0, metadata !366, null}
!3001 = metadata !{i32 146, i32 0, metadata !366, null}
!3002 = metadata !{i32 148, i32 0, metadata !366, null}
!3003 = metadata !{i32 149, i32 0, metadata !3004, null}
!3004 = metadata !{i32 786443, metadata !352, metadata !366, i32 149, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/cp-hash.c]
!3005 = metadata !{i32 152, i32 0, metadata !3006, null}
!3006 = metadata !{i32 786443, metadata !352, metadata !3004, i32 150, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/cp-hash.c]
!3007 = metadata !{i32 158, i32 0, metadata !3008, null}
!3008 = metadata !{i32 786443, metadata !352, metadata !366, i32 158, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/cp-hash.c]
!3009 = metadata !{i32 160, i32 0, metadata !3010, null}
!3010 = metadata !{i32 786443, metadata !352, metadata !3008, i32 159, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/cp-hash.c]
!3011 = metadata !{i32 161, i32 0, metadata !3010, null}
!3012 = metadata !{i32 165, i32 0, metadata !366, null}
!3013 = metadata !{i32 166, i32 0, metadata !366, null}
!3014 = metadata !{i32 127, i32 0, metadata !363, null}
!3015 = metadata !{i32 128, i32 0, metadata !363, null}
!3016 = metadata !{i32 129, i32 0, metadata !363, null}
!3017 = metadata !{i32 130, i32 0, metadata !363, null}
!3018 = metadata !{i32 172, i32 0, metadata !369, null}
!3019 = metadata !{i32 176, i32 0, metadata !3020, null}
!3020 = metadata !{i32 786443, metadata !352, metadata !369, i32 176, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/cp-hash.c]
!3021 = metadata !{i32 177, i32 0, metadata !3020, null}
!3022 = metadata !{i32 178, i32 0, metadata !369, null}
!3023 = metadata !{i32 186, i32 0, metadata !372, null}
!3024 = metadata !{i32 187, i32 0, metadata !372, null}
!3025 = metadata !{i32 79, i32 0, metadata !378, null}
!3026 = metadata !{i32 80, i32 0, metadata !378, null}
!3027 = metadata !{i32 81, i32 0, metadata !378, null}
!3028 = metadata !{i32 82, i32 0, metadata !378, null}
!3029 = metadata !{i32 58, i32 0, metadata !374, null} ; [ DW_TAG_imported_module ]
!3030 = metadata !{i32 63, i32 0, metadata !374, null}
!3031 = metadata !{i32 71, i32 0, metadata !373, null}
!3032 = metadata !{i32 72, i32 0, metadata !373, null}
!3033 = metadata !{i32 73, i32 0, metadata !373, null}
!3034 = metadata !{i32 74, i32 0, metadata !373, null}
!3035 = metadata !{i32 19, i32 0, metadata !3036, null}
!3036 = metadata !{i32 786443, metadata !415, metadata !414, i32 19, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3037 = metadata !{i32 20, i32 0, metadata !3036, null}
!3038 = metadata !{i32 22, i32 0, metadata !3039, null}
!3039 = metadata !{i32 786443, metadata !415, metadata !3040, i32 22, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3040 = metadata !{i32 786443, metadata !415, metadata !3036, i32 21, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3041 = metadata !{i32 25, i32 0, metadata !3042, null}
!3042 = metadata !{i32 786443, metadata !415, metadata !3039, i32 22, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3043 = metadata !{i32 26, i32 0, metadata !3042, null}
!3044 = metadata !{i32 28, i32 0, metadata !3045, null}
!3045 = metadata !{i32 786443, metadata !415, metadata !3042, i32 28, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3046 = metadata !{i32 31, i32 0, metadata !3047, null}
!3047 = metadata !{i32 786443, metadata !415, metadata !3045, i32 28, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3048 = metadata !{i32 32, i32 0, metadata !3049, null}
!3049 = metadata !{i32 786443, metadata !415, metadata !3047, i32 32, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3050 = metadata !{i32 33, i32 0, metadata !3051, null}
!3051 = metadata !{i32 786443, metadata !415, metadata !3049, i32 32, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3052 = metadata !{i32 34, i32 0, metadata !3051, null}
!3053 = metadata !{i32 35, i32 0, metadata !3051, null}
!3054 = metadata !{i32 36, i32 0, metadata !3051, null}
!3055 = metadata !{i32 38, i32 0, metadata !3056, null}
!3056 = metadata !{i32 786443, metadata !415, metadata !3049, i32 37, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3057 = metadata !{i32 40, i32 0, metadata !3058, null}
!3058 = metadata !{i32 786443, metadata !415, metadata !3047, i32 40, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3059 = metadata !{i32 41, i32 0, metadata !3060, null}
!3060 = metadata !{i32 786443, metadata !415, metadata !3058, i32 40, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3061 = metadata !{i32 42, i32 0, metadata !3062, null}
!3062 = metadata !{i32 786443, metadata !415, metadata !3060, i32 42, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3063 = metadata !{i32 43, i32 0, metadata !3064, null}
!3064 = metadata !{i32 786443, metadata !415, metadata !3062, i32 42, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3065 = metadata !{i32 44, i32 0, metadata !3064, null}
!3066 = metadata !{i32 45, i32 0, metadata !3064, null}
!3067 = metadata !{i32 47, i32 0, metadata !3068, null}
!3068 = metadata !{i32 786443, metadata !415, metadata !3062, i32 46, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3069 = metadata !{i32 51, i32 0, metadata !3070, null}
!3070 = metadata !{i32 786443, metadata !415, metadata !3058, i32 50, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3071 = metadata !{i32 56, i32 0, metadata !3072, null}
!3072 = metadata !{i32 786443, metadata !415, metadata !3045, i32 55, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!3073 = metadata !{i32 59, i32 0, metadata !3042, null}
!3074 = metadata !{i32 60, i32 0, metadata !3042, null}
!3075 = metadata !{i32 61, i32 0, metadata !3040, null}
!3076 = metadata !{i32 64, i32 0, metadata !414, null}
!3077 = metadata !{i32 4, i32 0, metadata !3078, null}
!3078 = metadata !{i32 786443, metadata !421, metadata !420} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_functions.h]
!3079 = metadata !{i32 5, i32 0, metadata !425, null}
!3080 = metadata !{i32 1630, i32 0, metadata !3081, null}
!3081 = metadata !{i32 786443, metadata !384, metadata !426} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3082 = metadata !{i32 1631, i32 0, metadata !3081, null}
!3083 = metadata !{i32 1632, i32 0, metadata !3081, null}
!3084 = metadata !{i32 1635, i32 0, metadata !3085, null}
!3085 = metadata !{i32 786443, metadata !384, metadata !3081, i32 1635, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3086 = metadata !{i32 1637, i32 0, metadata !3087, null}
!3087 = metadata !{i32 786443, metadata !384, metadata !3088, i32 1637, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3088 = metadata !{i32 786443, metadata !384, metadata !3085, i32 1636, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3089 = metadata !{i32 1639, i32 0, metadata !3090, null}
!3090 = metadata !{i32 786443, metadata !384, metadata !3087, i32 1638, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3091 = metadata !{i32 1643, i32 0, metadata !3090, null}
!3092 = metadata !{i32 1644, i32 0, metadata !3090, null}
!3093 = metadata !{i32 1647, i32 0, metadata !3094, null}
!3094 = metadata !{i32 786443, metadata !384, metadata !3087, i32 1646, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3095 = metadata !{i32 1648, i32 0, metadata !3094, null}
!3096 = metadata !{i32 1649, i32 0, metadata !3097, null}
!3097 = metadata !{i32 786443, metadata !384, metadata !3098, i32 1649, i32 0, i32 22} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3098 = metadata !{i32 786443, metadata !384, metadata !3094, i32 1649, i32 0, i32 21} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3099 = metadata !{i32 1653, i32 0, metadata !3100, null}
!3100 = metadata !{i32 786443, metadata !384, metadata !3081, i32 1653, i32 0, i32 23} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3101 = metadata !{i32 1655, i32 0, metadata !3102, null}
!3102 = metadata !{i32 786443, metadata !384, metadata !3100, i32 1654, i32 0, i32 24} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3103 = metadata !{i32 1660, i32 0, metadata !3102, null}
!3104 = metadata !{i32 1661, i32 0, metadata !3102, null}
!3105 = metadata !{i32 1663, i32 0, metadata !3081, null}
!3106 = metadata !{i32 1665, i32 0, metadata !3081, null}
!3107 = metadata !{i32 410, i32 0, metadata !674, null}
!3108 = metadata !{i32 411, i32 0, metadata !674, null}
!3109 = metadata !{i32 412, i32 0, metadata !674, null}
!3110 = metadata !{i32 413, i32 0, metadata !674, null}
!3111 = metadata !{i32 414, i32 0, metadata !674, null}
!3112 = metadata !{i32 157, i32 0, metadata !3113, null}
!3113 = metadata !{i32 786443, metadata !384, metadata !673} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3114 = metadata !{i32 158, i32 0, metadata !3113, null}
!3115 = metadata !{i32 159, i32 0, metadata !3113, null}
!3116 = metadata !{i32 160, i32 0, metadata !3113, null}
!3117 = metadata !{i32 161, i32 0, metadata !3113, null}
!3118 = metadata !{i32 162, i32 0, metadata !3119, null}
!3119 = metadata !{i32 786443, metadata !384, metadata !3113, i32 162, i32 0, i32 246} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3120 = metadata !{i32 163, i32 0, metadata !3121, null}
!3121 = metadata !{i32 786443, metadata !384, metadata !3119, i32 162, i32 0, i32 247} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3122 = metadata !{i32 165, i32 0, metadata !3113, null}
!3123 = metadata !{i32 1564, i32 0, metadata !527, null}
!3124 = metadata !{i32 1565, i32 7, metadata !3125, null}
!3125 = metadata !{i32 786443, metadata !384, metadata !527, i32 1565, i32 0, i32 31} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3126 = metadata !{i32 1567, i32 0, metadata !3127, null}
!3127 = metadata !{i32 786443, metadata !384, metadata !3125, i32 1566, i32 0, i32 32} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3128 = metadata !{i32 1568, i32 0, metadata !3127, null}
!3129 = metadata !{i32 1576, i32 0, metadata !3127, null}
!3130 = metadata !{i32 1580, i32 0, metadata !527, null}
!3131 = metadata !{i32 1581, i32 0, metadata !527, null}
!3132 = metadata !{i32 1582, i32 0, metadata !3133, null}
!3133 = metadata !{i32 786443, metadata !384, metadata !527, i32 1582, i32 0, i32 33} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3134 = metadata !{i32 1584, i32 0, metadata !3135, null}
!3135 = metadata !{i32 786443, metadata !384, metadata !3136, i32 1584, i32 0, i32 35} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3136 = metadata !{i32 786443, metadata !384, metadata !3133, i32 1583, i32 0, i32 34} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3137 = metadata !{i32 1586, i32 8, metadata !3138, null}
!3138 = metadata !{i32 786443, metadata !384, metadata !3139, i32 1586, i32 0, i32 37} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3139 = metadata !{i32 786443, metadata !384, metadata !3135, i32 1585, i32 0, i32 36} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3140 = metadata !{i32 1586, i32 0, metadata !3138, null}
!3141 = metadata !{i32 1587, i32 0, metadata !3138, null}
!3142 = metadata !{i32 1588, i32 0, metadata !3139, null}
!3143 = metadata !{i32 1592, i32 0, metadata !3139, null}
!3144 = metadata !{i32 1594, i32 0, metadata !3145, null}
!3145 = metadata !{i32 786443, metadata !384, metadata !3136, i32 1594, i32 0, i32 38} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3146 = metadata !{i32 1596, i32 0, metadata !3147, null}
!3147 = metadata !{i32 786443, metadata !384, metadata !3145, i32 1595, i32 0, i32 39} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3148 = metadata !{i32 1600, i32 0, metadata !3147, null}
!3149 = metadata !{i32 1604, i32 0, metadata !527, null}
!3150 = metadata !{i32 1605, i32 0, metadata !3151, null}
!3151 = metadata !{i32 786443, metadata !384, metadata !527, i32 1605, i32 0, i32 40} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3152 = metadata !{i32 1607, i32 0, metadata !527, null}
!3153 = metadata !{i32 1608, i32 0, metadata !3154, null}
!3154 = metadata !{i32 786443, metadata !384, metadata !527, i32 1608, i32 0, i32 41} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3155 = metadata !{i32 1613, i32 0, metadata !3156, null}
!3156 = metadata !{i32 786443, metadata !384, metadata !3157, i32 1613, i32 0, i32 43} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3157 = metadata !{i32 786443, metadata !384, metadata !3154, i32 1609, i32 0, i32 42} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3158 = metadata !{i32 1614, i32 0, metadata !3156, null}
!3159 = metadata !{i32 1616, i32 0, metadata !3156, null}
!3160 = metadata !{i32 1618, i32 0, metadata !3157, null}
!3161 = metadata !{i32 1619, i32 0, metadata !3157, null}
!3162 = metadata !{i32 1621, i32 0, metadata !527, null}
!3163 = metadata !{i32 1622, i32 0, metadata !527, null}
!3164 = metadata !{i32 1623, i32 0, metadata !527, null}
!3165 = metadata !{i32 430, i32 0, metadata !3166, null}
!3166 = metadata !{i32 786443, metadata !384, metadata !454, i32 430, i32 0, i32 25} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3167 = metadata !{i32 430, i32 0, metadata !3168, null}
!3168 = metadata !{i32 786443, metadata !384, metadata !3166, i32 430, i32 0, i32 26} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3169 = metadata !{i32 431, i32 0, metadata !3170, null}
!3170 = metadata !{i32 786443, metadata !384, metadata !454, i32 431, i32 0, i32 27} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3171 = metadata !{i32 431, i32 0, metadata !3172, null}
!3172 = metadata !{i32 786443, metadata !384, metadata !3170, i32 431, i32 0, i32 28} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3173 = metadata !{i32 432, i32 0, metadata !3174, null}
!3174 = metadata !{i32 786443, metadata !384, metadata !454, i32 432, i32 0, i32 29} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3175 = metadata !{i32 432, i32 0, metadata !3176, null}
!3176 = metadata !{i32 786443, metadata !384, metadata !3174, i32 432, i32 0, i32 30} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3177 = metadata !{i32 433, i32 0, metadata !454, null}
!3178 = metadata !{i32 434, i32 0, metadata !454, null}
!3179 = metadata !{i32 420, i32 0, metadata !3180, null}
!3180 = metadata !{i32 786443, metadata !384, metadata !530, i32 420, i32 0, i32 44} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3181 = metadata !{i32 420, i32 0, metadata !3182, null}
!3182 = metadata !{i32 786443, metadata !384, metadata !3180, i32 420, i32 0, i32 45} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3183 = metadata !{i32 420, i32 0, metadata !3184, null}
!3184 = metadata !{i32 786443, metadata !384, metadata !3182, i32 420, i32 0, i32 46} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3185 = metadata !{i32 420, i32 0, metadata !3186, null}
!3186 = metadata !{i32 786443, metadata !384, metadata !3182, i32 420, i32 0, i32 47} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3187 = metadata !{i32 420, i32 0, metadata !3188, null}
!3188 = metadata !{i32 786443, metadata !384, metadata !3180, i32 420, i32 0, i32 48} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3189 = metadata !{i32 421, i32 0, metadata !3190, null}
!3190 = metadata !{i32 786443, metadata !384, metadata !530, i32 421, i32 0, i32 49} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3191 = metadata !{i32 421, i32 0, metadata !3192, null}
!3192 = metadata !{i32 786443, metadata !384, metadata !3190, i32 421, i32 0, i32 50} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3193 = metadata !{i32 421, i32 0, metadata !3194, null}
!3194 = metadata !{i32 786443, metadata !384, metadata !3192, i32 421, i32 0, i32 51} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3195 = metadata !{i32 421, i32 0, metadata !3196, null}
!3196 = metadata !{i32 786443, metadata !384, metadata !3192, i32 421, i32 0, i32 52} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3197 = metadata !{i32 421, i32 0, metadata !3198, null}
!3198 = metadata !{i32 786443, metadata !384, metadata !3190, i32 421, i32 0, i32 53} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3199 = metadata !{i32 422, i32 14, metadata !530, null}
!3200 = metadata !{i32 423, i32 0, metadata !530, null}
!3201 = metadata !{i32 424, i32 0, metadata !3202, null}
!3202 = metadata !{i32 786443, metadata !384, metadata !530, i32 424, i32 0, i32 54} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3203 = metadata !{i32 424, i32 0, metadata !3204, null}
!3204 = metadata !{i32 786443, metadata !384, metadata !3202, i32 424, i32 0, i32 55} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3205 = metadata !{i32 424, i32 0, metadata !3206, null}
!3206 = metadata !{i32 786443, metadata !384, metadata !3204, i32 424, i32 0, i32 56} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3207 = metadata !{i32 424, i32 0, metadata !3208, null}
!3208 = metadata !{i32 786443, metadata !384, metadata !3204, i32 424, i32 0, i32 57} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3209 = metadata !{i32 424, i32 0, metadata !3210, null}
!3210 = metadata !{i32 786443, metadata !384, metadata !3202, i32 424, i32 0, i32 58} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3211 = metadata !{i32 425, i32 0, metadata !530, null}
!3212 = metadata !{i32 389, i32 0, metadata !531, null}
!3213 = metadata !{i32 392, i32 24, metadata !531, null}
!3214 = metadata !{i32 393, i32 0, metadata !3215, null}
!3215 = metadata !{i32 786443, metadata !384, metadata !531, i32 393, i32 0, i32 59} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3216 = metadata !{i32 394, i32 0, metadata !3215, null}
!3217 = metadata !{i32 395, i32 0, metadata !3218, null}
!3218 = metadata !{i32 786443, metadata !384, metadata !531, i32 395, i32 0, i32 60} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3219 = metadata !{i32 395, i32 0, metadata !3220, null}
!3220 = metadata !{i32 786443, metadata !384, metadata !3218, i32 395, i32 0, i32 61} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3221 = metadata !{i32 396, i32 0, metadata !531, null}
!3222 = metadata !{i32 376, i32 0, metadata !3223, null}
!3223 = metadata !{i32 786443, metadata !384, metadata !532, i32 376, i32 0, i32 62} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3224 = metadata !{i32 401, i32 0, metadata !537, null}
!3225 = metadata !{i32 401, i32 14, metadata !537, null}
!3226 = metadata !{i32 403, i32 0, metadata !3227, null}
!3227 = metadata !{i32 786443, metadata !384, metadata !537, i32 402, i32 0, i32 63} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3228 = metadata !{i32 404, i32 0, metadata !3227, null}
!3229 = metadata !{i32 405, i32 0, metadata !537, null}
!3230 = metadata !{i32 1378, i32 0, metadata !538, null}
!3231 = metadata !{i32 1388, i32 0, metadata !538, null}
!3232 = metadata !{i32 1390, i32 0, metadata !3233, null}
!3233 = metadata !{i32 786443, metadata !384, metadata !538, i32 1390, i32 0, i32 64} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3234 = metadata !{i32 1394, i32 11, metadata !3235, null}
!3235 = metadata !{i32 786443, metadata !384, metadata !3236, i32 1394, i32 0, i32 66} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3236 = metadata !{i32 786443, metadata !384, metadata !3233, i32 1391, i32 0, i32 65} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3237 = metadata !{i32 1394, i32 0, metadata !3235, null}
!3238 = metadata !{i32 1402, i32 0, metadata !3239, null}
!3239 = metadata !{i32 786443, metadata !384, metadata !3235, i32 1399, i32 0, i32 68} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3240 = metadata !{i32 1403, i32 0, metadata !3241, null}
!3241 = metadata !{i32 786443, metadata !384, metadata !3239, i32 1403, i32 0, i32 69} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3242 = metadata !{i32 1404, i32 0, metadata !3241, null}
!3243 = metadata !{i32 1406, i32 0, metadata !3239, null}
!3244 = metadata !{i32 1413, i32 0, metadata !3236, null}
!3245 = metadata !{i32 1416, i32 0, metadata !3246, null}
!3246 = metadata !{i32 786443, metadata !384, metadata !538, i32 1416, i32 0, i32 70} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3247 = metadata !{i32 1418, i32 0, metadata !3248, null}
!3248 = metadata !{i32 786443, metadata !384, metadata !3249, i32 1418, i32 0, i32 73} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3249 = metadata !{i32 786443, metadata !384, metadata !3250, i32 1418, i32 0, i32 72} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3250 = metadata !{i32 786443, metadata !384, metadata !3246, i32 1417, i32 0, i32 71} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3251 = metadata !{i32 1418, i32 0, metadata !3249, null}
!3252 = metadata !{i32 1419, i32 0, metadata !3250, null}
!3253 = metadata !{i32 1420, i32 0, metadata !3250, null}
!3254 = metadata !{i32 1423, i32 0, metadata !538, null}
!3255 = metadata !{i32 1424, i32 0, metadata !3256, null}
!3256 = metadata !{i32 786443, metadata !384, metadata !538, i32 1424, i32 0, i32 74} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3257 = metadata !{i32 1426, i32 0, metadata !538, null}
!3258 = metadata !{i32 1428, i32 0, metadata !538, null}
!3259 = metadata !{i32 1430, i32 0, metadata !3260, null}
!3260 = metadata !{i32 786443, metadata !384, metadata !538, i32 1429, i32 0, i32 75} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3261 = metadata !{i32 1434, i32 0, metadata !3260, null}
!3262 = metadata !{i32 1436, i32 0, metadata !3263, null}
!3263 = metadata !{i32 786443, metadata !384, metadata !3260, i32 1436, i32 0, i32 76} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3264 = metadata !{i32 1438, i32 0, metadata !3265, null}
!3265 = metadata !{i32 786443, metadata !384, metadata !3266, i32 1438, i32 0, i32 79} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3266 = metadata !{i32 786443, metadata !384, metadata !3267, i32 1438, i32 0, i32 78} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3267 = metadata !{i32 786443, metadata !384, metadata !3263, i32 1437, i32 0, i32 77} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3268 = metadata !{i32 1439, i32 0, metadata !3267, null}
!3269 = metadata !{i32 1440, i32 0, metadata !3267, null}
!3270 = metadata !{i32 1441, i32 0, metadata !3271, null}
!3271 = metadata !{i32 786443, metadata !384, metadata !3260, i32 1441, i32 0, i32 80} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3272 = metadata !{i32 1443, i32 0, metadata !3273, null}
!3273 = metadata !{i32 786443, metadata !384, metadata !3274, i32 1443, i32 0, i32 82} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3274 = metadata !{i32 786443, metadata !384, metadata !3271, i32 1442, i32 0, i32 81} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3275 = metadata !{i32 1446, i32 0, metadata !3276, null}
!3276 = metadata !{i32 786443, metadata !384, metadata !3273, i32 1445, i32 0, i32 83} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3277 = metadata !{i32 1447, i32 0, metadata !3278, null}
!3278 = metadata !{i32 786443, metadata !384, metadata !3276, i32 1447, i32 0, i32 84} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3279 = metadata !{i32 1448, i32 0, metadata !3276, null}
!3280 = metadata !{i32 1449, i32 0, metadata !3276, null}
!3281 = metadata !{i32 1460, i32 0, metadata !3274, null}
!3282 = metadata !{i32 1461, i32 0, metadata !3274, null}
!3283 = metadata !{i32 1462, i32 0, metadata !3274, null}
!3284 = metadata !{i32 1463, i32 0, metadata !3274, null}
!3285 = metadata !{i32 1464, i32 0, metadata !3286, null}
!3286 = metadata !{i32 786443, metadata !384, metadata !3287, i32 1464, i32 0, i32 86} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3287 = metadata !{i32 786443, metadata !384, metadata !3274, i32 1464, i32 0, i32 85} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3288 = metadata !{i32 1475, i32 0, metadata !3289, null}
!3289 = metadata !{i32 786443, metadata !384, metadata !3260, i32 1471, i32 0, i32 87} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3290 = metadata !{i32 1476, i32 0, metadata !3289, null}
!3291 = metadata !{i32 1477, i32 0, metadata !3289, null}
!3292 = metadata !{i32 1480, i32 0, metadata !3293, null}
!3293 = metadata !{i32 786443, metadata !384, metadata !3289, i32 1480, i32 0, i32 88} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3294 = metadata !{i32 1488, i32 0, metadata !3295, null}
!3295 = metadata !{i32 786443, metadata !384, metadata !3293, i32 1481, i32 0, i32 89} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3296 = metadata !{i32 1489, i32 12, metadata !3295, null}
!3297 = metadata !{i32 1492, i32 0, metadata !3298, null}
!3298 = metadata !{i32 786443, metadata !384, metadata !3295, i32 1492, i32 0, i32 90} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3299 = metadata !{i32 1494, i32 0, metadata !3300, null}
!3300 = metadata !{i32 786443, metadata !384, metadata !3298, i32 1493, i32 0, i32 91} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3301 = metadata !{i32 1495, i32 0, metadata !3300, null}
!3302 = metadata !{i32 1496, i32 0, metadata !3303, null}
!3303 = metadata !{i32 786443, metadata !384, metadata !3300, i32 1496, i32 0, i32 92} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3304 = metadata !{i32 1497, i32 0, metadata !3303, null}
!3305 = metadata !{i32 1501, i32 0, metadata !3306, null}
!3306 = metadata !{i32 786443, metadata !384, metadata !3295, i32 1501, i32 0, i32 93} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3307 = metadata !{i32 1503, i32 0, metadata !3308, null}
!3308 = metadata !{i32 786443, metadata !384, metadata !3309, i32 1503, i32 0, i32 95} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3309 = metadata !{i32 786443, metadata !384, metadata !3306, i32 1502, i32 0, i32 94} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3310 = metadata !{i32 1505, i32 0, metadata !3308, null}
!3311 = metadata !{i32 1504, i32 0, metadata !3308, null}
!3312 = metadata !{i32 1509, i32 0, metadata !3313, null}
!3313 = metadata !{i32 786443, metadata !384, metadata !3306, i32 1508, i32 0, i32 96} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3314 = metadata !{i32 1514, i32 0, metadata !3313, null}
!3315 = metadata !{i32 1515, i32 0, metadata !3313, null}
!3316 = metadata !{i32 1516, i32 0, metadata !3317, null}
!3317 = metadata !{i32 786443, metadata !384, metadata !3318, i32 1516, i32 0, i32 98} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3318 = metadata !{i32 786443, metadata !384, metadata !3313, i32 1516, i32 0, i32 97} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3319 = metadata !{i32 1520, i32 0, metadata !3289, null}
!3320 = metadata !{i32 1522, i32 0, metadata !3321, null}
!3321 = metadata !{i32 786443, metadata !384, metadata !3289, i32 1522, i32 0, i32 99} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3322 = metadata !{i32 1525, i32 0, metadata !3289, null}
!3323 = metadata !{i32 1526, i32 0, metadata !3324, null}
!3324 = metadata !{i32 786443, metadata !384, metadata !3289, i32 1526, i32 0, i32 100} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3325 = metadata !{i32 1528, i32 0, metadata !3326, null}
!3326 = metadata !{i32 786443, metadata !384, metadata !3324, i32 1527, i32 0, i32 101} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3327 = metadata !{i32 1533, i32 0, metadata !3326, null}
!3328 = metadata !{i32 1534, i32 0, metadata !3326, null}
!3329 = metadata !{i32 1541, i32 0, metadata !538, null}
!3330 = metadata !{i32 1544, i32 0, metadata !3331, null}
!3331 = metadata !{i32 786443, metadata !384, metadata !538, i32 1544, i32 0, i32 102} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3332 = metadata !{i32 1546, i32 0, metadata !3333, null}
!3333 = metadata !{i32 786443, metadata !384, metadata !3331, i32 1545, i32 0, i32 103} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3334 = metadata !{i32 1551, i32 0, metadata !3333, null}
!3335 = metadata !{i32 1552, i32 0, metadata !3333, null}
!3336 = metadata !{i32 1554, i32 0, metadata !538, null}
!3337 = metadata !{i32 1555, i32 0, metadata !538, null}
!3338 = metadata !{i32 600, i32 20, metadata !565, null}
!3339 = metadata !{i32 600, i32 0, metadata !565, null}
!3340 = metadata !{i32 601, i32 0, metadata !565, null}
!3341 = metadata !{i32 586, i32 0, metadata !568, null}
!3342 = metadata !{i32 587, i32 0, metadata !3343, null}
!3343 = metadata !{i32 786443, metadata !384, metadata !568, i32 587, i32 0, i32 104} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3344 = metadata !{i32 588, i32 0, metadata !3343, null}
!3345 = metadata !{i32 591, i32 0, metadata !3346, null}
!3346 = metadata !{i32 786443, metadata !384, metadata !3347, i32 591, i32 0, i32 106} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3347 = metadata !{i32 786443, metadata !384, metadata !3343, i32 590, i32 0, i32 105} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3348 = metadata !{i32 592, i32 0, metadata !3346, null}
!3349 = metadata !{i32 594, i32 0, metadata !568, null}
!3350 = metadata !{i32 570, i32 0, metadata !3351, null}
!3351 = metadata !{i32 786443, metadata !384, metadata !574, i32 570, i32 0, i32 107} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3352 = metadata !{i32 572, i32 0, metadata !3353, null}
!3353 = metadata !{i32 786443, metadata !384, metadata !3351, i32 571, i32 0, i32 108} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3354 = metadata !{i32 574, i32 0, metadata !3355, null}
!3355 = metadata !{i32 786443, metadata !384, metadata !3353, i32 574, i32 0, i32 109} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3356 = metadata !{i32 575, i32 0, metadata !3355, null}
!3357 = metadata !{i32 578, i32 0, metadata !574, null}
!3358 = metadata !{i32 208, i32 0, metadata !577, null}
!3359 = metadata !{i32 209, i32 0, metadata !577, null}
!3360 = metadata !{i32 214, i32 0, metadata !578, null}
!3361 = metadata !{i32 842, i32 0, metadata !579, null}
!3362 = metadata !{i32 844, i32 0, metadata !579, null}
!3363 = metadata !{i32 846, i32 0, metadata !3364, null}
!3364 = metadata !{i32 786443, metadata !384, metadata !579, i32 846, i32 0, i32 110} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3365 = metadata !{i32 847, i32 0, metadata !3364, null}
!3366 = metadata !{i32 849, i32 0, metadata !3367, null}
!3367 = metadata !{i32 786443, metadata !384, metadata !579, i32 849, i32 0, i32 111} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3368 = metadata !{i32 851, i32 0, metadata !3367, null}
!3369 = metadata !{i32 853, i32 0, metadata !3367, null}
!3370 = metadata !{i32 855, i32 0, metadata !3371, null}
!3371 = metadata !{i32 786443, metadata !384, metadata !3372, i32 855, i32 0, i32 113} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3372 = metadata !{i32 786443, metadata !384, metadata !3367, i32 854, i32 0, i32 112} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3373 = metadata !{i32 858, i32 0, metadata !3374, null}
!3374 = metadata !{i32 786443, metadata !384, metadata !3371, i32 856, i32 0, i32 114} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3375 = metadata !{i32 863, i32 0, metadata !3374, null}
!3376 = metadata !{i32 866, i32 0, metadata !3377, null}
!3377 = metadata !{i32 786443, metadata !384, metadata !3372, i32 866, i32 0, i32 115} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3378 = metadata !{i32 868, i32 0, metadata !3379, null}
!3379 = metadata !{i32 786443, metadata !384, metadata !3377, i32 867, i32 0, i32 116} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3380 = metadata !{i32 873, i32 0, metadata !3379, null}
!3381 = metadata !{i32 877, i32 0, metadata !3382, null}
!3382 = metadata !{i32 786443, metadata !384, metadata !3372, i32 877, i32 0, i32 117} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3383 = metadata !{i32 880, i32 0, metadata !3384, null}
!3384 = metadata !{i32 786443, metadata !384, metadata !3385, i32 880, i32 0, i32 119} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3385 = metadata !{i32 786443, metadata !384, metadata !3382, i32 878, i32 0, i32 118} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3386 = metadata !{i32 881, i32 0, metadata !3384, null}
!3387 = metadata !{i32 882, i32 0, metadata !3385, null}
!3388 = metadata !{i32 883, i32 0, metadata !3385, null}
!3389 = metadata !{i32 887, i32 0, metadata !3390, null}
!3390 = metadata !{i32 786443, metadata !384, metadata !3372, i32 886, i32 0, i32 120} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3391 = metadata !{i32 892, i32 0, metadata !3392, null}
!3392 = metadata !{i32 786443, metadata !384, metadata !3390, i32 892, i32 0, i32 121} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3393 = metadata !{i32 895, i32 0, metadata !3392, null}
!3394 = metadata !{i32 897, i32 0, metadata !3392, null}
!3395 = metadata !{i32 908, i32 0, metadata !3396, null}
!3396 = metadata !{i32 786443, metadata !384, metadata !3392, i32 903, i32 0, i32 122} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3397 = metadata !{i32 912, i32 0, metadata !3396, null}
!3398 = metadata !{i32 915, i32 0, metadata !3399, null}
!3399 = metadata !{i32 786443, metadata !384, metadata !3390, i32 915, i32 0, i32 123} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3400 = metadata !{i32 916, i32 0, metadata !3399, null}
!3401 = metadata !{i32 919, i32 0, metadata !579, null}
!3402 = metadata !{i32 920, i32 0, metadata !579, null}
!3403 = metadata !{i32 729, i32 0, metadata !584, null}
!3404 = metadata !{i32 733, i32 0, metadata !3405, null}
!3405 = metadata !{i32 786443, metadata !384, metadata !584, i32 733, i32 0, i32 124} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3406 = metadata !{i32 734, i32 0, metadata !3405, null}
!3407 = metadata !{i32 736, i32 0, metadata !584, null}
!3408 = metadata !{i32 737, i32 0, metadata !3409, null}
!3409 = metadata !{i32 786443, metadata !384, metadata !584, i32 737, i32 0, i32 125} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3410 = metadata !{i32 739, i32 0, metadata !3411, null}
!3411 = metadata !{i32 786443, metadata !384, metadata !3409, i32 738, i32 0, i32 126} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3412 = metadata !{i32 740, i32 0, metadata !3411, null}
!3413 = metadata !{i32 743, i32 0, metadata !584, null}
!3414 = metadata !{i32 744, i32 8, metadata !584, null}
!3415 = metadata !{i32 745, i32 0, metadata !584, null}
!3416 = metadata !{i32 746, i32 0, metadata !584, null}
!3417 = metadata !{i32 747, i32 0, metadata !3418, null}
!3418 = metadata !{i32 786443, metadata !384, metadata !584, i32 747, i32 0, i32 127} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3419 = metadata !{i32 748, i32 0, metadata !3418, null}
!3420 = metadata !{i32 749, i32 0, metadata !584, null}
!3421 = metadata !{i32 750, i32 0, metadata !584, null}
!3422 = metadata !{i32 384, i32 0, metadata !3423, null}
!3423 = metadata !{i32 786443, metadata !294, metadata !587} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!3424 = metadata !{i32 386, i32 0, metadata !3425, null}
!3425 = metadata !{i32 786443, metadata !294, metadata !3423, i32 385, i32 0, i32 128} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!3426 = metadata !{i32 387, i32 0, metadata !3427, null}
!3427 = metadata !{i32 786443, metadata !294, metadata !3425, i32 387, i32 0, i32 129} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!3428 = metadata !{i32 387, i32 27, metadata !3427, null}
!3429 = metadata !{i32 388, i32 0, metadata !3427, null}
!3430 = metadata !{i32 762, i32 0, metadata !3431, null}
!3431 = metadata !{i32 786443, metadata !384, metadata !3432, i32 762, i32 0, i32 130} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3432 = metadata !{i32 786443, metadata !384, metadata !608} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3433 = metadata !{i32 763, i32 0, metadata !3431, null}
!3434 = metadata !{i32 764, i32 0, metadata !3435, null}
!3435 = metadata !{i32 786443, metadata !384, metadata !3432, i32 764, i32 0, i32 131} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3436 = metadata !{i32 765, i32 0, metadata !3435, null}
!3437 = metadata !{i32 817, i32 0, metadata !3438, null}
!3438 = metadata !{i32 786443, metadata !384, metadata !3439, i32 817, i32 0, i32 133} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3439 = metadata !{i32 786443, metadata !384, metadata !3432, i32 814, i32 0, i32 132} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3440 = metadata !{i32 817, i32 0, metadata !3439, null}
!3441 = metadata !{i32 819, i32 0, metadata !3439, null}
!3442 = metadata !{i32 820, i32 0, metadata !3439, null}
!3443 = metadata !{i32 821, i32 0, metadata !3439, null}
!3444 = metadata !{i32 823, i32 0, metadata !3432, null}
!3445 = metadata !{i32 463, i32 33, metadata !611, null}
!3446 = metadata !{i32 464, i32 0, metadata !611, null}
!3447 = metadata !{i32 465, i32 0, metadata !611, null}
!3448 = metadata !{i32 470, i32 20, metadata !611, null}
!3449 = metadata !{i32 472, i32 0, metadata !611, null}
!3450 = metadata !{i32 473, i32 0, metadata !611, null}
!3451 = metadata !{i32 474, i32 9, metadata !611, null}
!3452 = metadata !{i32 483, i32 0, metadata !3453, null}
!3453 = metadata !{i32 786443, metadata !384, metadata !3454, i32 483, i32 0, i32 135} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3454 = metadata !{i32 786443, metadata !384, metadata !611, i32 483, i32 0, i32 134} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3455 = metadata !{i32 483, i32 0, metadata !3456, null}
!3456 = metadata !{i32 786443, metadata !384, metadata !3454, i32 483, i32 0, i32 136} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3457 = metadata !{i32 483, i32 0, metadata !3458, null}
!3458 = metadata !{i32 786443, metadata !384, metadata !3456, i32 483, i32 0, i32 137} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3459 = metadata !{i32 487, i32 0, metadata !3460, null}
!3460 = metadata !{i32 786443, metadata !384, metadata !3461, i32 487, i32 0, i32 139} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3461 = metadata !{i32 786443, metadata !384, metadata !611, i32 487, i32 0, i32 138} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3462 = metadata !{i32 489, i32 0, metadata !611, null}
!3463 = metadata !{i32 491, i32 11, metadata !3464, null}
!3464 = metadata !{i32 786443, metadata !384, metadata !611, i32 491, i32 0, i32 140} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3465 = metadata !{i32 494, i32 0, metadata !3466, null}
!3466 = metadata !{i32 786443, metadata !384, metadata !3464, i32 492, i32 0, i32 141} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3467 = metadata !{i32 495, i32 0, metadata !3468, null}
!3468 = metadata !{i32 786443, metadata !384, metadata !3466, i32 495, i32 0, i32 142} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3469 = metadata !{i32 501, i32 0, metadata !3470, null}
!3470 = metadata !{i32 786443, metadata !384, metadata !3468, i32 496, i32 0, i32 143} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3471 = metadata !{i32 502, i32 0, metadata !3470, null}
!3472 = metadata !{i32 508, i32 0, metadata !3473, null}
!3473 = metadata !{i32 786443, metadata !384, metadata !3466, i32 508, i32 0, i32 144} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3474 = metadata !{i32 509, i32 0, metadata !3473, null}
!3475 = metadata !{i32 511, i32 0, metadata !3476, null}
!3476 = metadata !{i32 786443, metadata !384, metadata !3466, i32 511, i32 0, i32 145} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3477 = metadata !{i32 513, i32 0, metadata !3478, null}
!3478 = metadata !{i32 786443, metadata !384, metadata !3476, i32 512, i32 0, i32 146} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3479 = metadata !{i32 518, i32 0, metadata !3478, null}
!3480 = metadata !{i32 521, i32 0, metadata !3481, null}
!3481 = metadata !{i32 786443, metadata !384, metadata !3466, i32 521, i32 0, i32 147} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3482 = metadata !{i32 523, i32 0, metadata !3483, null}
!3483 = metadata !{i32 786443, metadata !384, metadata !3481, i32 522, i32 0, i32 148} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3484 = metadata !{i32 529, i32 0, metadata !3483, null}
!3485 = metadata !{i32 533, i32 0, metadata !3486, null}
!3486 = metadata !{i32 786443, metadata !384, metadata !3466, i32 533, i32 0, i32 149} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3487 = metadata !{i32 535, i32 0, metadata !3488, null}
!3488 = metadata !{i32 786443, metadata !384, metadata !3486, i32 534, i32 0, i32 150} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3489 = metadata !{i32 541, i32 0, metadata !3488, null}
!3490 = metadata !{i32 544, i32 0, metadata !3488, null}
!3491 = metadata !{i32 545, i32 0, metadata !3488, null}
!3492 = metadata !{i32 547, i32 0, metadata !3466, null}
!3493 = metadata !{i32 548, i32 0, metadata !3466, null}
!3494 = metadata !{i32 551, i32 0, metadata !3495, null}
!3495 = metadata !{i32 786443, metadata !384, metadata !3496, i32 551, i32 0, i32 152} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3496 = metadata !{i32 786443, metadata !384, metadata !3464, i32 550, i32 0, i32 151} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3497 = metadata !{i32 557, i32 0, metadata !3498, null}
!3498 = metadata !{i32 786443, metadata !384, metadata !3495, i32 552, i32 0, i32 153} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3499 = metadata !{i32 558, i32 0, metadata !3498, null}
!3500 = metadata !{i32 560, i32 0, metadata !3496, null}
!3501 = metadata !{i32 563, i32 0, metadata !611, null}
!3502 = metadata !{i32 253, i32 0, metadata !3503, null}
!3503 = metadata !{i32 786443, metadata !384, metadata !614, i32 253, i32 0, i32 154} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3504 = metadata !{i32 254, i32 0, metadata !614, null}
!3505 = metadata !{i32 256, i32 0, metadata !614, null}
!3506 = metadata !{i32 257, i32 0, metadata !614, null}
!3507 = metadata !{i32 258, i32 0, metadata !614, null}
!3508 = metadata !{i32 261, i32 0, metadata !3509, null}
!3509 = metadata !{i32 786443, metadata !384, metadata !614, i32 261, i32 0, i32 155} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3510 = metadata !{i32 261, i32 0, metadata !614, null}
!3511 = metadata !{i32 262, i32 0, metadata !3512, null}
!3512 = metadata !{i32 786443, metadata !384, metadata !614, i32 262, i32 0, i32 156} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3513 = metadata !{i32 262, i32 0, metadata !3514, null}
!3514 = metadata !{i32 786443, metadata !384, metadata !3512, i32 262, i32 0, i32 157} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3515 = metadata !{i32 265, i32 0, metadata !3516, null}
!3516 = metadata !{i32 786443, metadata !384, metadata !614, i32 265, i32 0, i32 158} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3517 = metadata !{i32 265, i32 0, metadata !614, null}
!3518 = metadata !{i32 266, i32 0, metadata !3519, null}
!3519 = metadata !{i32 786443, metadata !384, metadata !614, i32 266, i32 0, i32 159} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3520 = metadata !{i32 266, i32 0, metadata !3521, null}
!3521 = metadata !{i32 786443, metadata !384, metadata !3519, i32 266, i32 0, i32 160} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3522 = metadata !{i32 267, i32 0, metadata !614, null}
!3523 = metadata !{i32 240, i32 0, metadata !3524, null}
!3524 = metadata !{i32 786443, metadata !384, metadata !615, i32 240, i32 0, i32 161} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3525 = metadata !{i32 241, i32 0, metadata !615, null}
!3526 = metadata !{i32 242, i32 0, metadata !615, null}
!3527 = metadata !{i32 243, i32 0, metadata !615, null}
!3528 = metadata !{i32 244, i32 0, metadata !615, null}
!3529 = metadata !{i32 245, i32 0, metadata !615, null}
!3530 = metadata !{i32 246, i32 0, metadata !615, null}
!3531 = metadata !{i32 247, i32 0, metadata !615, null}
!3532 = metadata !{i32 610, i32 24, metadata !618, null}
!3533 = metadata !{i32 611, i32 16, metadata !618, null}
!3534 = metadata !{i32 613, i32 0, metadata !618, null}
!3535 = metadata !{i32 615, i32 0, metadata !618, null}
!3536 = metadata !{i32 616, i32 0, metadata !618, null}
!3537 = metadata !{i32 617, i32 0, metadata !618, null}
!3538 = metadata !{i32 1227, i32 24, metadata !619, null}
!3539 = metadata !{i32 1228, i32 0, metadata !619, null}
!3540 = metadata !{i32 1229, i32 0, metadata !619, null}
!3541 = metadata !{i32 1231, i32 0, metadata !619, null}
!3542 = metadata !{i32 1232, i32 0, metadata !619, null}
!3543 = metadata !{i32 1234, i32 0, metadata !619, null}
!3544 = metadata !{i32 1242, i32 0, metadata !3545, null}
!3545 = metadata !{i32 786443, metadata !384, metadata !619, i32 1235, i32 0, i32 162} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3546 = metadata !{i32 1243, i32 12, metadata !3545, null}
!3547 = metadata !{i32 1244, i32 0, metadata !3548, null}
!3548 = metadata !{i32 786443, metadata !384, metadata !3545, i32 1244, i32 0, i32 163} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3549 = metadata !{i32 1246, i32 0, metadata !3550, null}
!3550 = metadata !{i32 786443, metadata !384, metadata !3551, i32 1246, i32 0, i32 165} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3551 = metadata !{i32 786443, metadata !384, metadata !3548, i32 1245, i32 0, i32 164} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3552 = metadata !{i32 1250, i32 0, metadata !3553, null}
!3553 = metadata !{i32 786443, metadata !384, metadata !3550, i32 1250, i32 0, i32 167} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3554 = metadata !{i32 1255, i32 0, metadata !3555, null}
!3555 = metadata !{i32 786443, metadata !384, metadata !3553, i32 1251, i32 0, i32 168} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3556 = metadata !{i32 1256, i32 0, metadata !3555, null}
!3557 = metadata !{i32 1257, i32 0, metadata !3555, null}
!3558 = metadata !{i32 1262, i32 0, metadata !3545, null}
!3559 = metadata !{i32 1265, i32 14, metadata !3560, null}
!3560 = metadata !{i32 786443, metadata !384, metadata !3545, i32 1265, i32 0, i32 169} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3561 = metadata !{i32 1272, i32 0, metadata !3545, null}
!3562 = metadata !{i32 1273, i32 0, metadata !3545, null}
!3563 = metadata !{i32 1274, i32 0, metadata !3545, null}
!3564 = metadata !{i32 1281, i32 0, metadata !3565, null}
!3565 = metadata !{i32 786443, metadata !384, metadata !3545, i32 1275, i32 0, i32 170} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3566 = metadata !{i32 1282, i32 0, metadata !3565, null}
!3567 = metadata !{i32 1286, i32 0, metadata !3565, null}
!3568 = metadata !{i32 1287, i32 0, metadata !3569, null}
!3569 = metadata !{i32 786443, metadata !384, metadata !3570, i32 1287, i32 0, i32 172} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3570 = metadata !{i32 786443, metadata !384, metadata !3565, i32 1287, i32 0, i32 171} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3571 = metadata !{i32 1292, i32 0, metadata !3572, null}
!3572 = metadata !{i32 786443, metadata !384, metadata !3565, i32 1291, i32 0, i32 173} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3573 = metadata !{i32 1293, i32 0, metadata !3572, null}
!3574 = metadata !{i32 1294, i32 0, metadata !3575, null}
!3575 = metadata !{i32 786443, metadata !384, metadata !3572, i32 1294, i32 0, i32 174} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3576 = metadata !{i32 1296, i32 0, metadata !3577, null}
!3577 = metadata !{i32 786443, metadata !384, metadata !3575, i32 1295, i32 0, i32 175} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3578 = metadata !{i32 1300, i32 7, metadata !3579, null}
!3579 = metadata !{i32 786443, metadata !384, metadata !3577, i32 1300, i32 0, i32 176} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3580 = metadata !{i32 1300, i32 0, metadata !3579, null}
!3581 = metadata !{i32 1308, i32 0, metadata !3582, null}
!3582 = metadata !{i32 786443, metadata !384, metadata !3579, i32 1305, i32 0, i32 178} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3583 = metadata !{i32 1309, i32 0, metadata !3584, null}
!3584 = metadata !{i32 786443, metadata !384, metadata !3582, i32 1309, i32 0, i32 179} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3585 = metadata !{i32 1310, i32 0, metadata !3584, null}
!3586 = metadata !{i32 1312, i32 0, metadata !3587, null}
!3587 = metadata !{i32 786443, metadata !384, metadata !3584, i32 1311, i32 0, i32 180} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3588 = metadata !{i32 1320, i32 0, metadata !3589, null}
!3589 = metadata !{i32 786443, metadata !384, metadata !3577, i32 1320, i32 0, i32 181} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3590 = metadata !{i32 1321, i32 0, metadata !3589, null}
!3591 = metadata !{i32 1325, i32 0, metadata !3572, null}
!3592 = metadata !{i32 1326, i32 0, metadata !3593, null}
!3593 = metadata !{i32 786443, metadata !384, metadata !3572, i32 1326, i32 0, i32 182} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3594 = metadata !{i32 1328, i32 0, metadata !3595, null}
!3595 = metadata !{i32 786443, metadata !384, metadata !3593, i32 1327, i32 0, i32 183} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3596 = metadata !{i32 1333, i32 0, metadata !3595, null}
!3597 = metadata !{i32 1334, i32 0, metadata !3595, null}
!3598 = metadata !{i32 1335, i32 0, metadata !3572, null}
!3599 = metadata !{i32 1337, i32 0, metadata !3572, null}
!3600 = metadata !{i32 1342, i32 0, metadata !3601, null}
!3601 = metadata !{i32 786443, metadata !384, metadata !3602, i32 1342, i32 0, i32 185} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3602 = metadata !{i32 786443, metadata !384, metadata !3545, i32 1342, i32 0, i32 184} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3603 = metadata !{i32 1344, i32 0, metadata !3604, null}
!3604 = metadata !{i32 786443, metadata !384, metadata !3545, i32 1344, i32 0, i32 186} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3605 = metadata !{i32 1349, i32 0, metadata !619, null}
!3606 = metadata !{i32 1350, i32 0, metadata !619, null}
!3607 = metadata !{i32 1352, i32 0, metadata !619, null}
!3608 = metadata !{i32 718, i32 24, metadata !623, null}
!3609 = metadata !{i32 719, i32 0, metadata !623, null}
!3610 = metadata !{i32 720, i32 0, metadata !623, null}
!3611 = metadata !{i32 653, i32 0, metadata !626, null}
!3612 = metadata !{i32 682, i32 0, metadata !3613, null}
!3613 = metadata !{i32 786443, metadata !384, metadata !626, i32 682, i32 0, i32 188} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3614 = metadata !{i32 688, i32 0, metadata !3615, null}
!3615 = metadata !{i32 786443, metadata !384, metadata !3613, i32 683, i32 0, i32 189} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3616 = metadata !{i32 684, i32 0, metadata !3615, null}
!3617 = metadata !{i32 698, i32 0, metadata !3615, null}
!3618 = metadata !{i32 702, i32 0, metadata !3619, null}
!3619 = metadata !{i32 786443, metadata !384, metadata !626, i32 702, i32 0, i32 190} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3620 = metadata !{i32 702, i32 0, metadata !3621, null}
!3621 = metadata !{i32 786443, metadata !384, metadata !3619, i32 702, i32 0, i32 191} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3622 = metadata !{i32 705, i32 0, metadata !626, null}
!3623 = metadata !{i32 705, i32 0, metadata !3624, null}
!3624 = metadata !{i32 786443, metadata !384, metadata !626, i32 705, i32 0, i32 192} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3625 = metadata !{i32 709, i32 9, metadata !626, null}
!3626 = metadata !{i32 710, i32 0, metadata !626, null}
!3627 = metadata !{i32 711, i32 0, metadata !626, null}
!3628 = metadata !{i32 712, i32 0, metadata !626, null}
!3629 = metadata !{i32 713, i32 0, metadata !626, null}
!3630 = metadata !{i32 220, i32 0, metadata !631, null}
!3631 = metadata !{i32 223, i32 0, metadata !3632, null}
!3632 = metadata !{i32 786443, metadata !384, metadata !631, i32 223, i32 0, i32 193} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3633 = metadata !{i32 223, i32 0, metadata !3634, null}
!3634 = metadata !{i32 786443, metadata !384, metadata !3632, i32 223, i32 0, i32 194} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3635 = metadata !{i32 226, i32 0, metadata !3636, null}
!3636 = metadata !{i32 786443, metadata !384, metadata !631, i32 226, i32 0, i32 195} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3637 = metadata !{i32 226, i32 0, metadata !3638, null}
!3638 = metadata !{i32 786443, metadata !384, metadata !3636, i32 226, i32 0, i32 196} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3639 = metadata !{i32 229, i32 0, metadata !631, null}
!3640 = metadata !{i32 232, i32 0, metadata !3641, null}
!3641 = metadata !{i32 786443, metadata !384, metadata !631, i32 232, i32 0, i32 197} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3642 = metadata !{i32 232, i32 0, metadata !3643, null}
!3643 = metadata !{i32 786443, metadata !384, metadata !3641, i32 232, i32 0, i32 198} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3644 = metadata !{i32 233, i32 0, metadata !631, null}
!3645 = metadata !{i32 312, i32 0, metadata !3646, null}
!3646 = metadata !{i32 786443, metadata !384, metadata !632, i32 312, i32 0, i32 199} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3647 = metadata !{i32 313, i32 0, metadata !632, null}
!3648 = metadata !{i32 317, i32 0, metadata !632, null}
!3649 = metadata !{i32 318, i32 0, metadata !632, null}
!3650 = metadata !{i32 320, i32 0, metadata !3651, null}
!3651 = metadata !{i32 786443, metadata !384, metadata !632, i32 320, i32 0, i32 200} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3652 = metadata !{i32 327, i32 0, metadata !3653, null}
!3653 = metadata !{i32 786443, metadata !384, metadata !3651, i32 321, i32 0, i32 201} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3654 = metadata !{i32 328, i32 0, metadata !3653, null}
!3655 = metadata !{i32 330, i32 0, metadata !3656, null}
!3656 = metadata !{i32 786443, metadata !384, metadata !3653, i32 330, i32 0, i32 202} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3657 = metadata !{i32 339, i32 0, metadata !3658, null}
!3658 = metadata !{i32 786443, metadata !384, metadata !3656, i32 331, i32 0, i32 203} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3659 = metadata !{i32 340, i32 0, metadata !3658, null}
!3660 = metadata !{i32 342, i32 0, metadata !3658, null}
!3661 = metadata !{i32 343, i32 0, metadata !3662, null}
!3662 = metadata !{i32 786443, metadata !384, metadata !3658, i32 343, i32 0, i32 204} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3663 = metadata !{i32 347, i32 0, metadata !3664, null}
!3664 = metadata !{i32 786443, metadata !384, metadata !3662, i32 344, i32 0, i32 205} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3665 = metadata !{i32 348, i32 0, metadata !3658, null}
!3666 = metadata !{i32 351, i32 0, metadata !3653, null}
!3667 = metadata !{i32 352, i32 0, metadata !3653, null}
!3668 = metadata !{i32 354, i32 0, metadata !3669, null}
!3669 = metadata !{i32 786443, metadata !384, metadata !632, i32 354, i32 0, i32 206} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3670 = metadata !{i32 359, i32 0, metadata !3671, null}
!3671 = metadata !{i32 786443, metadata !384, metadata !3669, i32 355, i32 0, i32 207} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3672 = metadata !{i32 360, i32 0, metadata !3671, null}
!3673 = metadata !{i32 361, i32 0, metadata !3671, null}
!3674 = metadata !{i32 366, i32 0, metadata !3675, null}
!3675 = metadata !{i32 786443, metadata !384, metadata !3669, i32 363, i32 0, i32 208} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3676 = metadata !{i32 367, i32 0, metadata !3675, null}
!3677 = metadata !{i32 370, i32 0, metadata !632, null}
!3678 = metadata !{i32 371, i32 0, metadata !632, null}
!3679 = metadata !{i32 282, i32 0, metadata !3680, null}
!3680 = metadata !{i32 786443, metadata !384, metadata !635, i32 282, i32 0, i32 209} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3681 = metadata !{i32 284, i32 0, metadata !3682, null}
!3682 = metadata !{i32 786443, metadata !384, metadata !3680, i32 283, i32 0, i32 210} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3683 = metadata !{i32 285, i32 0, metadata !3682, null}
!3684 = metadata !{i32 286, i32 0, metadata !3682, null}
!3685 = metadata !{i32 287, i32 0, metadata !3682, null}
!3686 = metadata !{i32 290, i32 0, metadata !3687, null}
!3687 = metadata !{i32 786443, metadata !384, metadata !3680, i32 289, i32 0, i32 211} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3688 = metadata !{i32 291, i32 0, metadata !3687, null}
!3689 = metadata !{i32 292, i32 0, metadata !3687, null}
!3690 = metadata !{i32 293, i32 0, metadata !3687, null}
!3691 = metadata !{i32 296, i32 0, metadata !635, null}
!3692 = metadata !{i32 297, i32 0, metadata !635, null}
!3693 = metadata !{i32 1186, i32 0, metadata !638, null}
!3694 = metadata !{i32 1187, i32 0, metadata !638, null}
!3695 = metadata !{i32 1193, i32 0, metadata !3696, null}
!3696 = metadata !{i32 786443, metadata !384, metadata !638, i32 1193, i32 0, i32 212} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3697 = metadata !{i32 1194, i32 0, metadata !3696, null}
!3698 = metadata !{i32 1195, i32 0, metadata !3699, null}
!3699 = metadata !{i32 786443, metadata !384, metadata !3696, i32 1195, i32 0, i32 213} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3700 = metadata !{i32 1196, i32 0, metadata !3699, null}
!3701 = metadata !{i32 1197, i32 0, metadata !3702, null}
!3702 = metadata !{i32 786443, metadata !384, metadata !3699, i32 1197, i32 0, i32 214} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3703 = metadata !{i32 1199, i32 0, metadata !3704, null}
!3704 = metadata !{i32 786443, metadata !384, metadata !3702, i32 1198, i32 0, i32 215} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3705 = metadata !{i32 1200, i32 0, metadata !3706, null}
!3706 = metadata !{i32 786443, metadata !384, metadata !3704, i32 1200, i32 0, i32 216} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3707 = metadata !{i32 1201, i32 0, metadata !3706, null}
!3708 = metadata !{i32 1202, i32 0, metadata !3704, null}
!3709 = metadata !{i32 1203, i32 0, metadata !3704, null}
!3710 = metadata !{i32 1205, i32 0, metadata !3702, null}
!3711 = metadata !{i32 1207, i32 0, metadata !638, null}
!3712 = metadata !{i32 1208, i32 0, metadata !638, null}
!3713 = metadata !{i32 1209, i32 0, metadata !638, null}
!3714 = metadata !{i32 1210, i32 0, metadata !638, null}
!3715 = metadata !{i32 1023, i32 0, metadata !641, null}
!3716 = metadata !{i32 1025, i32 27, metadata !641, null}
!3717 = metadata !{i32 1027, i32 0, metadata !3718, null}
!3718 = metadata !{i32 786443, metadata !384, metadata !641, i32 1027, i32 0, i32 217} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3719 = metadata !{i32 1028, i32 0, metadata !3718, null}
!3720 = metadata !{i32 1046, i32 0, metadata !3721, null}
!3721 = metadata !{i32 786443, metadata !384, metadata !3722, i32 1046, i32 0, i32 220} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3722 = metadata !{i32 786443, metadata !384, metadata !3723, i32 1045, i32 0, i32 219} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3723 = metadata !{i32 786443, metadata !384, metadata !641, i32 1044, i32 0, i32 218} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3724 = metadata !{i32 1048, i32 0, metadata !3725, null}
!3725 = metadata !{i32 786443, metadata !384, metadata !3721, i32 1047, i32 0, i32 221} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3726 = metadata !{i32 1053, i32 0, metadata !3725, null}
!3727 = metadata !{i32 1060, i32 0, metadata !3728, null}
!3728 = metadata !{i32 786443, metadata !384, metadata !3722, i32 1060, i32 0, i32 222} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3729 = metadata !{i32 1061, i32 0, metadata !3730, null}
!3730 = metadata !{i32 786443, metadata !384, metadata !3731, i32 1061, i32 0, i32 224} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3731 = metadata !{i32 786443, metadata !384, metadata !3728, i32 1061, i32 0, i32 223} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3732 = metadata !{i32 1061, i32 0, metadata !3733, null}
!3733 = metadata !{i32 786443, metadata !384, metadata !3734, i32 1061, i32 0, i32 226} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3734 = metadata !{i32 786443, metadata !384, metadata !3730, i32 1061, i32 0, i32 225} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3735 = metadata !{i32 1061, i32 0, metadata !3734, null}
!3736 = metadata !{i32 1061, i32 0, metadata !3737, null}
!3737 = metadata !{i32 786443, metadata !384, metadata !3731, i32 1061, i32 0, i32 227} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3738 = metadata !{i32 1061, i32 0, metadata !3739, null}
!3739 = metadata !{i32 786443, metadata !384, metadata !3731, i32 1061, i32 0, i32 228} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3740 = metadata !{i32 1068, i32 0, metadata !3741, null}
!3741 = metadata !{i32 786443, metadata !384, metadata !3722, i32 1068, i32 0, i32 229} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3742 = metadata !{i32 1069, i32 0, metadata !3741, null}
!3743 = metadata !{i32 1071, i32 0, metadata !3744, null}
!3744 = metadata !{i32 786443, metadata !384, metadata !3745, i32 1071, i32 0, i32 231} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3745 = metadata !{i32 786443, metadata !384, metadata !3722, i32 1071, i32 0, i32 230} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3746 = metadata !{i32 1071, i32 0, metadata !3747, null}
!3747 = metadata !{i32 786443, metadata !384, metadata !3748, i32 1071, i32 0, i32 233} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3748 = metadata !{i32 786443, metadata !384, metadata !3744, i32 1071, i32 0, i32 232} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3749 = metadata !{i32 1071, i32 0, metadata !3748, null}
!3750 = metadata !{i32 1071, i32 0, metadata !3751, null}
!3751 = metadata !{i32 786443, metadata !384, metadata !3745, i32 1071, i32 0, i32 234} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3752 = metadata !{i32 1076, i32 0, metadata !3753, null}
!3753 = metadata !{i32 786443, metadata !384, metadata !3722, i32 1076, i32 0, i32 235} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3754 = metadata !{i32 1076, i32 47, metadata !3753, null}
!3755 = metadata !{i32 1077, i32 0, metadata !3753, null}
!3756 = metadata !{i32 1079, i32 0, metadata !3757, null}
!3757 = metadata !{i32 786443, metadata !384, metadata !3722, i32 1079, i32 0, i32 236} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3758 = metadata !{i32 1080, i32 8, metadata !3757, null}
!3759 = metadata !{i32 1082, i32 8, metadata !3760, null}
!3760 = metadata !{i32 786443, metadata !384, metadata !3761, i32 1082, i32 0, i32 238} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3761 = metadata !{i32 786443, metadata !384, metadata !3757, i32 1081, i32 0, i32 237} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3762 = metadata !{i32 1082, i32 0, metadata !3760, null}
!3763 = metadata !{i32 1083, i32 0, metadata !3760, null}
!3764 = metadata !{i32 1087, i32 0, metadata !3761, null}
!3765 = metadata !{i32 1092, i32 0, metadata !3761, null}
!3766 = metadata !{i32 1094, i32 0, metadata !3722, null}
!3767 = metadata !{i32 1162, i32 0, metadata !641, null}
!3768 = metadata !{i32 1163, i32 0, metadata !641, null}
!3769 = metadata !{i32 929, i32 0, metadata !644, null}
!3770 = metadata !{i32 931, i32 0, metadata !644, null}
!3771 = metadata !{i32 933, i32 0, metadata !644, null}
!3772 = metadata !{i32 934, i32 0, metadata !644, null}
!3773 = metadata !{i32 201, i32 0, metadata !647, null}
!3774 = metadata !{i32 382, i32 0, metadata !650, null}
!3775 = metadata !{i32 627, i32 0, metadata !3776, null}
!3776 = metadata !{i32 786443, metadata !384, metadata !659, i32 627, i32 0, i32 239} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3777 = metadata !{i32 627, i32 0, metadata !3778, null}
!3778 = metadata !{i32 786443, metadata !384, metadata !3776, i32 627, i32 0, i32 240} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3779 = metadata !{i32 630, i32 9, metadata !659, null}
!3780 = metadata !{i32 631, i32 0, metadata !659, null}
!3781 = metadata !{i32 636, i32 0, metadata !659, null}
!3782 = metadata !{i32 637, i32 0, metadata !659, null}
!3783 = metadata !{i32 638, i32 0, metadata !659, null}
!3784 = metadata !{i32 1010, i32 0, metadata !660, null}
!3785 = metadata !{i32 1010, i32 37, metadata !660, null}
!3786 = metadata !{i32 1011, i32 0, metadata !660, null}
!3787 = metadata !{i32 996, i32 0, metadata !663, null}
!3788 = metadata !{i32 1000, i32 0, metadata !3789, null}
!3789 = metadata !{i32 786443, metadata !384, metadata !663, i32 997, i32 0, i32 241} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3790 = metadata !{i32 1002, i32 0, metadata !3789, null}
!3791 = metadata !{i32 1004, i32 0, metadata !663, null}
!3792 = metadata !{i32 174, i32 0, metadata !3793, null}
!3793 = metadata !{i32 786443, metadata !384, metadata !666, i32 174, i32 0, i32 242} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3794 = metadata !{i32 175, i32 0, metadata !3793, null}
!3795 = metadata !{i32 176, i32 0, metadata !3796, null}
!3796 = metadata !{i32 786443, metadata !384, metadata !666, i32 176, i32 0, i32 243} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!3797 = metadata !{i32 177, i32 0, metadata !3796, null}
!3798 = metadata !{i32 178, i32 0, metadata !666, null}
!3799 = metadata !{i32 179, i32 0, metadata !666, null}
!3800 = metadata !{i32 180, i32 0, metadata !666, null}
!3801 = metadata !{i32 186, i32 0, metadata !669, null}
!3802 = metadata !{i32 187, i32 0, metadata !669, null}
!3803 = metadata !{i32 371, i32 0, metadata !3804, null}
!3804 = metadata !{i32 786443, metadata !294, metadata !3805, i32 371, i32 0, i32 244} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!3805 = metadata !{i32 786443, metadata !294, metadata !672} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!3806 = metadata !{i32 373, i32 0, metadata !3807, null}
!3807 = metadata !{i32 786443, metadata !294, metadata !3804, i32 372, i32 0, i32 245} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!3808 = metadata !{i32 374, i32 0, metadata !3807, null}
!3809 = metadata !{i32 377, i32 0, metadata !3804, null}
!3810 = metadata !{i32 378, i32 0, metadata !3805, null}
!3811 = metadata !{i32 62, i32 0, metadata !690, null}
!3812 = metadata !{i32 63, i32 0, metadata !690, null}
!3813 = metadata !{i32 65, i32 0, metadata !690, null}
!3814 = metadata !{i32 67, i32 0, metadata !3815, null}
!3815 = metadata !{i32 786443, metadata !688, metadata !690, i32 66, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/full-write.c]
!3816 = metadata !{i32 68, i32 0, metadata !3817, null}
!3817 = metadata !{i32 786443, metadata !688, metadata !3815, i32 68, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/full-write.c]
!3818 = metadata !{i32 70, i32 0, metadata !3819, null}
!3819 = metadata !{i32 786443, metadata !688, metadata !3815, i32 70, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/full-write.c]
!3820 = metadata !{i32 72, i32 0, metadata !3821, null}
!3821 = metadata !{i32 786443, metadata !688, metadata !3819, i32 71, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/full-write.c]
!3822 = metadata !{i32 73, i32 0, metadata !3821, null}
!3823 = metadata !{i32 75, i32 0, metadata !3815, null}
!3824 = metadata !{i32 76, i32 0, metadata !3815, null}
!3825 = metadata !{i32 77, i32 0, metadata !3815, null}
!3826 = metadata !{i32 78, i32 0, metadata !3815, null}
!3827 = metadata !{i32 80, i32 0, metadata !690, null}
!3828 = metadata !{i32 35, i32 0, metadata !698, null}
!3829 = metadata !{i32 37, i32 0, metadata !3830, null}
!3830 = metadata !{i32 786443, metadata !696, metadata !698, i32 37, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash-pjw.c]
!3831 = metadata !{i32 38, i32 0, metadata !3830, null}
!3832 = metadata !{i32 40, i32 0, metadata !698, null}
!3833 = metadata !{i32 51, i32 0, metadata !3834, null}
!3834 = metadata !{i32 786443, metadata !704, metadata !710, i32 48, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/version-etc.c]
!3835 = metadata !{i32 53, i32 0, metadata !3834, null}
!3836 = metadata !{i32 54, i32 0, metadata !3834, null}
!3837 = metadata !{i32 55, i32 0, metadata !3834, null}
!3838 = metadata !{i32 58, i32 0, metadata !3839, null} ; [ DW_TAG_imported_module ]
!3839 = metadata !{i32 786443, metadata !704, metadata !710, i32 58, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/version-etc.c]
!3840 = metadata !{i32 59, i32 0, metadata !3839, null}
!3841 = metadata !{i32 61, i32 0, metadata !3839, null}
!3842 = metadata !{i32 66, i32 0, metadata !710, null}
!3843 = metadata !{i32 68, i32 0, metadata !710, null}
!3844 = metadata !{i32 77, i32 0, metadata !710, null}
!3845 = metadata !{i32 81, i32 0, metadata !3846, null}
!3846 = metadata !{i32 786443, metadata !704, metadata !710, i32 78, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/version-etc.c]
!3847 = metadata !{i32 84, i32 0, metadata !3846, null}
!3848 = metadata !{i32 85, i32 0, metadata !3846, null}
!3849 = metadata !{i32 88, i32 0, metadata !3846, null}
!3850 = metadata !{i32 89, i32 0, metadata !3846, null}
!3851 = metadata !{i32 92, i32 0, metadata !3846, null}
!3852 = metadata !{i32 93, i32 0, metadata !3846, null}
!3853 = metadata !{i32 98, i32 0, metadata !3846, null}
!3854 = metadata !{i32 99, i32 0, metadata !3846, null}
!3855 = metadata !{i32 104, i32 0, metadata !3846, null}
!3856 = metadata !{i32 105, i32 0, metadata !3846, null}
!3857 = metadata !{i32 110, i32 0, metadata !3846, null}
!3858 = metadata !{i32 112, i32 0, metadata !3846, null}
!3859 = metadata !{i32 117, i32 0, metadata !3846, null}
!3860 = metadata !{i32 119, i32 0, metadata !3846, null}
!3861 = metadata !{i32 124, i32 0, metadata !3846, null}
!3862 = metadata !{i32 127, i32 0, metadata !3846, null}
!3863 = metadata !{i32 132, i32 0, metadata !3846, null}
!3864 = metadata !{i32 135, i32 0, metadata !3846, null}
!3865 = metadata !{i32 142, i32 0, metadata !3846, null}
!3866 = metadata !{i32 145, i32 0, metadata !3846, null}
!3867 = metadata !{i32 147, i32 0, metadata !710, null}
!3868 = metadata !{i32 148, i32 0, metadata !710, null}
!3869 = metadata !{i32 171, i32 0, metadata !771, null}
!3870 = metadata !{i32 172, i32 0, metadata !771, null}
!3871 = metadata !{i32 173, i32 0, metadata !771, null}
!3872 = metadata !{i32 35, i32 0, metadata !785, null}
!3873 = metadata !{i32 41, i32 0, metadata !785, null}
!3874 = metadata !{i32 33, i32 0, metadata !3875, null}
!3875 = metadata !{i32 786443, metadata !788, metadata !790, i32 33, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/buffer-lcm.c]
!3876 = metadata !{i32 37, i32 0, metadata !3877, null}
!3877 = metadata !{i32 786443, metadata !788, metadata !3878, i32 37, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/buffer-lcm.c]
!3878 = metadata !{i32 786443, metadata !788, metadata !3875, i32 36, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/buffer-lcm.c]
!3879 = metadata !{i32 34, i32 0, metadata !3875, null}
!3880 = metadata !{i32 45, i32 0, metadata !3881, null}
!3881 = metadata !{i32 786443, metadata !788, metadata !3882, i32 45, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/buffer-lcm.c]
!3882 = metadata !{i32 786443, metadata !788, metadata !3877, i32 38, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/buffer-lcm.c]
!3883 = metadata !{i32 49, i32 0, metadata !3882, null}
!3884 = metadata !{i32 50, i32 0, metadata !3882, null}
!3885 = metadata !{i32 51, i32 0, metadata !3886, null}
!3886 = metadata !{i32 786443, metadata !788, metadata !3882, i32 51, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/buffer-lcm.c]
!3887 = metadata !{i32 52, i32 0, metadata !3886, null}
!3888 = metadata !{i32 55, i32 0, metadata !3878, null}
!3889 = metadata !{i32 58, i32 0, metadata !790, null} ; [ DW_TAG_imported_module ]
!3890 = metadata !{i32 59, i32 0, metadata !790, null}
!3891 = metadata !{i32 122, i32 0, metadata !3892, null}
!3892 = metadata !{i32 786443, metadata !796, metadata !798, i32 122, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/acl.c]
!3893 = metadata !{i32 123, i32 0, metadata !3892, null}
!3894 = metadata !{i32 125, i32 0, metadata !3892, null}
!3895 = metadata !{i32 126, i32 0, metadata !798, null}
!3896 = metadata !{i32 188, i32 0, metadata !804, null}
!3897 = metadata !{i32 294, i32 0, metadata !843, null}
!3898 = metadata !{i32 295, i32 0, metadata !3899, null}
!3899 = metadata !{i32 786443, metadata !796, metadata !843, i32 295, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/acl.c]
!3900 = metadata !{i32 296, i32 0, metadata !3899, null}
!3901 = metadata !{i32 297, i32 0, metadata !843, null}
!3902 = metadata !{i32 401, i32 0, metadata !846, null}
!3903 = metadata !{i32 402, i32 0, metadata !3904, null}
!3904 = metadata !{i32 786443, metadata !796, metadata !846, i32 402, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/acl.c]
!3905 = metadata !{i32 403, i32 0, metadata !3904, null}
!3906 = metadata !{i32 404, i32 0, metadata !846, null}
!3907 = metadata !{i32 90, i32 0, metadata !861, null}
!3908 = metadata !{i32 91, i32 0, metadata !861, null}
!3909 = metadata !{i32 93, i32 0, metadata !861, null}
!3910 = metadata !{i32 96, i32 0, metadata !3911, null}
!3911 = metadata !{i32 786443, metadata !848, metadata !861, i32 96, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3912 = metadata !{i32 98, i32 0, metadata !3913, null}
!3913 = metadata !{i32 786443, metadata !848, metadata !3914, i32 98, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3914 = metadata !{i32 786443, metadata !848, metadata !3911, i32 97, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3915 = metadata !{i32 100, i32 0, metadata !3916, null}
!3916 = metadata !{i32 786443, metadata !848, metadata !3917, i32 100, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3917 = metadata !{i32 786443, metadata !848, metadata !3913, i32 99, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3918 = metadata !{i32 102, i32 0, metadata !3916, null}
!3919 = metadata !{i32 103, i32 0, metadata !3920, null}
!3920 = metadata !{i32 786443, metadata !848, metadata !3916, i32 103, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3921 = metadata !{i32 105, i32 0, metadata !3920, null}
!3922 = metadata !{i32 109, i32 0, metadata !3923, null}
!3923 = metadata !{i32 786443, metadata !848, metadata !3924, i32 109, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3924 = metadata !{i32 786443, metadata !848, metadata !3920, i32 107, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3925 = metadata !{i32 110, i32 0, metadata !3923, null}
!3926 = metadata !{i32 115, i32 0, metadata !3927, null}
!3927 = metadata !{i32 786443, metadata !848, metadata !3923, i32 112, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3928 = metadata !{i32 116, i32 0, metadata !3927, null}
!3929 = metadata !{i32 120, i32 0, metadata !3930, null}
!3930 = metadata !{i32 786443, metadata !848, metadata !861, i32 120, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3931 = metadata !{i32 121, i32 0, metadata !3930, null}
!3932 = metadata !{i32 123, i32 0, metadata !3930, null}
!3933 = metadata !{i32 124, i32 0, metadata !861, null}
!3934 = metadata !{i32 134, i32 0, metadata !867, null}
!3935 = metadata !{i32 138, i32 0, metadata !867, null}
!3936 = metadata !{i32 139, i32 0, metadata !867, null}
!3937 = metadata !{i32 140, i32 0, metadata !867, null}
!3938 = metadata !{i32 151, i32 0, metadata !870, null}
!3939 = metadata !{i32 155, i32 0, metadata !870, null}
!3940 = metadata !{i32 156, i32 0, metadata !3941, null}
!3941 = metadata !{i32 786443, metadata !848, metadata !870, i32 156, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3942 = metadata !{i32 157, i32 0, metadata !3943, null}
!3943 = metadata !{i32 786443, metadata !848, metadata !3941, i32 157, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3944 = metadata !{i32 158, i32 0, metadata !3943, null}
!3945 = metadata !{i32 160, i32 0, metadata !3946, null}
!3946 = metadata !{i32 786443, metadata !848, metadata !3943, i32 159, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3947 = metadata !{i32 161, i32 0, metadata !3946, null}
!3948 = metadata !{i32 162, i32 0, metadata !3946, null}
!3949 = metadata !{i32 165, i32 0, metadata !3950, null}
!3950 = metadata !{i32 786443, metadata !848, metadata !3943, i32 164, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3951 = metadata !{i32 167, i32 0, metadata !870, null}
!3952 = metadata !{i32 168, i32 0, metadata !870, null}
!3953 = metadata !{i32 182, i32 0, metadata !873, null}
!3954 = metadata !{i32 183, i32 0, metadata !3955, null}
!3955 = metadata !{i32 786443, metadata !848, metadata !873, i32 183, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3956 = metadata !{i32 185, i32 0, metadata !3955, null}
!3957 = metadata !{i32 188, i32 0, metadata !873, null}
!3958 = metadata !{i32 189, i32 0, metadata !873, null}
!3959 = metadata !{i32 190, i32 0, metadata !873, null}
!3960 = metadata !{i32 192, i32 0, metadata !873, null}
!3961 = metadata !{i32 193, i32 0, metadata !873, null}
!3962 = metadata !{i32 204, i32 0, metadata !3963, null}
!3963 = metadata !{i32 786443, metadata !848, metadata !878, i32 204, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3964 = metadata !{i32 205, i32 0, metadata !3965, null}
!3965 = metadata !{i32 786443, metadata !848, metadata !3963, i32 205, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!3966 = metadata !{i32 206, i32 0, metadata !3965, null}
!3967 = metadata !{i32 207, i32 0, metadata !878, null}
!3968 = metadata !{i32 208, i32 0, metadata !878, null}
!3969 = metadata !{i32 65, i32 0, metadata !881, null}
!3970 = metadata !{i32 66, i32 0, metadata !881, null}
!3971 = metadata !{i32 270, i32 0, metadata !890, null}
!3972 = metadata !{i32 273, i32 0, metadata !890, null}
!3973 = metadata !{i32 277, i32 0, metadata !890, null}
!3974 = metadata !{i32 278, i32 0, metadata !890, null}
!3975 = metadata !{i32 280, i32 0, metadata !3976, null}
!3976 = metadata !{i32 786443, metadata !885, metadata !890, i32 280, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!3977 = metadata !{i32 281, i32 0, metadata !3976, null}
!3978 = metadata !{i32 283, i32 0, metadata !890, null}
!3979 = metadata !{i32 284, i32 0, metadata !890, null}
!3980 = metadata !{i32 285, i32 0, metadata !890, null}
!3981 = metadata !{i32 287, i32 0, metadata !3982, null}
!3982 = metadata !{i32 786443, metadata !885, metadata !890, i32 287, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!3983 = metadata !{i32 288, i32 0, metadata !3982, null}
!3984 = metadata !{i32 291, i32 0, metadata !3985, null}
!3985 = metadata !{i32 786443, metadata !885, metadata !3982, i32 289, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!3986 = metadata !{i32 294, i32 0, metadata !3985, null}
!3987 = metadata !{i32 295, i32 0, metadata !3985, null}
!3988 = metadata !{i32 298, i32 0, metadata !3985, null}
!3989 = metadata !{i32 299, i32 0, metadata !3985, null}
!3990 = metadata !{i32 302, i32 0, metadata !3991, null}
!3991 = metadata !{i32 786443, metadata !885, metadata !890, i32 302, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!3992 = metadata !{i32 303, i32 0, metadata !3991, null}
!3993 = metadata !{i32 304, i32 0, metadata !890, null}
!3994 = metadata !{i32 305, i32 0, metadata !890, null}
!3995 = metadata !{i32 306, i32 0, metadata !890, null}
!3996 = metadata !{i32 339, i32 0, metadata !3997, null}
!3997 = metadata !{i32 786443, metadata !885, metadata !926, i32 339, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!3998 = metadata !{i32 340, i32 0, metadata !3997, null}
!3999 = metadata !{i32 342, i32 0, metadata !3997, null}
!4000 = metadata !{i32 343, i32 0, metadata !926, null}
!4001 = metadata !{i32 355, i32 0, metadata !4002, null}
!4002 = metadata !{i32 786443, metadata !885, metadata !929, i32 355, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4003 = metadata !{i32 356, i32 0, metadata !4002, null}
!4004 = metadata !{i32 358, i32 0, metadata !4002, null}
!4005 = metadata !{i32 359, i32 0, metadata !929, null}
!4006 = metadata !{i32 178, i32 0, metadata !934, null}
!4007 = metadata !{i32 181, i32 0, metadata !934, null}
!4008 = metadata !{i32 182, i32 0, metadata !934, null}
!4009 = metadata !{i32 183, i32 0, metadata !934, null}
!4010 = metadata !{i32 184, i32 0, metadata !934, null}
!4011 = metadata !{i32 185, i32 0, metadata !934, null}
!4012 = metadata !{i32 190, i32 0, metadata !934, null}
!4013 = metadata !{i32 191, i32 0, metadata !934, null}
!4014 = metadata !{i32 192, i32 0, metadata !934, null}
!4015 = metadata !{i32 193, i32 0, metadata !934, null}
!4016 = metadata !{i32 194, i32 0, metadata !934, null}
!4017 = metadata !{i32 196, i32 0, metadata !4018, null}
!4018 = metadata !{i32 786443, metadata !885, metadata !934, i32 196, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4019 = metadata !{i32 197, i32 0, metadata !4018, null}
!4020 = metadata !{i32 199, i32 0, metadata !934, null}
!4021 = metadata !{i32 207, i32 0, metadata !4022, null}
!4022 = metadata !{i32 786443, metadata !885, metadata !4023, i32 207, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4023 = metadata !{i32 786443, metadata !885, metadata !934, i32 200, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4024 = metadata !{i32 210, i32 0, metadata !4025, null}
!4025 = metadata !{i32 786443, metadata !885, metadata !4023, i32 210, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4026 = metadata !{i32 213, i32 0, metadata !4023, null}
!4027 = metadata !{i32 219, i32 0, metadata !4028, null}
!4028 = metadata !{i32 786443, metadata !885, metadata !4023, i32 219, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4029 = metadata !{i32 221, i32 0, metadata !4023, null}
!4030 = metadata !{i32 222, i32 0, metadata !4031, null}
!4031 = metadata !{i32 786443, metadata !885, metadata !4023, i32 222, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4032 = metadata !{i32 223, i32 0, metadata !4031, null}
!4033 = metadata !{i32 225, i32 0, metadata !4034, null}
!4034 = metadata !{i32 786443, metadata !885, metadata !4023, i32 225, i32 0, i32 21} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4035 = metadata !{i32 228, i32 0, metadata !4034, null}
!4036 = metadata !{i32 235, i32 0, metadata !4023, null}
!4037 = metadata !{i32 236, i32 0, metadata !4023, null}
!4038 = metadata !{i32 237, i32 0, metadata !4023, null}
!4039 = metadata !{i32 238, i32 0, metadata !4040, null}
!4040 = metadata !{i32 786443, metadata !885, metadata !4023, i32 238, i32 0, i32 22} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4041 = metadata !{i32 240, i32 0, metadata !4042, null}
!4042 = metadata !{i32 786443, metadata !885, metadata !4040, i32 239, i32 0, i32 23} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4043 = metadata !{i32 241, i32 0, metadata !4042, null}
!4044 = metadata !{i32 242, i32 0, metadata !4042, null}
!4045 = metadata !{i32 243, i32 0, metadata !4023, null}
!4046 = metadata !{i32 244, i32 0, metadata !4023, null}
!4047 = metadata !{i32 245, i32 0, metadata !4023, null}
!4048 = metadata !{i32 246, i32 0, metadata !4023, null}
!4049 = metadata !{i32 247, i32 0, metadata !4023, null}
!4050 = metadata !{i32 248, i32 0, metadata !4023, null}
!4051 = metadata !{i32 252, i32 0, metadata !4023, null}
!4052 = metadata !{i32 253, i32 0, metadata !4023, null}
!4053 = metadata !{i32 254, i32 0, metadata !4023, null}
!4054 = metadata !{i32 255, i32 0, metadata !4023, null}
!4055 = metadata !{i32 256, i32 0, metadata !4023, null}
!4056 = metadata !{i32 258, i32 0, metadata !934, null}
!4057 = metadata !{i32 259, i32 0, metadata !934, null}
!4058 = metadata !{i32 260, i32 0, metadata !934, null}
!4059 = metadata !{i32 261, i32 0, metadata !934, null}
!4060 = metadata !{i32 98, i32 0, metadata !930, null}
!4061 = metadata !{i32 99, i32 0, metadata !930, null}
!4062 = metadata !{i32 100, i32 0, metadata !930, null}
!4063 = metadata !{i32 102, i32 0, metadata !4064, null}
!4064 = metadata !{i32 786443, metadata !885, metadata !930, i32 102, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4065 = metadata !{i32 110, i32 0, metadata !4066, null}
!4066 = metadata !{i32 786443, metadata !885, metadata !4064, i32 103, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4067 = metadata !{i32 111, i32 0, metadata !4066, null}
!4068 = metadata !{i32 112, i32 0, metadata !4066, null}
!4069 = metadata !{i32 113, i32 0, metadata !4066, null}
!4070 = metadata !{i32 114, i32 0, metadata !4071, null}
!4071 = metadata !{i32 786443, metadata !885, metadata !4066, i32 114, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4072 = metadata !{i32 116, i32 0, metadata !4073, null}
!4073 = metadata !{i32 786443, metadata !885, metadata !4071, i32 115, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4074 = metadata !{i32 117, i32 0, metadata !4075, null}
!4075 = metadata !{i32 786443, metadata !885, metadata !4073, i32 117, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4076 = metadata !{i32 118, i32 0, metadata !4075, null}
!4077 = metadata !{i32 120, i32 0, metadata !4066, null}
!4078 = metadata !{i32 121, i32 0, metadata !4066, null}
!4079 = metadata !{i32 138, i32 0, metadata !4080, null}
!4080 = metadata !{i32 786443, metadata !885, metadata !930, i32 138, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4081 = metadata !{i32 140, i32 0, metadata !4082, null}
!4082 = metadata !{i32 786443, metadata !885, metadata !4080, i32 139, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4083 = metadata !{i32 141, i32 0, metadata !4084, null}
!4084 = metadata !{i32 786443, metadata !885, metadata !4082, i32 141, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/backupfile.c]
!4085 = metadata !{i32 142, i32 0, metadata !4084, null}
!4086 = metadata !{i32 143, i32 0, metadata !4082, null}
!4087 = metadata !{i32 144, i32 0, metadata !4082, null}
!4088 = metadata !{i32 145, i32 0, metadata !4082, null}
!4089 = metadata !{i32 146, i32 0, metadata !930, null}
!4090 = metadata !{i32 35, i32 0, metadata !949, null}
!4091 = metadata !{i32 37, i32 0, metadata !949, null}
!4092 = metadata !{i32 39, i32 0, metadata !949, null}
!4093 = metadata !{i32 40, i32 0, metadata !949, null}
!4094 = metadata !{i32 42, i32 0, metadata !4095, null}
!4095 = metadata !{i32 786443, metadata !947, metadata !949, i32 42, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!4096 = metadata !{i32 44, i32 0, metadata !4097, null}
!4097 = metadata !{i32 786443, metadata !947, metadata !4098, i32 44, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!4098 = metadata !{i32 786443, metadata !947, metadata !4095, i32 43, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!4099 = metadata !{i32 45, i32 0, metadata !4097, null}
!4100 = metadata !{i32 46, i32 0, metadata !4101, null}
!4101 = metadata !{i32 786443, metadata !947, metadata !4097, i32 46, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!4102 = metadata !{i32 48, i32 0, metadata !4103, null}
!4103 = metadata !{i32 786443, metadata !947, metadata !4101, i32 47, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!4104 = metadata !{i32 49, i32 0, metadata !4103, null}
!4105 = metadata !{i32 50, i32 0, metadata !4103, null}
!4106 = metadata !{i32 53, i32 0, metadata !949, null}
!4107 = metadata !{i32 77, i32 0, metadata !953, null}
!4108 = metadata !{i32 82, i32 0, metadata !4109, null}
!4109 = metadata !{i32 786443, metadata !947, metadata !953, i32 82, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!4110 = metadata !{i32 83, i32 0, metadata !4109, null}
!4111 = metadata !{i32 86, i32 0, metadata !953, null}
!4112 = metadata !{i32 87, i32 0, metadata !4113, null}
!4113 = metadata !{i32 786443, metadata !947, metadata !953, i32 87, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!4114 = metadata !{i32 88, i32 0, metadata !4113, null}
!4115 = metadata !{i32 104, i32 0, metadata !953, null}
!4116 = metadata !{i32 105, i32 0, metadata !953, null}
!4117 = metadata !{i32 115, i32 0, metadata !954, null}
!4118 = metadata !{i32 117, i32 0, metadata !4119, null}
!4119 = metadata !{i32 786443, metadata !947, metadata !954, i32 117, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!4120 = metadata !{i32 128, i32 0, metadata !954, null}
!4121 = metadata !{i32 43, i32 0, metadata !961, null}
!4122 = metadata !{i32 44, i32 0, metadata !961, null}
!4123 = metadata !{i32 72, i32 0, metadata !4124, null}
!4124 = metadata !{i32 786443, metadata !959, metadata !965, i32 72, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/closeout.c]
!4125 = metadata !{i32 74, i32 0, metadata !4126, null}
!4126 = metadata !{i32 786443, metadata !959, metadata !4124, i32 73, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/closeout.c]
!4127 = metadata !{i32 75, i32 0, metadata !4128, null}
!4128 = metadata !{i32 786443, metadata !959, metadata !4126, i32 75, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/closeout.c]
!4129 = metadata !{i32 76, i32 0, metadata !4128, null}
!4130 = metadata !{i32 79, i32 0, metadata !4128, null}
!4131 = metadata !{i32 81, i32 0, metadata !4126, null}
!4132 = metadata !{i32 84, i32 0, metadata !4133, null}
!4133 = metadata !{i32 786443, metadata !959, metadata !965, i32 84, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/closeout.c]
!4134 = metadata !{i32 85, i32 0, metadata !4133, null}
!4135 = metadata !{i32 86, i32 0, metadata !965, null}
!4136 = metadata !{i32 47, i32 0, metadata !971, null}
!4137 = metadata !{i32 48, i32 0, metadata !971, null}
!4138 = metadata !{i32 49, i32 0, metadata !971, null}
!4139 = metadata !{i32 62, i32 0, metadata !991, null}
!4140 = metadata !{i32 67, i32 0, metadata !4141, null}
!4141 = metadata !{i32 786443, metadata !969, metadata !991, i32 67, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/cycle-check.c]
!4142 = metadata !{i32 68, i32 0, metadata !4141, null}
!4143 = metadata !{i32 72, i32 7, metadata !4144, null}
!4144 = metadata !{i32 786443, metadata !969, metadata !991, i32 72, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/cycle-check.c]
!4145 = metadata !{i32 79, i32 0, metadata !4146, null}
!4146 = metadata !{i32 786443, metadata !969, metadata !4147, i32 79, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/cycle-check.c]
!4147 = metadata !{i32 786443, metadata !969, metadata !4144, i32 73, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/cycle-check.c]
!4148 = metadata !{i32 80, i32 0, metadata !4146, null}
!4149 = metadata !{i32 82, i32 0, metadata !4147, null}
!4150 = metadata !{i32 83, i32 0, metadata !4147, null}
!4151 = metadata !{i32 84, i32 0, metadata !4147, null}
!4152 = metadata !{i32 86, i32 0, metadata !991, null}
!4153 = metadata !{i32 87, i32 0, metadata !991, null}
!4154 = metadata !{i32 41, i32 0, metadata !1018, null}
!4155 = metadata !{i32 35, i32 0, metadata !1024, null}
!4156 = metadata !{i32 39, i32 0, metadata !1024, null}
!4157 = metadata !{i32 49, i32 0, metadata !4158, null}
!4158 = metadata !{i32 786443, metadata !1022, metadata !1024, i32 49, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/dirname.c]
!4159 = metadata !{i32 51, i32 0, metadata !4160, null}
!4160 = metadata !{i32 786443, metadata !1022, metadata !4158, i32 51, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/dirname.c]
!4161 = metadata !{i32 50, i32 0, metadata !4158, null}
!4162 = metadata !{i32 53, i32 0, metadata !1024, null}
!4163 = metadata !{i32 74, i32 0, metadata !1029, null}
!4164 = metadata !{i32 75, i32 0, metadata !1029, null}
!4165 = metadata !{i32 79, i32 0, metadata !1029, null}
!4166 = metadata !{i32 80, i32 0, metadata !1029, null}
!4167 = metadata !{i32 81, i32 0, metadata !4168, null}
!4168 = metadata !{i32 786443, metadata !1022, metadata !1029, i32 81, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/dirname.c]
!4169 = metadata !{i32 82, i32 0, metadata !4168, null}
!4170 = metadata !{i32 83, i32 0, metadata !1029, null}
!4171 = metadata !{i32 84, i32 0, metadata !1029, null}
!4172 = metadata !{i32 38, i32 0, metadata !4173, null}
!4173 = metadata !{i32 786443, metadata !1037, metadata !1039, i32 38, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!4174 = metadata !{i32 39, i32 0, metadata !4173, null}
!4175 = metadata !{i32 41, i32 0, metadata !4176, null}
!4176 = metadata !{i32 786443, metadata !1037, metadata !1039, i32 41, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!4177 = metadata !{i32 42, i32 0, metadata !4176, null}
!4178 = metadata !{i32 44, i32 0, metadata !4179, null}
!4179 = metadata !{i32 786443, metadata !1037, metadata !1039, i32 44, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!4180 = metadata !{i32 45, i32 0, metadata !4179, null}
!4181 = metadata !{i32 47, i32 0, metadata !4182, null}
!4182 = metadata !{i32 786443, metadata !1037, metadata !1039, i32 47, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!4183 = metadata !{i32 48, i32 0, metadata !4182, null}
!4184 = metadata !{i32 50, i32 0, metadata !4185, null}
!4185 = metadata !{i32 786443, metadata !1037, metadata !1039, i32 50, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!4186 = metadata !{i32 51, i32 0, metadata !4185, null}
!4187 = metadata !{i32 53, i32 0, metadata !4188, null}
!4188 = metadata !{i32 786443, metadata !1037, metadata !1039, i32 53, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!4189 = metadata !{i32 54, i32 0, metadata !4188, null}
!4190 = metadata !{i32 56, i32 0, metadata !4191, null}
!4191 = metadata !{i32 786443, metadata !1037, metadata !1039, i32 56, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!4192 = metadata !{i32 57, i32 0, metadata !4191, null}
!4193 = metadata !{i32 59, i32 0, metadata !4194, null}
!4194 = metadata !{i32 786443, metadata !1037, metadata !1039, i32 59, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!4195 = metadata !{i32 60, i32 0, metadata !4194, null}
!4196 = metadata !{i32 62, i32 0, metadata !4197, null}
!4197 = metadata !{i32 786443, metadata !1037, metadata !1039, i32 62, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!4198 = metadata !{i32 63, i32 0, metadata !4197, null}
!4199 = metadata !{i32 65, i32 0, metadata !4200, null}
!4200 = metadata !{i32 786443, metadata !1037, metadata !1039, i32 65, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!4201 = metadata !{i32 66, i32 0, metadata !4200, null}
!4202 = metadata !{i32 71, i32 0, metadata !1039, null}
!4203 = metadata !{i32 72, i32 0, metadata !1039, null}
!4204 = metadata !{i32 65, i32 0, metadata !1069, null}
!4205 = metadata !{i32 66, i32 0, metadata !1069, null}
!4206 = metadata !{i32 67, i32 0, metadata !1069, null}
!4207 = metadata !{i32 68, i32 0, metadata !1069, null}
!4208 = metadata !{i32 70, i32 0, metadata !1069, null}
!4209 = metadata !{i32 71, i32 0, metadata !1069, null}
!4210 = metadata !{i32 73, i32 0, metadata !1069, null}
!4211 = metadata !{i32 76, i32 0, metadata !1069, null}
!4212 = metadata !{i32 77, i32 0, metadata !1069, null}
!4213 = metadata !{i32 78, i32 0, metadata !1069, null}
!4214 = metadata !{i32 80, i32 0, metadata !4215, null}
!4215 = metadata !{i32 786443, metadata !1067, metadata !1069, i32 80, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/filenamecat.c]
!4216 = metadata !{i32 81, i32 0, metadata !4215, null}
!4217 = metadata !{i32 83, i32 0, metadata !1069, null}
!4218 = metadata !{i32 84, i32 0, metadata !1069, null}
!4219 = metadata !{i32 86, i32 0, metadata !1069, null}
!4220 = metadata !{i32 42, i32 0, metadata !4221, null}
!4221 = metadata !{i32 786443, metadata !1067, metadata !1073, i32 42, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/filenamecat.c]
!4222 = metadata !{i32 44, i32 0, metadata !1073, null}
!4223 = metadata !{i32 150, i32 0, metadata !1079, null}
!4224 = metadata !{i32 158, i32 0, metadata !1126, null}
!4225 = metadata !{i32 166, i32 0, metadata !1127, null}
!4226 = metadata !{i32 175, i32 0, metadata !1128, null}
!4227 = metadata !{i32 177, i32 0, metadata !4228, null}
!4228 = metadata !{i32 786443, metadata !1077, metadata !1128, i32 177, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4229 = metadata !{i32 179, i32 0, metadata !4230, null}
!4230 = metadata !{i32 786443, metadata !1077, metadata !4231, i32 179, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4231 = metadata !{i32 786443, metadata !1077, metadata !4228, i32 178, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4232 = metadata !{i32 181, i32 0, metadata !4233, null}
!4233 = metadata !{i32 786443, metadata !1077, metadata !4230, i32 180, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4234 = metadata !{i32 182, i32 0, metadata !4233, null}
!4235 = metadata !{i32 184, i32 0, metadata !4233, null}
!4236 = metadata !{i32 185, i32 0, metadata !4233, null}
!4237 = metadata !{i32 187, i32 0, metadata !4238, null}
!4238 = metadata !{i32 786443, metadata !1077, metadata !4233, i32 187, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4239 = metadata !{i32 188, i32 0, metadata !4238, null}
!4240 = metadata !{i32 192, i32 0, metadata !1128, null}
!4241 = metadata !{i32 202, i32 0, metadata !1129, null}
!4242 = metadata !{i32 203, i32 0, metadata !1129, null}
!4243 = metadata !{i32 205, i32 0, metadata !4244, null}
!4244 = metadata !{i32 786443, metadata !1077, metadata !1129, i32 205, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4245 = metadata !{i32 207, i32 0, metadata !4246, null}
!4246 = metadata !{i32 786443, metadata !1077, metadata !4247, i32 207, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4247 = metadata !{i32 786443, metadata !1077, metadata !4244, i32 206, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4248 = metadata !{i32 209, i32 0, metadata !4249, null}
!4249 = metadata !{i32 786443, metadata !1077, metadata !4246, i32 208, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4250 = metadata !{i32 212, i32 0, metadata !4249, null}
!4251 = metadata !{i32 213, i32 0, metadata !4249, null}
!4252 = metadata !{i32 216, i32 0, metadata !4249, null}
!4253 = metadata !{i32 217, i32 0, metadata !4249, null}
!4254 = metadata !{i32 221, i32 0, metadata !4255, null}
!4255 = metadata !{i32 786443, metadata !1077, metadata !1129, i32 221, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4256 = metadata !{i32 222, i32 0, metadata !4255, null}
!4257 = metadata !{i32 224, i32 0, metadata !1129, null}
!4258 = metadata !{i32 225, i32 0, metadata !1129, null}
!4259 = metadata !{i32 230, i32 0, metadata !1132, null}
!4260 = metadata !{i32 231, i32 0, metadata !1132, null}
!4261 = metadata !{i32 232, i32 0, metadata !1132, null}
!4262 = metadata !{i32 233, i32 0, metadata !1132, null}
!4263 = metadata !{i32 235, i32 0, metadata !1132, null}
!4264 = metadata !{i32 236, i32 0, metadata !1132, null}
!4265 = metadata !{i32 237, i32 0, metadata !1132, null}
!4266 = metadata !{i32 240, i32 0, metadata !1132, null}
!4267 = metadata !{i32 242, i32 0, metadata !1132, null}
!4268 = metadata !{i32 250, i32 0, metadata !1175, null}
!4269 = metadata !{i32 251, i32 0, metadata !1175, null}
!4270 = metadata !{i32 254, i32 0, metadata !4271, null}
!4271 = metadata !{i32 786443, metadata !1077, metadata !1175, i32 254, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4272 = metadata !{i32 255, i32 0, metadata !4271, null}
!4273 = metadata !{i32 257, i32 0, metadata !4274, null}
!4274 = metadata !{i32 786443, metadata !1077, metadata !1175, i32 257, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4275 = metadata !{i32 258, i32 0, metadata !4274, null}
!4276 = metadata !{i32 260, i32 0, metadata !4277, null}
!4277 = metadata !{i32 786443, metadata !1077, metadata !1175, i32 260, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4278 = metadata !{i32 261, i32 0, metadata !4279, null}
!4279 = metadata !{i32 786443, metadata !1077, metadata !4277, i32 261, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4280 = metadata !{i32 262, i32 0, metadata !4279, null}
!4281 = metadata !{i32 264, i32 0, metadata !1175, null}
!4282 = metadata !{i32 265, i32 0, metadata !1175, null}
!4283 = metadata !{i32 281, i32 0, metadata !4284, null}
!4284 = metadata !{i32 786443, metadata !1077, metadata !1178, i32 281, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4285 = metadata !{i32 282, i32 0, metadata !4284, null}
!4286 = metadata !{i32 284, i32 0, metadata !4287, null}
!4287 = metadata !{i32 786443, metadata !1077, metadata !1178, i32 284, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4288 = metadata !{i32 285, i32 0, metadata !4289, null}
!4289 = metadata !{i32 786443, metadata !1077, metadata !4287, i32 285, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4290 = metadata !{i32 286, i32 0, metadata !4289, null}
!4291 = metadata !{i32 287, i32 0, metadata !4292, null}
!4292 = metadata !{i32 786443, metadata !1077, metadata !4289, i32 287, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4293 = metadata !{i32 288, i32 0, metadata !4292, null}
!4294 = metadata !{i32 289, i32 0, metadata !1178, null}
!4295 = metadata !{i32 298, i32 0, metadata !1181, null}
!4296 = metadata !{i32 299, i32 0, metadata !1181, null}
!4297 = metadata !{i32 302, i32 0, metadata !4298, null}
!4298 = metadata !{i32 786443, metadata !1077, metadata !1181, i32 302, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4299 = metadata !{i32 303, i32 0, metadata !4298, null}
!4300 = metadata !{i32 306, i32 0, metadata !4301, null}
!4301 = metadata !{i32 786443, metadata !1077, metadata !1181, i32 306, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4302 = metadata !{i32 307, i32 0, metadata !4303, null}
!4303 = metadata !{i32 786443, metadata !1077, metadata !4301, i32 307, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4304 = metadata !{i32 308, i32 0, metadata !4303, null}
!4305 = metadata !{i32 311, i32 0, metadata !1181, null}
!4306 = metadata !{i32 312, i32 0, metadata !4307, null}
!4307 = metadata !{i32 786443, metadata !1077, metadata !1181, i32 312, i32 0, i32 21} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4308 = metadata !{i32 313, i32 0, metadata !4307, null}
!4309 = metadata !{i32 316, i32 0, metadata !1181, null}
!4310 = metadata !{i32 317, i32 0, metadata !1181, null}
!4311 = metadata !{i32 327, i32 0, metadata !1182, null}
!4312 = metadata !{i32 331, i32 0, metadata !4313, null}
!4313 = metadata !{i32 786443, metadata !1077, metadata !1182, i32 331, i32 0, i32 22} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4314 = metadata !{i32 333, i32 0, metadata !4315, null}
!4315 = metadata !{i32 786443, metadata !1077, metadata !4316, i32 333, i32 0, i32 24} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4316 = metadata !{i32 786443, metadata !1077, metadata !4313, i32 332, i32 0, i32 23} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4317 = metadata !{i32 335, i32 0, metadata !4318, null}
!4318 = metadata !{i32 786443, metadata !1077, metadata !4319, i32 335, i32 0, i32 26} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4319 = metadata !{i32 786443, metadata !1077, metadata !4315, i32 334, i32 0, i32 25} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4320 = metadata !{i32 337, i32 0, metadata !4321, null}
!4321 = metadata !{i32 786443, metadata !1077, metadata !4322, i32 337, i32 0, i32 28} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4322 = metadata !{i32 786443, metadata !1077, metadata !4318, i32 336, i32 0, i32 27} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4323 = metadata !{i32 338, i32 0, metadata !4321, null}
!4324 = metadata !{i32 339, i32 0, metadata !4322, null}
!4325 = metadata !{i32 344, i32 0, metadata !1182, null}
!4326 = metadata !{i32 345, i32 0, metadata !1182, null}
!4327 = metadata !{i32 359, i32 0, metadata !1186, null}
!4328 = metadata !{i32 363, i32 0, metadata !4329, null}
!4329 = metadata !{i32 786443, metadata !1077, metadata !1186, i32 363, i32 0, i32 29} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4330 = metadata !{i32 365, i32 0, metadata !4331, null}
!4331 = metadata !{i32 786443, metadata !1077, metadata !4332, i32 365, i32 0, i32 31} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4332 = metadata !{i32 786443, metadata !1077, metadata !4329, i32 364, i32 0, i32 30} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4333 = metadata !{i32 367, i32 0, metadata !4334, null}
!4334 = metadata !{i32 786443, metadata !1077, metadata !4335, i32 367, i32 0, i32 33} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4335 = metadata !{i32 786443, metadata !1077, metadata !4331, i32 366, i32 0, i32 32} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4336 = metadata !{i32 369, i32 0, metadata !4337, null}
!4337 = metadata !{i32 786443, metadata !1077, metadata !4338, i32 369, i32 0, i32 35} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4338 = metadata !{i32 786443, metadata !1077, metadata !4334, i32 368, i32 0, i32 34} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4339 = metadata !{i32 371, i32 0, metadata !4338, null}
!4340 = metadata !{i32 370, i32 0, metadata !4337, null}
!4341 = metadata !{i32 376, i32 0, metadata !1186, null}
!4342 = metadata !{i32 377, i32 0, metadata !1186, null}
!4343 = metadata !{i32 421, i32 0, metadata !1193, null}
!4344 = metadata !{i32 424, i32 0, metadata !4345, null}
!4345 = metadata !{i32 786443, metadata !1077, metadata !1193, i32 424, i32 0, i32 36} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4346 = metadata !{i32 425, i32 0, metadata !4345, null}
!4347 = metadata !{i32 426, i32 0, metadata !1193, null}
!4348 = metadata !{i32 472, i32 0, metadata !1196, null}
!4349 = metadata !{i32 473, i32 0, metadata !1196, null}
!4350 = metadata !{i32 544, i32 0, metadata !4351, null}
!4351 = metadata !{i32 786443, metadata !1077, metadata !1200, i32 544, i32 0, i32 37} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4352 = metadata !{i32 545, i32 0, metadata !4351, null}
!4353 = metadata !{i32 547, i32 0, metadata !1200, null}
!4354 = metadata !{i32 548, i32 0, metadata !4355, null}
!4355 = metadata !{i32 786443, metadata !1077, metadata !1200, i32 548, i32 0, i32 38} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4356 = metadata !{i32 549, i32 0, metadata !4355, null}
!4357 = metadata !{i32 551, i32 0, metadata !4358, null}
!4358 = metadata !{i32 786443, metadata !1077, metadata !1200, i32 551, i32 0, i32 39} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4359 = metadata !{i32 552, i32 0, metadata !4358, null}
!4360 = metadata !{i32 553, i32 0, metadata !1200, null}
!4361 = metadata !{i32 554, i32 0, metadata !4362, null}
!4362 = metadata !{i32 786443, metadata !1077, metadata !1200, i32 554, i32 0, i32 40} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4363 = metadata !{i32 564, i32 0, metadata !4364, null}
!4364 = metadata !{i32 786443, metadata !1077, metadata !1200, i32 564, i32 0, i32 42} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4365 = metadata !{i32 566, i32 0, metadata !4366, null}
!4366 = metadata !{i32 786443, metadata !1077, metadata !4364, i32 565, i32 0, i32 43} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4367 = metadata !{i32 567, i32 0, metadata !4368, null}
!4368 = metadata !{i32 786443, metadata !1077, metadata !4366, i32 567, i32 0, i32 44} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4369 = metadata !{i32 569, i32 0, metadata !4366, null}
!4370 = metadata !{i32 570, i32 0, metadata !4366, null}
!4371 = metadata !{i32 572, i32 0, metadata !4372, null}
!4372 = metadata !{i32 786443, metadata !1077, metadata !1200, i32 572, i32 0, i32 45} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4373 = metadata !{i32 574, i32 0, metadata !1200, null}
!4374 = metadata !{i32 575, i32 0, metadata !4375, null}
!4375 = metadata !{i32 786443, metadata !1077, metadata !1200, i32 575, i32 0, i32 46} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4376 = metadata !{i32 578, i32 0, metadata !1200, null}
!4377 = metadata !{i32 579, i32 0, metadata !1200, null}
!4378 = metadata !{i32 580, i32 0, metadata !1200, null}
!4379 = metadata !{i32 581, i32 0, metadata !1200, null}
!4380 = metadata !{i32 583, i32 0, metadata !1200, null}
!4381 = metadata !{i32 584, i32 0, metadata !1200, null}
!4382 = metadata !{i32 585, i32 0, metadata !1200, null}
!4383 = metadata !{i32 587, i32 0, metadata !1200, null}
!4384 = metadata !{i32 591, i32 0, metadata !1200, null}
!4385 = metadata !{i32 594, i32 0, metadata !1200, null}
!4386 = metadata !{i32 595, i32 0, metadata !1200, null}
!4387 = metadata !{i32 596, i32 0, metadata !1200, null}
!4388 = metadata !{i32 607, i32 0, metadata !4389, null}
!4389 = metadata !{i32 786443, metadata !1077, metadata !1204, i32 607, i32 0, i32 47} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4390 = metadata !{i32 609, i32 0, metadata !4391, null}
!4391 = metadata !{i32 786443, metadata !1077, metadata !4392, i32 609, i32 0, i32 49} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4392 = metadata !{i32 786443, metadata !1077, metadata !4389, i32 608, i32 0, i32 48} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4393 = metadata !{i32 615, i32 0, metadata !4394, null}
!4394 = metadata !{i32 786443, metadata !1077, metadata !4395, i32 615, i32 0, i32 51} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4395 = metadata !{i32 786443, metadata !1077, metadata !4391, i32 610, i32 0, i32 50} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4396 = metadata !{i32 617, i32 0, metadata !4397, null}
!4397 = metadata !{i32 786443, metadata !1077, metadata !4398, i32 617, i32 0, i32 53} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4398 = metadata !{i32 786443, metadata !1077, metadata !4394, i32 616, i32 0, i32 52} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4399 = metadata !{i32 618, i32 0, metadata !4397, null}
!4400 = metadata !{i32 619, i32 0, metadata !4398, null}
!4401 = metadata !{i32 621, i32 0, metadata !4398, null}
!4402 = metadata !{i32 624, i32 0, metadata !4398, null}
!4403 = metadata !{i32 625, i32 0, metadata !4398, null}
!4404 = metadata !{i32 629, i32 0, metadata !4405, null}
!4405 = metadata !{i32 786443, metadata !1077, metadata !4395, i32 629, i32 0, i32 54} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4406 = metadata !{i32 630, i32 0, metadata !4405, null}
!4407 = metadata !{i32 631, i32 0, metadata !4395, null}
!4408 = metadata !{i32 632, i32 0, metadata !4395, null}
!4409 = metadata !{i32 633, i32 0, metadata !4395, null}
!4410 = metadata !{i32 636, i32 0, metadata !1204, null}
!4411 = metadata !{i32 637, i32 0, metadata !1204, null}
!4412 = metadata !{i32 638, i32 0, metadata !1204, null}
!4413 = metadata !{i32 653, i32 0, metadata !4414, null}
!4414 = metadata !{i32 786443, metadata !1077, metadata !1207, i32 653, i32 0, i32 55} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4415 = metadata !{i32 655, i32 0, metadata !4416, null}
!4416 = metadata !{i32 786443, metadata !1077, metadata !4417, i32 655, i32 0, i32 57} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4417 = metadata !{i32 786443, metadata !1077, metadata !4414, i32 654, i32 0, i32 56} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4418 = metadata !{i32 657, i32 0, metadata !4419, null}
!4419 = metadata !{i32 786443, metadata !1077, metadata !4420, i32 657, i32 0, i32 59} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4420 = metadata !{i32 786443, metadata !1077, metadata !4416, i32 656, i32 0, i32 58} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4421 = metadata !{i32 659, i32 0, metadata !4422, null}
!4422 = metadata !{i32 786443, metadata !1077, metadata !4423, i32 659, i32 0, i32 61} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4423 = metadata !{i32 786443, metadata !1077, metadata !4419, i32 658, i32 0, i32 60} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4424 = metadata !{i32 661, i32 0, metadata !4425, null}
!4425 = metadata !{i32 786443, metadata !1077, metadata !4422, i32 660, i32 0, i32 62} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4426 = metadata !{i32 674, i32 0, metadata !4427, null}
!4427 = metadata !{i32 786443, metadata !1077, metadata !1207, i32 674, i32 0, i32 63} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4428 = metadata !{i32 676, i32 0, metadata !4429, null}
!4429 = metadata !{i32 786443, metadata !1077, metadata !4430, i32 676, i32 0, i32 65} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4430 = metadata !{i32 786443, metadata !1077, metadata !4427, i32 675, i32 0, i32 64} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4431 = metadata !{i32 678, i32 0, metadata !4432, null}
!4432 = metadata !{i32 786443, metadata !1077, metadata !4429, i32 677, i32 0, i32 66} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4433 = metadata !{i32 679, i32 0, metadata !4432, null}
!4434 = metadata !{i32 684, i32 0, metadata !4435, null}
!4435 = metadata !{i32 786443, metadata !1077, metadata !1207, i32 684, i32 0, i32 67} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4436 = metadata !{i32 686, i32 0, metadata !4437, null}
!4437 = metadata !{i32 786443, metadata !1077, metadata !4435, i32 685, i32 0, i32 68} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4438 = metadata !{i32 687, i32 0, metadata !4437, null}
!4439 = metadata !{i32 693, i32 0, metadata !1207, null}
!4440 = metadata !{i32 694, i32 0, metadata !1207, null}
!4441 = metadata !{i32 695, i32 0, metadata !1207, null}
!4442 = metadata !{i32 824, i32 0, metadata !1208, null}
!4443 = metadata !{i32 826, i32 0, metadata !4444, null}
!4444 = metadata !{i32 786443, metadata !1077, metadata !1208, i32 826, i32 0, i32 69} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4445 = metadata !{i32 827, i32 0, metadata !4444, null}
!4446 = metadata !{i32 834, i32 0, metadata !1208, null}
!4447 = metadata !{i32 836, i32 0, metadata !4448, null}
!4448 = metadata !{i32 786443, metadata !1077, metadata !1208, i32 836, i32 0, i32 70} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4449 = metadata !{i32 837, i32 0, metadata !4450, null}
!4450 = metadata !{i32 786443, metadata !1077, metadata !4448, i32 837, i32 0, i32 71} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4451 = metadata !{i32 838, i32 0, metadata !4452, null}
!4452 = metadata !{i32 786443, metadata !1077, metadata !4450, i32 838, i32 0, i32 72} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4453 = metadata !{i32 840, i32 0, metadata !4454, null}
!4454 = metadata !{i32 786443, metadata !1077, metadata !4452, i32 839, i32 0, i32 73} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4455 = metadata !{i32 841, i32 0, metadata !4454, null}
!4456 = metadata !{i32 843, i32 0, metadata !4454, null}
!4457 = metadata !{i32 845, i32 0, metadata !4458, null}
!4458 = metadata !{i32 786443, metadata !1077, metadata !4454, i32 845, i32 0, i32 74} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4459 = metadata !{i32 846, i32 0, metadata !4458, null}
!4460 = metadata !{i32 848, i32 0, metadata !4454, null}
!4461 = metadata !{i32 850, i32 0, metadata !4462, null}
!4462 = metadata !{i32 786443, metadata !1077, metadata !4454, i32 850, i32 0, i32 75} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4463 = metadata !{i32 852, i32 0, metadata !4464, null}
!4464 = metadata !{i32 786443, metadata !1077, metadata !4465, i32 852, i32 0, i32 77} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4465 = metadata !{i32 786443, metadata !1077, metadata !4462, i32 851, i32 0, i32 76} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4466 = metadata !{i32 856, i32 0, metadata !4467, null}
!4467 = metadata !{i32 786443, metadata !1077, metadata !4464, i32 853, i32 0, i32 78} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4468 = metadata !{i32 858, i32 0, metadata !4469, null}
!4469 = metadata !{i32 786443, metadata !1077, metadata !4467, i32 858, i32 0, i32 79} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4470 = metadata !{i32 859, i32 0, metadata !4469, null}
!4471 = metadata !{i32 861, i32 0, metadata !4467, null}
!4472 = metadata !{i32 862, i32 0, metadata !4467, null}
!4473 = metadata !{i32 863, i32 0, metadata !4467, null}
!4474 = metadata !{i32 864, i32 0, metadata !4467, null}
!4475 = metadata !{i32 869, i32 0, metadata !4476, null}
!4476 = metadata !{i32 786443, metadata !1077, metadata !4464, i32 866, i32 0, i32 80} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4477 = metadata !{i32 870, i32 0, metadata !4476, null}
!4478 = metadata !{i32 879, i32 0, metadata !4479, null}
!4479 = metadata !{i32 786443, metadata !1077, metadata !4462, i32 874, i32 0, i32 81} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4480 = metadata !{i32 880, i32 0, metadata !4479, null}
!4481 = metadata !{i32 881, i32 0, metadata !4482, null}
!4482 = metadata !{i32 786443, metadata !1077, metadata !4479, i32 881, i32 0, i32 82} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4483 = metadata !{i32 882, i32 0, metadata !4482, null}
!4484 = metadata !{i32 886, i32 0, metadata !1208, null}
!4485 = metadata !{i32 887, i32 0, metadata !1208, null}
!4486 = metadata !{i32 888, i32 0, metadata !1208, null}
!4487 = metadata !{i32 889, i32 0, metadata !1208, null}
!4488 = metadata !{i32 890, i32 0, metadata !1208, null}
!4489 = metadata !{i32 891, i32 0, metadata !1208, null}
!4490 = metadata !{i32 896, i32 0, metadata !1208, null}
!4491 = metadata !{i32 898, i32 0, metadata !1208, null}
!4492 = metadata !{i32 899, i32 0, metadata !1208, null}
!4493 = metadata !{i32 912, i32 0, metadata !4494, null}
!4494 = metadata !{i32 786443, metadata !1077, metadata !1211, i32 912, i32 0, i32 83} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4495 = metadata !{i32 913, i32 0, metadata !4494, null}
!4496 = metadata !{i32 916, i32 0, metadata !4497, null}
!4497 = metadata !{i32 786443, metadata !1077, metadata !1211, i32 916, i32 0, i32 84} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4498 = metadata !{i32 917, i32 0, metadata !4497, null}
!4499 = metadata !{i32 921, i32 0, metadata !4500, null}
!4500 = metadata !{i32 786443, metadata !1077, metadata !1211, i32 921, i32 0, i32 85} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4501 = metadata !{i32 923, i32 0, metadata !4502, null}
!4502 = metadata !{i32 786443, metadata !1077, metadata !4500, i32 922, i32 0, i32 86} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4503 = metadata !{i32 925, i32 0, metadata !4504, null}
!4504 = metadata !{i32 786443, metadata !1077, metadata !4502, i32 925, i32 0, i32 87} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4505 = metadata !{i32 926, i32 0, metadata !4504, null}
!4506 = metadata !{i32 930, i32 0, metadata !4502, null}
!4507 = metadata !{i32 931, i32 0, metadata !4502, null}
!4508 = metadata !{i32 932, i32 0, metadata !4502, null}
!4509 = metadata !{i32 933, i32 0, metadata !4502, null}
!4510 = metadata !{i32 934, i32 0, metadata !4502, null}
!4511 = metadata !{i32 939, i32 0, metadata !1211, null}
!4512 = metadata !{i32 940, i32 0, metadata !1211, null}
!4513 = metadata !{i32 941, i32 0, metadata !1211, null}
!4514 = metadata !{i32 948, i32 0, metadata !4515, null}
!4515 = metadata !{i32 786443, metadata !1077, metadata !1211, i32 948, i32 0, i32 88} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4516 = metadata !{i32 953, i32 0, metadata !4517, null}
!4517 = metadata !{i32 786443, metadata !1077, metadata !4515, i32 950, i32 0, i32 89} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4518 = metadata !{i32 954, i32 0, metadata !4519, null}
!4519 = metadata !{i32 786443, metadata !1077, metadata !4517, i32 954, i32 0, i32 90} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4520 = metadata !{i32 957, i32 0, metadata !4521, null}
!4521 = metadata !{i32 786443, metadata !1077, metadata !4519, i32 956, i32 0, i32 91} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4522 = metadata !{i32 958, i32 0, metadata !4521, null}
!4523 = metadata !{i32 964, i32 0, metadata !4524, null}
!4524 = metadata !{i32 786443, metadata !1077, metadata !4521, i32 964, i32 0, i32 92} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4525 = metadata !{i32 965, i32 0, metadata !4524, null}
!4526 = metadata !{i32 968, i32 0, metadata !4527, null}
!4527 = metadata !{i32 786443, metadata !1077, metadata !4521, i32 968, i32 0, i32 93} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4528 = metadata !{i32 969, i32 0, metadata !4527, null}
!4529 = metadata !{i32 973, i32 0, metadata !1211, null}
!4530 = metadata !{i32 974, i32 0, metadata !1211, null}
!4531 = metadata !{i32 986, i32 0, metadata !1214, null}
!4532 = metadata !{i32 987, i32 0, metadata !4533, null}
!4533 = metadata !{i32 786443, metadata !1077, metadata !1214, i32 987, i32 0, i32 94} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4534 = metadata !{i32 988, i32 0, metadata !4533, null}
!4535 = metadata !{i32 990, i32 0, metadata !1214, null}
!4536 = metadata !{i32 991, i32 0, metadata !4537, null}
!4537 = metadata !{i32 786443, metadata !1077, metadata !1214, i32 991, i32 0, i32 95} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4538 = metadata !{i32 993, i32 0, metadata !4539, null}
!4539 = metadata !{i32 786443, metadata !1077, metadata !4537, i32 992, i32 0, i32 96} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4540 = metadata !{i32 998, i32 0, metadata !4541, null}
!4541 = metadata !{i32 786443, metadata !1077, metadata !4539, i32 998, i32 0, i32 97} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4542 = metadata !{i32 1003, i32 0, metadata !4543, null}
!4543 = metadata !{i32 786443, metadata !1077, metadata !4541, i32 1000, i32 0, i32 98} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4544 = metadata !{i32 1004, i32 0, metadata !4545, null}
!4545 = metadata !{i32 786443, metadata !1077, metadata !4543, i32 1004, i32 0, i32 99} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4546 = metadata !{i32 1007, i32 0, metadata !4547, null}
!4547 = metadata !{i32 786443, metadata !1077, metadata !4545, i32 1006, i32 0, i32 100} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4548 = metadata !{i32 1008, i32 0, metadata !4547, null}
!4549 = metadata !{i32 1014, i32 0, metadata !4547, null}
!4550 = metadata !{i32 1015, i32 0, metadata !4547, null}
!4551 = metadata !{i32 1019, i32 0, metadata !1214, null}
!4552 = metadata !{i32 1020, i32 0, metadata !1214, null}
!4553 = metadata !{i32 484, i32 0, metadata !1231, null}
!4554 = metadata !{i32 491, i32 0, metadata !1231, null}
!4555 = metadata !{i32 493, i32 0, metadata !4556, null}
!4556 = metadata !{i32 786443, metadata !1077, metadata !1231, i32 493, i32 0, i32 121} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4557 = metadata !{i32 500, i32 0, metadata !4556, null}
!4558 = metadata !{i32 502, i32 0, metadata !1231, null}
!4559 = metadata !{i32 503, i32 0, metadata !1231, null}
!4560 = metadata !{i32 504, i32 0, metadata !1231, null}
!4561 = metadata !{i32 457, i32 0, metadata !4562, null}
!4562 = metadata !{i32 786443, metadata !1077, metadata !1225, i32 457, i32 0, i32 119} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4563 = metadata !{i32 458, i32 0, metadata !4562, null}
!4564 = metadata !{i32 461, i32 0, metadata !1225, null}
!4565 = metadata !{i32 463, i32 0, metadata !1225, null}
!4566 = metadata !{i32 464, i32 0, metadata !1225, null}
!4567 = metadata !{i32 466, i32 0, metadata !1225, null}
!4568 = metadata !{i32 707, i32 0, metadata !4569, null}
!4569 = metadata !{i32 786443, metadata !1077, metadata !1222, i32 707, i32 0, i32 116} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4570 = metadata !{i32 709, i32 0, metadata !4571, null}
!4571 = metadata !{i32 786443, metadata !1077, metadata !4569, i32 708, i32 0, i32 117} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4572 = metadata !{i32 710, i32 0, metadata !4571, null}
!4573 = metadata !{i32 711, i32 0, metadata !4571, null}
!4574 = metadata !{i32 717, i32 0, metadata !4575, null}
!4575 = metadata !{i32 786443, metadata !1077, metadata !4569, i32 713, i32 0, i32 118} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4576 = metadata !{i32 721, i32 0, metadata !1222, null}
!4577 = metadata !{i32 730, i32 0, metadata !1219, null}
!4578 = metadata !{i32 731, i32 0, metadata !1219, null}
!4579 = metadata !{i32 732, i32 0, metadata !1219, null}
!4580 = metadata !{i32 733, i32 0, metadata !1219, null}
!4581 = metadata !{i32 745, i32 0, metadata !1215, null}
!4582 = metadata !{i32 746, i32 0, metadata !1215, null}
!4583 = metadata !{i32 749, i32 0, metadata !4584, null}
!4584 = metadata !{i32 786443, metadata !1077, metadata !1215, i32 749, i32 0, i32 101} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4585 = metadata !{i32 750, i32 0, metadata !4584, null}
!4586 = metadata !{i32 752, i32 0, metadata !1215, null}
!4587 = metadata !{i32 755, i32 0, metadata !4588, null}
!4588 = metadata !{i32 786443, metadata !1077, metadata !1215, i32 755, i32 0, i32 102} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4589 = metadata !{i32 756, i32 0, metadata !4588, null}
!4590 = metadata !{i32 759, i32 0, metadata !4591, null}
!4591 = metadata !{i32 786443, metadata !1077, metadata !1215, i32 759, i32 0, i32 103} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4592 = metadata !{i32 761, i32 0, metadata !4593, null}
!4593 = metadata !{i32 786443, metadata !1077, metadata !4591, i32 760, i32 0, i32 104} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4594 = metadata !{i32 763, i32 0, metadata !4595, null}
!4595 = metadata !{i32 786443, metadata !1077, metadata !4593, i32 763, i32 0, i32 105} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4596 = metadata !{i32 765, i32 0, metadata !4597, null}
!4597 = metadata !{i32 786443, metadata !1077, metadata !4598, i32 765, i32 0, i32 107} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4598 = metadata !{i32 786443, metadata !1077, metadata !4595, i32 764, i32 0, i32 106} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4599 = metadata !{i32 767, i32 0, metadata !4600, null}
!4600 = metadata !{i32 786443, metadata !1077, metadata !4597, i32 766, i32 0, i32 108} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4601 = metadata !{i32 771, i32 0, metadata !4600, null}
!4602 = metadata !{i32 772, i32 0, metadata !4600, null}
!4603 = metadata !{i32 773, i32 0, metadata !4600, null}
!4604 = metadata !{i32 776, i32 0, metadata !4605, null}
!4605 = metadata !{i32 786443, metadata !1077, metadata !4597, i32 775, i32 0, i32 109} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4606 = metadata !{i32 780, i32 0, metadata !4593, null}
!4607 = metadata !{i32 784, i32 0, metadata !4608, null}
!4608 = metadata !{i32 786443, metadata !1077, metadata !1215, i32 784, i32 0, i32 110} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4609 = metadata !{i32 786, i32 0, metadata !4610, null}
!4610 = metadata !{i32 786443, metadata !1077, metadata !4611, i32 786, i32 0, i32 112} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4611 = metadata !{i32 786443, metadata !1077, metadata !4608, i32 785, i32 0, i32 111} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4612 = metadata !{i32 788, i32 0, metadata !4613, null}
!4613 = metadata !{i32 786443, metadata !1077, metadata !4610, i32 787, i32 0, i32 113} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4614 = metadata !{i32 790, i32 0, metadata !4615, null}
!4615 = metadata !{i32 786443, metadata !1077, metadata !4613, i32 790, i32 0, i32 114} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4616 = metadata !{i32 792, i32 0, metadata !4617, null}
!4617 = metadata !{i32 786443, metadata !1077, metadata !4615, i32 791, i32 0, i32 115} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4618 = metadata !{i32 796, i32 0, metadata !4617, null}
!4619 = metadata !{i32 797, i32 0, metadata !4617, null}
!4620 = metadata !{i32 798, i32 0, metadata !4617, null}
!4621 = metadata !{i32 800, i32 0, metadata !4613, null}
!4622 = metadata !{i32 805, i32 0, metadata !1215, null}
!4623 = metadata !{i32 806, i32 0, metadata !1215, null}
!4624 = metadata !{i32 437, i32 0, metadata !1228, null}
!4625 = metadata !{i32 438, i32 0, metadata !1228, null}
!4626 = metadata !{i32 440, i32 0, metadata !1228, null}
!4627 = metadata !{i32 442, i32 0, metadata !4628, null}
!4628 = metadata !{i32 786443, metadata !1077, metadata !1228, i32 441, i32 0, i32 120} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!4629 = metadata !{i32 443, i32 0, metadata !4628, null}
!4630 = metadata !{i32 444, i32 0, metadata !4628, null}
!4631 = metadata !{i32 445, i32 0, metadata !4628, null}
!4632 = metadata !{i32 447, i32 0, metadata !1228, null}
!4633 = metadata !{i32 32, i32 0, metadata !1239, null}
!4634 = metadata !{i32 34, i32 0, metadata !4635, null}
!4635 = metadata !{i32 786443, metadata !1237, metadata !1239, i32 34, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/open-safer.c]
!4636 = metadata !{i32 37, i32 0, metadata !4637, null}
!4637 = metadata !{i32 786443, metadata !1237, metadata !4635, i32 35, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/open-safer.c]
!4638 = metadata !{i32 42, i32 0, metadata !4637, null}
!4639 = metadata !{i32 46, i32 0, metadata !4637, null}
!4640 = metadata !{i32 47, i32 0, metadata !4637, null}
!4641 = metadata !{i32 49, i32 0, metadata !1239, null}
!4642 = metadata !{i32 32, i32 0, metadata !1246, null}
!4643 = metadata !{i32 40, i32 0, metadata !1250, null}
!4644 = metadata !{i32 117, i32 0, metadata !1270, null}
!4645 = metadata !{i32 118, i32 0, metadata !1270, null}
!4646 = metadata !{i32 120, i32 0, metadata !1270, null}
!4647 = metadata !{i32 121, i32 0, metadata !1270, null}
!4648 = metadata !{i32 128, i32 0, metadata !1280, null}
!4649 = metadata !{i32 136, i32 0, metadata !1283, null}
!4650 = metadata !{i32 137, i32 0, metadata !1283, null}
!4651 = metadata !{i32 147, i32 0, metadata !1286, null}
!4652 = metadata !{i32 148, i32 0, metadata !1286, null}
!4653 = metadata !{i32 150, i32 0, metadata !1286, null}
!4654 = metadata !{i32 151, i32 0, metadata !1286, null}
!4655 = metadata !{i32 152, i32 0, metadata !1286, null}
!4656 = metadata !{i32 153, i32 0, metadata !1286, null}
!4657 = metadata !{i32 534, i32 0, metadata !1289, null}
!4658 = metadata !{i32 535, i32 0, metadata !1289, null}
!4659 = metadata !{i32 536, i32 0, metadata !1289, null}
!4660 = metadata !{i32 538, i32 0, metadata !1289, null}
!4661 = metadata !{i32 539, i32 0, metadata !1289, null}
!4662 = metadata !{i32 548, i32 0, metadata !1295, null}
!4663 = metadata !{i32 549, i32 0, metadata !1295, null}
!4664 = metadata !{i32 550, i32 0, metadata !1295, null}
!4665 = metadata !{i32 551, i32 0, metadata !1295, null}
!4666 = metadata !{i32 552, i32 0, metadata !1295, null}
!4667 = metadata !{i32 553, i32 0, metadata !1295, null}
!4668 = metadata !{i32 573, i32 0, metadata !1298, null}
!4669 = metadata !{i32 575, i32 0, metadata !4670, null}
!4670 = metadata !{i32 786443, metadata !1252, metadata !1298, i32 575, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4671 = metadata !{i32 576, i32 0, metadata !4670, null}
!4672 = metadata !{i32 577, i32 0, metadata !4673, null}
!4673 = metadata !{i32 786443, metadata !1252, metadata !1298, i32 577, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4674 = metadata !{i32 579, i32 0, metadata !4675, null}
!4675 = metadata !{i32 786443, metadata !1252, metadata !4673, i32 578, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4676 = metadata !{i32 580, i32 0, metadata !4675, null}
!4677 = metadata !{i32 581, i32 0, metadata !4675, null}
!4678 = metadata !{i32 582, i32 0, metadata !4675, null}
!4679 = metadata !{i32 583, i32 0, metadata !4680, null}
!4680 = metadata !{i32 786443, metadata !1252, metadata !1298, i32 583, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4681 = metadata !{i32 585, i32 0, metadata !4682, null}
!4682 = metadata !{i32 786443, metadata !1252, metadata !4680, i32 584, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4683 = metadata !{i32 586, i32 0, metadata !4682, null}
!4684 = metadata !{i32 587, i32 0, metadata !4682, null}
!4685 = metadata !{i32 588, i32 0, metadata !1298, null}
!4686 = metadata !{i32 589, i32 0, metadata !1298, null}
!4687 = metadata !{i32 653, i32 0, metadata !1299, null}
!4688 = metadata !{i32 659, i32 0, metadata !1302, null}
!4689 = metadata !{i32 675, i32 0, metadata !1303, null}
!4690 = metadata !{i32 676, i32 0, metadata !1303, null}
!4691 = metadata !{i32 683, i32 0, metadata !1306, null}
!4692 = metadata !{i32 684, i32 0, metadata !1306, null}
!4693 = metadata !{i32 690, i32 0, metadata !1309, null}
!4694 = metadata !{i32 697, i32 0, metadata !1312, null}
!4695 = metadata !{i32 698, i32 0, metadata !1312, null}
!4696 = metadata !{i32 699, i32 0, metadata !1312, null}
!4697 = metadata !{i32 705, i32 0, metadata !1315, null}
!4698 = metadata !{i32 187, i32 0, metadata !1322, null}
!4699 = metadata !{i32 188, i32 0, metadata !1322, null}
!4700 = metadata !{i32 189, i32 0, metadata !1322, null}
!4701 = metadata !{i32 190, i32 0, metadata !1322, null}
!4702 = metadata !{i32 191, i32 0, metadata !1322, null}
!4703 = metadata !{i32 202, i32 0, metadata !1322, null}
!4704 = metadata !{i32 205, i32 0, metadata !4705, null}
!4705 = metadata !{i32 786443, metadata !1252, metadata !4706, i32 205, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4706 = metadata !{i32 786443, metadata !1252, metadata !4707, i32 205, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4707 = metadata !{i32 786443, metadata !1252, metadata !1322, i32 203, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4708 = metadata !{i32 205, i32 0, metadata !4706, null}
!4709 = metadata !{i32 206, i32 0, metadata !4707, null}
!4710 = metadata !{i32 207, i32 0, metadata !4707, null}
!4711 = metadata !{i32 208, i32 0, metadata !4707, null}
!4712 = metadata !{i32 209, i32 0, metadata !4707, null}
!4713 = metadata !{i32 212, i32 0, metadata !4707, null}
!4714 = metadata !{i32 213, i32 0, metadata !4707, null}
!4715 = metadata !{i32 238, i32 0, metadata !4716, null}
!4716 = metadata !{i32 786443, metadata !1252, metadata !4707, i32 217, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4717 = metadata !{i32 239, i32 0, metadata !4716, null}
!4718 = metadata !{i32 240, i32 0, metadata !4719, null}
!4719 = metadata !{i32 786443, metadata !1252, metadata !4716, i32 240, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4720 = metadata !{i32 241, i32 0, metadata !4721, null}
!4721 = metadata !{i32 786443, metadata !1252, metadata !4722, i32 241, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4722 = metadata !{i32 786443, metadata !1252, metadata !4719, i32 241, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4723 = metadata !{i32 241, i32 0, metadata !4722, null}
!4724 = metadata !{i32 242, i32 0, metadata !4716, null}
!4725 = metadata !{i32 243, i32 0, metadata !4716, null}
!4726 = metadata !{i32 244, i32 0, metadata !4716, null}
!4727 = metadata !{i32 246, i32 0, metadata !4707, null}
!4728 = metadata !{i32 249, i32 0, metadata !4729, null}
!4729 = metadata !{i32 786443, metadata !1252, metadata !4730, i32 249, i32 0, i32 22} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4730 = metadata !{i32 786443, metadata !1252, metadata !4707, i32 249, i32 0, i32 21} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4731 = metadata !{i32 249, i32 0, metadata !4730, null}
!4732 = metadata !{i32 250, i32 0, metadata !4707, null}
!4733 = metadata !{i32 251, i32 0, metadata !4707, null}
!4734 = metadata !{i32 252, i32 0, metadata !4707, null}
!4735 = metadata !{i32 258, i32 0, metadata !4736, null}
!4736 = metadata !{i32 786443, metadata !1252, metadata !1322, i32 258, i32 0, i32 23} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4737 = metadata !{i32 263, i32 0, metadata !4738, null}
!4738 = metadata !{i32 786443, metadata !1252, metadata !4739, i32 263, i32 0, i32 25} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4739 = metadata !{i32 786443, metadata !1252, metadata !4736, i32 259, i32 0, i32 24} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4740 = metadata !{i32 266, i32 0, metadata !4738, null}
!4741 = metadata !{i32 267, i32 0, metadata !4742, null}
!4742 = metadata !{i32 786443, metadata !1252, metadata !4743, i32 267, i32 0, i32 27} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4743 = metadata !{i32 786443, metadata !1252, metadata !4738, i32 267, i32 0, i32 26} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4744 = metadata !{i32 267, i32 0, metadata !4743, null}
!4745 = metadata !{i32 269, i32 0, metadata !4739, null}
!4746 = metadata !{i32 270, i32 0, metadata !4739, null}
!4747 = metadata !{i32 273, i32 0, metadata !4748, null}
!4748 = metadata !{i32 786443, metadata !1252, metadata !4749, i32 273, i32 0, i32 29} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4749 = metadata !{i32 786443, metadata !1252, metadata !4739, i32 271, i32 0, i32 28} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4750 = metadata !{i32 275, i32 0, metadata !4751, null}
!4751 = metadata !{i32 786443, metadata !1252, metadata !4752, i32 275, i32 0, i32 32} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4752 = metadata !{i32 786443, metadata !1252, metadata !4753, i32 275, i32 0, i32 31} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4753 = metadata !{i32 786443, metadata !1252, metadata !4748, i32 274, i32 0, i32 30} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4754 = metadata !{i32 275, i32 0, metadata !4752, null}
!4755 = metadata !{i32 276, i32 0, metadata !4756, null}
!4756 = metadata !{i32 786443, metadata !1252, metadata !4757, i32 276, i32 0, i32 34} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4757 = metadata !{i32 786443, metadata !1252, metadata !4753, i32 276, i32 0, i32 33} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4758 = metadata !{i32 276, i32 0, metadata !4757, null}
!4759 = metadata !{i32 277, i32 0, metadata !4760, null}
!4760 = metadata !{i32 786443, metadata !1252, metadata !4761, i32 277, i32 0, i32 36} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4761 = metadata !{i32 786443, metadata !1252, metadata !4753, i32 277, i32 0, i32 35} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4762 = metadata !{i32 277, i32 0, metadata !4761, null}
!4763 = metadata !{i32 278, i32 0, metadata !4753, null}
!4764 = metadata !{i32 279, i32 0, metadata !4753, null}
!4765 = metadata !{i32 283, i32 0, metadata !4749, null}
!4766 = metadata !{i32 289, i32 0, metadata !4767, null}
!4767 = metadata !{i32 786443, metadata !1252, metadata !4768, i32 289, i32 0, i32 38} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4768 = metadata !{i32 786443, metadata !1252, metadata !4749, i32 284, i32 0, i32 37} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4769 = metadata !{i32 290, i32 0, metadata !4767, null}
!4770 = metadata !{i32 297, i32 0, metadata !4771, null}
!4771 = metadata !{i32 786443, metadata !1252, metadata !4767, i32 291, i32 0, i32 39} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4772 = metadata !{i32 298, i32 0, metadata !4771, null}
!4773 = metadata !{i32 299, i32 0, metadata !4774, null}
!4774 = metadata !{i32 786443, metadata !1252, metadata !4775, i32 299, i32 0, i32 41} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4775 = metadata !{i32 786443, metadata !1252, metadata !4771, i32 299, i32 0, i32 40} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4776 = metadata !{i32 299, i32 0, metadata !4775, null}
!4777 = metadata !{i32 300, i32 0, metadata !4778, null}
!4778 = metadata !{i32 786443, metadata !1252, metadata !4779, i32 300, i32 0, i32 43} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4779 = metadata !{i32 786443, metadata !1252, metadata !4771, i32 300, i32 0, i32 42} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4780 = metadata !{i32 300, i32 0, metadata !4779, null}
!4781 = metadata !{i32 301, i32 0, metadata !4782, null}
!4782 = metadata !{i32 786443, metadata !1252, metadata !4783, i32 301, i32 0, i32 45} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4783 = metadata !{i32 786443, metadata !1252, metadata !4771, i32 301, i32 0, i32 44} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4784 = metadata !{i32 301, i32 0, metadata !4783, null}
!4785 = metadata !{i32 302, i32 0, metadata !4771, null}
!4786 = metadata !{i32 314, i32 0, metadata !4749, null}
!4787 = metadata !{i32 315, i32 0, metadata !4749, null}
!4788 = metadata !{i32 316, i32 0, metadata !4749, null}
!4789 = metadata !{i32 317, i32 0, metadata !4749, null}
!4790 = metadata !{i32 318, i32 0, metadata !4749, null}
!4791 = metadata !{i32 319, i32 0, metadata !4749, null}
!4792 = metadata !{i32 320, i32 0, metadata !4749, null}
!4793 = metadata !{i32 321, i32 0, metadata !4749, null}
!4794 = metadata !{i32 324, i32 0, metadata !4795, null}
!4795 = metadata !{i32 786443, metadata !1252, metadata !4749, i32 324, i32 0, i32 46} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4796 = metadata !{i32 327, i32 0, metadata !4797, null}
!4797 = metadata !{i32 786443, metadata !1252, metadata !4749, i32 327, i32 0, i32 47} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4798 = metadata !{i32 329, i32 0, metadata !4799, null}
!4799 = metadata !{i32 786443, metadata !1252, metadata !4797, i32 328, i32 0, i32 48} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4800 = metadata !{i32 330, i32 0, metadata !4799, null}
!4801 = metadata !{i32 335, i32 0, metadata !4802, null}
!4802 = metadata !{i32 786443, metadata !1252, metadata !4749, i32 335, i32 0, i32 49} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4803 = metadata !{i32 339, i32 0, metadata !4804, null}
!4804 = metadata !{i32 786443, metadata !1252, metadata !4749, i32 339, i32 0, i32 50} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4805 = metadata !{i32 355, i32 0, metadata !4806, null}
!4806 = metadata !{i32 786443, metadata !1252, metadata !4749, i32 355, i32 0, i32 51} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4807 = metadata !{i32 360, i32 0, metadata !4749, null}
!4808 = metadata !{i32 366, i32 0, metadata !4809, null}
!4809 = metadata !{i32 786443, metadata !1252, metadata !4810, i32 366, i32 0, i32 54} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4810 = metadata !{i32 786443, metadata !1252, metadata !4811, i32 366, i32 0, i32 53} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4811 = metadata !{i32 786443, metadata !1252, metadata !4749, i32 361, i32 0, i32 52} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4812 = metadata !{i32 366, i32 0, metadata !4810, null}
!4813 = metadata !{i32 367, i32 0, metadata !4814, null}
!4814 = metadata !{i32 786443, metadata !1252, metadata !4815, i32 367, i32 0, i32 56} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4815 = metadata !{i32 786443, metadata !1252, metadata !4811, i32 367, i32 0, i32 55} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4816 = metadata !{i32 367, i32 0, metadata !4815, null}
!4817 = metadata !{i32 368, i32 0, metadata !4818, null}
!4818 = metadata !{i32 786443, metadata !1252, metadata !4819, i32 368, i32 0, i32 58} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4819 = metadata !{i32 786443, metadata !1252, metadata !4811, i32 368, i32 0, i32 57} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4820 = metadata !{i32 368, i32 0, metadata !4819, null}
!4821 = metadata !{i32 369, i32 0, metadata !4811, null}
!4822 = metadata !{i32 404, i32 0, metadata !4823, null}
!4823 = metadata !{i32 786443, metadata !1252, metadata !4824, i32 404, i32 0, i32 60} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4824 = metadata !{i32 786443, metadata !1252, metadata !4749, i32 398, i32 0, i32 59} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4825 = metadata !{i32 406, i32 0, metadata !4826, null}
!4826 = metadata !{i32 786443, metadata !1252, metadata !4823, i32 405, i32 0, i32 61} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4827 = metadata !{i32 407, i32 0, metadata !4826, null}
!4828 = metadata !{i32 408, i32 0, metadata !4826, null}
!4829 = metadata !{i32 412, i32 0, metadata !4830, null}
!4830 = metadata !{i32 786443, metadata !1252, metadata !4823, i32 410, i32 0, i32 62} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4831 = metadata !{i32 414, i32 0, metadata !4830, null}
!4832 = metadata !{i32 415, i32 0, metadata !4830, null}
!4833 = metadata !{i32 416, i32 0, metadata !4834, null}
!4834 = metadata !{i32 786443, metadata !1252, metadata !4830, i32 416, i32 0, i32 63} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4835 = metadata !{i32 417, i32 0, metadata !4834, null}
!4836 = metadata !{i32 422, i32 0, metadata !4837, null}
!4837 = metadata !{i32 786443, metadata !1252, metadata !4830, i32 420, i32 0, i32 64} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4838 = metadata !{i32 424, i32 0, metadata !4839, null}
!4839 = metadata !{i32 786443, metadata !1252, metadata !4837, i32 424, i32 0, i32 65} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4840 = metadata !{i32 426, i32 0, metadata !4841, null}
!4841 = metadata !{i32 786443, metadata !1252, metadata !4839, i32 426, i32 0, i32 66} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4842 = metadata !{i32 428, i32 0, metadata !4843, null}
!4843 = metadata !{i32 786443, metadata !1252, metadata !4841, i32 427, i32 0, i32 67} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4844 = metadata !{i32 429, i32 0, metadata !4843, null}
!4845 = metadata !{i32 431, i32 0, metadata !4846, null}
!4846 = metadata !{i32 786443, metadata !1252, metadata !4841, i32 431, i32 0, i32 68} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4847 = metadata !{i32 433, i32 0, metadata !4848, null}
!4848 = metadata !{i32 786443, metadata !1252, metadata !4846, i32 432, i32 0, i32 69} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4849 = metadata !{i32 434, i32 0, metadata !4848, null}
!4850 = metadata !{i32 435, i32 0, metadata !4848, null}
!4851 = metadata !{i32 444, i32 0, metadata !4852, null}
!4852 = metadata !{i32 786443, metadata !1252, metadata !4853, i32 444, i32 0, i32 71} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4853 = metadata !{i32 786443, metadata !1252, metadata !4846, i32 439, i32 0, i32 70} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4854 = metadata !{i32 447, i32 0, metadata !4855, null}
!4855 = metadata !{i32 786443, metadata !1252, metadata !4856, i32 447, i32 0, i32 73} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4856 = metadata !{i32 786443, metadata !1252, metadata !4852, i32 445, i32 0, i32 72} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4857 = metadata !{i32 448, i32 0, metadata !4855, null}
!4858 = metadata !{i32 459, i32 0, metadata !4859, null}
!4859 = metadata !{i32 786443, metadata !1252, metadata !4853, i32 459, i32 0, i32 75} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4860 = metadata !{i32 460, i32 0, metadata !4859, null}
!4861 = metadata !{i32 461, i32 0, metadata !4853, null}
!4862 = metadata !{i32 464, i32 0, metadata !4830, null}
!4863 = metadata !{i32 467, i32 0, metadata !4864, null}
!4864 = metadata !{i32 786443, metadata !1252, metadata !4824, i32 467, i32 0, i32 76} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4865 = metadata !{i32 471, i32 0, metadata !4866, null}
!4866 = metadata !{i32 786443, metadata !1252, metadata !4864, i32 468, i32 0, i32 77} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4867 = metadata !{i32 473, i32 0, metadata !4868, null}
!4868 = metadata !{i32 786443, metadata !1252, metadata !4866, i32 473, i32 0, i32 78} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4869 = metadata !{i32 475, i32 0, metadata !4870, null}
!4870 = metadata !{i32 786443, metadata !1252, metadata !4871, i32 475, i32 0, i32 80} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4871 = metadata !{i32 786443, metadata !1252, metadata !4868, i32 474, i32 0, i32 79} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4872 = metadata !{i32 477, i32 0, metadata !4873, null}
!4873 = metadata !{i32 786443, metadata !1252, metadata !4874, i32 477, i32 0, i32 83} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4874 = metadata !{i32 786443, metadata !1252, metadata !4875, i32 477, i32 0, i32 82} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4875 = metadata !{i32 786443, metadata !1252, metadata !4870, i32 476, i32 0, i32 81} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4876 = metadata !{i32 477, i32 0, metadata !4874, null}
!4877 = metadata !{i32 478, i32 0, metadata !4878, null}
!4878 = metadata !{i32 786443, metadata !1252, metadata !4879, i32 478, i32 0, i32 85} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4879 = metadata !{i32 786443, metadata !1252, metadata !4875, i32 478, i32 0, i32 84} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4880 = metadata !{i32 478, i32 0, metadata !4879, null}
!4881 = metadata !{i32 479, i32 0, metadata !4882, null}
!4882 = metadata !{i32 786443, metadata !1252, metadata !4883, i32 479, i32 0, i32 87} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4883 = metadata !{i32 786443, metadata !1252, metadata !4875, i32 479, i32 0, i32 86} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4884 = metadata !{i32 479, i32 0, metadata !4883, null}
!4885 = metadata !{i32 480, i32 0, metadata !4875, null}
!4886 = metadata !{i32 481, i32 0, metadata !4875, null}
!4887 = metadata !{i32 482, i32 0, metadata !4888, null}
!4888 = metadata !{i32 786443, metadata !1252, metadata !4871, i32 482, i32 0, i32 88} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4889 = metadata !{i32 484, i32 0, metadata !4890, null}
!4890 = metadata !{i32 786443, metadata !1252, metadata !4891, i32 484, i32 0, i32 90} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4891 = metadata !{i32 786443, metadata !1252, metadata !4871, i32 484, i32 0, i32 89} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4892 = metadata !{i32 484, i32 0, metadata !4891, null}
!4893 = metadata !{i32 485, i32 0, metadata !4871, null}
!4894 = metadata !{i32 486, i32 0, metadata !4871, null}
!4895 = metadata !{i32 493, i32 0, metadata !4896, null}
!4896 = metadata !{i32 786443, metadata !1252, metadata !4739, i32 493, i32 0, i32 91} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4897 = metadata !{i32 498, i32 0, metadata !4898, null}
!4898 = metadata !{i32 786443, metadata !1252, metadata !4899, i32 498, i32 0, i32 93} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4899 = metadata !{i32 786443, metadata !1252, metadata !4739, i32 498, i32 0, i32 92} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4900 = metadata !{i32 498, i32 0, metadata !4899, null}
!4901 = metadata !{i32 501, i32 0, metadata !4902, null}
!4902 = metadata !{i32 786443, metadata !1252, metadata !4903, i32 501, i32 0, i32 95} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4903 = metadata !{i32 786443, metadata !1252, metadata !4739, i32 501, i32 0, i32 94} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4904 = metadata !{i32 501, i32 0, metadata !4903, null}
!4905 = metadata !{i32 504, i32 0, metadata !4906, null}
!4906 = metadata !{i32 786443, metadata !1252, metadata !1322, i32 504, i32 0, i32 96} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4907 = metadata !{i32 507, i32 0, metadata !4908, null}
!4908 = metadata !{i32 786443, metadata !1252, metadata !1322, i32 507, i32 0, i32 97} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4909 = metadata !{i32 508, i32 0, metadata !4910, null}
!4910 = metadata !{i32 786443, metadata !1252, metadata !4908, i32 508, i32 0, i32 98} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4911 = metadata !{i32 509, i32 0, metadata !4912, null}
!4912 = metadata !{i32 786443, metadata !1252, metadata !4913, i32 509, i32 0, i32 100} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4913 = metadata !{i32 786443, metadata !1252, metadata !4910, i32 509, i32 0, i32 99} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4914 = metadata !{i32 509, i32 0, metadata !4913, null}
!4915 = metadata !{i32 511, i32 0, metadata !4916, null}
!4916 = metadata !{i32 786443, metadata !1252, metadata !1322, i32 511, i32 0, i32 101} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4917 = metadata !{i32 512, i32 0, metadata !4916, null}
!4918 = metadata !{i32 513, i32 0, metadata !1322, null}
!4919 = metadata !{i32 516, i32 0, metadata !1322, null}
!4920 = metadata !{i32 518, i32 0, metadata !1322, null}
!4921 = metadata !{i32 603, i32 0, metadata !1319, null}
!4922 = metadata !{i32 605, i32 0, metadata !1319, null}
!4923 = metadata !{i32 606, i32 0, metadata !1319, null}
!4924 = metadata !{i32 608, i32 0, metadata !4925, null}
!4925 = metadata !{i32 786443, metadata !1252, metadata !1319, i32 608, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4926 = metadata !{i32 609, i32 0, metadata !4925, null}
!4927 = metadata !{i32 611, i32 0, metadata !4928, null}
!4928 = metadata !{i32 786443, metadata !1252, metadata !1319, i32 611, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4929 = metadata !{i32 618, i32 0, metadata !4930, null}
!4930 = metadata !{i32 786443, metadata !1252, metadata !4928, i32 612, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4931 = metadata !{i32 619, i32 0, metadata !4930, null}
!4932 = metadata !{i32 621, i32 0, metadata !4933, null}
!4933 = metadata !{i32 786443, metadata !1252, metadata !4930, i32 621, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4934 = metadata !{i32 622, i32 0, metadata !4933, null}
!4935 = metadata !{i32 624, i32 0, metadata !4930, null}
!4936 = metadata !{i32 625, i32 0, metadata !4937, null}
!4937 = metadata !{i32 786443, metadata !1252, metadata !4930, i32 625, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4938 = metadata !{i32 626, i32 0, metadata !4937, null}
!4939 = metadata !{i32 627, i32 0, metadata !4930, null}
!4940 = metadata !{i32 628, i32 0, metadata !4930, null}
!4941 = metadata !{i32 629, i32 0, metadata !4930, null}
!4942 = metadata !{i32 632, i32 0, metadata !4943, null}
!4943 = metadata !{i32 786443, metadata !1252, metadata !1319, i32 631, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4944 = metadata !{i32 633, i32 0, metadata !4943, null}
!4945 = metadata !{i32 634, i32 0, metadata !4943, null}
!4946 = metadata !{i32 636, i32 0, metadata !4947, null}
!4947 = metadata !{i32 786443, metadata !1252, metadata !4943, i32 636, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4948 = metadata !{i32 638, i32 0, metadata !4949, null}
!4949 = metadata !{i32 786443, metadata !1252, metadata !4947, i32 637, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4950 = metadata !{i32 639, i32 0, metadata !4951, null}
!4951 = metadata !{i32 786443, metadata !1252, metadata !4949, i32 639, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4952 = metadata !{i32 640, i32 0, metadata !4951, null}
!4953 = metadata !{i32 641, i32 0, metadata !4949, null}
!4954 = metadata !{i32 642, i32 0, metadata !4949, null}
!4955 = metadata !{i32 643, i32 0, metadata !4949, null}
!4956 = metadata !{i32 645, i32 0, metadata !4943, null}
!4957 = metadata !{i32 646, i32 0, metadata !4943, null}
!4958 = metadata !{i32 667, i32 0, metadata !1316, null}
!4959 = metadata !{i32 668, i32 0, metadata !1316, null}
!4960 = metadata !{i32 669, i32 0, metadata !1316, null}
!4961 = metadata !{i32 161, i32 0, metadata !1325, null}
!4962 = metadata !{i32 162, i32 0, metadata !4963, null}
!4963 = metadata !{i32 786443, metadata !1252, metadata !1325, i32 162, i32 0, i32 102} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!4964 = metadata !{i32 163, i32 0, metadata !4963, null}
!4965 = metadata !{i32 164, i32 0, metadata !1325, null}
!4966 = metadata !{i32 65, i32 0, metadata !4967, null}
!4967 = metadata !{i32 786443, metadata !1350, metadata !1351, i32 65, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./safe-read.c]
!4968 = metadata !{i32 67, i32 0, metadata !4969, null}
!4969 = metadata !{i32 786443, metadata !1350, metadata !4967, i32 66, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./safe-read.c]
!4970 = metadata !{i32 69, i32 0, metadata !4971, null}
!4971 = metadata !{i32 786443, metadata !1350, metadata !4969, i32 69, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./safe-read.c]
!4972 = metadata !{i32 70, i32 0, metadata !4971, null}
!4973 = metadata !{i32 71, i32 0, metadata !4974, null}
!4974 = metadata !{i32 786443, metadata !1350, metadata !4971, i32 71, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./safe-read.c]
!4975 = metadata !{i32 73, i32 0, metadata !4976, null}
!4976 = metadata !{i32 786443, metadata !1350, metadata !4974, i32 73, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./safe-read.c]
!4977 = metadata !{i32 74, i32 0, metadata !4976, null}
!4978 = metadata !{i32 77, i32 0, metadata !4969, null}
!4979 = metadata !{i32 76, i32 0, metadata !4976, null}
!4980 = metadata !{i32 78, i32 0, metadata !1351, null}
!4981 = metadata !{i32 57, i32 0, metadata !1362, null}
!4982 = metadata !{i32 58, i32 0, metadata !1362, null} ; [ DW_TAG_imported_module ]
!4983 = metadata !{i32 59, i32 0, metadata !1362, null}
!4984 = metadata !{i32 60, i32 0, metadata !1362, null}
!4985 = metadata !{i32 61, i32 0, metadata !1362, null}
!4986 = metadata !{i32 63, i32 0, metadata !1362, null}
!4987 = metadata !{i32 64, i32 0, metadata !1362, null}
!4988 = metadata !{i32 65, i32 0, metadata !1362, null}
!4989 = metadata !{i32 78, i32 0, metadata !4990, null}
!4990 = metadata !{i32 786443, metadata !1360, metadata !1362, i32 78, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/same.c]
!4991 = metadata !{i32 85, i32 0, metadata !4992, null}
!4992 = metadata !{i32 786443, metadata !1360, metadata !4990, i32 79, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/same.c]
!4993 = metadata !{i32 86, i32 0, metadata !4992, null}
!4994 = metadata !{i32 88, i32 0, metadata !4995, null}
!4995 = metadata !{i32 786443, metadata !1360, metadata !4992, i32 88, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/same.c]
!4996 = metadata !{i32 91, i32 0, metadata !4997, null}
!4997 = metadata !{i32 786443, metadata !1360, metadata !4995, i32 89, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/same.c]
!4998 = metadata !{i32 92, i32 0, metadata !4997, null}
!4999 = metadata !{i32 94, i32 0, metadata !5000, null}
!5000 = metadata !{i32 786443, metadata !1360, metadata !4992, i32 94, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/same.c]
!5001 = metadata !{i32 97, i32 0, metadata !5002, null}
!5002 = metadata !{i32 786443, metadata !1360, metadata !5000, i32 95, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/same.c]
!5003 = metadata !{i32 98, i32 0, metadata !5002, null}
!5004 = metadata !{i32 100, i32 0, metadata !4992, null}
!5005 = metadata !{i32 121, i32 0, metadata !4992, null}
!5006 = metadata !{i32 122, i32 0, metadata !4992, null}
!5007 = metadata !{i32 123, i32 0, metadata !4992, null}
!5008 = metadata !{i32 125, i32 0, metadata !1362, null}
!5009 = metadata !{i32 120, i32 0, metadata !1369, null}
!5010 = metadata !{i32 131, i32 0, metadata !1371, null}
!5011 = metadata !{i32 56, i32 0, metadata !1374, null}
!5012 = metadata !{i32 57, i32 0, metadata !1374, null}
!5013 = metadata !{i32 60, i32 0, metadata !5014, null}
!5014 = metadata !{i32 786443, metadata !1367, metadata !1374, i32 60, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5015 = metadata !{i32 61, i32 0, metadata !5014, null}
!5016 = metadata !{i32 63, i32 0, metadata !1374, null}
!5017 = metadata !{i32 65, i32 0, metadata !5018, null}
!5018 = metadata !{i32 786443, metadata !1367, metadata !1374, i32 65, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5019 = metadata !{i32 70, i32 0, metadata !5020, null}
!5020 = metadata !{i32 786443, metadata !1367, metadata !5018, i32 66, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5021 = metadata !{i32 71, i32 0, metadata !5020, null}
!5022 = metadata !{i32 72, i32 0, metadata !5023, null}
!5023 = metadata !{i32 786443, metadata !1367, metadata !5020, i32 72, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5024 = metadata !{i32 77, i32 0, metadata !5020, null}
!5025 = metadata !{i32 78, i32 0, metadata !5026, null}
!5026 = metadata !{i32 786443, metadata !1367, metadata !5020, i32 78, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5027 = metadata !{i32 80, i32 0, metadata !5028, null}
!5028 = metadata !{i32 786443, metadata !1367, metadata !5026, i32 79, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5029 = metadata !{i32 81, i32 0, metadata !5030, null}
!5030 = metadata !{i32 786443, metadata !1367, metadata !5028, i32 81, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5031 = metadata !{i32 82, i32 0, metadata !5030, null}
!5032 = metadata !{i32 83, i32 0, metadata !5033, null}
!5033 = metadata !{i32 786443, metadata !1367, metadata !5028, i32 83, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5034 = metadata !{i32 87, i32 0, metadata !5035, null}
!5035 = metadata !{i32 786443, metadata !1367, metadata !5036, i32 87, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5036 = metadata !{i32 786443, metadata !1367, metadata !5037, i32 86, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5037 = metadata !{i32 786443, metadata !1367, metadata !5033, i32 84, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5038 = metadata !{i32 88, i32 0, metadata !5035, null}
!5039 = metadata !{i32 89, i32 0, metadata !5036, null}
!5040 = metadata !{i32 90, i32 0, metadata !5036, null}
!5041 = metadata !{i32 93, i32 0, metadata !5037, null}
!5042 = metadata !{i32 94, i32 0, metadata !5037, null}
!5043 = metadata !{i32 95, i32 0, metadata !5028, null}
!5044 = metadata !{i32 96, i32 0, metadata !5028, null}
!5045 = metadata !{i32 97, i32 0, metadata !5028, null}
!5046 = metadata !{i32 99, i32 0, metadata !1374, null}
!5047 = metadata !{i32 100, i32 0, metadata !1374, null}
!5048 = metadata !{i32 101, i32 0, metadata !5049, null}
!5049 = metadata !{i32 786443, metadata !1367, metadata !1374, i32 101, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5050 = metadata !{i32 102, i32 0, metadata !5049, null}
!5051 = metadata !{i32 103, i32 0, metadata !5052, null}
!5052 = metadata !{i32 786443, metadata !1367, metadata !1374, i32 103, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5053 = metadata !{i32 105, i32 0, metadata !5054, null}
!5054 = metadata !{i32 786443, metadata !1367, metadata !5052, i32 104, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/savedir.c]
!5055 = metadata !{i32 106, i32 0, metadata !5054, null}
!5056 = metadata !{i32 107, i32 0, metadata !5054, null}
!5057 = metadata !{i32 109, i32 0, metadata !1374, null}
!5058 = metadata !{i32 110, i32 0, metadata !1374, null}
!5059 = metadata !{i32 33, i32 0, metadata !1384, null}
!5060 = metadata !{i32 39, i32 0, metadata !5061, null}
!5061 = metadata !{i32 786443, metadata !1382, metadata !1384, i32 39, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/stripslash.c]
!5062 = metadata !{i32 40, i32 0, metadata !5061, null}
!5063 = metadata !{i32 41, i32 0, metadata !1384, null}
!5064 = metadata !{i32 42, i32 0, metadata !1384, null}
!5065 = metadata !{i32 43, i32 0, metadata !1384, null}
!5066 = metadata !{i32 44, i32 0, metadata !1384, null}
!5067 = metadata !{i32 132, i32 0, metadata !1400, null}
!5068 = metadata !{i32 133, i32 0, metadata !1400, null}
!5069 = metadata !{i32 134, i32 16, metadata !1400, null}
!5070 = metadata !{i32 135, i32 16, metadata !1400, null}
!5071 = metadata !{i32 137, i32 0, metadata !5072, null}
!5072 = metadata !{i32 786443, metadata !1389, metadata !1400, i32 137, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5073 = metadata !{i32 151, i32 0, metadata !5074, null}
!5074 = metadata !{i32 786443, metadata !1389, metadata !5075, i32 151, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5075 = metadata !{i32 786443, metadata !1389, metadata !5072, i32 138, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5076 = metadata !{i32 152, i32 0, metadata !5074, null}
!5077 = metadata !{i32 153, i32 0, metadata !5078, null}
!5078 = metadata !{i32 786443, metadata !1389, metadata !5075, i32 153, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5079 = metadata !{i32 155, i32 0, metadata !5080, null}
!5080 = metadata !{i32 786443, metadata !1389, metadata !5078, i32 154, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5081 = metadata !{i32 156, i32 0, metadata !5080, null}
!5082 = metadata !{i32 157, i32 0, metadata !5080, null}
!5083 = metadata !{i32 158, i32 0, metadata !5080, null}
!5084 = metadata !{i32 159, i32 0, metadata !5075, null}
!5085 = metadata !{i32 160, i32 0, metadata !5075, null}
!5086 = metadata !{i32 161, i32 0, metadata !5087, null}
!5087 = metadata !{i32 786443, metadata !1389, metadata !5075, i32 161, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5088 = metadata !{i32 162, i32 0, metadata !5087, null}
!5089 = metadata !{i32 164, i32 0, metadata !5090, null}
!5090 = metadata !{i32 786443, metadata !1389, metadata !5075, i32 164, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5091 = metadata !{i32 168, i32 0, metadata !5092, null}
!5092 = metadata !{i32 786443, metadata !1389, metadata !5090, i32 165, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5093 = metadata !{i32 169, i32 0, metadata !5092, null}
!5094 = metadata !{i32 171, i32 0, metadata !5075, null}
!5095 = metadata !{i32 173, i32 0, metadata !5096, null}
!5096 = metadata !{i32 786443, metadata !1389, metadata !5075, i32 173, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5097 = metadata !{i32 178, i32 0, metadata !5098, null}
!5098 = metadata !{i32 786443, metadata !1389, metadata !5096, i32 174, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5099 = metadata !{i32 179, i32 0, metadata !5098, null}
!5100 = metadata !{i32 180, i32 0, metadata !5098, null}
!5101 = metadata !{i32 181, i32 19, metadata !5098, null}
!5102 = metadata !{i32 182, i32 19, metadata !5098, null}
!5103 = metadata !{i32 183, i32 0, metadata !5098, null}
!5104 = metadata !{i32 192, i32 0, metadata !5105, null}
!5105 = metadata !{i32 786443, metadata !1389, metadata !5098, i32 191, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5106 = metadata !{i32 201, i32 0, metadata !5107, null}
!5107 = metadata !{i32 786443, metadata !1389, metadata !5108, i32 200, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5108 = metadata !{i32 786443, metadata !1389, metadata !5105, i32 194, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5109 = metadata !{i32 202, i32 0, metadata !5107, null}
!5110 = metadata !{i32 203, i32 0, metadata !5107, null}
!5111 = metadata !{i32 207, i32 0, metadata !5107, null}
!5112 = metadata !{i32 209, i32 0, metadata !5113, null}
!5113 = metadata !{i32 786443, metadata !1389, metadata !5107, i32 209, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5114 = metadata !{i32 210, i32 0, metadata !5113, null}
!5115 = metadata !{i32 212, i32 0, metadata !5116, null}
!5116 = metadata !{i32 786443, metadata !1389, metadata !5113, i32 212, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5117 = metadata !{i32 216, i32 0, metadata !5118, null}
!5118 = metadata !{i32 786443, metadata !1389, metadata !5116, i32 216, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5119 = metadata !{i32 218, i32 0, metadata !5120, null}
!5120 = metadata !{i32 786443, metadata !1389, metadata !5121, i32 218, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5121 = metadata !{i32 786443, metadata !1389, metadata !5118, i32 217, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5122 = metadata !{i32 219, i32 0, metadata !5120, null}
!5123 = metadata !{i32 215, i32 0, metadata !5116, null}
!5124 = metadata !{i32 224, i32 0, metadata !5105, null}
!5125 = metadata !{i32 227, i32 0, metadata !5126, null}
!5126 = metadata !{i32 786443, metadata !1389, metadata !5098, i32 227, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5127 = metadata !{i32 234, i32 0, metadata !5128, null}
!5128 = metadata !{i32 786443, metadata !1389, metadata !5126, i32 228, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5129 = metadata !{i32 240, i32 0, metadata !5130, null}
!5130 = metadata !{i32 786443, metadata !1389, metadata !5128, i32 239, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5131 = metadata !{i32 241, i32 0, metadata !5132, null}
!5132 = metadata !{i32 786443, metadata !1389, metadata !5130, i32 241, i32 0, i32 21} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5133 = metadata !{i32 242, i32 0, metadata !5132, null}
!5134 = metadata !{i32 243, i32 0, metadata !5135, null}
!5135 = metadata !{i32 786443, metadata !1389, metadata !5130, i32 243, i32 0, i32 22} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5136 = metadata !{i32 245, i32 0, metadata !5135, null}
!5137 = metadata !{i32 254, i32 0, metadata !5128, null}
!5138 = metadata !{i32 255, i32 0, metadata !5128, null}
!5139 = metadata !{i32 256, i32 0, metadata !5128, null}
!5140 = metadata !{i32 257, i32 0, metadata !5128, null}
!5141 = metadata !{i32 262, i32 0, metadata !5142, null}
!5142 = metadata !{i32 786443, metadata !1389, metadata !5128, i32 262, i32 0, i32 23} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5143 = metadata !{i32 263, i32 0, metadata !5142, null}
!5144 = metadata !{i32 264, i32 0, metadata !5142, null}
!5145 = metadata !{i32 271, i32 0, metadata !5146, null}
!5146 = metadata !{i32 786443, metadata !1389, metadata !5128, i32 270, i32 0, i32 24} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5147 = metadata !{i32 273, i32 0, metadata !5148, null}
!5148 = metadata !{i32 786443, metadata !1389, metadata !5146, i32 273, i32 0, i32 25} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5149 = metadata !{i32 275, i32 10, metadata !5148, null}
!5150 = metadata !{i32 279, i32 0, metadata !5151, null}
!5151 = metadata !{i32 786443, metadata !1389, metadata !5148, i32 276, i32 0, i32 26} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5152 = metadata !{i32 280, i32 0, metadata !5151, null}
!5153 = metadata !{i32 281, i32 0, metadata !5151, null}
!5154 = metadata !{i32 282, i32 0, metadata !5151, null}
!5155 = metadata !{i32 284, i32 0, metadata !5156, null}
!5156 = metadata !{i32 786443, metadata !1389, metadata !5146, i32 284, i32 0, i32 27} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5157 = metadata !{i32 285, i32 0, metadata !5156, null}
!5158 = metadata !{i32 291, i32 0, metadata !5159, null}
!5159 = metadata !{i32 786443, metadata !1389, metadata !5128, i32 290, i32 0, i32 28} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5160 = metadata !{i32 292, i32 0, metadata !5159, null}
!5161 = metadata !{i32 293, i32 7, metadata !5159, null}
!5162 = metadata !{i32 295, i32 0, metadata !5159, null}
!5163 = metadata !{i32 297, i32 0, metadata !5164, null}
!5164 = metadata !{i32 786443, metadata !1389, metadata !5159, i32 297, i32 0, i32 29} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5165 = metadata !{i32 299, i32 0, metadata !5166, null}
!5166 = metadata !{i32 786443, metadata !1389, metadata !5167, i32 299, i32 0, i32 31} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5167 = metadata !{i32 786443, metadata !1389, metadata !5164, i32 298, i32 0, i32 30} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5168 = metadata !{i32 301, i32 0, metadata !5169, null}
!5169 = metadata !{i32 786443, metadata !1389, metadata !5166, i32 300, i32 0, i32 32} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5170 = metadata !{i32 302, i32 0, metadata !5169, null}
!5171 = metadata !{i32 304, i32 0, metadata !5167, null}
!5172 = metadata !{i32 305, i32 0, metadata !5173, null}
!5173 = metadata !{i32 786443, metadata !1389, metadata !5167, i32 305, i32 0, i32 33} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5174 = metadata !{i32 311, i32 0, metadata !5098, null}
!5175 = metadata !{i32 312, i32 0, metadata !5098, null}
!5176 = metadata !{i32 313, i32 0, metadata !5098, null}
!5177 = metadata !{i32 316, i32 0, metadata !5075, null}
!5178 = metadata !{i32 317, i32 0, metadata !5075, null}
!5179 = metadata !{i32 318, i32 0, metadata !5075, null}
!5180 = metadata !{i32 321, i32 0, metadata !1400, null}
!5181 = metadata !{i32 325, i32 0, metadata !1400, null}
!5182 = metadata !{i32 82, i32 0, metadata !5183, null}
!5183 = metadata !{i32 786443, metadata !1428, metadata !1438} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./stat-time.h]
!5184 = metadata !{i32 79, i32 0, metadata !1434, null}
!5185 = metadata !{i32 88, i32 0, metadata !1434, null}
!5186 = metadata !{i32 95, i32 0, metadata !5187, null}
!5187 = metadata !{i32 786443, metadata !1389, metadata !1433} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimecmp.c]
!5188 = metadata !{i32 96, i32 0, metadata !5187, null}
!5189 = metadata !{i32 97, i32 0, metadata !5187, null}
!5190 = metadata !{i32 52, i32 0, metadata !1432, null}
!5191 = metadata !{i32 67, i32 0, metadata !5192, null}
!5192 = metadata !{i32 786443, metadata !1428, metadata !1427} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./stat-time.h]
!5193 = metadata !{i32 102, i32 0, metadata !5194, null}
!5194 = metadata !{i32 786443, metadata !1453, metadata !1455, i32 102, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!5195 = metadata !{i32 104, i32 0, metadata !5196, null}
!5196 = metadata !{i32 786443, metadata !1453, metadata !5194, i32 103, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!5197 = metadata !{i32 105, i32 0, metadata !5196, null}
!5198 = metadata !{i32 106, i32 0, metadata !5196, null}
!5199 = metadata !{i32 107, i32 0, metadata !5196, null}
!5200 = metadata !{i32 108, i32 0, metadata !5196, null}
!5201 = metadata !{i32 109, i32 0, metadata !5196, null}
!5202 = metadata !{i32 111, i32 0, metadata !5194, null}
!5203 = metadata !{i32 114, i32 0, metadata !5204, null}
!5204 = metadata !{i32 786443, metadata !1453, metadata !1455, i32 114, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!5205 = metadata !{i32 117, i32 0, metadata !5206, null}
!5206 = metadata !{i32 786443, metadata !1453, metadata !5204, i32 115, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!5207 = metadata !{i32 133, i32 0, metadata !5208, null}
!5208 = metadata !{i32 786443, metadata !1453, metadata !5209, i32 133, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!5209 = metadata !{i32 786443, metadata !1453, metadata !5204, i32 121, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!5210 = metadata !{i32 134, i32 0, metadata !5208, null}
!5211 = metadata !{i32 142, i32 0, metadata !5212, null}
!5212 = metadata !{i32 786443, metadata !1453, metadata !1455, i32 142, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!5213 = metadata !{i32 149, i32 0, metadata !5214, null}
!5214 = metadata !{i32 786443, metadata !1453, metadata !5215, i32 149, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!5215 = metadata !{i32 786443, metadata !1453, metadata !5212, i32 143, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!5216 = metadata !{i32 151, i32 0, metadata !5217, null}
!5217 = metadata !{i32 786443, metadata !1453, metadata !5214, i32 150, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!5218 = metadata !{i32 152, i32 0, metadata !5217, null}
!5219 = metadata !{i32 153, i32 0, metadata !5220, null}
!5220 = metadata !{i32 786443, metadata !1453, metadata !5217, i32 153, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/utimens.c]
!5221 = metadata !{i32 154, i32 0, metadata !5220, null}
!5222 = metadata !{i32 155, i32 0, metadata !5217, null}
!5223 = metadata !{i32 156, i32 0, metadata !5217, null}
!5224 = metadata !{i32 158, i32 0, metadata !5215, null}
!5225 = metadata !{i32 162, i32 0, metadata !1455, null}
!5226 = metadata !{i32 179, i32 0, metadata !1455, null}
!5227 = metadata !{i32 186, i32 0, metadata !1465, null}
!5228 = metadata !{i32 115, i32 0, metadata !5229, null}
!5229 = metadata !{i32 786443, metadata !1472, metadata !1482, i32 115, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!5230 = metadata !{i32 116, i32 0, metadata !5229, null}
!5231 = metadata !{i32 117, i32 0, metadata !1482, null}
!5232 = metadata !{i32 50, i32 0, metadata !5233, null}
!5233 = metadata !{i32 786443, metadata !1469, metadata !1491} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xmalloc.c]
!5234 = metadata !{i32 51, i32 0, metadata !5235, null}
!5235 = metadata !{i32 786443, metadata !1469, metadata !5233, i32 51, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xmalloc.c]
!5236 = metadata !{i32 52, i32 0, metadata !5235, null}
!5237 = metadata !{i32 53, i32 0, metadata !5233, null}
!5238 = metadata !{i32 126, i32 0, metadata !5239, null}
!5239 = metadata !{i32 786443, metadata !1472, metadata !1485, i32 126, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!5240 = metadata !{i32 127, i32 0, metadata !5239, null}
!5241 = metadata !{i32 128, i32 0, metadata !1485, null}
!5242 = metadata !{i32 62, i32 0, metadata !1495, null}
!5243 = metadata !{i32 63, i32 0, metadata !5244, null}
!5244 = metadata !{i32 786443, metadata !1469, metadata !1495, i32 63, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xmalloc.c]
!5245 = metadata !{i32 64, i32 0, metadata !5244, null}
!5246 = metadata !{i32 65, i32 0, metadata !1495, null}
!5247 = metadata !{i32 189, i32 0, metadata !1473, null}
!5248 = metadata !{i32 191, i32 0, metadata !5249, null}
!5249 = metadata !{i32 786443, metadata !1472, metadata !1473, i32 191, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!5250 = metadata !{i32 193, i32 0, metadata !5251, null}
!5251 = metadata !{i32 786443, metadata !1472, metadata !5252, i32 193, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!5252 = metadata !{i32 786443, metadata !1472, metadata !5249, i32 192, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!5253 = metadata !{i32 201, i32 0, metadata !5254, null}
!5254 = metadata !{i32 786443, metadata !1472, metadata !5251, i32 194, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!5255 = metadata !{i32 202, i32 0, metadata !5254, null}
!5256 = metadata !{i32 203, i32 0, metadata !5254, null}
!5257 = metadata !{i32 207, i32 0, metadata !5258, null}
!5258 = metadata !{i32 786443, metadata !1472, metadata !5259, i32 207, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!5259 = metadata !{i32 786443, metadata !1472, metadata !5249, i32 206, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!5260 = metadata !{i32 208, i32 0, metadata !5258, null}
!5261 = metadata !{i32 209, i32 0, metadata !5259, null}
!5262 = metadata !{i32 212, i32 0, metadata !1473, null}
!5263 = metadata !{i32 213, i32 0, metadata !1473, null}
!5264 = metadata !{i32 222, i32 0, metadata !1488, null}
!5265 = metadata !{i32 77, i32 0, metadata !1498, null}
!5266 = metadata !{i32 87, i32 0, metadata !1501, null}
!5267 = metadata !{i32 102, i32 0, metadata !5268, null}
!5268 = metadata !{i32 786443, metadata !1469, metadata !1502, i32 101, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xmalloc.c]
!5269 = metadata !{i32 103, i32 0, metadata !5268, null}
!5270 = metadata !{i32 104, i32 0, metadata !1502, null}
!5271 = metadata !{i32 114, i32 0, metadata !1503, null}
!5272 = metadata !{i32 122, i32 0, metadata !1506, null}
!5273 = metadata !{i32 58, i32 0, metadata !1510, null} ; [ DW_TAG_imported_module ]
!5274 = metadata !{i32 60, i32 0, metadata !1510, null}
!5275 = metadata !{i32 62, i32 0, metadata !5276, null}
!5276 = metadata !{i32 786443, metadata !1508, metadata !1510, i32 61, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xreadlink.c]
!5277 = metadata !{i32 63, i32 0, metadata !5276, null}
!5278 = metadata !{i32 64, i32 0, metadata !5276, null}
!5279 = metadata !{i32 68, i32 0, metadata !5280, null}
!5280 = metadata !{i32 786443, metadata !1508, metadata !5276, i32 68, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xreadlink.c]
!5281 = metadata !{i32 70, i32 0, metadata !5282, null}
!5282 = metadata !{i32 786443, metadata !1508, metadata !5280, i32 69, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xreadlink.c]
!5283 = metadata !{i32 71, i32 0, metadata !5282, null}
!5284 = metadata !{i32 72, i32 0, metadata !5282, null}
!5285 = metadata !{i32 73, i32 0, metadata !5282, null}
!5286 = metadata !{i32 76, i32 0, metadata !5287, null}
!5287 = metadata !{i32 786443, metadata !1508, metadata !5276, i32 76, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xreadlink.c]
!5288 = metadata !{i32 78, i32 0, metadata !5289, null}
!5289 = metadata !{i32 786443, metadata !1508, metadata !5287, i32 77, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xreadlink.c]
!5290 = metadata !{i32 79, i32 0, metadata !5289, null}
!5291 = metadata !{i32 82, i32 0, metadata !5276, null}
!5292 = metadata !{i32 83, i32 0, metadata !5293, null}
!5293 = metadata !{i32 786443, metadata !1508, metadata !5276, i32 83, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xreadlink.c]
!5294 = metadata !{i32 84, i32 0, metadata !5293, null}
!5295 = metadata !{i32 85, i32 0, metadata !5296, null}
!5296 = metadata !{i32 786443, metadata !1508, metadata !5293, i32 85, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xreadlink.c]
!5297 = metadata !{i32 86, i32 0, metadata !5296, null}
!5298 = metadata !{i32 88, i32 0, metadata !5296, null}
!5299 = metadata !{i32 90, i32 0, metadata !1510, null}
!5300 = metadata !{i32 57, i32 0, metadata !1518, null}
!5301 = metadata !{i32 58, i32 0, metadata !1518, null} ; [ DW_TAG_imported_module ]
!5302 = metadata !{i32 59, i32 0, metadata !1518, null}
!5303 = metadata !{i32 60, i32 0, metadata !1518, null}
!5304 = metadata !{i32 63, i32 0, metadata !1518, null}
!5305 = metadata !{i32 58, i32 0, metadata !5306, null} ; [ DW_TAG_imported_module ]
!5306 = metadata !{i32 786443, metadata !1521, metadata !1523, i32 57, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!5307 = metadata !{i32 64, i32 0, metadata !5308, null}
!5308 = metadata !{i32 786443, metadata !1521, metadata !1523, i32 64, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!5309 = metadata !{i32 65, i32 0, metadata !5308, null}
!5310 = metadata !{i32 67, i32 0, metadata !1523, null}
!5311 = metadata !{i32 71, i32 0, metadata !5312, null}
!5312 = metadata !{i32 786443, metadata !1521, metadata !1523, i32 71, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!5313 = metadata !{i32 73, i32 0, metadata !5312, null}
!5314 = metadata !{i32 85, i32 0, metadata !5315, null}
!5315 = metadata !{i32 786443, metadata !1521, metadata !1523, i32 76, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!5316 = metadata !{i32 97, i32 0, metadata !5317, null}
!5317 = metadata !{i32 786443, metadata !1521, metadata !1523, i32 97, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!5318 = metadata !{i32 98, i32 0, metadata !5317, null}
!5319 = metadata !{i32 101, i32 0, metadata !5320, null}
!5320 = metadata !{i32 786443, metadata !1521, metadata !5317, i32 100, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!5321 = metadata !{i32 102, i32 0, metadata !5322, null}
!5322 = metadata !{i32 786443, metadata !1521, metadata !5320, i32 102, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!5323 = metadata !{i32 103, i32 0, metadata !5322, null}
!5324 = metadata !{i32 106, i32 0, metadata !5325, null}
!5325 = metadata !{i32 786443, metadata !1521, metadata !1523, i32 106, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!5326 = metadata !{i32 107, i32 0, metadata !5325, null}
!5327 = metadata !{i32 109, i32 0, metadata !1523, null}
!5328 = metadata !{i32 110, i32 0, metadata !1523, null}
!5329 = metadata !{i32 33, i32 0, metadata !1553, null}
!5330 = metadata !{i32 34, i32 0, metadata !5331, null}
!5331 = metadata !{i32 786443, metadata !1551, metadata !1553, i32 34, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xstrndup.c]
!5332 = metadata !{i32 35, i32 0, metadata !5331, null}
!5333 = metadata !{i32 36, i32 0, metadata !1553, null}
!5334 = metadata !{i32 56, i32 0, metadata !1561, null}
!5335 = metadata !{i32 57, i32 0, metadata !1561, null}
!5336 = metadata !{i32 58, i32 0, metadata !1561, null} ; [ DW_TAG_imported_module ]
!5337 = metadata !{i32 68, i32 0, metadata !5338, null}
!5338 = metadata !{i32 786443, metadata !1559, metadata !1561, i32 68, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/close-stream.c]
!5339 = metadata !{i32 70, i32 0, metadata !5340, null}
!5340 = metadata !{i32 786443, metadata !1559, metadata !5341, i32 70, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/close-stream.c]
!5341 = metadata !{i32 786443, metadata !1559, metadata !5338, i32 69, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/close-stream.c]
!5342 = metadata !{i32 71, i32 0, metadata !5340, null}
!5343 = metadata !{i32 72, i32 0, metadata !5341, null}
!5344 = metadata !{i32 75, i32 0, metadata !1561, null}
!5345 = metadata !{i32 76, i32 0, metadata !1561, null}
!5346 = metadata !{i32 47, i32 0, metadata !5347, null}
!5347 = metadata !{i32 786443, metadata !1606, metadata !1608, i32 47, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/fd-safer.c]
!5348 = metadata !{i32 49, i32 0, metadata !5349, null}
!5349 = metadata !{i32 786443, metadata !1606, metadata !5347, i32 48, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/fd-safer.c]
!5350 = metadata !{i32 50, i32 0, metadata !5349, null}
!5351 = metadata !{i32 51, i32 0, metadata !5349, null}
!5352 = metadata !{i32 52, i32 0, metadata !5349, null}
!5353 = metadata !{i32 53, i32 0, metadata !5349, null}
!5354 = metadata !{i32 54, i32 0, metadata !5349, null}
!5355 = metadata !{i32 56, i32 0, metadata !1608, null}
!5356 = metadata !{i32 39, i32 0, metadata !1615, null}
!5357 = metadata !{i32 13, i32 0, metadata !5358, null}
!5358 = metadata !{i32 786443, metadata !1618, metadata !1620, i32 13, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_div_zero_check.c]
!5359 = metadata !{i32 14, i32 0, metadata !5358, null}
!5360 = metadata !{i32 15, i32 0, metadata !1620, null}
!5361 = metadata !{i32 15, i32 0, metadata !1630, null}
!5362 = metadata !{i32 16, i32 0, metadata !1630, null}
!5363 = metadata !{metadata !5364, metadata !5364, i64 0}
!5364 = metadata !{metadata !"int", metadata !5365, i64 0}
!5365 = metadata !{metadata !"omnipotent char", metadata !5366, i64 0}
!5366 = metadata !{metadata !"Simple C/C++ TBAA"}
!5367 = metadata !{i32 25, i32 0, metadata !5368, null}
!5368 = metadata !{i32 786443, metadata !1638, metadata !1640, i32 25, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c]
!5369 = metadata !{i32 26, i32 0, metadata !5370, null}
!5370 = metadata !{i32 786443, metadata !1638, metadata !5368, i32 25, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c]
!5371 = metadata !{metadata !5372, metadata !5372, i64 0}
!5372 = metadata !{metadata !"any pointer", metadata !5365, i64 0}
!5373 = metadata !{i32 15, i32 0, metadata !1655, metadata !5369}
!5374 = metadata !{metadata !5365, metadata !5365, i64 0}
!5375 = metadata !{i32 27, i32 0, metadata !5370, null}
!5376 = metadata !{i32 28, i32 0, metadata !5370, null}
!5377 = metadata !{i32 29, i32 0, metadata !5378, null}
!5378 = metadata !{i32 786443, metadata !1638, metadata !5370, i32 29, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c]
!5379 = metadata !{i32 33, i32 0, metadata !5380, null}
!5380 = metadata !{i32 786443, metadata !1638, metadata !5378, i32 29, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c]
!5381 = metadata !{i32 21, i32 0, metadata !1650, metadata !5379}
!5382 = metadata !{i32 35, i32 0, metadata !5370, null}
!5383 = metadata !{i32 37, i32 0, metadata !1640, null}
!5384 = metadata !{i32 21, i32 0, metadata !5385, null}
!5385 = metadata !{i32 786443, metadata !1662, metadata !1664, i32 21, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_overshift_check.c]
!5386 = metadata !{i32 27, i32 0, metadata !5387, null}
!5387 = metadata !{i32 786443, metadata !1662, metadata !5385, i32 21, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_overshift_check.c]
!5388 = metadata !{i32 29, i32 0, metadata !1664, null}
!5389 = metadata !{i32 16, i32 0, metadata !5390, null}
!5390 = metadata !{i32 786443, metadata !1673, metadata !1675, i32 16, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!5391 = metadata !{i32 17, i32 0, metadata !5390, null}
!5392 = metadata !{i32 19, i32 0, metadata !5393, null}
!5393 = metadata !{i32 786443, metadata !1673, metadata !1675, i32 19, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!5394 = metadata !{i32 22, i32 0, metadata !5395, null}
!5395 = metadata !{i32 786443, metadata !1673, metadata !5393, i32 21, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!5396 = metadata !{i32 25, i32 0, metadata !5397, null}
!5397 = metadata !{i32 786443, metadata !1673, metadata !5395, i32 25, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!5398 = metadata !{i32 26, i32 0, metadata !5399, null}
!5399 = metadata !{i32 786443, metadata !1673, metadata !5397, i32 25, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!5400 = metadata !{i32 27, i32 0, metadata !5399, null}
!5401 = metadata !{i32 28, i32 0, metadata !5402, null}
!5402 = metadata !{i32 786443, metadata !1673, metadata !5397, i32 27, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!5403 = metadata !{i32 29, i32 0, metadata !5402, null}
!5404 = metadata !{i32 32, i32 0, metadata !5395, null}
!5405 = metadata !{i32 34, i32 0, metadata !1675, null}
!5406 = metadata !{i32 16, i32 0, metadata !1687, null}
!5407 = metadata !{i32 17, i32 0, metadata !1687, null}
!5408 = metadata !{metadata !5408, metadata !5409, metadata !5410}
!5409 = metadata !{metadata !"llvm.vectorizer.width", i32 1}
!5410 = metadata !{metadata !"llvm.vectorizer.unroll", i32 1}
!5411 = metadata !{metadata !5411, metadata !5409, metadata !5410}
!5412 = metadata !{i32 18, i32 0, metadata !1687, null}
!5413 = metadata !{i32 16, i32 0, metadata !5414, null}
!5414 = metadata !{i32 786443, metadata !1699, metadata !1701, i32 16, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memmove.c]
!5415 = metadata !{i32 19, i32 0, metadata !5416, null}
!5416 = metadata !{i32 786443, metadata !1699, metadata !1701, i32 19, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memmove.c]
!5417 = metadata !{i32 20, i32 0, metadata !5418, null}
!5418 = metadata !{i32 786443, metadata !1699, metadata !5416, i32 19, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memmove.c]
!5419 = metadata !{metadata !5419, metadata !5409, metadata !5410}
!5420 = metadata !{metadata !5420, metadata !5409, metadata !5410}
!5421 = metadata !{i32 22, i32 0, metadata !5422, null}
!5422 = metadata !{i32 786443, metadata !1699, metadata !5416, i32 21, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memmove.c]
!5423 = metadata !{i32 24, i32 0, metadata !5422, null}
!5424 = metadata !{i32 23, i32 0, metadata !5422, null}
!5425 = metadata !{metadata !5425, metadata !5409, metadata !5410}
!5426 = metadata !{metadata !5426, metadata !5409, metadata !5410}
!5427 = metadata !{i32 28, i32 0, metadata !1701, null}
!5428 = metadata !{i32 15, i32 0, metadata !1715, null}
!5429 = metadata !{i32 16, i32 0, metadata !1715, null}
!5430 = metadata !{metadata !5430, metadata !5409, metadata !5410}
!5431 = metadata !{metadata !5431, metadata !5409, metadata !5410}
!5432 = metadata !{i32 17, i32 0, metadata !1715, null}
!5433 = metadata !{i32 13, i32 0, metadata !1729, null}
!5434 = metadata !{i32 14, i32 0, metadata !1729, null}
!5435 = metadata !{i32 15, i32 0, metadata !1729, null}
