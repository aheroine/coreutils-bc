array argno0[4] : w32 -> w8 = symbolic
array argno1[496] : w32 -> w8 = symbolic
array argno2[4] : w32 -> w8 = symbolic
array argno4[32] : w32 -> w8 = symbolic
array const_arr2[768] : w32 -> w
array macke_sizeof_argno1[4] : w32 -> w8 = symbolic
array macke_sizeof_argno2[4] : w32 -> w8 = symbolic
array macke_sizeof_argno3[4] : w32 -> w8 = symbolic
array macke_sizeof_argno4[4] : w32 -> w8 = symbolic
array macke_sizeof_argno5[4] : w32 -> w8 = symbolic
array macke_sym_switch_quote[4] : w32 -> w8 = symbolic
array model_version[4] : w32 -> w8 = symbolic
(query [(Eq 1
             (ReadLSB w32 0 model_version))
         (Sle 1
              N0:(ReadLSB w32 0 macke_sizeof_argno1))
         (Slt N0 1025)
         (Eq false (Eq 4 N0))
         (Eq false (Eq 16 N0))
         (Eq false (Eq 128 N0))
         (Eq false (Eq 2 N0))
         (Eq 4
             (ReadLSB w32 0 macke_sizeof_argno2))
         (Sle 1
              N1:(ReadLSB w32 0 macke_sizeof_argno3))
         (Slt N1 1025)
         (Eq false (Eq 4 N1))
         (Eq false (Eq 16 N1))
         (Eq false (Eq 128 N1))
         (Eq false (Eq 2 N1))
         (Sle 1
              N2:(ReadLSB w32 0 macke_sizeof_argno4))
         (Slt N2 1025)
         (Eq false (Eq 4 N2))
         (Eq false (Eq 16 N2))
         (Eq false (Eq 128 N2))
         (Eq false (Eq 2 N2))
         (Sle 1
              N3:(ReadLSB w32 0 macke_sizeof_argno5))
         (Slt N3 1025)
         (Eq false (Eq 4 N3))
         (Eq false (Eq 16 N3))
         (Eq false (Eq 128 N3))
         (Eq false (Eq 2 N3))
         (Eq false
             (Eq 4294967196
                 N4:(ReadLSB w32 0 argno0)))
         (Eq false (Ult N4 32))
         (Eq 0
             (And w8 (Read w8 0 argno4) 1))
         (Eq false
             (Eq 0 N5:(Read w8 0 argno2)))
         (Eq 0 (Read w8 2 argno2))
         (Eq 0
             (And w64 (Sub w64 (ReadLSB w64 24 argno1)
                               (ReadLSB w64 16 argno1))
                      4294967295))
         (Eq false
             (Eq 1
                 N6:(ReadLSB w32 0 macke_sym_switch_quote)))
         (Eq false (Eq 4 N6))
         (Eq false (Eq 3 N6))
         (Eq false (Eq 2 N6))
         (Eq false (Eq 39 N5))
         (Eq false (Eq 80 N5))
         (Eq false (Eq 57 N5))
         (Eq false (Eq 38 N5))
         (Eq false (Eq 76 N5))
         (Eq false (Eq 113 N5))
         (Eq false (Eq 108 N5))
         (Eq false (Eq 83 N5))
         (Eq false (Eq 49 N5))
         (Eq false (Eq 115 N5))
         (Eq false (Eq 117 N5))
         (Eq false (Eq 74 N5))
         (Eq false (Eq 66 N5))
         (Eq false (Eq 79 N5))
         (Eq false (Eq 119 N5))
         (Eq false (Eq 54 N5))
         (Eq false (Eq 120 N5))
         (Eq false (Eq 124 N5))
         (Eq false (Eq 99 N5))
         (Eq false (Eq 63 N5))
         (Eq false (Eq 116 N5))
         (Eq false (Eq 53 N5))
         (Eq false (Eq 33 N5))
         (Eq false (Eq 91 N5))
         (Eq false (Eq 43 N5))
         (Eq false (Eq 101 N5))
         (Eq false (Eq 70 N5))
         (Eq false (Eq 125 N5))
         (Eq false (Eq 110 N5))
         (Eq false (Eq 44 N5))
         (Eq false (Eq 42 N5))
         (Eq false (Eq 9 N5))
         (Eq false (Eq 89 N5))
         (Eq false (Eq 87 N5))
         (Eq false (Eq 59 N5))
         (Eq false (Eq 61 N5))
         (Eq false (Eq 11 N5))
         (Eq false (Eq 77 N5))
         (Eq false (Eq 90 N5))
         (Eq false (Eq 78 N5))
         (Eq false (Eq 50 N5))
         (Eq false (Eq 103 N5))
         (Eq false (Eq 45 N5))
         (Eq false (Eq 84 N5))
         (Eq false (Eq 47 N5))
         (Eq false (Eq 52 N5))
         (Eq false (Eq 92 N5))
         (Eq false (Eq 107 N5))
         (Eq false (Eq 60 N5))
         (Eq false (Eq 41 N5))
         (Eq false (Eq 85 N5))
         (Eq false (Eq 98 N5))
         (Eq false (Eq 67 N5))
         (Eq false (Eq 35 N5))
         (Eq false (Eq 82 N5))
         (Eq false (Eq 12 N5))
         (Eq false (Eq 105 N5))
         (Eq false (Eq 40 N5))
         (Eq false (Eq 94 N5))
         (Eq false (Eq 122 N5))
         (Eq false (Eq 109 N5))
         (Eq false (Eq 100 N5))
         (Eq false (Eq 111 N5))
         (Eq false (Eq 112 N5))
         (Eq false (Eq 121 N5))
         (Eq false (Eq 102 N5))
         (Eq false (Eq 104 N5))
         (Eq false (Eq 51 N5))
         (Eq false (Eq 55 N5))
         (Eq false (Eq 93 N5))
         (Eq false (Eq 118 N5))
         (Eq false (Eq 34 N5))
         (Eq false (Eq 114 N5))
         (Eq false (Eq 10 N5))
         (Eq false (Eq 88 N5))
         (Eq false (Eq 106 N5))
         (Eq false (Eq 48 N5))
         (Eq false (Eq 96 N5))
         (Eq false (Eq 86 N5))
         (Eq false (Eq 65 N5))
         (Eq false (Eq 56 N5))
         (Eq false (Eq 72 N5))
         (Eq false (Eq 123 N5))
         (Eq false (Eq 81 N5))
         (Eq false (Eq 75 N5))
         (Eq false (Eq 73 N5))
         (Eq false (Eq 37 N5))
         (Eq false (Eq 58 N5))
         (Eq false (Eq 69 N5))
         (Eq false (Eq 36 N5))
         (Eq false (Eq 46 N5))
         (Eq false (Eq 95 N5))
         (Eq false (Eq 13 N5))
         (Eq false (Eq 62 N5))
         (Eq false (Eq 71 N5))
         (Eq false (Eq 97 N5))
         (Eq false (Eq 8 N5))
         (Eq false (Eq 126 N5))
         (Eq false (Eq 32 N5))
         (Eq false (Eq 7 N5))
         (Eq false (Eq 68 N5))
         (Eq 0
             (And w16 (ReadLSB w16 N7:(Extract w32 0 (Add w64 256
                                                              (Mul w64 2 (ZExt w64 N5)))) const_arr2)
                      16384))
         (Eq 39 (Read w8 1 argno2))]
        false)
