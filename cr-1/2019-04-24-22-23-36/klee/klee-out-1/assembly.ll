; ModuleID = '/home/jl/testspace/coreutils-bc/cr-1/2019-04-24-22-23-36/bitcode/symmains.bc_usage_ChangeEntry.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.dev_ino = type { i64, i64 }
%struct.quoting_options = type { i32, [8 x i32] }
%struct.slotvec = type { i64, i8* }
%struct.rm_options = type { i8, i32, i8, i8, %struct.dev_ino*, i8, i8, i8 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.dirstack_state = type { %struct.obstack, %struct.obstack, %struct.obstack, %struct.cycle_check_state, [1 x %struct.__jmp_buf_tag] }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, %union.anon, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%union.anon = type { i64 }
%struct.cycle_check_state = type { %struct.dev_ino, i64, i32 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.AD_ent = type { %struct.hash_table*, i32, %struct.dev_ino }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.__mbstate_t = type { i32, %union.anon.23 }
%union.anon.23 = type { i32 }

@stderr = external global %struct._IO_FILE*
@.str = private unnamed_addr constant [39 x i8] c"Try `%s --help' for more information.\0A\00", align 1
@program_name = common global i8* null, align 8
@.str1 = private unnamed_addr constant [31 x i8] c"Usage: %s [OPTION]... FILE...\0A\00", align 1
@.str2 = private unnamed_addr constant [146 x i8] c"Remove (unlink) the FILE(s).\0A\0A  -f, --force           ignore nonexistent files, never prompt\0A  -i                    prompt before every removal\0A\00", align 1
@stdout = external global %struct._IO_FILE*
@.str3 = private unnamed_addr constant [378 x i8] c"  -I                    prompt once before removing more than three files, or\0A                          when removing recursively.  Less intrusive than -i,\0A                          while still givi
@.str4 = private unnamed_addr constant [224 x i8] c"      --one-file-system  when removing a hierarchy recursively, skip any\0A                          directory that is on a file system different from\0A                          that of the correspondi
@.str5 = private unnamed_addr constant [231 x i8] c"      --no-preserve-root  do not treat `/' specially\0A      --preserve-root   do not remove `/' (default)\0A  -r, -R, --recursive   remove directories and their contents recursively\0A  -v, --verbose  
@.str6 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str7 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str8 = private unnamed_addr constant [155 x i8] c"\0ABy default, rm does not remove directories.  Use the --recursive (-r or -R)\0Aoption to remove each listed directory, too, along with all of its contents.\0A\00", align 1
@.str9 = private unnamed_addr constant [122 x i8] c"\0ATo remove a file whose name starts with a `-', for example `-foo',\0Ause one of these commands:\0A  %s -- -foo\0A\0A  %s ./-foo\0A\00", align 1
@.str10 = private unnamed_addr constant [198 x i8] c"\0ANote that if you use rm to remove a file, it is usually possible to recover\0Athe contents of that file.  If you want more assurance that the contents are\0Atruly unrecoverable, consider using shred
@.str11 = private unnamed_addr constant [23 x i8] c"\0AReport bugs to <%s>.\0A\00", align 1
@.str12 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str14 = private unnamed_addr constant [8 x i8] c"dfirvIR\00", align 1
@optarg = external global i8*
@.str15 = private unnamed_addr constant [14 x i8] c"--interactive\00", align 1
@interactive_args = internal constant [7 x i8*] [i8* getelementptr inbounds ([6 x i8]* @.str30, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str31, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str32, i32 0, i32 0), i8* getelementptr i
@interactive_types = internal constant [6 x i32] [i32 0, i32 0, i32 0, i32 1, i32 2, i32 2], align 16
@.str16 = private unnamed_addr constant [3 x i8] c"rm\00", align 1
@.str17 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str18 = private unnamed_addr constant [10 x i8] c"6.7-dirty\00", align 1
@.str19 = private unnamed_addr constant [11 x i8] c"Paul Rubin\00", align 1
@.str20 = private unnamed_addr constant [34 x i8] c"David MacKenzie, Richard Stallman\00", align 1
@.str21 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@optind = external global i32
@.str22 = private unnamed_addr constant [16 x i8] c"missing operand\00", align 1
@main.dev_ino_buf = internal global %struct.dev_ino zeroinitializer, align 8
@.str23 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 1
@.str24 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str25 = private unnamed_addr constant [39 x i8] c"%s: remove all arguments recursively? \00", align 1
@.str26 = private unnamed_addr constant [27 x i8] c"%s: remove all arguments? \00", align 1
@.str27 = private unnamed_addr constant [76 x i8] c"((status) == RM_OK || (status) == RM_USER_DECLINED || (status) == RM_ERROR)\00", align 1
@.str28 = private unnamed_addr constant [5 x i8] c"rm.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str29 = private unnamed_addr constant [38 x i8] c"Try `%s ./%s' to remove the file %s.\0A\00", align 1
@.str30 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str31 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str32 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str33 = private unnamed_addr constant [5 x i8] c"once\00", align 1
@.str34 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str35 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str36 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str37 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str38 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str39 = private unnamed_addr constant [16 x i8] c"one-file-system\00", align 1
@.str40 = private unnamed_addr constant [17 x i8] c"no-preserve-root\00", align 1
@.str41 = private unnamed_addr constant [14 x i8] c"preserve-root\00", align 1
@.str42 = private unnamed_addr constant [19 x i8] c"-presume-input-tty\00", align 1
@.str43 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@.str44 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str45 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str46 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@long_opts = internal constant <{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32
@after_divergence = global i32 0, align 4
@.str47 = private unnamed_addr constant [21 x i8] c"KLEE_DIVERGENCE_FILE\00", align 1
@klee_div_file_env = global i8* getelementptr inbounds ([21 x i8]* @.str47, i32 0, i32 0), align 8
@.str148 = private unnamed_addr constant [21 x i8] c"EKLEEPSE_MARKER_FILE\00", align 1
@klee_div_marker_file_env = global i8* getelementptr inbounds ([21 x i8]* @.str148, i32 0, i32 0), align 8
@.str249 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str350 = private unnamed_addr constant [3 x i8] c"1\0A\00", align 1
@.str451 = private unnamed_addr constant [26 x i8] c"fopen failed for file %s\0A\00", align 1
@.str552 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str653 = private unnamed_addr constant [26 x i8] c"getenv failed for key %s\0A\00", align 1
@.str754 = private unnamed_addr constant [32 x i8] c"cannot remove relative-named %s\00", align 1
@.str855 = private unnamed_addr constant [61 x i8] c"((s) == RM_OK || (s) == RM_USER_DECLINED || (s) == RM_ERROR)\00", align 1
@.str956 = private unnamed_addr constant [9 x i8] c"remove.c\00", align 1
@__PRETTY_FUNCTION__.rm = private unnamed_addr constant [74 x i8] c"enum RM_status rm(size_t, const char *const *, const struct rm_options *)\00", align 1
@.str1057 = private unnamed_addr constant [41 x i8] c"cannot restore current working directory\00", align 1
@.str1158 = private unnamed_addr constant [27 x i8] c"cannot remove directory %s\00", align 1
@.str1259 = private unnamed_addr constant [30 x i8] c"cannot remove %s directory %s\00", align 1
@.str1360 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str1461 = private unnamed_addr constant [32 x i8] c"cannot remove root directory %s\00", align 1
@.str1562 = private unnamed_addr constant [25 x i8] c"0 < AD_stack_height (ds)\00", align 1
@__PRETTY_FUNCTION__.AD_stack_pop = private unnamed_addr constant [36 x i8] c"void AD_stack_pop(Dirstack_state *)\00", align 1
@.str1663 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str1764 = private unnamed_addr constant [45 x i8] c"it is dangerous to operate recursively on %s\00", align 1
@.str1865 = private unnamed_addr constant [58 x i8] c"it is dangerous to operate recursively on %s (same as %s)\00", align 1
@.str1966 = private unnamed_addr constant [49 x i8] c"use --no-preserve-root to override this failsafe\00", align 1
@.str2067 = private unnamed_addr constant [46 x i8] c"skipping %s, since it's on a different device\00", align 1
@.str2168 = private unnamed_addr constant [40 x i8] c"fd != -100 || AD_stack_height (ds) == 1\00", align 1
@__PRETTY_FUNCTION__.remove_dir = private unnamed_addr constant [112 x i8] c"enum RM_status remove_dir(int, Dirstack_state *, const char *, struct stat *, const struct rm_options *, int *)\00", align 1
@.str2269 = private unnamed_addr constant [23 x i8] c"removed directory: %s\0A\00", align 1
@.str2370 = private unnamed_addr constant [35 x i8] c"FATAL: cannot return to .. from %s\00", align 1
@.str2471 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str2572 = private unnamed_addr constant [29 x i8] c"failed to close directory %s\00", align 1
@.str2673 = private unnamed_addr constant [48 x i8] c"%s: descend into write-protected directory %s? \00", align 1
@.str2774 = private unnamed_addr constant [32 x i8] c"%s: descend into directory %s? \00", align 1
@.str2875 = private unnamed_addr constant [35 x i8] c"%s: remove write-protected %s %s? \00", align 1
@.str2976 = private unnamed_addr constant [19 x i8] c"%s: remove %s %s? \00", align 1
@.str3077 = private unnamed_addr constant [21 x i8] c"AD_stack_height (ds)\00", align 1
@__PRETTY_FUNCTION__.AD_pop_and_chdir = private unnamed_addr constant [55 x i8] c"char *AD_pop_and_chdir(DIR *, int *, Dirstack_state *)\00", align 1
@.str3178 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str3279 = private unnamed_addr constant [36 x i8] c"FATAL: failed to close directory %s\00", align 1
@.str3380 = private unnamed_addr constant [30 x i8] c"FATAL: cannot open .. from %s\00", align 1
@.str3481 = private unnamed_addr constant [53 x i8] c"FATAL: cannot ensure %s (returned to via ..) is safe\00", align 1
@.str3582 = private unnamed_addr constant [36 x i8] c"FATAL: directory %s changed dev/ino\00", align 1
@.str3683 = private unnamed_addr constant [14 x i8] c"n_lengths > 0\00", align 1
@__PRETTY_FUNCTION__.pop_dir = private unnamed_addr constant [31 x i8] c"void pop_dir(Dirstack_state *)\00", align 1
@.str3784 = private unnamed_addr constant [13 x i8] c"top_len >= 2\00", align 1
@.str3885 = private unnamed_addr constant [125 x i8] c"__extension__ ({ struct obstack const *__o = (&ds->dir_stack); (unsigned) (__o->next_free - __o->object_base); }) >= top_len\00", align 1
@.str3986 = private unnamed_addr constant [133 x i8] c"__extension__ ({ struct obstack const *__o = (&ds->len_stack); (unsigned) (__o->next_free - __o->object_base); }) >= sizeof (size_t)\00", align 1
@.str4087 = private unnamed_addr constant [25 x i8] c"1 < AD_stack_height (ds)\00", align 1
@__PRETTY_FUNCTION__.AD_mark_current_as_unremovable = private unnamed_addr constant [54 x i8] c"void AD_mark_current_as_unremovable(Dirstack_state *)\00", align 1
@.str4188 = private unnamed_addr constant [76 x i8] c"((status) == RM_OK || (status) == RM_USER_DECLINED || (status) == RM_ERROR)\00", align 1
@__PRETTY_FUNCTION__.remove_cwd_entries = private unnamed_addr constant [111 x i8] c"enum RM_status remove_cwd_entries(DIR **, Dirstack_state *, char **, struct stat *, const struct rm_options *)\00", align 1
@.str4289 = private unnamed_addr constant [20 x i8] c"*dirp != ((void*)0)\00", align 1
@.str4390 = private unnamed_addr constant [30 x i8] c"0 <= fcntl (dirfd (*dirp), 1)\00", align 1
@.str4491 = private unnamed_addr constant [186 x i8] c"WARNING: Circular directory structure.\0AThis almost certainly means that you have a corrupted file system.\0ANOTIFY YOUR SYSTEM MANAGER.\0AThe following directory is part of the cycle:\0A  %s\0A\00"
@.str4592 = private unnamed_addr constant [160 x i8] c"AD_stack_height (ds) == 1 + __extension__ ({ struct obstack const *__o = (&ds->len_stack); (unsigned) (__o->next_free - __o->object_base); }) / sizeof (size_t)\00", align 1
@__PRETTY_FUNCTION__.AD_push = private unnamed_addr constant [71 x i8] c"void AD_push(int, Dirstack_state *, const char *, const struct stat *)\00", align 1
@full_filename_.buf = internal global i8* null, align 8
@full_filename_.n_allocated = internal global i64 0, align 8
@full_filename_.static_buf = internal global [512 x i8] zeroinitializer, align 16
@.str4693 = private unnamed_addr constant [6 x i8] c"[...]\00", align 1
@.str4794 = private unnamed_addr constant [35 x i8] c"strlen (buf) + 1 == n_bytes_needed\00", align 1
@__PRETTY_FUNCTION__.full_filename_ = private unnamed_addr constant [59 x i8] c"char *full_filename_(const Dirstack_state *, const char *)\00", align 1
@.str48 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str49 = private unnamed_addr constant [66 x i8] c"!cache_stat_ok (st) || ((((st->st_mode)) & 0170000) == (0040000))\00", align 1
@__PRETTY_FUNCTION__.remove_entry = private unnamed_addr constant [136 x i8] c"enum RM_status remove_entry(int, const Dirstack_state *, const char *, struct stat *, const struct rm_options *, const struct dirent *)\00", align 1
@.str101 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str1102 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str2103 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str3104 = private unnamed_addr constant [205 x i8] c"\0AThis is free software.  You may redistribute copies of it under the terms of\0Athe GNU General Public License <http://www.gnu.org/licenses/gpl.html>.\0AThere is NO WARRANTY, to the extent permitte
@.str4105 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str5106 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str6107 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str7108 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str8109 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str9110 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str10111 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str11112 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str12113 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str13114 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16
@.str119 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str1120 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@argmatch_die = global void ()* @__argmatch_die, align 8
@.str125 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str1126 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str2127 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str3128 = private unnamed_addr constant [10 x i8] c"\0A  - `%s'\00", align 1
@.str4129 = private unnamed_addr constant [7 x i8] c", `%s'\00", align 1
@file_name = internal global i8* null, align 8
@.str134 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str1135 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str2136 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str139 = private unnamed_addr constant [24 x i8] c"state->magic == 9827862\00", align 1
@.str1140 = private unnamed_addr constant [14 x i8] c"cycle-check.c\00", align 1
@__PRETTY_FUNCTION__.cycle_check = private unnamed_addr constant [67 x i8] c"_Bool cycle_check(struct cycle_check_state *, const struct stat *)\00", align 1
@exit_failure = global i32 1, align 4
@.str147 = private unnamed_addr constant [19 x i8] c"regular empty file\00", align 1
@.str1148 = private unnamed_addr constant [13 x i8] c"regular file\00", align 1
@.str2149 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str3150 = private unnamed_addr constant [19 x i8] c"block special file\00", align 1
@.str4151 = private unnamed_addr constant [23 x i8] c"character special file\00", align 1
@.str5152 = private unnamed_addr constant [5 x i8] c"fifo\00", align 1
@.str6153 = private unnamed_addr constant [14 x i8] c"symbolic link\00", align 1
@.str7154 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str8155 = private unnamed_addr constant [14 x i8] c"message queue\00", align 1
@.str9156 = private unnamed_addr constant [10 x i8] c"semaphore\00", align 1
@.str10157 = private unnamed_addr constant [21 x i8] c"shared memory object\00", align 1
@.str11158 = private unnamed_addr constant [11 x i8] c"weird file\00", align 1
@.str161 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str1162 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str2163 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str3164 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant { float, float, float, float, i8, [3 x i8] } { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0, [3 x i8] undef }, align 4
@.str177 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str1178 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str2179 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str3180 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str4181 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str5182 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str6183 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_args = constant [8 x i8*] [i8* getelementptr inbounds ([8 x i8]* @.str177, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str1178, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str2179, i32 0, i32 0), i8* getelementptr in
@quoting_style_vals = constant [7 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6], align 16
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 4
@slotvec = internal global %struct.slotvec* @slotvec0, align 8
@nslots = internal global i32 1, align 4
@slot0 = internal global [256 x i8] zeroinitializer, align 16
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8]* @slot0, i32 0, i32 0) }, align 8
@.str7184 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str8185 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str9186 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str191 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@0 = private unnamed_addr constant [7 x i8] c"argno0\00"
@1 = private unnamed_addr constant [7 x i8] c"argno0\00"
@2 = private unnamed_addr constant [7 x i8] c"argno1\00"
@3 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@4 = private unnamed_addr constant [7 x i8] c"argno0\00"
@5 = private unnamed_addr constant [7 x i8] c"argno1\00"
@6 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@7 = private unnamed_addr constant [7 x i8] c"argno0\00"
@8 = private unnamed_addr constant [7 x i8] c"argno1\00"
@9 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@10 = private unnamed_addr constant [7 x i8] c"argno0\00"
@11 = private unnamed_addr constant [7 x i8] c"argno1\00"
@12 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@13 = private unnamed_addr constant [7 x i8] c"argno0\00"
@14 = private unnamed_addr constant [7 x i8] c"argno1\00"
@15 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@16 = private unnamed_addr constant [7 x i8] c"argno2\00"
@17 = private unnamed_addr constant [7 x i8] c"argno3\00"
@18 = private unnamed_addr constant [7 x i8] c"argno4\00"
@19 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@20 = private unnamed_addr constant [7 x i8] c"argno5\00"
@21 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@22 = private unnamed_addr constant [7 x i8] c"argno0\00"
@23 = private unnamed_addr constant [7 x i8] c"argno1\00"
@24 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@25 = private unnamed_addr constant [7 x i8] c"argno2\00"
@26 = private unnamed_addr constant [7 x i8] c"argno3\00"
@27 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@28 = private unnamed_addr constant [7 x i8] c"argno4\00"
@29 = private unnamed_addr constant [7 x i8] c"argno0\00"
@30 = private unnamed_addr constant [7 x i8] c"argno0\00"
@31 = private unnamed_addr constant [7 x i8] c"argno0\00"
@32 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@33 = private unnamed_addr constant [7 x i8] c"argno1\00"
@34 = private unnamed_addr constant [7 x i8] c"argno2\00"
@35 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@36 = private unnamed_addr constant [7 x i8] c"argno3\00"
@37 = private unnamed_addr constant [7 x i8] c"argno0\00"
@38 = private unnamed_addr constant [7 x i8] c"argno1\00"
@39 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@40 = private unnamed_addr constant [7 x i8] c"argno2\00"
@41 = private unnamed_addr constant [7 x i8] c"argno0\00"
@42 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@43 = private unnamed_addr constant [7 x i8] c"argno1\00"
@44 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@45 = private unnamed_addr constant [7 x i8] c"argno0\00"
@46 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@47 = private unnamed_addr constant [7 x i8] c"argno1\00"
@48 = private unnamed_addr constant [7 x i8] c"argno2\00"
@49 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@50 = private unnamed_addr constant [7 x i8] c"argno0\00"
@51 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@52 = private unnamed_addr constant [7 x i8] c"argno1\00"
@53 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@54 = private unnamed_addr constant [7 x i8] c"argno2\00"
@55 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@56 = private unnamed_addr constant [7 x i8] c"argno3\00"
@57 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@58 = private unnamed_addr constant [7 x i8] c"argno4\00"
@59 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@60 = private unnamed_addr constant [7 x i8] c"argno0\00"
@61 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@62 = private unnamed_addr constant [7 x i8] c"argno1\00"
@63 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@64 = private unnamed_addr constant [7 x i8] c"argno2\00"
@65 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@66 = private unnamed_addr constant [7 x i8] c"argno3\00"
@67 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@68 = private unnamed_addr constant [7 x i8] c"argno0\00"
@69 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@70 = private unnamed_addr constant [7 x i8] c"argno0\00"
@71 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@72 = private unnamed_addr constant [7 x i8] c"argno0\00"
@73 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@74 = private unnamed_addr constant [7 x i8] c"argno0\00"
@75 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@76 = private unnamed_addr constant [7 x i8] c"argno0\00"
@77 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@78 = private unnamed_addr constant [7 x i8] c"argno0\00"
@79 = private unnamed_addr constant [7 x i8] c"argno0\00"
@80 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@81 = private unnamed_addr constant [7 x i8] c"argno1\00"
@82 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@83 = private unnamed_addr constant [7 x i8] c"argno2\00"
@84 = private unnamed_addr constant [7 x i8] c"argno3\00"
@85 = private unnamed_addr constant [7 x i8] c"argno0\00"
@86 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@87 = private unnamed_addr constant [7 x i8] c"argno0\00"
@88 = private unnamed_addr constant [7 x i8] c"argno1\00"
@89 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@90 = private unnamed_addr constant [7 x i8] c"argno0\00"
@91 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@92 = private unnamed_addr constant [7 x i8] c"argno0\00"
@93 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@94 = private unnamed_addr constant [7 x i8] c"argno0\00"
@95 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@96 = private unnamed_addr constant [7 x i8] c"argno1\00"
@97 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@98 = private unnamed_addr constant [7 x i8] c"argno0\00"
@99 = private unnamed_addr constant [7 x i8] c"argno1\00"
@100 = private unnamed_addr constant [7 x i8] c"argno0\00"
@101 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@102 = private unnamed_addr constant [7 x i8] c"argno1\00"
@103 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@104 = private unnamed_addr constant [7 x i8] c"argno2\00"
@105 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@106 = private unnamed_addr constant [7 x i8] c"argno3\00"
@107 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@108 = private unnamed_addr constant [7 x i8] c"argno0\00"
@109 = private unnamed_addr constant [7 x i8] c"argno0\00"
@110 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@111 = private unnamed_addr constant [7 x i8] c"argno1\00"
@112 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@113 = private unnamed_addr constant [7 x i8] c"argno0\00"
@114 = private unnamed_addr constant [7 x i8] c"argno0\00"
@115 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@116 = private unnamed_addr constant [7 x i8] c"argno1\00"
@117 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@118 = private unnamed_addr constant [7 x i8] c"argno2\00"
@119 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@120 = private unnamed_addr constant [7 x i8] c"argno3\00"
@121 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@122 = private unnamed_addr constant [7 x i8] c"argno4\00"
@123 = private unnamed_addr constant [7 x i8] c"argno5\00"
@124 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno6\00"
@125 = private unnamed_addr constant [7 x i8] c"argno6\00"
@126 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@127 = private unnamed_addr constant [7 x i8] c"argno0\00"
@128 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@129 = private unnamed_addr constant [7 x i8] c"argno0\00"
@130 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@131 = private unnamed_addr constant [7 x i8] c"argno1\00"
@132 = private unnamed_addr constant [7 x i8] c"argno0\00"
@133 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@134 = private unnamed_addr constant [7 x i8] c"argno1\00"
@135 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@136 = private unnamed_addr constant [7 x i8] c"argno2\00"
@137 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@138 = private unnamed_addr constant [7 x i8] c"argno3\00"
@139 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@140 = private unnamed_addr constant [7 x i8] c"argno4\00"
@141 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@142 = private unnamed_addr constant [7 x i8] c"argno5\00"
@143 = private unnamed_addr constant [7 x i8] c"argno0\00"
@144 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@145 = private unnamed_addr constant [7 x i8] c"argno1\00"
@146 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@147 = private unnamed_addr constant [7 x i8] c"argno2\00"
@148 = private unnamed_addr constant [7 x i8] c"argno3\00"
@149 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@150 = private unnamed_addr constant [7 x i8] c"argno4\00"
@151 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@152 = private unnamed_addr constant [7 x i8] c"argno5\00"
@153 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@154 = private unnamed_addr constant [7 x i8] c"argno0\00"
@155 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@156 = private unnamed_addr constant [7 x i8] c"argno1\00"
@157 = private unnamed_addr constant [7 x i8] c"argno0\00"
@158 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@159 = private unnamed_addr constant [7 x i8] c"argno0\00"
@160 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@161 = private unnamed_addr constant [7 x i8] c"argno1\00"
@162 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@163 = private unnamed_addr constant [7 x i8] c"argno0\00"
@164 = private unnamed_addr constant [7 x i8] c"argno0\00"
@165 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@166 = private unnamed_addr constant [7 x i8] c"argno1\00"
@167 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@168 = private unnamed_addr constant [7 x i8] c"argno2\00"
@169 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@170 = private unnamed_addr constant [7 x i8] c"argno3\00"
@171 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@172 = private unnamed_addr constant [7 x i8] c"argno0\00"
@173 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@174 = private unnamed_addr constant [7 x i8] c"argno1\00"
@175 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@176 = private unnamed_addr constant [7 x i8] c"argno0\00"
@177 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@178 = private unnamed_addr constant [7 x i8] c"argno1\00"
@179 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@180 = private unnamed_addr constant [7 x i8] c"argno0\00"
@181 = private unnamed_addr constant [7 x i8] c"argno1\00"
@182 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@183 = private unnamed_addr constant [7 x i8] c"argno0\00"
@184 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@185 = private unnamed_addr constant [7 x i8] c"argno0\00"
@186 = private unnamed_addr constant [7 x i8] c"argno0\00"
@187 = private unnamed_addr constant [7 x i8] c"argno0\00"
@188 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@189 = private unnamed_addr constant [7 x i8] c"argno0\00"
@190 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@191 = private unnamed_addr constant [7 x i8] c"argno1\00"
@192 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@193 = private unnamed_addr constant [7 x i8] c"argno0\00"
@194 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@195 = private unnamed_addr constant [7 x i8] c"argno0\00"
@196 = private unnamed_addr constant [7 x i8] c"argno1\00"
@197 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@198 = private unnamed_addr constant [7 x i8] c"argno0\00"
@199 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@200 = private unnamed_addr constant [7 x i8] c"argno1\00"
@201 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@202 = private unnamed_addr constant [7 x i8] c"argno0\00"
@203 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@204 = private unnamed_addr constant [7 x i8] c"argno1\00"
@205 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@206 = private unnamed_addr constant [7 x i8] c"argno0\00"
@207 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@208 = private unnamed_addr constant [7 x i8] c"argno0\00"
@209 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@210 = private unnamed_addr constant [7 x i8] c"argno0\00"
@211 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@212 = private unnamed_addr constant [7 x i8] c"argno0\00"
@213 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@214 = private unnamed_addr constant [7 x i8] c"argno0\00"
@215 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@216 = private unnamed_addr constant [7 x i8] c"argno0\00"
@217 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@218 = private unnamed_addr constant [7 x i8] c"argno1\00"
@219 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@220 = private unnamed_addr constant [7 x i8] c"argno2\00"
@221 = private unnamed_addr constant [7 x i8] c"argno0\00"
@222 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@223 = private unnamed_addr constant [7 x i8] c"argno1\00"
@224 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@225 = private unnamed_addr constant [7 x i8] c"argno2\00"
@226 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@227 = private unnamed_addr constant [7 x i8] c"argno3\00"
@228 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno4\00"
@229 = private unnamed_addr constant [7 x i8] c"argno4\00"
@230 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno5\00"
@231 = private unnamed_addr constant [7 x i8] c"argno5\00"
@232 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@233 = private unnamed_addr constant [7 x i8] c"argno0\00"
@234 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@235 = private unnamed_addr constant [7 x i8] c"argno0\00"
@236 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@237 = private unnamed_addr constant [7 x i8] c"argno0\00"
@238 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@239 = private unnamed_addr constant [7 x i8] c"argno1\00"
@240 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@241 = private unnamed_addr constant [7 x i8] c"argno2\00"
@242 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno3\00"
@243 = private unnamed_addr constant [7 x i8] c"argno3\00"
@244 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@245 = private unnamed_addr constant [7 x i8] c"argno0\00"
@246 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@247 = private unnamed_addr constant [7 x i8] c"argno0\00"
@248 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@249 = private unnamed_addr constant [7 x i8] c"argno0\00"
@250 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@251 = private unnamed_addr constant [7 x i8] c"argno1\00"
@252 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@253 = private unnamed_addr constant [7 x i8] c"argno0\00"
@254 = private unnamed_addr constant [7 x i8] c"argno1\00"
@255 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@256 = private unnamed_addr constant [7 x i8] c"argno0\00"
@257 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@258 = private unnamed_addr constant [7 x i8] c"argno0\00"
@259 = private unnamed_addr constant [7 x i8] c"argno1\00"
@260 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@261 = private unnamed_addr constant [7 x i8] c"argno0\00"
@262 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@263 = private unnamed_addr constant [7 x i8] c"argno0\00"
@264 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@265 = private unnamed_addr constant [7 x i8] c"argno0\00"
@266 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@267 = private unnamed_addr constant [7 x i8] c"argno0\00"
@268 = private unnamed_addr constant [7 x i8] c"argno1\00"
@269 = private unnamed_addr constant [7 x i8] c"argno2\00"
@270 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@271 = private unnamed_addr constant [7 x i8] c"argno0\00"
@272 = private unnamed_addr constant [7 x i8] c"argno1\00"
@273 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@274 = private unnamed_addr constant [7 x i8] c"argno0\00"
@275 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@276 = private unnamed_addr constant [7 x i8] c"argno0\00"
@277 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@278 = private unnamed_addr constant [7 x i8] c"argno0\00"
@279 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@280 = private unnamed_addr constant [7 x i8] c"argno0\00"
@281 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@282 = private unnamed_addr constant [7 x i8] c"argno0\00"
@283 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@284 = private unnamed_addr constant [7 x i8] c"argno0\00"
@285 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@286 = private unnamed_addr constant [7 x i8] c"argno0\00"
@287 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@288 = private unnamed_addr constant [7 x i8] c"argno1\00"
@289 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@290 = private unnamed_addr constant [7 x i8] c"argno0\00"
@291 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@292 = private unnamed_addr constant [7 x i8] c"argno0\00"
@293 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@294 = private unnamed_addr constant [7 x i8] c"argno1\00"
@295 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@296 = private unnamed_addr constant [7 x i8] c"argno0\00"
@297 = private unnamed_addr constant [7 x i8] c"argno1\00"
@298 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@299 = private unnamed_addr constant [7 x i8] c"argno0\00"
@300 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@301 = private unnamed_addr constant [7 x i8] c"argno0\00"
@302 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@303 = private unnamed_addr constant [7 x i8] c"argno0\00"
@304 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@305 = private unnamed_addr constant [7 x i8] c"argno1\00"
@306 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@307 = private unnamed_addr constant [7 x i8] c"argno0\00"
@308 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@309 = private unnamed_addr constant [7 x i8] c"argno0\00"
@310 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@311 = private unnamed_addr constant [7 x i8] c"argno0\00"
@312 = private unnamed_addr constant [7 x i8] c"argno1\00"
@313 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@314 = private unnamed_addr constant [7 x i8] c"argno0\00"
@315 = private unnamed_addr constant [7 x i8] c"argno1\00"
@316 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@317 = private unnamed_addr constant [7 x i8] c"argno2\00"
@318 = private unnamed_addr constant [7 x i8] c"argno0\00"
@319 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@320 = private unnamed_addr constant [7 x i8] c"argno1\00"
@321 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@322 = private unnamed_addr constant [7 x i8] c"argno0\00"
@323 = private unnamed_addr constant [7 x i8] c"argno0\00"
@324 = private unnamed_addr constant [7 x i8] c"argno1\00"
@325 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno2\00"
@326 = private unnamed_addr constant [7 x i8] c"argno2\00"
@327 = private unnamed_addr constant [7 x i8] c"argno3\00"
@328 = private unnamed_addr constant [7 x i8] c"argno0\00"
@329 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@330 = private unnamed_addr constant [7 x i8] c"argno1\00"
@331 = private unnamed_addr constant [7 x i8] c"argno0\00"
@332 = private unnamed_addr constant [7 x i8] c"argno1\00"
@333 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@334 = private unnamed_addr constant [7 x i8] c"argno0\00"
@335 = private unnamed_addr constant [7 x i8] c"argno1\00"
@336 = private unnamed_addr constant [7 x i8] c"argno2\00"
@337 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@338 = private unnamed_addr constant [7 x i8] c"argno0\00"
@339 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@340 = private unnamed_addr constant [7 x i8] c"argno1\00"
@341 = private unnamed_addr constant [7 x i8] c"argno2\00"
@342 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno0\00"
@343 = private unnamed_addr constant [7 x i8] c"argno0\00"
@344 = private unnamed_addr constant [20 x i8] c"macke_sizeof_argno1\00"
@345 = private unnamed_addr constant [7 x i8] c"argno1\00"
@346 = private unnamed_addr constant [7 x i8] c"argno0\00"
@347 = private unnamed_addr constant [7 x i8] c"argno0\00"
@348 = private unnamed_addr constant [7 x i8] c"argno1\00"
@.str50 = private unnamed_addr constant [64 x i8] c"/home/jl/deploy/use/src/runtime/Intrinsic/klee_div_zero_check.c\00", align 1
@.str151 = private unnamed_addr constant [15 x i8] c"divide by zero\00", align 1
@.str252 = private unnamed_addr constant [8 x i8] c"div.err\00", align 1
@.str353 = private unnamed_addr constant [5 x i8] c"argv\00", align 1
@.str454 = private unnamed_addr constant [8 x i8] c"IGNORED\00", align 1
@.str1555 = private unnamed_addr constant [16 x i8] c"overshift error\00", align 1
@.str2656 = private unnamed_addr constant [14 x i8] c"overshift.err\00", align 1
@.str757 = private unnamed_addr constant [55 x i8] c"/home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c\00", align 1
@.str1858 = private unnamed_addr constant [14 x i8] c"invalid range\00", align 1
@.str2959 = private unnamed_addr constant [5 x i8] c"user\00", align 1

; Function Attrs: nounwind uwtable
define void @usage(i32 %status) #0 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  %0 = load i32* %status.addr, align 4, !dbg !1217
  %cmp = icmp ne i32 %0, 0, !dbg !1217
  br i1 %cmp, label %if.then, label %if.else, !dbg !1217

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !1219
  %2 = load i8** @program_name, align 8, !dbg !1219
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str, i32 0, i32 0), i8* %2), !dbg !1219
  br label %if.end, !dbg !1219

if.else:                                          ; preds = %entry
  %3 = load i8** @program_name, align 8, !dbg !1220
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str1, i32 0, i32 0), i8* %3), !dbg !1220
  %4 = load %struct._IO_FILE** @stdout, align 8, !dbg !1222
  %call2 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([146 x i8]* @.str2, i32 0, i32 0), %struct._IO_FILE* %4), !dbg !1222
  %5 = load %struct._IO_FILE** @stdout, align 8, !dbg !1223
  %call3 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([378 x i8]* @.str3, i32 0, i32 0), %struct._IO_FILE* %5), !dbg !1223
  %6 = load %struct._IO_FILE** @stdout, align 8, !dbg !1224
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([224 x i8]* @.str4, i32 0, i32 0), %struct._IO_FILE* %6), !dbg !1224
  %7 = load %struct._IO_FILE** @stdout, align 8, !dbg !1225
  %call5 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([231 x i8]* @.str5, i32 0, i32 0), %struct._IO_FILE* %7), !dbg !1225
  %8 = load %struct._IO_FILE** @stdout, align 8, !dbg !1226
  %call6 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([45 x i8]* @.str6, i32 0, i32 0), %struct._IO_FILE* %8), !dbg !1226
  %9 = load %struct._IO_FILE** @stdout, align 8, !dbg !1227
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([54 x i8]* @.str7, i32 0, i32 0), %struct._IO_FILE* %9), !dbg !1227
  %10 = load %struct._IO_FILE** @stdout, align 8, !dbg !1228
  %call8 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([155 x i8]* @.str8, i32 0, i32 0), %struct._IO_FILE* %10), !dbg !1228
  %11 = load i8** @program_name, align 8, !dbg !1229
  %12 = load i8** @program_name, align 8, !dbg !1229
  %call9 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([122 x i8]* @.str9, i32 0, i32 0), i8* %11, i8* %12), !dbg !1229
  %13 = load %struct._IO_FILE** @stdout, align 8, !dbg !1230
  %call10 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([198 x i8]* @.str10, i32 0, i32 0), %struct._IO_FILE* %13), !dbg !1230
  %call11 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str12, i32 0, i32 0)), !dbg !1231
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i32* %status.addr, align 4, !dbg !1232
  call void @exit(i32 %14) #17, !dbg !1232
  unreachable, !dbg !1232
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare i32 @printf(i8*, ...) #2

declare i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

; Function Attrs: nounwind uwtable
define i32 @__main_old(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %preserve_root = alloca i8, align 1
  %x = alloca %struct.rm_options, align 8
  %prompt_once = alloca i8, align 1
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %n_files = alloca i64, align 8
  %file = alloca i8**, align 8
  %status = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  store i8 1, i8* %preserve_root, align 1, !dbg !1233
  store i8 0, i8* %prompt_once, align 1, !dbg !1234
  %0 = load i8*** %argv.addr, align 8, !dbg !1235
  %arrayidx = getelementptr inbounds i8** %0, i64 0, !dbg !1235
  %1 = load i8** %arrayidx, align 8, !dbg !1235
  store i8* %1, i8** @program_name, align 8, !dbg !1235
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8]* @.str13, i32 0, i32 0)) #9, !dbg !1236
  %call1 = call i32 @atexit(void ()* @close_stdout) #9, !dbg !1237
  call void @rm_option_init(%struct.rm_options* %x), !dbg !1238
  br label %while.cond, !dbg !1239

while.cond:                                       ; preds = %sw.bb3, %sw.bb5, %sw.bb10, %sw.bb15, %sw.bb33, %sw.bb34, %sw.bb35, %sw.bb36, %sw.bb37, %sw.bb38, %sw.default, %while.body, %sw.bb28, %sw.bb23, %sw.bb19, %if.end, %entry
  %2 = load i32* %argc.addr, align 4, !dbg !1239
  %3 = load i8*** %argv.addr, align 8, !dbg !1239
  %call2 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([8 x i8]* @.str14, i32 0, i32 0), %struct.option* getelementptr inbounds ([12 x %struct.option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] 
  store i32 %call2, i32* %c, align 4, !dbg !1239
  %cmp = icmp ne i32 %call2, -1, !dbg !1239
  br i1 %cmp, label %while.body, label %while.end, !dbg !1239

while.body:                                       ; preds = %while.cond
  %4 = load i32* %c, align 4, !dbg !1240
  switch i32 %4, label %sw.default [
    i32 100, label %while.cond
    i32 102, label %sw.bb3
    i32 105, label %sw.bb5
    i32 73, label %sw.bb10
    i32 114, label %sw.bb15
    i32 82, label %sw.bb15
    i32 128, label %sw.bb16
    i32 129, label %sw.bb33
    i32 130, label %sw.bb34
    i32 131, label %sw.bb35
    i32 132, label %sw.bb36
    i32 118, label %sw.bb37
    i32 -130, label %sw.bb38
    i32 -131, label %sw.bb39
  ], !dbg !1240

sw.bb3:                                           ; preds = %while.body
  %call4 = call i64 @klee_change(i64 0, i64 5), !dbg !1242
  %conv = trunc i64 %call4 to i32, !dbg !1242
  %interactive = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 1, !dbg !1242
  store i32 %conv, i32* %interactive, align 4, !dbg !1242
  %ignore_missing_files = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 0, !dbg !1244
  store i8 1, i8* %ignore_missing_files, align 1, !dbg !1244
  store i8 0, i8* %prompt_once, align 1, !dbg !1245
  br label %while.cond, !dbg !1246

sw.bb5:                                           ; preds = %while.body
  %call6 = call i64 @klee_change(i64 1, i64 3), !dbg !1247
  %conv7 = trunc i64 %call6 to i32, !dbg !1247
  %interactive8 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 1, !dbg !1247
  store i32 %conv7, i32* %interactive8, align 4, !dbg !1247
  %ignore_missing_files9 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 0, !dbg !1248
  store i8 0, i8* %ignore_missing_files9, align 1, !dbg !1248
  store i8 0, i8* %prompt_once, align 1, !dbg !1249
  br label %while.cond, !dbg !1250

sw.bb10:                                          ; preds = %while.body
  %call11 = call i64 @klee_change(i64 0, i64 5), !dbg !1251
  %conv12 = trunc i64 %call11 to i32, !dbg !1251
  %interactive13 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 1, !dbg !1251
  store i32 %conv12, i32* %interactive13, align 4, !dbg !1251
  %ignore_missing_files14 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 0, !dbg !1252
  store i8 0, i8* %ignore_missing_files14, align 1, !dbg !1252
  store i8 1, i8* %prompt_once, align 1, !dbg !1253
  br label %while.cond, !dbg !1254

sw.bb15:                                          ; preds = %while.body, %while.body
  %recursive = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 3, !dbg !1255
  store i8 1, i8* %recursive, align 1, !dbg !1255
  br label %while.cond, !dbg !1256

sw.bb16:                                          ; preds = %while.body
  %5 = load i8** @optarg, align 8, !dbg !1257
  %tobool = icmp ne i8* %5, null, !dbg !1257
  br i1 %tobool, label %if.then, label %if.else, !dbg !1257

if.then:                                          ; preds = %sw.bb16
  %6 = load i8** @optarg, align 8, !dbg !1260
  %7 = load void ()** @argmatch_die, align 8, !dbg !1260
  %call17 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([14 x i8]* @.str15, i32 0, i32 0), i8* %6, i8** getelementptr inbounds ([7 x i8*]* @interactive_args, i32 0, i32 0), i8* bitcast ([6 x i32]* @interactive_types to i8*), i64 4, void ()
  %arrayidx18 = getelementptr inbounds [6 x i32]* @interactive_types, i32 0, i64 %call17, !dbg !1260
  %8 = load i32* %arrayidx18, align 4, !dbg !1260
  store i32 %8, i32* %i, align 4, !dbg !1260
  br label %if.end, !dbg !1260

if.else:                                          ; preds = %sw.bb16
  store i32 2, i32* %i, align 4, !dbg !1261
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32* %i, align 4, !dbg !1262
  switch i32 %9, label %while.cond [
    i32 0, label %sw.bb19
    i32 1, label %sw.bb23
    i32 2, label %sw.bb28
  ], !dbg !1262

sw.bb19:                                          ; preds = %if.end
  %call20 = call i64 @klee_change(i64 0, i64 5), !dbg !1263
  %conv21 = trunc i64 %call20 to i32, !dbg !1263
  %interactive22 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 1, !dbg !1263
  store i32 %conv21, i32* %interactive22, align 4, !dbg !1263
  store i8 0, i8* %prompt_once, align 1, !dbg !1265
  br label %while.cond, !dbg !1266

sw.bb23:                                          ; preds = %if.end
  %call24 = call i64 @klee_change(i64 0, i64 4), !dbg !1267
  %conv25 = trunc i64 %call24 to i32, !dbg !1267
  %interactive26 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 1, !dbg !1267
  store i32 %conv25, i32* %interactive26, align 4, !dbg !1267
  %ignore_missing_files27 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 0, !dbg !1268
  store i8 0, i8* %ignore_missing_files27, align 1, !dbg !1268
  store i8 1, i8* %prompt_once, align 1, !dbg !1269
  br label %while.cond, !dbg !1270

sw.bb28:                                          ; preds = %if.end
  %call29 = call i64 @klee_change(i64 1, i64 3), !dbg !1271
  %conv30 = trunc i64 %call29 to i32, !dbg !1271
  %interactive31 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 1, !dbg !1271
  store i32 %conv30, i32* %interactive31, align 4, !dbg !1271
  %ignore_missing_files32 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 0, !dbg !1272
  store i8 0, i8* %ignore_missing_files32, align 1, !dbg !1272
  store i8 0, i8* %prompt_once, align 1, !dbg !1273
  br label %while.cond, !dbg !1274

sw.bb33:                                          ; preds = %while.body
  %one_file_system = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 2, !dbg !1275
  store i8 1, i8* %one_file_system, align 1, !dbg !1275
  br label %while.cond, !dbg !1276

sw.bb34:                                          ; preds = %while.body
  store i8 0, i8* %preserve_root, align 1, !dbg !1277
  br label %while.cond, !dbg !1278

sw.bb35:                                          ; preds = %while.body
  store i8 1, i8* %preserve_root, align 1, !dbg !1279
  br label %while.cond, !dbg !1280

sw.bb36:                                          ; preds = %while.body
  %stdin_tty = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 5, !dbg !1281
  store i8 1, i8* %stdin_tty, align 1, !dbg !1281
  br label %while.cond, !dbg !1282

sw.bb37:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 6, !dbg !1283
  store i8 1, i8* %verbose, align 1, !dbg !1283
  br label %while.cond, !dbg !1284

sw.bb38:                                          ; preds = %while.body
  call void @usage(i32 0), !dbg !1285
  br label %while.cond, !dbg !1285

sw.bb39:                                          ; preds = %while.body
  %10 = load %struct._IO_FILE** @stdout, align 8, !dbg !1286
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...)* @version_etc(%struct._IO_FILE* %10, i8* getelementptr inbounds ([3 x i8]* @.str16, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str17, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @
  call void @exit(i32 0) #17, !dbg !1286
  unreachable, !dbg !1286

sw.default:                                       ; preds = %while.body
  %11 = load i32* %argc.addr, align 4, !dbg !1287
  %12 = load i8*** %argv.addr, align 8, !dbg !1287
  call void @diagnose_leading_hyphen(i32 %11, i8** %12), !dbg !1287
  call void @usage(i32 1), !dbg !1288
  br label %while.cond, !dbg !1289

while.end:                                        ; preds = %while.cond
  %13 = load i32* %argc.addr, align 4, !dbg !1290
  %14 = load i32* @optind, align 4, !dbg !1290
  %cmp41 = icmp sle i32 %13, %14, !dbg !1290
  br i1 %cmp41, label %if.then43, label %if.end49, !dbg !1290

if.then43:                                        ; preds = %while.end
  %ignore_missing_files44 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 0, !dbg !1292
  %15 = load i8* %ignore_missing_files44, align 1, !dbg !1292
  %tobool45 = trunc i8 %15 to i1, !dbg !1292
  br i1 %tobool45, label %if.then46, label %if.else47, !dbg !1292

if.then46:                                        ; preds = %if.then43
  call void @exit(i32 0) #17, !dbg !1295
  unreachable, !dbg !1295

if.else47:                                        ; preds = %if.then43
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 0, i8* getelementptr inbounds ([16 x i8]* @.str22, i32 0, i32 0)), !dbg !1296
  call void @usage(i32 1), !dbg !1298
  br label %if.end49, !dbg !1299

if.end49:                                         ; preds = %if.else47, %while.end
  %recursive50 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 3, !dbg !1300
  %16 = load i8* %recursive50, align 1, !dbg !1300
  %tobool51 = trunc i8 %16 to i1, !dbg !1300
  %conv52 = zext i1 %tobool51 to i32, !dbg !1300
  %17 = load i8* %preserve_root, align 1, !dbg !1300
  %tobool53 = trunc i8 %17 to i1, !dbg !1300
  %conv54 = zext i1 %tobool53 to i32, !dbg !1300
  %and = and i32 %conv52, %conv54, !dbg !1300
  %tobool55 = icmp ne i32 %and, 0, !dbg !1300
  br i1 %tobool55, label %if.then56, label %if.end65, !dbg !1300

if.then56:                                        ; preds = %if.end49
  %call57 = call %struct.dev_ino* @get_root_dev_ino(%struct.dev_ino* @main.dev_ino_buf), !dbg !1302
  %root_dev_ino = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 4, !dbg !1302
  store %struct.dev_ino* %call57, %struct.dev_ino** %root_dev_ino, align 8, !dbg !1302
  %root_dev_ino58 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 4, !dbg !1304
  %18 = load %struct.dev_ino** %root_dev_ino58, align 8, !dbg !1304
  %cmp59 = icmp eq %struct.dev_ino* %18, null, !dbg !1304
  br i1 %cmp59, label %if.then61, label %if.end65, !dbg !1304

if.then61:                                        ; preds = %if.then56
  %call62 = call i32* @__errno_location() #1, !dbg !1306
  %19 = load i32* %call62, align 4, !dbg !1306
  %call63 = call i8* @quote(i8* getelementptr inbounds ([2 x i8]* @.str24, i32 0, i32 0)), !dbg !1307
  call void (i32, i32, i8*, ...)* @error(i32 1, i32 %19, i8* getelementptr inbounds ([31 x i8]* @.str23, i32 0, i32 0), i8* %call63), !dbg !1306
  br label %if.end65, !dbg !1306

if.end65:                                         ; preds = %if.then56, %if.then61, %if.end49
  %20 = load i32* %argc.addr, align 4, !dbg !1308
  %21 = load i32* @optind, align 4, !dbg !1308
  %sub = sub nsw i32 %20, %21, !dbg !1308
  %conv66 = sext i32 %sub to i64, !dbg !1308
  store i64 %conv66, i64* %n_files, align 8, !dbg !1308
  %22 = load i8*** %argv.addr, align 8, !dbg !1309
  %23 = load i32* @optind, align 4, !dbg !1309
  %idx.ext = sext i32 %23 to i64, !dbg !1309
  %add.ptr = getelementptr inbounds i8** %22, i64 %idx.ext, !dbg !1309
  store i8** %add.ptr, i8*** %file, align 8, !dbg !1309
  %24 = load i8* %prompt_once, align 1, !dbg !1310
  %tobool67 = trunc i8 %24 to i1, !dbg !1310
  br i1 %tobool67, label %land.lhs.true, label %if.end82, !dbg !1310

land.lhs.true:                                    ; preds = %if.end65
  %recursive69 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 3, !dbg !1310
  %25 = load i8* %recursive69, align 1, !dbg !1310
  %tobool70 = trunc i8 %25 to i1, !dbg !1310
  %26 = load i64* %n_files, align 8, !dbg !1310
  %cmp72 = icmp ult i64 3, %26, !dbg !1310
  %or.cond = or i1 %tobool70, %cmp72, !dbg !1310
  br i1 %or.cond, label %if.then74, label %if.end82, !dbg !1310

if.then74:                                        ; preds = %land.lhs.true
  %27 = load %struct._IO_FILE** @stderr, align 8, !dbg !1312
  %recursive75 = getelementptr inbounds %struct.rm_options* %x, i32 0, i32 3, !dbg !1312
  %28 = load i8* %recursive75, align 1, !dbg !1312
  %tobool76 = trunc i8 %28 to i1, !dbg !1312
  %cond = select i1 %tobool76, i8* getelementptr inbounds ([39 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str26, i32 0, i32 0), !dbg !1312
  %29 = load i8** @program_name, align 8, !dbg !1312
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %27, i8* %cond, i8* %29), !dbg !1312
  %call79 = call zeroext i1 @yesno(), !dbg !1314
  br i1 %call79, label %if.end82, label %if.then80, !dbg !1314

if.then80:                                        ; preds = %if.then74
  call void @exit(i32 0) #17, !dbg !1316
  unreachable, !dbg !1316

if.end82:                                         ; preds = %if.then74, %land.lhs.true, %if.end65
  %30 = load i64* %n_files, align 8, !dbg !1317
  %31 = load i8*** %file, align 8, !dbg !1317
  %call83 = call i32 @rm(i64 %30, i8** %31, %struct.rm_options* %x), !dbg !1317
  store i32 %call83, i32* %status, align 4, !dbg !1317
  %32 = load i32* %status, align 4, !dbg !1318
  %cmp84 = icmp eq i32 %32, 2, !dbg !1318
  %33 = load i32* %status, align 4, !dbg !1318
  %cmp87 = icmp eq i32 %33, 3, !dbg !1318
  %or.cond1 = or i1 %cmp84, %cmp87, !dbg !1318
  %34 = load i32* %status, align 4, !dbg !1318
  %cmp90 = icmp eq i32 %34, 4, !dbg !1318
  %or.cond2 = or i1 %or.cond1, %cmp90, !dbg !1318
  br i1 %or.cond2, label %cond.end, label %cond.false, !dbg !1318

cond.false:                                       ; preds = %if.end82
  call void @__assert_fail(i8* getelementptr inbounds ([76 x i8]* @.str27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str28, i32 0, i32 0), i32 383, i8* getelementptr inbounds ([23 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)) #17, !dbg !1
  unreachable, !dbg !1318

cond.end:                                         ; preds = %if.end82
  %35 = load i32* %status, align 4, !dbg !1319
  %cmp92 = icmp eq i32 %35, 4, !dbg !1319
  %cond94 = select i1 %cmp92, i32 1, i32 0, !dbg !1319
  call void @exit(i32 %cond94) #17, !dbg !1319
  unreachable, !dbg !1319
}

; Function Attrs: nounwind
declare i8* @setlocale(i32, i8*) #4

; Function Attrs: nounwind
declare i32 @atexit(void ()*) #4

; Function Attrs: nounwind uwtable
define internal void @rm_option_init(%struct.rm_options* %x) #0 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  %0 = load %struct.rm_options** %x.addr, align 8, !dbg !1320
  %ignore_missing_files = getelementptr inbounds %struct.rm_options* %0, i32 0, i32 0, !dbg !1320
  store i8 0, i8* %ignore_missing_files, align 1, !dbg !1320
  %call = call i64 @klee_change(i64 0, i64 4), !dbg !1321
  %conv = trunc i64 %call to i32, !dbg !1321
  %1 = load %struct.rm_options** %x.addr, align 8, !dbg !1321
  %interactive = getelementptr inbounds %struct.rm_options* %1, i32 0, i32 1, !dbg !1321
  store i32 %conv, i32* %interactive, align 4, !dbg !1321
  %2 = load %struct.rm_options** %x.addr, align 8, !dbg !1322
  %one_file_system = getelementptr inbounds %struct.rm_options* %2, i32 0, i32 2, !dbg !1322
  store i8 0, i8* %one_file_system, align 1, !dbg !1322
  %3 = load %struct.rm_options** %x.addr, align 8, !dbg !1323
  %recursive = getelementptr inbounds %struct.rm_options* %3, i32 0, i32 3, !dbg !1323
  store i8 0, i8* %recursive, align 1, !dbg !1323
  %4 = load %struct.rm_options** %x.addr, align 8, !dbg !1324
  %root_dev_ino = getelementptr inbounds %struct.rm_options* %4, i32 0, i32 4, !dbg !1324
  store %struct.dev_ino* null, %struct.dev_ino** %root_dev_ino, align 8, !dbg !1324
  %call1 = call i32 @isatty(i32 0) #9, !dbg !1325
  %tobool = icmp ne i32 %call1, 0, !dbg !1325
  %5 = load %struct.rm_options** %x.addr, align 8, !dbg !1325
  %stdin_tty = getelementptr inbounds %struct.rm_options* %5, i32 0, i32 5, !dbg !1325
  %frombool = zext i1 %tobool to i8, !dbg !1325
  store i8 %frombool, i8* %stdin_tty, align 1, !dbg !1325
  %6 = load %struct.rm_options** %x.addr, align 8, !dbg !1326
  %verbose = getelementptr inbounds %struct.rm_options* %6, i32 0, i32 6, !dbg !1326
  store i8 0, i8* %verbose, align 1, !dbg !1326
  %7 = load %struct.rm_options** %x.addr, align 8, !dbg !1327
  %require_restore_cwd = getelementptr inbounds %struct.rm_options* %7, i32 0, i32 7, !dbg !1327
  store i8 0, i8* %require_restore_cwd, align 1, !dbg !1327
  ret void, !dbg !1328
}

; Function Attrs: nounwind
declare i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #4

; Function Attrs: nounwind uwtable
define internal void @diagnose_leading_hyphen(i32 %argc, i8** %argv) #0 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %arg = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  store i32 1, i32* %i, align 4, !dbg !1329
  br label %for.cond, !dbg !1329

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4, !dbg !1329
  %1 = load i32* %argc.addr, align 4, !dbg !1329
  %cmp = icmp slt i32 %0, %1, !dbg !1329
  br i1 %cmp, label %for.body, label %for.end, !dbg !1329

for.body:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4, !dbg !1331
  %idxprom = sext i32 %2 to i64, !dbg !1331
  %3 = load i8*** %argv.addr, align 8, !dbg !1331
  %arrayidx = getelementptr inbounds i8** %3, i64 %idxprom, !dbg !1331
  %4 = load i8** %arrayidx, align 8, !dbg !1331
  store i8* %4, i8** %arg, align 8, !dbg !1331
  %5 = load i8** %arg, align 8, !dbg !1333
  %arrayidx1 = getelementptr inbounds i8* %5, i64 0, !dbg !1333
  %6 = load i8* %arrayidx1, align 1, !dbg !1333
  %conv = sext i8 %6 to i32, !dbg !1333
  %cmp2 = icmp eq i32 %conv, 45, !dbg !1333
  br i1 %cmp2, label %land.lhs.true, label %for.inc, !dbg !1333

land.lhs.true:                                    ; preds = %for.body
  %7 = load i8** %arg, align 8, !dbg !1333
  %arrayidx4 = getelementptr inbounds i8* %7, i64 1, !dbg !1333
  %8 = load i8* %arrayidx4, align 1, !dbg !1333
  %conv5 = sext i8 %8 to i32, !dbg !1333
  %tobool = icmp ne i32 %conv5, 0, !dbg !1333
  br i1 %tobool, label %land.lhs.true6, label %for.inc, !dbg !1333

land.lhs.true6:                                   ; preds = %land.lhs.true
  %9 = load i8** %arg, align 8, !dbg !1333
  %call = call i32 @lstat(i8* %9, %struct.stat* %st) #9, !dbg !1333
  %cmp7 = icmp eq i32 %call, 0, !dbg !1333
  br i1 %cmp7, label %if.then, label %for.inc, !dbg !1333

if.then:                                          ; preds = %land.lhs.true6
  %10 = load %struct._IO_FILE** @stderr, align 8, !dbg !1335
  %11 = load i8*** %argv.addr, align 8, !dbg !1335
  %arrayidx9 = getelementptr inbounds i8** %11, i64 0, !dbg !1335
  %12 = load i8** %arrayidx9, align 8, !dbg !1335
  %13 = load i8** %arg, align 8, !dbg !1337
  %call10 = call i8* @quotearg_n_style(i32 1, i32 1, i8* %13), !dbg !1337
  %14 = load i8** %arg, align 8, !dbg !1338
  %call11 = call i8* @quote(i8* %14), !dbg !1338
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([38 x i8]* @.str29, i32 0, i32 0), i8* %12, i8* %call10, i8* %call11), !dbg !1335
  br label %for.end, !dbg !1339

for.inc:                                          ; preds = %for.body, %land.lhs.true, %land.lhs.true6
  %15 = load i32* %i, align 4, !dbg !1329
  %inc = add nsw i32 %15, 1, !dbg !1329
  store i32 %inc, i32* %i, align 4, !dbg !1329
  br label %for.cond, !dbg !1329

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !1340
}

declare void @error(i32, i32, i8*, ...) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #3

; Function Attrs: nounwind
declare i32 @lstat(i8*, %struct.stat*) #4

; Function Attrs: nounwind
declare i32 @isatty(i32) #4

; Function Attrs: nounwind uwtable
define i64 @klee_change(i64 %x, i64 %y) #0 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %file = alloca i8*, align 8
  %marker_file = alloca i8*, align 8
  %f = alloca %struct._IO_FILE*, align 8
  store i64 %x, i64* %x.addr, align 8
  store i64 %y, i64* %y.addr, align 8
  %0 = load i64* %x.addr, align 8, !dbg !1341
  %1 = load i64* %y.addr, align 8, !dbg !1341
  %cmp = icmp eq i64 %0, %1, !dbg !1341
  br i1 %cmp, label %if.then, label %if.else, !dbg !1341

if.then:                                          ; preds = %entry
  %2 = load i64* %x.addr, align 8, !dbg !1343
  store i64 %2, i64* %retval, !dbg !1343
  br label %return, !dbg !1343

if.else:                                          ; preds = %entry
  %3 = load i32* @after_divergence, align 4, !dbg !1344
  %tobool = icmp ne i32 %3, 0, !dbg !1344
  br i1 %tobool, label %if.end29, label %if.then1, !dbg !1344

if.then1:                                         ; preds = %if.else
  %4 = load i8** @klee_div_file_env, align 8, !dbg !1347
  %call = call i8* @getenv(i8* %4) #9, !dbg !1347
  store i8* %call, i8** %file, align 8, !dbg !1347
  %5 = load i8** @klee_div_marker_file_env, align 8, !dbg !1349
  %call2 = call i8* @getenv(i8* %5) #9, !dbg !1349
  store i8* %call2, i8** %marker_file, align 8, !dbg !1349
  %6 = load i8** %file, align 8, !dbg !1350
  %tobool3 = icmp ne i8* %6, null, !dbg !1350
  br i1 %tobool3, label %if.then4, label %if.else26, !dbg !1350

if.then4:                                         ; preds = %if.then1
  %7 = load i8** %file, align 8, !dbg !1352
  %call5 = call %struct._IO_FILE* @fopen(i8* %7, i8* getelementptr inbounds ([2 x i8]* @.str249, i32 0, i32 0)), !dbg !1352
  store %struct._IO_FILE* %call5, %struct._IO_FILE** %f, align 8, !dbg !1352
  %8 = load %struct._IO_FILE** %f, align 8, !dbg !1354
  %tobool6 = icmp ne %struct._IO_FILE* %8, null, !dbg !1354
  br i1 %tobool6, label %if.then7, label %if.else11, !dbg !1354

if.then7:                                         ; preds = %if.then4
  %9 = load %struct._IO_FILE** %f, align 8, !dbg !1356
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([3 x i8]* @.str350, i32 0, i32 0)), !dbg !1356
  %10 = load %struct._IO_FILE** %f, align 8, !dbg !1358
  %call9 = call i32 @fflush_unlocked(%struct._IO_FILE* %10), !dbg !1358
  %11 = load %struct._IO_FILE** %f, align 8, !dbg !1359
  %call10 = call i32 @fclose(%struct._IO_FILE* %11), !dbg !1359
  br label %if.end, !dbg !1360

if.else11:                                        ; preds = %if.then4
  %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !1361
  %13 = load i8** %file, align 8, !dbg !1361
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([26 x i8]* @.str451, i32 0, i32 0), i8* %13), !dbg !1361
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then7
  %14 = load i8** %marker_file, align 8, !dbg !1363
  %tobool13 = icmp ne i8* %14, null, !dbg !1363
  br i1 %tobool13, label %if.then14, label %if.else23, !dbg !1363

if.then14:                                        ; preds = %if.end
  %15 = load i8** %marker_file, align 8, !dbg !1365
  %call15 = call %struct._IO_FILE* @fopen(i8* %15, i8* getelementptr inbounds ([2 x i8]* @.str552, i32 0, i32 0)), !dbg !1365
  store %struct._IO_FILE* %call15, %struct._IO_FILE** %f, align 8, !dbg !1365
  %16 = load %struct._IO_FILE** %f, align 8, !dbg !1367
  %tobool16 = icmp ne %struct._IO_FILE* %16, null, !dbg !1367
  br i1 %tobool16, label %if.then17, label %if.else20, !dbg !1367

if.then17:                                        ; preds = %if.then14
  %17 = load %struct._IO_FILE** %f, align 8, !dbg !1369
  %call18 = call i32 @fflush_unlocked(%struct._IO_FILE* %17), !dbg !1369
  %18 = load %struct._IO_FILE** %f, align 8, !dbg !1371
  %call19 = call i32 @fclose(%struct._IO_FILE* %18), !dbg !1371
  br label %if.end28, !dbg !1372

if.else20:                                        ; preds = %if.then14
  %19 = load %struct._IO_FILE** @stderr, align 8, !dbg !1373
  %20 = load i8** %file, align 8, !dbg !1373
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([26 x i8]* @.str451, i32 0, i32 0), i8* %20), !dbg !1373
  br label %if.end28

if.else23:                                        ; preds = %if.end
  %21 = load %struct._IO_FILE** @stderr, align 8, !dbg !1375
  %22 = load i8** @klee_div_marker_file_env, align 8, !dbg !1375
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([26 x i8]* @.str653, i32 0, i32 0), i8* %22), !dbg !1375
  br label %if.end28

if.else26:                                        ; preds = %if.then1
  %23 = load %struct._IO_FILE** @stderr, align 8, !dbg !1377
  %24 = load i8** @klee_div_file_env, align 8, !dbg !1377
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([26 x i8]* @.str653, i32 0, i32 0), i8* %24), !dbg !1377
  br label %if.end28

if.end28:                                         ; preds = %if.else23, %if.else20, %if.then17, %if.else26
  store i32 1, i32* @after_divergence, align 4, !dbg !1379
  br label %if.end29, !dbg !1380

if.end29:                                         ; preds = %if.end28, %if.else
  %25 = load i64* %y.addr, align 8, !dbg !1381
  store i64 %25, i64* %retval, !dbg !1381
  br label %return, !dbg !1381

return:                                           ; preds = %if.end29, %if.then
  %26 = load i64* %retval, !dbg !1382
  ret i64 %26, !dbg !1382
}

; Function Attrs: nounwind
declare i8* @getenv(i8*) #4

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

declare i32 @fflush_unlocked(%struct._IO_FILE*) #2

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define i32 @klee_get_true() #6 {
entry:
  ret i32 1, !dbg !1383
}

; Function Attrs: noinline nounwind uwtable
define i32 @klee_get_false() #6 {
entry:
  ret i32 0, !dbg !1385
}

; Function Attrs: nounwind uwtable
define i32 @rm(i64 %n_files, i8** %file, %struct.rm_options* %x) #0 {
entry:
  %n_files.addr = alloca i64, align 8
  %file.addr = alloca i8**, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %status = alloca i32, align 4
  %ds = alloca %struct.dirstack_state*, align 8
  %cwd_errno = alloca i32, align 4
  %i = alloca i64, align 8
  %s = alloca i32, align 4
  store i64 %n_files, i64* %n_files.addr, align 8
  store i8** %file, i8*** %file.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32 2, i32* %status, align 4, !dbg !1386
  %call = call %struct.dirstack_state* @ds_init(), !dbg !1388
  store %struct.dirstack_state* %call, %struct.dirstack_state** %ds, align 8, !dbg !1388
  store i32 0, i32* %cwd_errno, align 4, !dbg !1389
  store i64 0, i64* %i, align 8, !dbg !1390
  br label %for.cond, !dbg !1390

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64* %i, align 8, !dbg !1390
  %1 = load i64* %n_files.addr, align 8, !dbg !1390
  %cmp = icmp ult i64 %0, %1, !dbg !1390
  br i1 %cmp, label %for.body, label %for.end, !dbg !1390

for.body:                                         ; preds = %for.cond
  %2 = load i32* %cwd_errno, align 4, !dbg !1392
  %tobool = icmp ne i32 %2, 0, !dbg !1392
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !1392

land.lhs.true:                                    ; preds = %for.body
  %3 = load i64* %i, align 8, !dbg !1392
  %4 = load i8*** %file.addr, align 8, !dbg !1392
  %arrayidx = getelementptr inbounds i8** %4, i64 %3, !dbg !1392
  %5 = load i8** %arrayidx, align 8, !dbg !1392
  %arrayidx1 = getelementptr inbounds i8* %5, i64 0, !dbg !1392
  %6 = load i8* %arrayidx1, align 1, !dbg !1392
  %conv = sext i8 %6 to i32, !dbg !1392
  %cmp2 = icmp eq i32 %conv, 47, !dbg !1392
  br i1 %cmp2, label %if.else, label %if.then, !dbg !1392

if.then:                                          ; preds = %land.lhs.true
  %7 = load i64* %i, align 8, !dbg !1395
  %8 = load i8*** %file.addr, align 8, !dbg !1395
  %arrayidx4 = getelementptr inbounds i8** %8, i64 %7, !dbg !1395
  %9 = load i8** %arrayidx4, align 8, !dbg !1395
  %call5 = call i8* @quote(i8* %9), !dbg !1395
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* getelementptr inbounds ([32 x i8]* @.str754, i32 0, i32 0), i8* %call5), !dbg !1395
  store i32 4, i32* %status, align 4, !dbg !1397
  br label %for.inc, !dbg !1398

if.else:                                          ; preds = %land.lhs.true, %for.body
  %10 = load %struct.dirstack_state** %ds, align 8, !dbg !1399
  %11 = load i64* %i, align 8, !dbg !1399
  %12 = load i8*** %file.addr, align 8, !dbg !1399
  %arrayidx6 = getelementptr inbounds i8** %12, i64 %11, !dbg !1399
  %13 = load i8** %arrayidx6, align 8, !dbg !1399
  %14 = load %struct.rm_options** %x.addr, align 8, !dbg !1399
  %call7 = call i32 @rm_1(%struct.dirstack_state* %10, i8* %13, %struct.rm_options* %14, i32* %cwd_errno), !dbg !1399
  store i32 %call7, i32* %s, align 4, !dbg !1399
  %15 = load i32* %s, align 4, !dbg !1401
  %cmp8 = icmp eq i32 %15, 2, !dbg !1401
  %16 = load i32* %s, align 4, !dbg !1401
  %cmp10 = icmp eq i32 %16, 3, !dbg !1401
  %or.cond = or i1 %cmp8, %cmp10, !dbg !1401
  %17 = load i32* %s, align 4, !dbg !1401
  %cmp13 = icmp eq i32 %17, 4, !dbg !1401
  %or.cond1 = or i1 %or.cond, %cmp13, !dbg !1401
  br i1 %or.cond1, label %do.body, label %cond.false, !dbg !1401

cond.false:                                       ; preds = %if.else
  call void @__assert_fail(i8* getelementptr inbounds ([61 x i8]* @.str855, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 1648, i8* getelementptr inbounds ([74 x i8]* @__PRETTY_FUNCTION__.rm, i32 0, i32 0)) #17, !dbg !
  unreachable, !dbg !1401

do.body:                                          ; preds = %if.else
  %18 = load i32* %s, align 4, !dbg !1402
  %cmp15 = icmp eq i32 %18, 4, !dbg !1402
  br i1 %cmp15, label %if.then23, label %lor.lhs.false17, !dbg !1402

lor.lhs.false17:                                  ; preds = %do.body
  %19 = load i32* %s, align 4, !dbg !1402
  %cmp18 = icmp eq i32 %19, 3, !dbg !1402
  %20 = load i32* %status, align 4, !dbg !1402
  %cmp21 = icmp eq i32 %20, 2, !dbg !1402
  %or.cond2 = and i1 %cmp18, %cmp21, !dbg !1402
  br i1 %or.cond2, label %if.then23, label %for.inc, !dbg !1402

if.then23:                                        ; preds = %lor.lhs.false17, %do.body
  %21 = load i32* %s, align 4, !dbg !1402
  store i32 %21, i32* %status, align 4, !dbg !1402
  br label %for.inc, !dbg !1402

for.inc:                                          ; preds = %if.then, %lor.lhs.false17, %if.then23
  %22 = load i64* %i, align 8, !dbg !1390
  %inc = add i64 %22, 1, !dbg !1390
  store i64 %inc, i64* %i, align 8, !dbg !1390
  br label %for.cond, !dbg !1390

for.end:                                          ; preds = %for.cond
  %23 = load %struct.rm_options** %x.addr, align 8, !dbg !1405
  %require_restore_cwd = getelementptr inbounds %struct.rm_options* %23, i32 0, i32 7, !dbg !1405
  %24 = load i8* %require_restore_cwd, align 1, !dbg !1405
  %tobool25 = trunc i8 %24 to i1, !dbg !1405
  %25 = load i32* %cwd_errno, align 4, !dbg !1405
  %tobool28 = icmp ne i32 %25, 0, !dbg !1405
  %or.cond3 = and i1 %tobool25, %tobool28, !dbg !1405
  br i1 %or.cond3, label %if.then29, label %if.end31, !dbg !1405

if.then29:                                        ; preds = %for.end
  %26 = load i32* %cwd_errno, align 4, !dbg !1407
  %conv30 = sext i32 %26 to i64, !dbg !1407
  %27 = inttoptr i64 %conv30 to i32* (...)*, !dbg !1407
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %27, i8* getelementptr inbounds ([41 x i8]* @.str1057, i32 0, i32 0)), !dbg !1407
  store i32 4, i32* %status, align 4, !dbg !1409
  br label %if.end31, !dbg !1410

if.end31:                                         ; preds = %if.then29, %for.end
  %28 = load %struct.dirstack_state** %ds, align 8, !dbg !1411
  call void @ds_free(%struct.dirstack_state* %28), !dbg !1411
  %29 = load i32* %status, align 4, !dbg !1412
  ret i32 %29, !dbg !1412
}

declare void @obstack_free(%struct.obstack*, i8*) #2

; Function Attrs: nounwind
declare void @free(i8*) #4

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) #7

declare void @_obstack_newchunk(%struct.obstack*, i32) #2

; Function Attrs: nounwind
declare i32 @unlinkat(i32, i8*, i32) #4

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #8

; Function Attrs: nounwind
declare i32 @dirfd(%struct.__dirstream*) #4

declare i32 @close(i32) #2

declare %struct.__dirstream* @fdopendir(i32) #2

; Function Attrs: noreturn nounwind
declare void @longjmp(%struct.__jmp_buf_tag*, i32) #3

declare i32 @closedir(%struct.__dirstream*) #2

declare i32 @openat(i32, i8*, i32, ...) #2

declare %struct.dirent* @readdir(%struct.__dirstream*) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #8

; Function Attrs: nounwind
declare i32 @euidaccess(i8*, i32) #4

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #9

; Function Attrs: noreturn nounwind
declare void @abort() #3

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat*) #4

; Function Attrs: nounwind
declare void @rewinddir(%struct.__dirstream*) #4

declare i32 @fcntl(i32, i32, ...) #2

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #4

; Function Attrs: nounwind
declare i32 @fstatat(i32, i8*, %struct.stat*, i32) #4

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

declare i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

declare i32 @putc_unlocked(i32, %struct._IO_FILE*) #2

declare i32 @_obstack_begin(%struct.obstack*, i32, i32, i8* (i64)*, void (i8*)*) #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

; Function Attrs: nounwind uwtable
define internal %struct.dirstack_state* @ds_init() #0 {
entry:
  %ds = alloca %struct.dirstack_state*, align 8
  %call = call i8* @xmalloc(i64 496), !dbg !1413
  %0 = bitcast i8* %call to %struct.dirstack_state*, !dbg !1413
  store %struct.dirstack_state* %0, %struct.dirstack_state** %ds, align 8, !dbg !1413
  %1 = load %struct.dirstack_state** %ds, align 8, !dbg !1414
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %1, i32 0, i32 0, !dbg !1414
  %call1 = call i32 @_obstack_begin(%struct.obstack* %dir_stack, i32 0, i32 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !1414
  %2 = load %struct.dirstack_state** %ds, align 8, !dbg !1415
  %len_stack = getelementptr inbounds %struct.dirstack_state* %2, i32 0, i32 1, !dbg !1415
  %call2 = call i32 @_obstack_begin(%struct.obstack* %len_stack, i32 0, i32 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !1415
  %3 = load %struct.dirstack_state** %ds, align 8, !dbg !1416
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %3, i32 0, i32 2, !dbg !1416
  %call3 = call i32 @_obstack_begin(%struct.obstack* %Active_dir, i32 0, i32 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !1416
  %4 = load %struct.dirstack_state** %ds, align 8, !dbg !1417
  ret %struct.dirstack_state* %4, !dbg !1417
}

; Function Attrs: nounwind uwtable
define internal void @klee_compatible_error(i32 %status, i32* (...)* %__errno_location, i8* %format, ...) #0 {
entry:
  %status.addr = alloca i32, align 4
  %__errno_location.addr = alloca i32* (...)*, align 8
  %format.addr = alloca i8*, align 8
  %err_args = alloca [1 x %struct.__va_list_tag], align 16
  store i32 %status, i32* %status.addr, align 4
  store i32* (...)* %__errno_location, i32* (...)** %__errno_location.addr, align 8
  store i8* %format, i8** %format.addr, align 8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !1418
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !1418
  call void @llvm.va_start(i8* %arraydecay1), !dbg !1418
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1420
  %1 = load i8** %format.addr, align 8, !dbg !1420
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !1420
  %call = call i32 @vfprintf(%struct._IO_FILE* %0, i8* %1, %struct.__va_list_tag* %arraydecay2), !dbg !1420
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag]* %err_args, i32 0, i32 0, !dbg !1421
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !1421
  call void @llvm.va_end(i8* %arraydecay34), !dbg !1421
  %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !1422
  %call5 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %2), !dbg !1422
  %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !1423
  %call6 = call i32 @fflush_unlocked(%struct._IO_FILE* %3), !dbg !1423
  %4 = load i32* %status.addr, align 4, !dbg !1424
  %tobool = icmp ne i32 %4, 0, !dbg !1424
  br i1 %tobool, label %if.then, label %if.end, !dbg !1424

if.then:                                          ; preds = %entry
  %5 = load i32* %status.addr, align 4, !dbg !1426
  call void @exit(i32 %5) #17, !dbg !1426
  unreachable, !dbg !1426

if.end:                                           ; preds = %entry
  ret void, !dbg !1428
}

; Function Attrs: nounwind uwtable
define internal i32 @rm_1(%struct.dirstack_state* %ds, i8* %filename, %struct.rm_options* %x, i32* %cwd_errno) #0 {
entry:
  %retval = alloca i32, align 4
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %filename.addr = alloca i8*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %cwd_errno.addr = alloca i32*, align 8
  %base = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  %status29 = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32* %cwd_errno, i32** %cwd_errno.addr, align 8
  %0 = load i8** %filename.addr, align 8, !dbg !1429
  %call = call i8* @last_component(i8* %0), !dbg !1429
  store i8* %call, i8** %base, align 8, !dbg !1429
  %1 = load i8** %base, align 8, !dbg !1430
  %call1 = call zeroext i1 @dot_or_dotdot(i8* %1), !dbg !1430
  br i1 %call1, label %if.then, label %if.end, !dbg !1430

if.then:                                          ; preds = %entry
  %2 = load i8** %base, align 8, !dbg !1432
  %3 = load i8** %filename.addr, align 8, !dbg !1432
  %cmp = icmp eq i8* %2, %3, !dbg !1432
  %cond = select i1 %cmp, i8* getelementptr inbounds ([27 x i8]* @.str1158, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @.str1259, i32 0, i32 0), !dbg !1432
  %4 = load i8** %base, align 8, !dbg !1434
  %call2 = call i8* @quote_n(i32 0, i8* %4), !dbg !1434
  %5 = load i8** %filename.addr, align 8, !dbg !1434
  %call3 = call i8* @quote_n(i32 1, i8* %5), !dbg !1434
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* %cond, i8* %call2, i8* %call3), !dbg !1432
  store i32 4, i32* %retval, !dbg !1435
  br label %return, !dbg !1435

if.end:                                           ; preds = %entry
  %call4 = call %struct.stat* @cache_stat_init(%struct.stat* %st), !dbg !1436
  %6 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1437
  %cycle_check_state = getelementptr inbounds %struct.dirstack_state* %6, i32 0, i32 3, !dbg !1437
  call void @cycle_check_init(%struct.cycle_check_state* %cycle_check_state), !dbg !1437
  %7 = load %struct.rm_options** %x.addr, align 8, !dbg !1438
  %root_dev_ino = getelementptr inbounds %struct.rm_options* %7, i32 0, i32 4, !dbg !1438
  %8 = load %struct.dev_ino** %root_dev_ino, align 8, !dbg !1438
  %tobool = icmp ne %struct.dev_ino* %8, null, !dbg !1438
  br i1 %tobool, label %if.then5, label %if.end27, !dbg !1438

if.then5:                                         ; preds = %if.end
  %9 = load i8** %filename.addr, align 8, !dbg !1440
  %call6 = call i32 @cache_fstatat(i32 -100, i8* %9, %struct.stat* %st, i32 256), !dbg !1440
  %cmp7 = icmp ne i32 %call6, 0, !dbg !1440
  br i1 %cmp7, label %if.then8, label %if.end15, !dbg !1440

if.then8:                                         ; preds = %if.then5
  %10 = load %struct.rm_options** %x.addr, align 8, !dbg !1443
  %call9 = call i32* @__errno_location() #1, !dbg !1446
  %11 = load i32* %call9, align 4, !dbg !1446
  %call10 = call zeroext i1 @ignorable_missing(%struct.rm_options* %10, i32 %11), !dbg !1443
  br i1 %call10, label %if.then11, label %if.end12, !dbg !1443

if.then11:                                        ; preds = %if.then8
  store i32 2, i32* %retval, !dbg !1447
  br label %return, !dbg !1447

if.end12:                                         ; preds = %if.then8
  %call13 = call i32* @__errno_location() #1, !dbg !1448
  %12 = load i32* %call13, align 4, !dbg !1448
  %conv = sext i32 %12 to i64, !dbg !1448
  %13 = inttoptr i64 %conv to i32* (...)*, !dbg !1448
  %14 = load i8** %filename.addr, align 8, !dbg !1448
  %call14 = call i8* @quote(i8* %14), !dbg !1448
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %13, i8* getelementptr inbounds ([17 x i8]* @.str1360, i32 0, i32 0), i8* %call14), !dbg !1448
  store i32 4, i32* %retval, !dbg !1449
  br label %return, !dbg !1449

if.end15:                                         ; preds = %if.then5
  %st_ino = getelementptr inbounds %struct.stat* %st, i32 0, i32 1, !dbg !1450
  %15 = load i64* %st_ino, align 8, !dbg !1450
  %16 = load %struct.rm_options** %x.addr, align 8, !dbg !1450
  %root_dev_ino16 = getelementptr inbounds %struct.rm_options* %16, i32 0, i32 4, !dbg !1450
  %17 = load %struct.dev_ino** %root_dev_ino16, align 8, !dbg !1450
  %st_ino17 = getelementptr inbounds %struct.dev_ino* %17, i32 0, i32 0, !dbg !1450
  %18 = load i64* %st_ino17, align 8, !dbg !1450
  %cmp18 = icmp eq i64 %15, %18, !dbg !1450
  br i1 %cmp18, label %land.lhs.true, label %if.end27, !dbg !1450

land.lhs.true:                                    ; preds = %if.end15
  %st_dev = getelementptr inbounds %struct.stat* %st, i32 0, i32 0, !dbg !1450
  %19 = load i64* %st_dev, align 8, !dbg !1450
  %20 = load %struct.rm_options** %x.addr, align 8, !dbg !1450
  %root_dev_ino20 = getelementptr inbounds %struct.rm_options* %20, i32 0, i32 4, !dbg !1450
  %21 = load %struct.dev_ino** %root_dev_ino20, align 8, !dbg !1450
  %st_dev21 = getelementptr inbounds %struct.dev_ino* %21, i32 0, i32 1, !dbg !1450
  %22 = load i64* %st_dev21, align 8, !dbg !1450
  %cmp22 = icmp eq i64 %19, %22, !dbg !1450
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !1450

if.then24:                                        ; preds = %land.lhs.true
  %23 = load i8** %filename.addr, align 8, !dbg !1452
  %call25 = call i8* @quote(i8* %23), !dbg !1452
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* getelementptr inbounds ([32 x i8]* @.str1461, i32 0, i32 0), i8* %call25), !dbg !1452
  store i32 4, i32* %retval, !dbg !1454
  br label %return, !dbg !1454

if.end27:                                         ; preds = %if.end15, %land.lhs.true, %if.end
  %24 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1455
  call void @AD_push_initial(%struct.dirstack_state* %24), !dbg !1455
  %25 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1456
  %call28 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %25), !dbg !1456
  %status = getelementptr inbounds %struct.AD_ent* %call28, i32 0, i32 1, !dbg !1456
  store i32 2, i32* %status, align 4, !dbg !1456
  %26 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1458
  %27 = load i8** %filename.addr, align 8, !dbg !1458
  %28 = load %struct.rm_options** %x.addr, align 8, !dbg !1458
  %call30 = call i32 @remove_entry(i32 -100, %struct.dirstack_state* %26, i8* %27, %struct.stat* %st, %struct.rm_options* %28, %struct.dirent* null), !dbg !1458
  store i32 %call30, i32* %status29, align 4, !dbg !1458
  %29 = load i32* %status29, align 4, !dbg !1459
  %cmp31 = icmp eq i32 %29, 5, !dbg !1459
  br i1 %cmp31, label %if.then33, label %if.end39, !dbg !1459

if.then33:                                        ; preds = %if.end27
  %30 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1461
  %current_arg_jumpbuf = getelementptr inbounds %struct.dirstack_state* %30, i32 0, i32 4, !dbg !1461
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag]* %current_arg_jumpbuf, i32 0, i32 0, !dbg !1461
  %call34 = call i32 @_setjmp(%struct.__jmp_buf_tag* %arraydecay) #18, !dbg !1461
  %tobool35 = icmp ne i32 %call34, 0, !dbg !1461
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !1461

if.then36:                                        ; preds = %if.then33
  store i32 4, i32* %status29, align 4, !dbg !1464
  br label %if.end38, !dbg !1464

if.else:                                          ; preds = %if.then33
  %31 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1465
  %32 = load i8** %filename.addr, align 8, !dbg !1465
  %33 = load %struct.rm_options** %x.addr, align 8, !dbg !1465
  %34 = load i32** %cwd_errno.addr, align 8, !dbg !1465
  %call37 = call i32 @remove_dir(i32 -100, %struct.dirstack_state* %31, i8* %32, %struct.stat* %st, %struct.rm_options* %33, i32* %34), !dbg !1465
  store i32 %call37, i32* %status29, align 4, !dbg !1465
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then36
  %35 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1466
  call void @AD_stack_clear(%struct.dirstack_state* %35), !dbg !1466
  br label %if.end39, !dbg !1467

if.end39:                                         ; preds = %if.end38, %if.end27
  %36 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1468
  call void @ds_clear(%struct.dirstack_state* %36), !dbg !1468
  %37 = load i32* %status29, align 4, !dbg !1469
  store i32 %37, i32* %retval, !dbg !1469
  br label %return, !dbg !1469

return:                                           ; preds = %if.end39, %if.then24, %if.end12, %if.then11, %if.then
  %38 = load i32* %retval, !dbg !1470
  ret i32 %38, !dbg !1470
}

; Function Attrs: nounwind uwtable
define internal void @ds_free(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__obj = alloca i8*, align 8
  %__o2 = alloca %struct.obstack*, align 8
  %__obj3 = alloca i8*, align 8
  %__o14 = alloca %struct.obstack*, align 8
  %__obj15 = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1471
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 0, !dbg !1471
  store %struct.obstack* %dir_stack, %struct.obstack** %__o, align 8, !dbg !1471
  store i8* null, i8** %__obj, align 8, !dbg !1471
  %1 = load i8** %__obj, align 8, !dbg !1473
  %2 = load %struct.obstack** %__o, align 8, !dbg !1473
  %chunk = getelementptr inbounds %struct.obstack* %2, i32 0, i32 1, !dbg !1473
  %3 = load %struct._obstack_chunk** %chunk, align 8, !dbg !1473
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !1473
  %cmp = icmp ugt i8* %1, %4, !dbg !1473
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !1473

land.lhs.true:                                    ; preds = %entry
  %5 = load i8** %__obj, align 8, !dbg !1473
  %6 = load %struct.obstack** %__o, align 8, !dbg !1473
  %chunk_limit = getelementptr inbounds %struct.obstack* %6, i32 0, i32 4, !dbg !1473
  %7 = load i8** %chunk_limit, align 8, !dbg !1473
  %cmp1 = icmp ult i8* %5, %7, !dbg !1473
  br i1 %cmp1, label %if.then, label %if.else, !dbg !1473

if.then:                                          ; preds = %land.lhs.true
  %8 = load i8** %__obj, align 8, !dbg !1473
  %9 = load %struct.obstack** %__o, align 8, !dbg !1473
  %object_base = getelementptr inbounds %struct.obstack* %9, i32 0, i32 2, !dbg !1473
  store i8* %8, i8** %object_base, align 8, !dbg !1473
  %10 = load %struct.obstack** %__o, align 8, !dbg !1473
  %next_free = getelementptr inbounds %struct.obstack* %10, i32 0, i32 3, !dbg !1473
  store i8* %8, i8** %next_free, align 8, !dbg !1473
  br label %if.end, !dbg !1473

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.obstack** %__o, align 8, !dbg !1473
  %12 = load i8** %__obj, align 8, !dbg !1473
  call void @obstack_free(%struct.obstack* %11, i8* %12), !dbg !1473
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1475
  %len_stack = getelementptr inbounds %struct.dirstack_state* %13, i32 0, i32 1, !dbg !1475
  store %struct.obstack* %len_stack, %struct.obstack** %__o2, align 8, !dbg !1475
  store i8* null, i8** %__obj3, align 8, !dbg !1475
  %14 = load i8** %__obj3, align 8, !dbg !1477
  %15 = load %struct.obstack** %__o2, align 8, !dbg !1477
  %chunk4 = getelementptr inbounds %struct.obstack* %15, i32 0, i32 1, !dbg !1477
  %16 = load %struct._obstack_chunk** %chunk4, align 8, !dbg !1477
  %17 = bitcast %struct._obstack_chunk* %16 to i8*, !dbg !1477
  %cmp5 = icmp ugt i8* %14, %17, !dbg !1477
  br i1 %cmp5, label %land.lhs.true6, label %if.else12, !dbg !1477

land.lhs.true6:                                   ; preds = %if.end
  %18 = load i8** %__obj3, align 8, !dbg !1477
  %19 = load %struct.obstack** %__o2, align 8, !dbg !1477
  %chunk_limit7 = getelementptr inbounds %struct.obstack* %19, i32 0, i32 4, !dbg !1477
  %20 = load i8** %chunk_limit7, align 8, !dbg !1477
  %cmp8 = icmp ult i8* %18, %20, !dbg !1477
  br i1 %cmp8, label %if.then9, label %if.else12, !dbg !1477

if.then9:                                         ; preds = %land.lhs.true6
  %21 = load i8** %__obj3, align 8, !dbg !1477
  %22 = load %struct.obstack** %__o2, align 8, !dbg !1477
  %object_base10 = getelementptr inbounds %struct.obstack* %22, i32 0, i32 2, !dbg !1477
  store i8* %21, i8** %object_base10, align 8, !dbg !1477
  %23 = load %struct.obstack** %__o2, align 8, !dbg !1477
  %next_free11 = getelementptr inbounds %struct.obstack* %23, i32 0, i32 3, !dbg !1477
  store i8* %21, i8** %next_free11, align 8, !dbg !1477
  br label %if.end13, !dbg !1477

if.else12:                                        ; preds = %land.lhs.true6, %if.end
  %24 = load %struct.obstack** %__o2, align 8, !dbg !1477
  %25 = load i8** %__obj3, align 8, !dbg !1477
  call void @obstack_free(%struct.obstack* %24, i8* %25), !dbg !1477
  br label %if.end13

if.end13:                                         ; preds = %if.else12, %if.then9
  %26 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1479
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %26, i32 0, i32 2, !dbg !1479
  store %struct.obstack* %Active_dir, %struct.obstack** %__o14, align 8, !dbg !1479
  store i8* null, i8** %__obj15, align 8, !dbg !1479
  %27 = load i8** %__obj15, align 8, !dbg !1481
  %28 = load %struct.obstack** %__o14, align 8, !dbg !1481
  %chunk16 = getelementptr inbounds %struct.obstack* %28, i32 0, i32 1, !dbg !1481
  %29 = load %struct._obstack_chunk** %chunk16, align 8, !dbg !1481
  %30 = bitcast %struct._obstack_chunk* %29 to i8*, !dbg !1481
  %cmp17 = icmp ugt i8* %27, %30, !dbg !1481
  br i1 %cmp17, label %land.lhs.true18, label %if.else24, !dbg !1481

land.lhs.true18:                                  ; preds = %if.end13
  %31 = load i8** %__obj15, align 8, !dbg !1481
  %32 = load %struct.obstack** %__o14, align 8, !dbg !1481
  %chunk_limit19 = getelementptr inbounds %struct.obstack* %32, i32 0, i32 4, !dbg !1481
  %33 = load i8** %chunk_limit19, align 8, !dbg !1481
  %cmp20 = icmp ult i8* %31, %33, !dbg !1481
  br i1 %cmp20, label %if.then21, label %if.else24, !dbg !1481

if.then21:                                        ; preds = %land.lhs.true18
  %34 = load i8** %__obj15, align 8, !dbg !1481
  %35 = load %struct.obstack** %__o14, align 8, !dbg !1481
  %object_base22 = getelementptr inbounds %struct.obstack* %35, i32 0, i32 2, !dbg !1481
  store i8* %34, i8** %object_base22, align 8, !dbg !1481
  %36 = load %struct.obstack** %__o14, align 8, !dbg !1481
  %next_free23 = getelementptr inbounds %struct.obstack* %36, i32 0, i32 3, !dbg !1481
  store i8* %34, i8** %next_free23, align 8, !dbg !1481
  br label %if.end25, !dbg !1481

if.else24:                                        ; preds = %land.lhs.true18, %if.end13
  %37 = load %struct.obstack** %__o14, align 8, !dbg !1481
  %38 = load i8** %__obj15, align 8, !dbg !1481
  call void @obstack_free(%struct.obstack* %37, i8* %38), !dbg !1481
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then21
  %39 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1483
  %40 = bitcast %struct.dirstack_state* %39 to i8*, !dbg !1483
  call void @free(i8* %40) #9, !dbg !1483
  ret void, !dbg !1484
}

; Function Attrs: nounwind uwtable
define internal void @ds_clear(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__obj = alloca i8*, align 8
  %__o1 = alloca %struct.obstack*, align 8
  %__value = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %__o32 = alloca %struct.obstack*, align 8
  %__obj34 = alloca i8*, align 8
  %__o136 = alloca %struct.obstack*, align 8
  %__value39 = alloca i8*, align 8
  %tmp80 = alloca i8*, align 8
  %__o96 = alloca %struct.obstack*, align 8
  %__obj98 = alloca i8*, align 8
  %__o1100 = alloca %struct.obstack*, align 8
  %__value103 = alloca i8*, align 8
  %tmp144 = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1485
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 0, !dbg !1485
  store %struct.obstack* %dir_stack, %struct.obstack** %__o, align 8, !dbg !1485
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1487
  %dir_stack1 = getelementptr inbounds %struct.dirstack_state* %1, i32 0, i32 0, !dbg !1487
  store %struct.obstack* %dir_stack1, %struct.obstack** %__o1, align 8, !dbg !1487
  %2 = load %struct.obstack** %__o1, align 8, !dbg !1487
  %object_base = getelementptr inbounds %struct.obstack* %2, i32 0, i32 2, !dbg !1487
  %3 = load i8** %object_base, align 8, !dbg !1487
  store i8* %3, i8** %__value, align 8, !dbg !1487
  %4 = load %struct.obstack** %__o1, align 8, !dbg !1489
  %next_free = getelementptr inbounds %struct.obstack* %4, i32 0, i32 3, !dbg !1489
  %5 = load i8** %next_free, align 8, !dbg !1489
  %6 = load i8** %__value, align 8, !dbg !1489
  %cmp = icmp eq i8* %5, %6, !dbg !1489
  br i1 %cmp, label %if.then, label %if.end, !dbg !1489

if.then:                                          ; preds = %entry
  %7 = load %struct.obstack** %__o1, align 8, !dbg !1489
  %maybe_empty_object = getelementptr inbounds %struct.obstack* %7, i32 0, i32 10, !dbg !1489
  %bf.load = load i8* %maybe_empty_object, align 8, !dbg !1489
  %bf.clear = and i8 %bf.load, -3, !dbg !1489
  %bf.set = or i8 %bf.clear, 2, !dbg !1489
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !1489
  br label %if.end, !dbg !1489

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.obstack** %__o1, align 8, !dbg !1487
  %next_free2 = getelementptr inbounds %struct.obstack* %8, i32 0, i32 3, !dbg !1487
  %9 = load i8** %next_free2, align 8, !dbg !1487
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i64, !dbg !1487
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, 0, !dbg !1487
  %10 = load %struct.obstack** %__o1, align 8, !dbg !1487
  %alignment_mask = getelementptr inbounds %struct.obstack* %10, i32 0, i32 6, !dbg !1487
  %11 = load i32* %alignment_mask, align 4, !dbg !1487
  %conv = sext i32 %11 to i64, !dbg !1487
  %add = add nsw i64 %sub.ptr.sub, %conv, !dbg !1487
  %12 = load %struct.obstack** %__o1, align 8, !dbg !1487
  %alignment_mask3 = getelementptr inbounds %struct.obstack* %12, i32 0, i32 6, !dbg !1487
  %13 = load i32* %alignment_mask3, align 4, !dbg !1487
  %neg = xor i32 %13, -1, !dbg !1487
  %conv4 = sext i32 %neg to i64, !dbg !1487
  %and = and i64 %add, %conv4, !dbg !1487
  %add.ptr = getelementptr inbounds i8* null, i64 %and, !dbg !1487
  %14 = load %struct.obstack** %__o1, align 8, !dbg !1487
  %next_free5 = getelementptr inbounds %struct.obstack* %14, i32 0, i32 3, !dbg !1487
  store i8* %add.ptr, i8** %next_free5, align 8, !dbg !1487
  %15 = load %struct.obstack** %__o1, align 8, !dbg !1491
  %next_free6 = getelementptr inbounds %struct.obstack* %15, i32 0, i32 3, !dbg !1491
  %16 = load i8** %next_free6, align 8, !dbg !1491
  %17 = load %struct.obstack** %__o1, align 8, !dbg !1491
  %chunk = getelementptr inbounds %struct.obstack* %17, i32 0, i32 1, !dbg !1491
  %18 = load %struct._obstack_chunk** %chunk, align 8, !dbg !1491
  %19 = bitcast %struct._obstack_chunk* %18 to i8*, !dbg !1491
  %sub.ptr.lhs.cast7 = ptrtoint i8* %16 to i64, !dbg !1491
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !1491
  %sub.ptr.sub8 = sub i64 %sub.ptr.lhs.cast7, %sub.ptr.rhs.cast, !dbg !1491
  %20 = load %struct.obstack** %__o1, align 8, !dbg !1491
  %chunk_limit = getelementptr inbounds %struct.obstack* %20, i32 0, i32 4, !dbg !1491
  %21 = load i8** %chunk_limit, align 8, !dbg !1491
  %22 = load %struct.obstack** %__o1, align 8, !dbg !1491
  %chunk9 = getelementptr inbounds %struct.obstack* %22, i32 0, i32 1, !dbg !1491
  %23 = load %struct._obstack_chunk** %chunk9, align 8, !dbg !1491
  %24 = bitcast %struct._obstack_chunk* %23 to i8*, !dbg !1491
  %sub.ptr.lhs.cast10 = ptrtoint i8* %21 to i64, !dbg !1491
  %sub.ptr.rhs.cast11 = ptrtoint i8* %24 to i64, !dbg !1491
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !1491
  %cmp13 = icmp sgt i64 %sub.ptr.sub8, %sub.ptr.sub12, !dbg !1491
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !1491

if.then15:                                        ; preds = %if.end
  %25 = load %struct.obstack** %__o1, align 8, !dbg !1491
  %chunk_limit16 = getelementptr inbounds %struct.obstack* %25, i32 0, i32 4, !dbg !1491
  %26 = load i8** %chunk_limit16, align 8, !dbg !1491
  %27 = load %struct.obstack** %__o1, align 8, !dbg !1491
  %next_free17 = getelementptr inbounds %struct.obstack* %27, i32 0, i32 3, !dbg !1491
  store i8* %26, i8** %next_free17, align 8, !dbg !1491
  br label %if.end18, !dbg !1491

if.end18:                                         ; preds = %if.then15, %if.end
  %28 = load %struct.obstack** %__o1, align 8, !dbg !1487
  %next_free19 = getelementptr inbounds %struct.obstack* %28, i32 0, i32 3, !dbg !1487
  %29 = load i8** %next_free19, align 8, !dbg !1487
  %30 = load %struct.obstack** %__o1, align 8, !dbg !1487
  %object_base20 = getelementptr inbounds %struct.obstack* %30, i32 0, i32 2, !dbg !1487
  store i8* %29, i8** %object_base20, align 8, !dbg !1487
  %31 = load i8** %__value, align 8, !dbg !1487
  store i8* %31, i8** %tmp, !dbg !1487
  %32 = load i8** %tmp, !dbg !1487
  store i8* %32, i8** %__obj, align 8, !dbg !1487
  %33 = load i8** %__obj, align 8, !dbg !1493
  %34 = load %struct.obstack** %__o, align 8, !dbg !1493
  %chunk21 = getelementptr inbounds %struct.obstack* %34, i32 0, i32 1, !dbg !1493
  %35 = load %struct._obstack_chunk** %chunk21, align 8, !dbg !1493
  %36 = bitcast %struct._obstack_chunk* %35 to i8*, !dbg !1493
  %cmp22 = icmp ugt i8* %33, %36, !dbg !1493
  br i1 %cmp22, label %land.lhs.true, label %if.else, !dbg !1493

land.lhs.true:                                    ; preds = %if.end18
  %37 = load i8** %__obj, align 8, !dbg !1493
  %38 = load %struct.obstack** %__o, align 8, !dbg !1493
  %chunk_limit24 = getelementptr inbounds %struct.obstack* %38, i32 0, i32 4, !dbg !1493
  %39 = load i8** %chunk_limit24, align 8, !dbg !1493
  %cmp25 = icmp ult i8* %37, %39, !dbg !1493
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !1493

if.then27:                                        ; preds = %land.lhs.true
  %40 = load i8** %__obj, align 8, !dbg !1493
  %41 = load %struct.obstack** %__o, align 8, !dbg !1493
  %object_base28 = getelementptr inbounds %struct.obstack* %41, i32 0, i32 2, !dbg !1493
  store i8* %40, i8** %object_base28, align 8, !dbg !1493
  %42 = load %struct.obstack** %__o, align 8, !dbg !1493
  %next_free29 = getelementptr inbounds %struct.obstack* %42, i32 0, i32 3, !dbg !1493
  store i8* %40, i8** %next_free29, align 8, !dbg !1493
  br label %if.end30, !dbg !1493

if.else:                                          ; preds = %land.lhs.true, %if.end18
  %43 = load %struct.obstack** %__o, align 8, !dbg !1493
  %44 = load i8** %__obj, align 8, !dbg !1493
  call void @obstack_free(%struct.obstack* %43, i8* %44), !dbg !1493
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then27
  %45 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1495
  %len_stack = getelementptr inbounds %struct.dirstack_state* %45, i32 0, i32 1, !dbg !1495
  store %struct.obstack* %len_stack, %struct.obstack** %__o32, align 8, !dbg !1495
  %46 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1497
  %len_stack37 = getelementptr inbounds %struct.dirstack_state* %46, i32 0, i32 1, !dbg !1497
  store %struct.obstack* %len_stack37, %struct.obstack** %__o136, align 8, !dbg !1497
  %47 = load %struct.obstack** %__o136, align 8, !dbg !1497
  %object_base40 = getelementptr inbounds %struct.obstack* %47, i32 0, i32 2, !dbg !1497
  %48 = load i8** %object_base40, align 8, !dbg !1497
  store i8* %48, i8** %__value39, align 8, !dbg !1497
  %49 = load %struct.obstack** %__o136, align 8, !dbg !1499
  %next_free41 = getelementptr inbounds %struct.obstack* %49, i32 0, i32 3, !dbg !1499
  %50 = load i8** %next_free41, align 8, !dbg !1499
  %51 = load i8** %__value39, align 8, !dbg !1499
  %cmp42 = icmp eq i8* %50, %51, !dbg !1499
  br i1 %cmp42, label %if.then44, label %if.end49, !dbg !1499

if.then44:                                        ; preds = %if.end30
  %52 = load %struct.obstack** %__o136, align 8, !dbg !1499
  %maybe_empty_object45 = getelementptr inbounds %struct.obstack* %52, i32 0, i32 10, !dbg !1499
  %bf.load46 = load i8* %maybe_empty_object45, align 8, !dbg !1499
  %bf.clear47 = and i8 %bf.load46, -3, !dbg !1499
  %bf.set48 = or i8 %bf.clear47, 2, !dbg !1499
  store i8 %bf.set48, i8* %maybe_empty_object45, align 8, !dbg !1499
  br label %if.end49, !dbg !1499

if.end49:                                         ; preds = %if.then44, %if.end30
  %53 = load %struct.obstack** %__o136, align 8, !dbg !1497
  %next_free50 = getelementptr inbounds %struct.obstack* %53, i32 0, i32 3, !dbg !1497
  %54 = load i8** %next_free50, align 8, !dbg !1497
  %sub.ptr.lhs.cast51 = ptrtoint i8* %54 to i64, !dbg !1497
  %sub.ptr.sub52 = sub i64 %sub.ptr.lhs.cast51, 0, !dbg !1497
  %55 = load %struct.obstack** %__o136, align 8, !dbg !1497
  %alignment_mask53 = getelementptr inbounds %struct.obstack* %55, i32 0, i32 6, !dbg !1497
  %56 = load i32* %alignment_mask53, align 4, !dbg !1497
  %conv54 = sext i32 %56 to i64, !dbg !1497
  %add55 = add nsw i64 %sub.ptr.sub52, %conv54, !dbg !1497
  %57 = load %struct.obstack** %__o136, align 8, !dbg !1497
  %alignment_mask56 = getelementptr inbounds %struct.obstack* %57, i32 0, i32 6, !dbg !1497
  %58 = load i32* %alignment_mask56, align 4, !dbg !1497
  %neg57 = xor i32 %58, -1, !dbg !1497
  %conv58 = sext i32 %neg57 to i64, !dbg !1497
  %and59 = and i64 %add55, %conv58, !dbg !1497
  %add.ptr60 = getelementptr inbounds i8* null, i64 %and59, !dbg !1497
  %59 = load %struct.obstack** %__o136, align 8, !dbg !1497
  %next_free61 = getelementptr inbounds %struct.obstack* %59, i32 0, i32 3, !dbg !1497
  store i8* %add.ptr60, i8** %next_free61, align 8, !dbg !1497
  %60 = load %struct.obstack** %__o136, align 8, !dbg !1501
  %next_free62 = getelementptr inbounds %struct.obstack* %60, i32 0, i32 3, !dbg !1501
  %61 = load i8** %next_free62, align 8, !dbg !1501
  %62 = load %struct.obstack** %__o136, align 8, !dbg !1501
  %chunk63 = getelementptr inbounds %struct.obstack* %62, i32 0, i32 1, !dbg !1501
  %63 = load %struct._obstack_chunk** %chunk63, align 8, !dbg !1501
  %64 = bitcast %struct._obstack_chunk* %63 to i8*, !dbg !1501
  %sub.ptr.lhs.cast64 = ptrtoint i8* %61 to i64, !dbg !1501
  %sub.ptr.rhs.cast65 = ptrtoint i8* %64 to i64, !dbg !1501
  %sub.ptr.sub66 = sub i64 %sub.ptr.lhs.cast64, %sub.ptr.rhs.cast65, !dbg !1501
  %65 = load %struct.obstack** %__o136, align 8, !dbg !1501
  %chunk_limit67 = getelementptr inbounds %struct.obstack* %65, i32 0, i32 4, !dbg !1501
  %66 = load i8** %chunk_limit67, align 8, !dbg !1501
  %67 = load %struct.obstack** %__o136, align 8, !dbg !1501
  %chunk68 = getelementptr inbounds %struct.obstack* %67, i32 0, i32 1, !dbg !1501
  %68 = load %struct._obstack_chunk** %chunk68, align 8, !dbg !1501
  %69 = bitcast %struct._obstack_chunk* %68 to i8*, !dbg !1501
  %sub.ptr.lhs.cast69 = ptrtoint i8* %66 to i64, !dbg !1501
  %sub.ptr.rhs.cast70 = ptrtoint i8* %69 to i64, !dbg !1501
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !1501
  %cmp72 = icmp sgt i64 %sub.ptr.sub66, %sub.ptr.sub71, !dbg !1501
  br i1 %cmp72, label %if.then74, label %if.end77, !dbg !1501

if.then74:                                        ; preds = %if.end49
  %70 = load %struct.obstack** %__o136, align 8, !dbg !1501
  %chunk_limit75 = getelementptr inbounds %struct.obstack* %70, i32 0, i32 4, !dbg !1501
  %71 = load i8** %chunk_limit75, align 8, !dbg !1501
  %72 = load %struct.obstack** %__o136, align 8, !dbg !1501
  %next_free76 = getelementptr inbounds %struct.obstack* %72, i32 0, i32 3, !dbg !1501
  store i8* %71, i8** %next_free76, align 8, !dbg !1501
  br label %if.end77, !dbg !1501

if.end77:                                         ; preds = %if.then74, %if.end49
  %73 = load %struct.obstack** %__o136, align 8, !dbg !1497
  %next_free78 = getelementptr inbounds %struct.obstack* %73, i32 0, i32 3, !dbg !1497
  %74 = load i8** %next_free78, align 8, !dbg !1497
  %75 = load %struct.obstack** %__o136, align 8, !dbg !1497
  %object_base79 = getelementptr inbounds %struct.obstack* %75, i32 0, i32 2, !dbg !1497
  store i8* %74, i8** %object_base79, align 8, !dbg !1497
  %76 = load i8** %__value39, align 8, !dbg !1497
  store i8* %76, i8** %tmp80, !dbg !1497
  %77 = load i8** %tmp80, !dbg !1497
  store i8* %77, i8** %__obj34, align 8, !dbg !1497
  %78 = load i8** %__obj34, align 8, !dbg !1503
  %79 = load %struct.obstack** %__o32, align 8, !dbg !1503
  %chunk81 = getelementptr inbounds %struct.obstack* %79, i32 0, i32 1, !dbg !1503
  %80 = load %struct._obstack_chunk** %chunk81, align 8, !dbg !1503
  %81 = bitcast %struct._obstack_chunk* %80 to i8*, !dbg !1503
  %cmp82 = icmp ugt i8* %78, %81, !dbg !1503
  br i1 %cmp82, label %land.lhs.true84, label %if.else91, !dbg !1503

land.lhs.true84:                                  ; preds = %if.end77
  %82 = load i8** %__obj34, align 8, !dbg !1503
  %83 = load %struct.obstack** %__o32, align 8, !dbg !1503
  %chunk_limit85 = getelementptr inbounds %struct.obstack* %83, i32 0, i32 4, !dbg !1503
  %84 = load i8** %chunk_limit85, align 8, !dbg !1503
  %cmp86 = icmp ult i8* %82, %84, !dbg !1503
  br i1 %cmp86, label %if.then88, label %if.else91, !dbg !1503

if.then88:                                        ; preds = %land.lhs.true84
  %85 = load i8** %__obj34, align 8, !dbg !1503
  %86 = load %struct.obstack** %__o32, align 8, !dbg !1503
  %object_base89 = getelementptr inbounds %struct.obstack* %86, i32 0, i32 2, !dbg !1503
  store i8* %85, i8** %object_base89, align 8, !dbg !1503
  %87 = load %struct.obstack** %__o32, align 8, !dbg !1503
  %next_free90 = getelementptr inbounds %struct.obstack* %87, i32 0, i32 3, !dbg !1503
  store i8* %85, i8** %next_free90, align 8, !dbg !1503
  br label %while.cond, !dbg !1503

if.else91:                                        ; preds = %land.lhs.true84, %if.end77
  %88 = load %struct.obstack** %__o32, align 8, !dbg !1503
  %89 = load i8** %__obj34, align 8, !dbg !1503
  call void @obstack_free(%struct.obstack* %88, i8* %89), !dbg !1503
  br label %while.cond

while.cond:                                       ; preds = %if.then88, %if.else91, %while.body
  %90 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1505
  %call = call i64 @AD_stack_height(%struct.dirstack_state* %90), !dbg !1505
  %cmp93 = icmp ult i64 0, %call, !dbg !1505
  %91 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1506
  br i1 %cmp93, label %while.body, label %while.end, !dbg !1505

while.body:                                       ; preds = %while.cond
  call void @AD_stack_pop(%struct.dirstack_state* %91), !dbg !1506
  br label %while.cond, !dbg !1506

while.end:                                        ; preds = %while.cond
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %91, i32 0, i32 2, !dbg !1507
  store %struct.obstack* %Active_dir, %struct.obstack** %__o96, align 8, !dbg !1507
  %92 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1509
  %Active_dir101 = getelementptr inbounds %struct.dirstack_state* %92, i32 0, i32 2, !dbg !1509
  store %struct.obstack* %Active_dir101, %struct.obstack** %__o1100, align 8, !dbg !1509
  %93 = load %struct.obstack** %__o1100, align 8, !dbg !1509
  %object_base104 = getelementptr inbounds %struct.obstack* %93, i32 0, i32 2, !dbg !1509
  %94 = load i8** %object_base104, align 8, !dbg !1509
  store i8* %94, i8** %__value103, align 8, !dbg !1509
  %95 = load %struct.obstack** %__o1100, align 8, !dbg !1511
  %next_free105 = getelementptr inbounds %struct.obstack* %95, i32 0, i32 3, !dbg !1511
  %96 = load i8** %next_free105, align 8, !dbg !1511
  %97 = load i8** %__value103, align 8, !dbg !1511
  %cmp106 = icmp eq i8* %96, %97, !dbg !1511
  br i1 %cmp106, label %if.then108, label %if.end113, !dbg !1511

if.then108:                                       ; preds = %while.end
  %98 = load %struct.obstack** %__o1100, align 8, !dbg !1511
  %maybe_empty_object109 = getelementptr inbounds %struct.obstack* %98, i32 0, i32 10, !dbg !1511
  %bf.load110 = load i8* %maybe_empty_object109, align 8, !dbg !1511
  %bf.clear111 = and i8 %bf.load110, -3, !dbg !1511
  %bf.set112 = or i8 %bf.clear111, 2, !dbg !1511
  store i8 %bf.set112, i8* %maybe_empty_object109, align 8, !dbg !1511
  br label %if.end113, !dbg !1511

if.end113:                                        ; preds = %if.then108, %while.end
  %99 = load %struct.obstack** %__o1100, align 8, !dbg !1509
  %next_free114 = getelementptr inbounds %struct.obstack* %99, i32 0, i32 3, !dbg !1509
  %100 = load i8** %next_free114, align 8, !dbg !1509
  %sub.ptr.lhs.cast115 = ptrtoint i8* %100 to i64, !dbg !1509
  %sub.ptr.sub116 = sub i64 %sub.ptr.lhs.cast115, 0, !dbg !1509
  %101 = load %struct.obstack** %__o1100, align 8, !dbg !1509
  %alignment_mask117 = getelementptr inbounds %struct.obstack* %101, i32 0, i32 6, !dbg !1509
  %102 = load i32* %alignment_mask117, align 4, !dbg !1509
  %conv118 = sext i32 %102 to i64, !dbg !1509
  %add119 = add nsw i64 %sub.ptr.sub116, %conv118, !dbg !1509
  %103 = load %struct.obstack** %__o1100, align 8, !dbg !1509
  %alignment_mask120 = getelementptr inbounds %struct.obstack* %103, i32 0, i32 6, !dbg !1509
  %104 = load i32* %alignment_mask120, align 4, !dbg !1509
  %neg121 = xor i32 %104, -1, !dbg !1509
  %conv122 = sext i32 %neg121 to i64, !dbg !1509
  %and123 = and i64 %add119, %conv122, !dbg !1509
  %add.ptr124 = getelementptr inbounds i8* null, i64 %and123, !dbg !1509
  %105 = load %struct.obstack** %__o1100, align 8, !dbg !1509
  %next_free125 = getelementptr inbounds %struct.obstack* %105, i32 0, i32 3, !dbg !1509
  store i8* %add.ptr124, i8** %next_free125, align 8, !dbg !1509
  %106 = load %struct.obstack** %__o1100, align 8, !dbg !1513
  %next_free126 = getelementptr inbounds %struct.obstack* %106, i32 0, i32 3, !dbg !1513
  %107 = load i8** %next_free126, align 8, !dbg !1513
  %108 = load %struct.obstack** %__o1100, align 8, !dbg !1513
  %chunk127 = getelementptr inbounds %struct.obstack* %108, i32 0, i32 1, !dbg !1513
  %109 = load %struct._obstack_chunk** %chunk127, align 8, !dbg !1513
  %110 = bitcast %struct._obstack_chunk* %109 to i8*, !dbg !1513
  %sub.ptr.lhs.cast128 = ptrtoint i8* %107 to i64, !dbg !1513
  %sub.ptr.rhs.cast129 = ptrtoint i8* %110 to i64, !dbg !1513
  %sub.ptr.sub130 = sub i64 %sub.ptr.lhs.cast128, %sub.ptr.rhs.cast129, !dbg !1513
  %111 = load %struct.obstack** %__o1100, align 8, !dbg !1513
  %chunk_limit131 = getelementptr inbounds %struct.obstack* %111, i32 0, i32 4, !dbg !1513
  %112 = load i8** %chunk_limit131, align 8, !dbg !1513
  %113 = load %struct.obstack** %__o1100, align 8, !dbg !1513
  %chunk132 = getelementptr inbounds %struct.obstack* %113, i32 0, i32 1, !dbg !1513
  %114 = load %struct._obstack_chunk** %chunk132, align 8, !dbg !1513
  %115 = bitcast %struct._obstack_chunk* %114 to i8*, !dbg !1513
  %sub.ptr.lhs.cast133 = ptrtoint i8* %112 to i64, !dbg !1513
  %sub.ptr.rhs.cast134 = ptrtoint i8* %115 to i64, !dbg !1513
  %sub.ptr.sub135 = sub i64 %sub.ptr.lhs.cast133, %sub.ptr.rhs.cast134, !dbg !1513
  %cmp136 = icmp sgt i64 %sub.ptr.sub130, %sub.ptr.sub135, !dbg !1513
  br i1 %cmp136, label %if.then138, label %if.end141, !dbg !1513

if.then138:                                       ; preds = %if.end113
  %116 = load %struct.obstack** %__o1100, align 8, !dbg !1513
  %chunk_limit139 = getelementptr inbounds %struct.obstack* %116, i32 0, i32 4, !dbg !1513
  %117 = load i8** %chunk_limit139, align 8, !dbg !1513
  %118 = load %struct.obstack** %__o1100, align 8, !dbg !1513
  %next_free140 = getelementptr inbounds %struct.obstack* %118, i32 0, i32 3, !dbg !1513
  store i8* %117, i8** %next_free140, align 8, !dbg !1513
  br label %if.end141, !dbg !1513

if.end141:                                        ; preds = %if.then138, %if.end113
  %119 = load %struct.obstack** %__o1100, align 8, !dbg !1509
  %next_free142 = getelementptr inbounds %struct.obstack* %119, i32 0, i32 3, !dbg !1509
  %120 = load i8** %next_free142, align 8, !dbg !1509
  %121 = load %struct.obstack** %__o1100, align 8, !dbg !1509
  %object_base143 = getelementptr inbounds %struct.obstack* %121, i32 0, i32 2, !dbg !1509
  store i8* %120, i8** %object_base143, align 8, !dbg !1509
  %122 = load i8** %__value103, align 8, !dbg !1509
  store i8* %122, i8** %tmp144, !dbg !1509
  %123 = load i8** %tmp144, !dbg !1509
  store i8* %123, i8** %__obj98, align 8, !dbg !1509
  %124 = load i8** %__obj98, align 8, !dbg !1515
  %125 = load %struct.obstack** %__o96, align 8, !dbg !1515
  %chunk145 = getelementptr inbounds %struct.obstack* %125, i32 0, i32 1, !dbg !1515
  %126 = load %struct._obstack_chunk** %chunk145, align 8, !dbg !1515
  %127 = bitcast %struct._obstack_chunk* %126 to i8*, !dbg !1515
  %cmp146 = icmp ugt i8* %124, %127, !dbg !1515
  br i1 %cmp146, label %land.lhs.true148, label %if.else155, !dbg !1515

land.lhs.true148:                                 ; preds = %if.end141
  %128 = load i8** %__obj98, align 8, !dbg !1515
  %129 = load %struct.obstack** %__o96, align 8, !dbg !1515
  %chunk_limit149 = getelementptr inbounds %struct.obstack* %129, i32 0, i32 4, !dbg !1515
  %130 = load i8** %chunk_limit149, align 8, !dbg !1515
  %cmp150 = icmp ult i8* %128, %130, !dbg !1515
  br i1 %cmp150, label %if.then152, label %if.else155, !dbg !1515

if.then152:                                       ; preds = %land.lhs.true148
  %131 = load i8** %__obj98, align 8, !dbg !1515
  %132 = load %struct.obstack** %__o96, align 8, !dbg !1515
  %object_base153 = getelementptr inbounds %struct.obstack* %132, i32 0, i32 2, !dbg !1515
  store i8* %131, i8** %object_base153, align 8, !dbg !1515
  %133 = load %struct.obstack** %__o96, align 8, !dbg !1515
  %next_free154 = getelementptr inbounds %struct.obstack* %133, i32 0, i32 3, !dbg !1515
  store i8* %131, i8** %next_free154, align 8, !dbg !1515
  br label %if.end156, !dbg !1515

if.else155:                                       ; preds = %land.lhs.true148, %if.end141
  %134 = load %struct.obstack** %__o96, align 8, !dbg !1515
  %135 = load i8** %__obj98, align 8, !dbg !1515
  call void @obstack_free(%struct.obstack* %134, i8* %135), !dbg !1515
  br label %if.end156

if.end156:                                        ; preds = %if.else155, %if.then152
  ret void, !dbg !1517
}

; Function Attrs: nounwind uwtable
define internal void @AD_stack_pop(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %top = alloca %struct.AD_ent*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1518
  %call = call i64 @AD_stack_height(%struct.dirstack_state* %0), !dbg !1518
  %cmp = icmp ult i64 0, %call, !dbg !1518
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !1518

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8]* @.str1562, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 389, i8* getelementptr inbounds ([36 x i8]* @__PRETTY_FUNCTION__.AD_stack_pop, i32 0, i32 0)) #
  unreachable, !dbg !1518

cond.end:                                         ; preds = %entry
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1519
  %call1 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %1), !dbg !1519
  store %struct.AD_ent* %call1, %struct.AD_ent** %top, align 8, !dbg !1519
  %2 = load %struct.AD_ent** %top, align 8, !dbg !1520
  %unremovable = getelementptr inbounds %struct.AD_ent* %2, i32 0, i32 0, !dbg !1520
  %3 = load %struct.hash_table** %unremovable, align 8, !dbg !1520
  %tobool = icmp ne %struct.hash_table* %3, null, !dbg !1520
  br i1 %tobool, label %if.then, label %if.end, !dbg !1520

if.then:                                          ; preds = %cond.end
  %4 = load %struct.AD_ent** %top, align 8, !dbg !1522
  %unremovable2 = getelementptr inbounds %struct.AD_ent* %4, i32 0, i32 0, !dbg !1522
  %5 = load %struct.hash_table** %unremovable2, align 8, !dbg !1522
  call void @hash_free(%struct.hash_table* %5), !dbg !1522
  br label %if.end, !dbg !1522

if.end:                                           ; preds = %if.then, %cond.end
  %6 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1523
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %6, i32 0, i32 2, !dbg !1523
  store %struct.obstack* %Active_dir, %struct.obstack** %__o, align 8, !dbg !1523
  store i32 -32, i32* %__len, align 4, !dbg !1523
  %7 = load %struct.obstack** %__o, align 8, !dbg !1525
  %chunk_limit = getelementptr inbounds %struct.obstack* %7, i32 0, i32 4, !dbg !1525
  %8 = load i8** %chunk_limit, align 8, !dbg !1525
  %9 = load %struct.obstack** %__o, align 8, !dbg !1525
  %next_free = getelementptr inbounds %struct.obstack* %9, i32 0, i32 3, !dbg !1525
  %10 = load i8** %next_free, align 8, !dbg !1525
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !1525
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64, !dbg !1525
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1525
  %11 = load i32* %__len, align 4, !dbg !1525
  %conv = sext i32 %11 to i64, !dbg !1525
  %cmp3 = icmp slt i64 %sub.ptr.sub, %conv, !dbg !1525
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !1525

if.then5:                                         ; preds = %if.end
  %12 = load %struct.obstack** %__o, align 8, !dbg !1525
  %13 = load i32* %__len, align 4, !dbg !1525
  call void @_obstack_newchunk(%struct.obstack* %12, i32 %13), !dbg !1525
  br label %if.end6, !dbg !1525

if.end6:                                          ; preds = %if.then5, %if.end
  %14 = load i32* %__len, align 4, !dbg !1523
  %15 = load %struct.obstack** %__o, align 8, !dbg !1523
  %next_free7 = getelementptr inbounds %struct.obstack* %15, i32 0, i32 3, !dbg !1523
  %16 = load i8** %next_free7, align 8, !dbg !1523
  %idx.ext = sext i32 %14 to i64, !dbg !1523
  %add.ptr = getelementptr inbounds i8* %16, i64 %idx.ext, !dbg !1523
  store i8* %add.ptr, i8** %next_free7, align 8, !dbg !1523
  ret void, !dbg !1527
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @AD_stack_height(%struct.dirstack_state* %ds) #10 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %__o = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1528
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 2, !dbg !1528
  store %struct.obstack* %Active_dir, %struct.obstack** %__o, align 8, !dbg !1528
  %1 = load %struct.obstack** %__o, align 8, !dbg !1528
  %next_free = getelementptr inbounds %struct.obstack* %1, i32 0, i32 3, !dbg !1528
  %2 = load i8** %next_free, align 8, !dbg !1528
  %3 = load %struct.obstack** %__o, align 8, !dbg !1528
  %object_base = getelementptr inbounds %struct.obstack* %3, i32 0, i32 2, !dbg !1528
  %4 = load i8** %object_base, align 8, !dbg !1528
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !1528
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !1528
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1528
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !1528
  store i32 %conv, i32* %tmp, !dbg !1528
  %5 = load i32* %tmp, !dbg !1528
  %conv1 = zext i32 %5 to i64, !dbg !1528
  %int_cast_to_i64 = bitcast i64 32 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !1528
  %div = udiv i64 %conv1, 32, !dbg !1528
  ret i64 %div, !dbg !1528
}

; Function Attrs: nounwind uwtable
define internal void @AD_stack_clear(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  br label %while.cond, !dbg !1530

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1531
  %call = call i64 @AD_stack_height(%struct.dirstack_state* %0), !dbg !1531
  %cmp = icmp ult i64 0, %call, !dbg !1531
  br i1 %cmp, label %while.body, label %while.end, !dbg !1531

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1532
  call void @AD_stack_pop(%struct.dirstack_state* %1), !dbg !1532
  br label %while.cond, !dbg !1534

while.end:                                        ; preds = %while.cond
  ret void, !dbg !1535
}

; Function Attrs: nounwind uwtable
define internal i32 @remove_dir(i32 %fd_cwd, %struct.dirstack_state* %ds, i8* %dir, %struct.stat* %dir_st, %struct.rm_options* %x, i32* %cwd_errno) #0 {
entry:
  %retval = alloca i32, align 4
  %fd_cwd.addr = alloca i32, align 4
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %dir.addr = alloca i8*, align 8
  %dir_st.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %cwd_errno.addr = alloca i32*, align 8
  %status = alloca i32, align 4
  %current_dev = alloca i64, align 8
  %dirp = alloca %struct.__dirstream*, align 8
  %saved_errno = alloca i32, align 4
  %subdir = alloca i8*, align 8
  %subdir_sb = alloca %struct.stat, align 8
  %tmp_status = alloca i32, align 4
  %fd = alloca i32, align 4
  %empty_dir = alloca i8*, align 8
  %empty_st = alloca %struct.stat, align 8
  %is_empty = alloca i32, align 4
  %s = alloca i32, align 4
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %dir, i8** %dir.addr, align 8
  store %struct.stat* %dir_st, %struct.stat** %dir_st.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32* %cwd_errno, i32** %cwd_errno.addr, align 8
  %0 = load %struct.stat** %dir_st.addr, align 8, !dbg !1536
  %st_dev = getelementptr inbounds %struct.stat* %0, i32 0, i32 0, !dbg !1536
  %1 = load i64* %st_dev, align 8, !dbg !1536
  store i64 %1, i64* %current_dev, align 8, !dbg !1536
  %2 = load i32* %fd_cwd.addr, align 4, !dbg !1537
  %3 = load i8** %dir.addr, align 8, !dbg !1537
  %4 = load %struct.rm_options** %x.addr, align 8, !dbg !1537
  %5 = load %struct.stat** %dir_st.addr, align 8, !dbg !1537
  %6 = load i32** %cwd_errno.addr, align 8, !dbg !1537
  %call = call %struct.__dirstream* @fd_to_subdirp(i32 %2, i8* %3, %struct.rm_options* %4, i32 0, %struct.stat* %5, i32* %6), !dbg !1537
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !1537
  %7 = load %struct.__dirstream** %dirp, align 8, !dbg !1538
  %cmp = icmp eq %struct.__dirstream* %7, null, !dbg !1538
  %8 = load %struct.rm_options** %x.addr, align 8, !dbg !1540
  br i1 %cmp, label %if.then, label %if.end11, !dbg !1538

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #1, !dbg !1543
  %9 = load i32* %call1, align 4, !dbg !1543
  %call2 = call zeroext i1 @ignorable_missing(%struct.rm_options* %8, i32 %9), !dbg !1540
  br i1 %call2, label %if.end10, label %if.else, !dbg !1540

if.else:                                          ; preds = %if.then
  %call4 = call i32* @__errno_location() #1, !dbg !1544
  %10 = load i32* %call4, align 4, !dbg !1544
  store i32 %10, i32* %saved_errno, align 4, !dbg !1544
  %11 = load i32* %fd_cwd.addr, align 4, !dbg !1546
  %12 = load i8** %dir.addr, align 8, !dbg !1546
  %call5 = call i32 @unlinkat(i32 %11, i8* %12, i32 512) #9, !dbg !1546
  %cmp6 = icmp eq i32 %call5, 0, !dbg !1546
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !1546

if.then7:                                         ; preds = %if.else
  store i32 2, i32* %retval, !dbg !1548
  br label %return, !dbg !1548

if.end:                                           ; preds = %if.else
  %13 = load i32* %saved_errno, align 4, !dbg !1549
  %conv = sext i32 %13 to i64, !dbg !1549
  %14 = inttoptr i64 %conv to i32* (...)*, !dbg !1549
  %15 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1549
  %16 = load i8** %dir.addr, align 8, !dbg !1549
  %call8 = call i8* @full_filename_(%struct.dirstack_state* %15, i8* %16), !dbg !1549
  %call9 = call i8* @quote(i8* %call8), !dbg !1549
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %14, i8* getelementptr inbounds ([17 x i8]* @.str1360, i32 0, i32 0), i8* %call9), !dbg !1549
  br label %if.end10

if.end10:                                         ; preds = %if.then, %if.end
  store i32 4, i32* %retval, !dbg !1550
  br label %return, !dbg !1550

if.end11:                                         ; preds = %entry
  %root_dev_ino = getelementptr inbounds %struct.rm_options* %8, i32 0, i32 4, !dbg !1551
  %17 = load %struct.dev_ino** %root_dev_ino, align 8, !dbg !1551
  %tobool = icmp ne %struct.dev_ino* %17, null, !dbg !1551
  br i1 %tobool, label %land.lhs.true, label %if.end35, !dbg !1551

land.lhs.true:                                    ; preds = %if.end11
  %18 = load %struct.stat** %dir_st.addr, align 8, !dbg !1551
  %st_ino = getelementptr inbounds %struct.stat* %18, i32 0, i32 1, !dbg !1551
  %19 = load i64* %st_ino, align 8, !dbg !1551
  %20 = load %struct.rm_options** %x.addr, align 8, !dbg !1551
  %root_dev_ino12 = getelementptr inbounds %struct.rm_options* %20, i32 0, i32 4, !dbg !1551
  %21 = load %struct.dev_ino** %root_dev_ino12, align 8, !dbg !1551
  %st_ino13 = getelementptr inbounds %struct.dev_ino* %21, i32 0, i32 0, !dbg !1551
  %22 = load i64* %st_ino13, align 8, !dbg !1551
  %cmp14 = icmp eq i64 %19, %22, !dbg !1551
  br i1 %cmp14, label %land.lhs.true16, label %if.end35, !dbg !1551

land.lhs.true16:                                  ; preds = %land.lhs.true
  %23 = load %struct.stat** %dir_st.addr, align 8, !dbg !1551
  %st_dev17 = getelementptr inbounds %struct.stat* %23, i32 0, i32 0, !dbg !1551
  %24 = load i64* %st_dev17, align 8, !dbg !1551
  %25 = load %struct.rm_options** %x.addr, align 8, !dbg !1551
  %root_dev_ino18 = getelementptr inbounds %struct.rm_options* %25, i32 0, i32 4, !dbg !1551
  %26 = load %struct.dev_ino** %root_dev_ino18, align 8, !dbg !1551
  %st_dev19 = getelementptr inbounds %struct.dev_ino* %26, i32 0, i32 1, !dbg !1551
  %27 = load i64* %st_dev19, align 8, !dbg !1551
  %cmp20 = icmp eq i64 %24, %27, !dbg !1551
  br i1 %cmp20, label %do.body, label %if.end35, !dbg !1551

do.body:                                          ; preds = %land.lhs.true16
  %28 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1553
  %29 = load i8** %dir.addr, align 8, !dbg !1553
  %call23 = call i8* @full_filename_(%struct.dirstack_state* %28, i8* %29), !dbg !1553
  %call24 = call i32 @strcmp(i8* %call23, i8* getelementptr inbounds ([2 x i8]* @.str1663, i32 0, i32 0)) #19, !dbg !1553
  %cmp25 = icmp eq i32 %call24, 0, !dbg !1553
  %30 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1553
  %31 = load i8** %dir.addr, align 8, !dbg !1553
  %call28 = call i8* @full_filename_(%struct.dirstack_state* %30, i8* %31), !dbg !1553
  br i1 %cmp25, label %if.then27, label %if.else30, !dbg !1553

if.then27:                                        ; preds = %do.body
  %call29 = call i8* @quote(i8* %call28), !dbg !1553
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 0, i8* getelementptr inbounds ([45 x i8]* @.str1764, i32 0, i32 0), i8* %call29), !dbg !1553
  br label %if.end34, !dbg !1553

if.else30:                                        ; preds = %do.body
  %call32 = call i8* @quote_n(i32 0, i8* %call28), !dbg !1553
  %call33 = call i8* @quote_n(i32 1, i8* getelementptr inbounds ([2 x i8]* @.str1663, i32 0, i32 0)), !dbg !1553
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 0, i8* getelementptr inbounds ([58 x i8]* @.str1865, i32 0, i32 0), i8* %call32, i8* %call33), !dbg !1553
  br label %if.end34

if.end34:                                         ; preds = %if.else30, %if.then27
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 0, i8* getelementptr inbounds ([49 x i8]* @.str1966, i32 0, i32 0)), !dbg !1557
  store i32 4, i32* %status, align 4, !dbg !1558
  br label %closedir_and_return, !dbg !1559

if.end35:                                         ; preds = %land.lhs.true16, %land.lhs.true, %if.end11
  %32 = load %struct.__dirstream** %dirp, align 8, !dbg !1560
  %call36 = call i32 @dirfd(%struct.__dirstream* %32) #9, !dbg !1560
  %33 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1560
  %34 = load i8** %dir.addr, align 8, !dbg !1560
  %35 = load %struct.stat** %dir_st.addr, align 8, !dbg !1560
  call void @AD_push(i32 %call36, %struct.dirstack_state* %33, i8* %34, %struct.stat* %35), !dbg !1560
  %36 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1561
  %call38 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %36), !dbg !1561
  %status39 = getelementptr inbounds %struct.AD_ent* %call38, i32 0, i32 1, !dbg !1561
  store i32 2, i32* %status39, align 4, !dbg !1561
  store i32 2, i32* %status, align 4, !dbg !1563
  br label %while.body, !dbg !1564

while.body:                                       ; preds = %if.end143, %if.then64, %if.end35
  store i8* null, i8** %subdir, align 8, !dbg !1565
  %37 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1567
  %38 = load %struct.rm_options** %x.addr, align 8, !dbg !1567
  %call41 = call i32 @remove_cwd_entries(%struct.__dirstream** %dirp, %struct.dirstack_state* %37, i8** %subdir, %struct.stat* %subdir_sb, %struct.rm_options* %38), !dbg !1567
  store i32 %call41, i32* %tmp_status, align 4, !dbg !1567
  %39 = load i32* %tmp_status, align 4, !dbg !1568
  %cmp42 = icmp ne i32 %39, 2, !dbg !1568
  br i1 %cmp42, label %do.body45, label %if.end56, !dbg !1568

do.body45:                                        ; preds = %while.body
  %40 = load i32* %tmp_status, align 4, !dbg !1570
  %cmp46 = icmp eq i32 %40, 4, !dbg !1570
  br i1 %cmp46, label %if.then53, label %lor.lhs.false, !dbg !1570

lor.lhs.false:                                    ; preds = %do.body45
  %41 = load i32* %tmp_status, align 4, !dbg !1570
  %cmp48 = icmp eq i32 %41, 3, !dbg !1570
  %42 = load i32* %status, align 4, !dbg !1570
  %cmp51 = icmp eq i32 %42, 2, !dbg !1570
  %or.cond = and i1 %cmp48, %cmp51, !dbg !1570
  br i1 %or.cond, label %if.then53, label %do.end55, !dbg !1570

if.then53:                                        ; preds = %lor.lhs.false, %do.body45
  %43 = load i32* %tmp_status, align 4, !dbg !1570
  store i32 %43, i32* %status, align 4, !dbg !1570
  br label %do.end55, !dbg !1570

do.end55:                                         ; preds = %lor.lhs.false, %if.then53
  %44 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1574
  call void @AD_mark_current_as_unremovable(%struct.dirstack_state* %44), !dbg !1574
  br label %if.end56, !dbg !1575

if.end56:                                         ; preds = %do.end55, %while.body
  %45 = load i8** %subdir, align 8, !dbg !1576
  %tobool57 = icmp ne i8* %45, null, !dbg !1576
  br i1 %tobool57, label %if.then58, label %if.end85, !dbg !1576

if.then58:                                        ; preds = %if.end56
  %46 = load %struct.rm_options** %x.addr, align 8, !dbg !1578
  %one_file_system = getelementptr inbounds %struct.rm_options* %46, i32 0, i32 2, !dbg !1578
  %47 = load i8* %one_file_system, align 1, !dbg !1578
  %tobool59 = trunc i8 %47 to i1, !dbg !1578
  br i1 %tobool59, label %lor.lhs.false60, label %if.then64, !dbg !1578

lor.lhs.false60:                                  ; preds = %if.then58
  %st_dev61 = getelementptr inbounds %struct.stat* %subdir_sb, i32 0, i32 0, !dbg !1578
  %48 = load i64* %st_dev61, align 8, !dbg !1578
  %49 = load i64* %current_dev, align 8, !dbg !1578
  %cmp62 = icmp eq i64 %48, %49, !dbg !1578
  br i1 %cmp62, label %if.then64, label %if.end70, !dbg !1578

if.then64:                                        ; preds = %lor.lhs.false60, %if.then58
  %50 = load %struct.__dirstream** %dirp, align 8, !dbg !1581
  %call65 = call i32 @dirfd(%struct.__dirstream* %50) #9, !dbg !1581
  %51 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1581
  %52 = load i8** %subdir, align 8, !dbg !1581
  call void @AD_push(i32 %call65, %struct.dirstack_state* %51, i8* %52, %struct.stat* %subdir_sb), !dbg !1581
  %53 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1583
  %call67 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %53), !dbg !1583
  %status68 = getelementptr inbounds %struct.AD_ent* %call67, i32 0, i32 1, !dbg !1583
  store i32 2, i32* %status68, align 4, !dbg !1583
  %54 = load i8** %subdir, align 8, !dbg !1585
  call void @free(i8* %54) #9, !dbg !1585
  br label %while.body, !dbg !1586

if.end70:                                         ; preds = %lor.lhs.false60
  %55 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1587
  %56 = load i8** %subdir, align 8, !dbg !1587
  %call71 = call i8* @full_filename_(%struct.dirstack_state* %55, i8* %56), !dbg !1587
  %call72 = call i8* @quote(i8* %call71), !dbg !1587
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* getelementptr inbounds ([46 x i8]* @.str2067, i32 0, i32 0), i8* %call72), !dbg !1587
  %57 = load i8** %subdir, align 8, !dbg !1588
  call void @free(i8* %57) #9, !dbg !1588
  %58 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1589
  call void @AD_mark_current_as_unremovable(%struct.dirstack_state* %58), !dbg !1589
  store i32 4, i32* %tmp_status, align 4, !dbg !1590
  %59 = load i32* %tmp_status, align 4, !dbg !1591
  %cmp74 = icmp eq i32 %59, 4, !dbg !1591
  br i1 %cmp74, label %if.then82, label %lor.lhs.false76, !dbg !1591

lor.lhs.false76:                                  ; preds = %if.end70
  %60 = load i32* %tmp_status, align 4, !dbg !1591
  %cmp77 = icmp eq i32 %60, 3, !dbg !1591
  %61 = load i32* %status, align 4, !dbg !1591
  %cmp80 = icmp eq i32 %61, 2, !dbg !1591
  %or.cond1 = and i1 %cmp77, %cmp80, !dbg !1591
  br i1 %or.cond1, label %if.then82, label %if.end85, !dbg !1591

if.then82:                                        ; preds = %lor.lhs.false76, %if.end70
  %62 = load i32* %tmp_status, align 4, !dbg !1591
  store i32 %62, i32* %status, align 4, !dbg !1591
  br label %if.end85, !dbg !1591

if.end85:                                         ; preds = %if.then82, %lor.lhs.false76, %if.end56
  %63 = load %struct.__dirstream** %dirp, align 8, !dbg !1594
  %64 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1594
  %call86 = call i8* @AD_pop_and_chdir(%struct.__dirstream* %63, i32* %fd, %struct.dirstack_state* %64), !dbg !1594
  store i8* %call86, i8** %empty_dir, align 8, !dbg !1594
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !1596
  %65 = load i32* %fd, align 4, !dbg !1597
  %cmp87 = icmp ne i32 %65, -100, !dbg !1597
  br i1 %cmp87, label %cond.end, label %lor.lhs.false89, !dbg !1597

lor.lhs.false89:                                  ; preds = %if.end85
  %66 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1597
  %call90 = call i64 @AD_stack_height(%struct.dirstack_state* %66), !dbg !1597
  %cmp91 = icmp eq i64 %call90, 1, !dbg !1597
  br i1 %cmp91, label %cond.end, label %cond.false, !dbg !1597

cond.false:                                       ; preds = %lor.lhs.false89
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8]* @.str2168, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 1477, i8* getelementptr inbounds ([112 x i8]* @__PRETTY_FUNCTION__.remove_dir, i32 0, i32 0)) #
  unreachable, !dbg !1597

cond.end:                                         ; preds = %if.end85, %lor.lhs.false89
  %67 = load i32* %tmp_status, align 4, !dbg !1598
  %cmp93 = icmp eq i32 %67, 2, !dbg !1598
  br i1 %cmp93, label %if.then95, label %if.end139, !dbg !1598

if.then95:                                        ; preds = %cond.end
  %68 = load i32* %fd, align 4, !dbg !1600
  %69 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1600
  %70 = load i8** %empty_dir, align 8, !dbg !1600
  %call96 = call %struct.stat* @cache_stat_init(%struct.stat* %empty_st), !dbg !1602
  %71 = load %struct.rm_options** %x.addr, align 8, !dbg !1600
  %call97 = call i32 @prompt(i32 %68, %struct.dirstack_state* %69, i8* %70, %struct.stat* %call96, %struct.rm_options* %71, i32 3, i32* %is_empty), !dbg !1600
  store i32 %call97, i32* %s, align 4, !dbg !1600
  %72 = load i32* %s, align 4, !dbg !1603
  %cmp98 = icmp ne i32 %72, 2, !dbg !1603
  br i1 %cmp98, label %if.then100, label %if.end106, !dbg !1603

if.then100:                                       ; preds = %if.then95
  %73 = load i8** %empty_dir, align 8, !dbg !1605
  call void @free(i8* %73) #9, !dbg !1605
  %74 = load i32* %s, align 4, !dbg !1607
  store i32 %74, i32* %status, align 4, !dbg !1607
  %75 = load i32* %fd, align 4, !dbg !1608
  %cmp101 = icmp ne i32 %75, -100, !dbg !1608
  br i1 %cmp101, label %if.then103, label %closedir_and_return, !dbg !1608

if.then103:                                       ; preds = %if.then100
  %76 = load i32* %fd, align 4, !dbg !1610
  %call104 = call i32 @close(i32 %76), !dbg !1610
  br label %closedir_and_return, !dbg !1610

if.end106:                                        ; preds = %if.then95
  %77 = load i32* %fd, align 4, !dbg !1611
  %78 = load i8** %empty_dir, align 8, !dbg !1611
  %call107 = call i32 @unlinkat(i32 %77, i8* %78, i32 512) #9, !dbg !1611
  %cmp108 = icmp eq i32 %call107, 0, !dbg !1611
  br i1 %cmp108, label %if.then110, label %if.else117, !dbg !1611

if.then110:                                       ; preds = %if.end106
  %79 = load %struct.rm_options** %x.addr, align 8, !dbg !1613
  %verbose = getelementptr inbounds %struct.rm_options* %79, i32 0, i32 6, !dbg !1613
  %80 = load i8* %verbose, align 1, !dbg !1613
  %tobool111 = trunc i8 %80 to i1, !dbg !1613
  br i1 %tobool111, label %if.then112, label %if.end139, !dbg !1613

if.then112:                                       ; preds = %if.then110
  %81 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1616
  %82 = load i8** %empty_dir, align 8, !dbg !1616
  %call113 = call i8* @full_filename_(%struct.dirstack_state* %81, i8* %82), !dbg !1616
  %call114 = call i8* @quote(i8* %call113), !dbg !1616
  %call115 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str2269, i32 0, i32 0), i8* %call114), !dbg !1617
  br label %if.end139, !dbg !1617

if.else117:                                       ; preds = %if.end106
  %call118 = call i32* @__errno_location() #1, !dbg !1618
  %83 = load i32* %call118, align 4, !dbg !1618
  %conv119 = sext i32 %83 to i64, !dbg !1618
  %84 = inttoptr i64 %conv119 to i32* (...)*, !dbg !1618
  %85 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1618
  %86 = load i8** %empty_dir, align 8, !dbg !1618
  %call120 = call i8* @full_filename_(%struct.dirstack_state* %85, i8* %86), !dbg !1618
  %call121 = call i8* @quote(i8* %call120), !dbg !1618
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %84, i8* getelementptr inbounds ([27 x i8]* @.str1158, i32 0, i32 0), i8* %call121), !dbg !1618
  %87 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1620
  %88 = load i8** %empty_dir, align 8, !dbg !1620
  call void @AD_mark_as_unremovable(%struct.dirstack_state* %87, i8* %88), !dbg !1620
  store i32 4, i32* %status, align 4, !dbg !1621
  %89 = load i32* %status, align 4, !dbg !1622
  %cmp123 = icmp eq i32 %89, 4, !dbg !1622
  br i1 %cmp123, label %if.then133, label %lor.lhs.false125, !dbg !1622

lor.lhs.false125:                                 ; preds = %if.else117
  %90 = load i32* %status, align 4, !dbg !1622
  %cmp126 = icmp eq i32 %90, 3, !dbg !1622
  br i1 %cmp126, label %land.lhs.true128, label %if.end139, !dbg !1622

land.lhs.true128:                                 ; preds = %lor.lhs.false125
  %91 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1622
  %call129 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %91), !dbg !1622
  %status130 = getelementptr inbounds %struct.AD_ent* %call129, i32 0, i32 1, !dbg !1622
  %92 = load i32* %status130, align 4, !dbg !1622
  %cmp131 = icmp eq i32 %92, 2, !dbg !1622
  br i1 %cmp131, label %if.then133, label %if.end139, !dbg !1622

if.then133:                                       ; preds = %land.lhs.true128, %if.else117
  %93 = load i32* %status, align 4, !dbg !1622
  %94 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1622
  %call134 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %94), !dbg !1622
  %status135 = getelementptr inbounds %struct.AD_ent* %call134, i32 0, i32 1, !dbg !1622
  store i32 %93, i32* %status135, align 4, !dbg !1622
  br label %if.end139, !dbg !1622

if.end139:                                        ; preds = %if.then112, %if.then110, %lor.lhs.false125, %land.lhs.true128, %if.then133, %cond.end
  %95 = load i8** %empty_dir, align 8, !dbg !1625
  call void @free(i8* %95) #9, !dbg !1625
  %96 = load i32* %fd, align 4, !dbg !1626
  %cmp140 = icmp eq i32 %96, -100, !dbg !1626
  br i1 %cmp140, label %while.end, label %if.end143, !dbg !1626

if.end143:                                        ; preds = %if.end139
  %97 = load i32* %fd, align 4, !dbg !1628
  %call144 = call %struct.__dirstream* @fdopendir(i32 %97), !dbg !1628
  store %struct.__dirstream* %call144, %struct.__dirstream** %dirp, align 8, !dbg !1628
  %98 = load %struct.__dirstream** %dirp, align 8, !dbg !1629
  %cmp145 = icmp eq %struct.__dirstream* %98, null, !dbg !1629
  br i1 %cmp145, label %if.then147, label %while.body, !dbg !1629

if.then147:                                       ; preds = %if.end143
  %call148 = call i32* @__errno_location() #1, !dbg !1631
  %99 = load i32* %call148, align 4, !dbg !1631
  %conv149 = sext i32 %99 to i64, !dbg !1631
  %100 = inttoptr i64 %conv149 to i32* (...)*, !dbg !1631
  %101 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1631
  %call150 = call i8* @full_filename_(%struct.dirstack_state* %101, i8* getelementptr inbounds ([2 x i8]* @.str2471, i32 0, i32 0)), !dbg !1631
  %call151 = call i8* @quote(i8* %call150), !dbg !1631
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %100, i8* getelementptr inbounds ([35 x i8]* @.str2370, i32 0, i32 0), i8* %call151), !dbg !1631
  %102 = load i32* %fd, align 4, !dbg !1633
  %call152 = call i32 @close(i32 %102), !dbg !1633
  %103 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1634
  %current_arg_jumpbuf = getelementptr inbounds %struct.dirstack_state* %103, i32 0, i32 4, !dbg !1634
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag]* %current_arg_jumpbuf, i32 0, i32 0, !dbg !1634
  call void @longjmp(%struct.__jmp_buf_tag* %arraydecay, i32 1) #17, !dbg !1634
  unreachable, !dbg !1634

while.end:                                        ; preds = %if.end139
  %104 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1635
  call void @AD_stack_pop(%struct.dirstack_state* %104), !dbg !1635
  br label %closedir_and_return, !dbg !1635

closedir_and_return:                              ; preds = %if.then100, %if.then103, %while.end, %if.end34
  %105 = load %struct.__dirstream** %dirp, align 8, !dbg !1636
  %cmp154 = icmp ne %struct.__dirstream* %105, null, !dbg !1636
  br i1 %cmp154, label %land.lhs.true156, label %if.end163, !dbg !1636

land.lhs.true156:                                 ; preds = %closedir_and_return
  %106 = load %struct.__dirstream** %dirp, align 8, !dbg !1636
  %call157 = call i32 @closedir(%struct.__dirstream* %106), !dbg !1636
  %cmp158 = icmp ne i32 %call157, 0, !dbg !1636
  br i1 %cmp158, label %if.then160, label %if.end163, !dbg !1636

if.then160:                                       ; preds = %land.lhs.true156
  %107 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1638
  %call161 = call i8* @full_filename_(%struct.dirstack_state* %107, i8* getelementptr inbounds ([2 x i8]* @.str2471, i32 0, i32 0)), !dbg !1638
  %call162 = call i8* @quote(i8* %call161), !dbg !1638
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* getelementptr inbounds ([29 x i8]* @.str2572, i32 0, i32 0), i8* %call162), !dbg !1638
  store i32 4, i32* %status, align 4, !dbg !1640
  br label %if.end163, !dbg !1641

if.end163:                                        ; preds = %if.then160, %land.lhs.true156, %closedir_and_return
  %108 = load i32* %status, align 4, !dbg !1642
  store i32 %108, i32* %retval, !dbg !1642
  br label %return, !dbg !1642

return:                                           ; preds = %if.end163, %if.end10, %if.then7
  %109 = load i32* %retval, !dbg !1643
  ret i32 %109, !dbg !1643
}

; Function Attrs: nounwind uwtable
define internal void @AD_mark_as_unremovable(%struct.dirstack_state* %ds, i8* %filename) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %filename.addr = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1644
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %0), !dbg !1644
  %unremovable = getelementptr inbounds %struct.AD_ent* %call, i32 0, i32 0, !dbg !1644
  %1 = load i8** %filename.addr, align 8, !dbg !1645
  %call1 = call i8* @xstrdup(i8* %1), !dbg !1645
  call void @AD_mark_helper(%struct.hash_table** %unremovable, i8* %call1), !dbg !1645
  ret void, !dbg !1646
}

; Function Attrs: nounwind uwtable
define internal void @AD_mark_helper(%struct.hash_table** %ht, i8* %filename) #0 {
entry:
  %ht.addr = alloca %struct.hash_table**, align 8
  %filename.addr = alloca i8*, align 8
  %ent = alloca i8*, align 8
  store %struct.hash_table** %ht, %struct.hash_table*** %ht.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load %struct.hash_table*** %ht.addr, align 8, !dbg !1647
  %call = call %struct.hash_table* @AD_ensure_initialized(%struct.hash_table** %0), !dbg !1647
  %1 = load i8** %filename.addr, align 8, !dbg !1647
  %call1 = call i8* @hash_insert(%struct.hash_table* %call, i8* %1), !dbg !1647
  store i8* %call1, i8** %ent, align 8, !dbg !1647
  %2 = load i8** %ent, align 8, !dbg !1648
  %cmp = icmp eq i8* %2, null, !dbg !1648
  br i1 %cmp, label %if.then, label %if.else, !dbg !1648

if.then:                                          ; preds = %entry
  call void @xalloc_die() #20, !dbg !1650
  unreachable, !dbg !1650

if.else:                                          ; preds = %entry
  %3 = load i8** %ent, align 8, !dbg !1651
  %4 = load i8** %filename.addr, align 8, !dbg !1651
  %cmp2 = icmp ne i8* %3, %4, !dbg !1651
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !1651

if.then3:                                         ; preds = %if.else
  %5 = load i8** %filename.addr, align 8, !dbg !1654
  call void @free(i8* %5) #9, !dbg !1654
  br label %if.end4, !dbg !1654

if.end4:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !1655
}

; Function Attrs: nounwind uwtable
define internal %struct.hash_table* @AD_ensure_initialized(%struct.hash_table** %ht) #0 {
entry:
  %ht.addr = alloca %struct.hash_table**, align 8
  store %struct.hash_table** %ht, %struct.hash_table*** %ht.addr, align 8
  %0 = load %struct.hash_table*** %ht.addr, align 8, !dbg !1656
  %1 = load %struct.hash_table** %0, align 8, !dbg !1656
  %cmp = icmp eq %struct.hash_table* %1, null, !dbg !1656
  br i1 %cmp, label %if.then, label %if.end3, !dbg !1656

if.then:                                          ; preds = %entry
  %call = call %struct.hash_table* @hash_initialize(i64 13, %struct.hash_tuning* null, i64 (i8*, i64)* @hash_pjw, i1 (i8*, i8*)* @hash_compare_strings, void (i8*)* @hash_freer), !dbg !1658
  %2 = load %struct.hash_table*** %ht.addr, align 8, !dbg !1658
  store %struct.hash_table* %call, %struct.hash_table** %2, align 8, !dbg !1658
  %3 = load %struct.hash_table*** %ht.addr, align 8, !dbg !1660
  %4 = load %struct.hash_table** %3, align 8, !dbg !1660
  %cmp1 = icmp eq %struct.hash_table* %4, null, !dbg !1660
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !1660

if.then2:                                         ; preds = %if.then
  call void @xalloc_die() #20, !dbg !1662
  unreachable, !dbg !1662

if.end3:                                          ; preds = %if.then, %entry
  %5 = load %struct.hash_table*** %ht.addr, align 8, !dbg !1663
  %6 = load %struct.hash_table** %5, align 8, !dbg !1663
  ret %struct.hash_table* %6, !dbg !1663
}

; Function Attrs: nounwind uwtable
define internal void @hash_freer(i8* %x) #0 {
entry:
  %x.addr = alloca i8*, align 8
  store i8* %x, i8** %x.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !1664
  call void @free(i8* %0) #9, !dbg !1664
  ret void, !dbg !1665
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @hash_compare_strings(i8* %x, i8* %y) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  store i8* %x, i8** %x.addr, align 8
  store i8* %y, i8** %y.addr, align 8
  %0 = load i8** %x.addr, align 8, !dbg !1666
  %1 = load i8** %y.addr, align 8, !dbg !1666
  %call = call i32 @strcmp(i8* %0, i8* %1) #19, !dbg !1666
  %cmp = icmp eq i32 %call, 0, !dbg !1666
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !1666
  %tobool = icmp ne i32 %cond, 0, !dbg !1666
  ret i1 %tobool, !dbg !1666
}

; Function Attrs: nounwind uwtable
define internal i32 @prompt(i32 %fd_cwd, %struct.dirstack_state* %ds, i8* %filename, %struct.stat* %sbuf, %struct.rm_options* %x, i32 %mode, i32* %is_empty) #0 {
entry:
  %retval = alloca i32, align 4
  %fd_cwd.addr = alloca i32, align 4
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %filename.addr = alloca i8*, align 8
  %sbuf.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %mode.addr = alloca i32, align 4
  %is_empty.addr = alloca i32*, align 8
  %write_protected = alloca i8, align 1
  %quoted_name = alloca i8*, align 8
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store %struct.stat* %sbuf, %struct.stat** %sbuf.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store i32* %is_empty, i32** %is_empty.addr, align 8
  store i8 0, i8* %write_protected, align 1, !dbg !1667
  %0 = load i32** %is_empty.addr, align 8, !dbg !1668
  store i32 2, i32* %0, align 4, !dbg !1668
  %call6 = call i32 @klee_get_false(), !dbg !1669
  %conv7 = sext i32 %call6 to i64, !dbg !1669
  %1 = load %struct.rm_options** %x.addr, align 8, !dbg !1669
  %interactive8 = getelementptr inbounds %struct.rm_options* %1, i32 0, i32 1, !dbg !1669
  %2 = load i32* %interactive8, align 4, !dbg !1669
  %cmp9 = icmp eq i32 %2, 5, !dbg !1669
  %conv10 = zext i1 %cmp9 to i32, !dbg !1669
  %conv11 = sext i32 %conv10 to i64, !dbg !1669
  %call12 = call i64 @klee_change(i64 %conv7, i64 %conv11), !dbg !1669
  %tobool13 = icmp ne i64 %call12, 0, !dbg !1669
  br i1 %tobool13, label %if.then, label %if.end, !dbg !1669

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, !dbg !1671
  br label %return, !dbg !1671

if.end:                                           ; preds = %entry
  %3 = load %struct.rm_options** %x.addr, align 8, !dbg !1672
  %ignore_missing_files = getelementptr inbounds %struct.rm_options* %3, i32 0, i32 0, !dbg !1672
  %4 = load i8* %ignore_missing_files, align 1, !dbg !1672
  %tobool14 = trunc i8 %4 to i1, !dbg !1672
  %lnot = xor i1 %tobool14, true, !dbg !1672
  %lnot.ext = zext i1 %lnot to i32, !dbg !1672
  %conv15 = sext i32 %lnot.ext to i64, !dbg !1672
  %5 = load %struct.rm_options** %x.addr, align 8, !dbg !1672
  %interactive16 = getelementptr inbounds %struct.rm_options* %5, i32 0, i32 1, !dbg !1672
  %6 = load i32* %interactive16, align 4, !dbg !1672
  %cmp17 = icmp eq i32 %6, 1, !dbg !1672
  %conv18 = zext i1 %cmp17 to i32, !dbg !1672
  %conv19 = sext i32 %conv18 to i64, !dbg !1672
  %7 = load %struct.rm_options** %x.addr, align 8, !dbg !1672
  %interactive20 = getelementptr inbounds %struct.rm_options* %7, i32 0, i32 1, !dbg !1672
  %8 = load i32* %interactive20, align 4, !dbg !1672
  %cmp21 = icmp eq i32 %8, 3, !dbg !1672
  %conv22 = zext i1 %cmp21 to i32, !dbg !1672
  %conv23 = sext i32 %conv22 to i64, !dbg !1672
  %call24 = call i64 @klee_change(i64 %conv19, i64 %conv23), !dbg !1672
  %9 = load %struct.rm_options** %x.addr, align 8, !dbg !1672
  %stdin_tty = getelementptr inbounds %struct.rm_options* %9, i32 0, i32 5, !dbg !1672
  %10 = load i8* %stdin_tty, align 1, !dbg !1672
  %tobool25 = trunc i8 %10 to i1, !dbg !1672
  %conv26 = zext i1 %tobool25 to i64, !dbg !1672
  %or = or i64 %call24, %conv26, !dbg !1672
  %and = and i64 %conv15, %or, !dbg !1672
  %tobool27 = icmp ne i64 %and, 0, !dbg !1672
  br i1 %tobool27, label %land.lhs.true, label %cond.false43, !dbg !1672

land.lhs.true:                                    ; preds = %if.end
  %11 = load i32* %fd_cwd.addr, align 4, !dbg !1674
  %12 = load i8** %filename.addr, align 8, !dbg !1674
  %13 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1674
  %14 = load %struct.stat** %sbuf.addr, align 8, !dbg !1674
  %call28 = call zeroext i1 @write_protected_non_symlink(i32 %11, i8* %12, %struct.dirstack_state* %13, %struct.stat* %14), !dbg !1674
  %frombool = zext i1 %call28 to i8, !dbg !1674
  store i8 %frombool, i8* %write_protected, align 1, !dbg !1674
  br i1 %call28, label %if.then54, label %cond.false43, !dbg !1674

cond.false43:                                     ; preds = %land.lhs.true, %if.end
  %15 = load %struct.rm_options** %x.addr, align 8, !dbg !1675
  %interactive44 = getelementptr inbounds %struct.rm_options* %15, i32 0, i32 1, !dbg !1675
  %16 = load i32* %interactive44, align 4, !dbg !1675
  %cmp45 = icmp eq i32 %16, 1, !dbg !1675
  %conv46 = zext i1 %cmp45 to i32, !dbg !1675
  %conv47 = sext i32 %conv46 to i64, !dbg !1675
  %17 = load %struct.rm_options** %x.addr, align 8, !dbg !1675
  %interactive48 = getelementptr inbounds %struct.rm_options* %17, i32 0, i32 1, !dbg !1675
  %18 = load i32* %interactive48, align 4, !dbg !1675
  %cmp49 = icmp eq i32 %18, 3, !dbg !1675
  %conv50 = zext i1 %cmp49 to i32, !dbg !1675
  %conv51 = sext i32 %conv50 to i64, !dbg !1675
  %call52 = call i64 @klee_change(i64 %conv47, i64 %conv51), !dbg !1675
  %tobool53 = icmp ne i64 %call52, 0, !dbg !1675
  br i1 %tobool53, label %if.then54, label %if.end137, !dbg !1675

if.then54:                                        ; preds = %cond.false43, %land.lhs.true
  %19 = load i32* %fd_cwd.addr, align 4, !dbg !1676
  %20 = load i8** %filename.addr, align 8, !dbg !1676
  %21 = load %struct.stat** %sbuf.addr, align 8, !dbg !1676
  %call55 = call i32 @cache_fstatat(i32 %19, i8* %20, %struct.stat* %21, i32 256), !dbg !1676
  %cmp56 = icmp ne i32 %call55, 0, !dbg !1676
  br i1 %cmp56, label %if.then58, label %if.end63, !dbg !1676

if.then58:                                        ; preds = %if.then54
  %call59 = call i32* @__errno_location() #1, !dbg !1679
  %22 = load i32* %call59, align 4, !dbg !1679
  %conv60 = sext i32 %22 to i64, !dbg !1679
  %23 = inttoptr i64 %conv60 to i32* (...)*, !dbg !1679
  %24 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1679
  %25 = load i8** %filename.addr, align 8, !dbg !1679
  %call61 = call i8* @full_filename_(%struct.dirstack_state* %24, i8* %25), !dbg !1679
  %call62 = call i8* @quote(i8* %call61), !dbg !1679
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %23, i8* getelementptr inbounds ([17 x i8]* @.str1360, i32 0, i32 0), i8* %call62), !dbg !1679
  store i32 4, i32* %retval, !dbg !1681
  br label %return, !dbg !1681

if.end63:                                         ; preds = %if.then54
  %26 = load %struct.stat** %sbuf.addr, align 8, !dbg !1682
  %st_mode = getelementptr inbounds %struct.stat* %26, i32 0, i32 3, !dbg !1682
  %27 = load i32* %st_mode, align 4, !dbg !1682
  %and64 = and i32 %27, 61440, !dbg !1682
  %cmp65 = icmp eq i32 %and64, 16384, !dbg !1682
  br i1 %cmp65, label %land.lhs.true67, label %if.end72, !dbg !1682

land.lhs.true67:                                  ; preds = %if.end63
  %28 = load %struct.rm_options** %x.addr, align 8, !dbg !1682
  %recursive = getelementptr inbounds %struct.rm_options* %28, i32 0, i32 3, !dbg !1682
  %29 = load i8* %recursive, align 1, !dbg !1682
  %tobool68 = trunc i8 %29 to i1, !dbg !1682
  br i1 %tobool68, label %if.end72, label %if.then69, !dbg !1682

if.then69:                                        ; preds = %land.lhs.true67
  %30 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1684
  %31 = load i8** %filename.addr, align 8, !dbg !1684
  %call70 = call i8* @full_filename_(%struct.dirstack_state* %30, i8* %31), !dbg !1684
  %call71 = call i8* @quote(i8* %call70), !dbg !1684
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* inttoptr (i64 21 to i32* (...)*), i8* getelementptr inbounds ([17 x i8]* @.str1360, i32 0, i32 0), i8* %call71), !dbg !1684
  store i32 4, i32* %retval, !dbg !1686
  br label %return, !dbg !1686

if.end72:                                         ; preds = %land.lhs.true67, %if.end63
  %32 = load %struct.stat** %sbuf.addr, align 8, !dbg !1687
  %st_mode73 = getelementptr inbounds %struct.stat* %32, i32 0, i32 3, !dbg !1687
  %33 = load i32* %st_mode73, align 4, !dbg !1687
  %and74 = and i32 %33, 61440, !dbg !1687
  %cmp75 = icmp eq i32 %and74, 40960, !dbg !1687
  br i1 %cmp75, label %cond.false91, label %if.end104, !dbg !1687

cond.false91:                                     ; preds = %if.end72
  %34 = load %struct.rm_options** %x.addr, align 8, !dbg !1689
  %interactive92 = getelementptr inbounds %struct.rm_options* %34, i32 0, i32 1, !dbg !1689
  %35 = load i32* %interactive92, align 4, !dbg !1689
  %cmp93 = icmp eq i32 %35, 0, !dbg !1689
  %conv94 = zext i1 %cmp93 to i32, !dbg !1689
  %conv95 = sext i32 %conv94 to i64, !dbg !1689
  %36 = load %struct.rm_options** %x.addr, align 8, !dbg !1689
  %interactive96 = getelementptr inbounds %struct.rm_options* %36, i32 0, i32 1, !dbg !1689
  %37 = load i32* %interactive96, align 4, !dbg !1689
  %cmp97 = icmp ne i32 %37, 3, !dbg !1689
  %conv98 = zext i1 %cmp97 to i32, !dbg !1689
  %conv99 = sext i32 %conv98 to i64, !dbg !1689
  %call100 = call i64 @klee_change(i64 %conv95, i64 %conv99), !dbg !1689
  %tobool101 = icmp ne i64 %call100, 0, !dbg !1689
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !1689

if.then102:                                       ; preds = %cond.false91
  store i32 2, i32* %retval, !dbg !1692
  br label %return, !dbg !1692

if.end103:                                        ; preds = %cond.false91
  store i8 0, i8* %write_protected, align 1, !dbg !1693
  br label %if.end104, !dbg !1694

if.end104:                                        ; preds = %if.end103, %if.end72
  %38 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1695
  %39 = load i8** %filename.addr, align 8, !dbg !1695
  %call105 = call i8* @full_filename_(%struct.dirstack_state* %38, i8* %39), !dbg !1695
  %call106 = call i8* @quote(i8* %call105), !dbg !1695
  store i8* %call106, i8** %quoted_name, align 8, !dbg !1695
  %40 = load %struct.stat** %sbuf.addr, align 8, !dbg !1697
  %st_mode107 = getelementptr inbounds %struct.stat* %40, i32 0, i32 3, !dbg !1697
  %41 = load i32* %st_mode107, align 4, !dbg !1697
  %and108 = and i32 %41, 61440, !dbg !1697
  %cmp109 = icmp eq i32 %and108, 16384, !dbg !1697
  br i1 %cmp109, label %land.lhs.true111, label %if.else, !dbg !1697

land.lhs.true111:                                 ; preds = %if.end104
  %42 = load %struct.rm_options** %x.addr, align 8, !dbg !1697
  %recursive112 = getelementptr inbounds %struct.rm_options* %42, i32 0, i32 3, !dbg !1697
  %43 = load i8* %recursive112, align 1, !dbg !1697
  %tobool113 = trunc i8 %43 to i1, !dbg !1697
  %44 = load i32* %mode.addr, align 4, !dbg !1697
  %cmp116 = icmp eq i32 %44, 2, !dbg !1697
  %or.cond = and i1 %tobool113, %cmp116, !dbg !1697
  br i1 %or.cond, label %land.lhs.true118, label %if.else, !dbg !1697

land.lhs.true118:                                 ; preds = %land.lhs.true111
  %45 = load i32* %fd_cwd.addr, align 4, !dbg !1699
  %46 = load i8** %filename.addr, align 8, !dbg !1699
  %call119 = call zeroext i1 @is_empty_dir(i32 %45, i8* %46), !dbg !1699
  %cond = select i1 %call119, i32 4, i32 3, !dbg !1699
  %47 = load i32** %is_empty.addr, align 8, !dbg !1699
  store i32 %cond, i32* %47, align 4, !dbg !1699
  %cmp121 = icmp eq i32 %cond, 3, !dbg !1699
  br i1 %cmp121, label %if.then123, label %if.else, !dbg !1699

if.then123:                                       ; preds = %land.lhs.true118
  %48 = load %struct._IO_FILE** @stderr, align 8, !dbg !1700
  %49 = load i8* %write_protected, align 1, !dbg !1700
  %tobool124 = trunc i8 %49 to i1, !dbg !1700
  %cond126 = select i1 %tobool124, i8* getelementptr inbounds ([48 x i8]* @.str2673, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str2774, i32 0, i32 0), !dbg !1700
  %50 = load i8** @program_name, align 8, !dbg !1700
  %51 = load i8** %quoted_name, align 8, !dbg !1700
  %call127 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %48, i8* %cond126, i8* %50, i8* %51), !dbg !1700
  br label %if.end133, !dbg !1700

if.else:                                          ; preds = %land.lhs.true118, %land.lhs.true111, %if.end104
  %52 = load %struct._IO_FILE** @stderr, align 8, !dbg !1701
  %53 = load i8* %write_protected, align 1, !dbg !1701
  %tobool128 = trunc i8 %53 to i1, !dbg !1701
  %cond130 = select i1 %tobool128, i8* getelementptr inbounds ([35 x i8]* @.str2875, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str2976, i32 0, i32 0), !dbg !1701
  %54 = load i8** @program_name, align 8, !dbg !1701
  %55 = load %struct.stat** %sbuf.addr, align 8, !dbg !1703
  %call131 = call i8* @file_type(%struct.stat* %55), !dbg !1703
  %56 = load i8** %quoted_name, align 8, !dbg !1701
  %call132 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %52, i8* %cond130, i8* %54, i8* %call131, i8* %56), !dbg !1701
  br label %if.end133

if.end133:                                        ; preds = %if.else, %if.then123
  %call134 = call zeroext i1 @yesno(), !dbg !1704
  br i1 %call134, label %if.end137, label %if.then135, !dbg !1704

if.then135:                                       ; preds = %if.end133
  store i32 3, i32* %retval, !dbg !1706
  br label %return, !dbg !1706

if.end137:                                        ; preds = %if.end133, %cond.false43
  store i32 2, i32* %retval, !dbg !1707
  br label %return, !dbg !1707

return:                                           ; preds = %if.end137, %if.then135, %if.then102, %if.then69, %if.then58, %if.then
  %57 = load i32* %retval, !dbg !1708
  ret i32 %57, !dbg !1708
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @is_empty_dir(i32 %fd_cwd, i8* %dir) #0 {
entry:
  %retval = alloca i1, align 1
  %fd_cwd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %dirp = alloca %struct.__dirstream*, align 8
  %dp = alloca %struct.dirent*, align 8
  %saved_errno = alloca i32, align 4
  %fd = alloca i32, align 4
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store i8* %dir, i8** %dir.addr, align 8
  %0 = load i32* %fd_cwd.addr, align 4, !dbg !1709
  %1 = load i8** %dir.addr, align 8, !dbg !1709
  %call = call i32 (i32, i8*, i32, ...)* @openat(i32 %0, i8* %1, i32 198912), !dbg !1709
  store i32 %call, i32* %fd, align 4, !dbg !1709
  %2 = load i32* %fd, align 4, !dbg !1710
  %cmp = icmp slt i32 %2, 0, !dbg !1710
  br i1 %cmp, label %if.then, label %if.end, !dbg !1710

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, !dbg !1712
  br label %return, !dbg !1712

if.end:                                           ; preds = %entry
  %3 = load i32* %fd, align 4, !dbg !1713
  %call1 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !1713
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !1713
  %4 = load %struct.__dirstream** %dirp, align 8, !dbg !1714
  %cmp2 = icmp eq %struct.__dirstream* %4, null, !dbg !1714
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !1714

if.then3:                                         ; preds = %if.end
  %5 = load i32* %fd, align 4, !dbg !1716
  %call4 = call i32 @close(i32 %5), !dbg !1716
  store i1 false, i1* %retval, !dbg !1718
  br label %return, !dbg !1718

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #1, !dbg !1719
  store i32 0, i32* %call6, align 4, !dbg !1719
  %6 = load %struct.__dirstream** %dirp, align 8, !dbg !1720
  %call7 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %6), !dbg !1720
  store %struct.dirent* %call7, %struct.dirent** %dp, align 8, !dbg !1720
  %call8 = call i32* @__errno_location() #1, !dbg !1721
  %7 = load i32* %call8, align 4, !dbg !1721
  store i32 %7, i32* %saved_errno, align 4, !dbg !1721
  %8 = load %struct.__dirstream** %dirp, align 8, !dbg !1722
  %call9 = call i32 @closedir(%struct.__dirstream* %8), !dbg !1722
  %9 = load %struct.dirent** %dp, align 8, !dbg !1723
  %cmp10 = icmp ne %struct.dirent* %9, null, !dbg !1723
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !1723

if.then11:                                        ; preds = %if.end5
  store i1 false, i1* %retval, !dbg !1725
  br label %return, !dbg !1725

if.end12:                                         ; preds = %if.end5
  %10 = load i32* %saved_errno, align 4, !dbg !1726
  %cmp13 = icmp eq i32 %10, 0, !dbg !1726
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !1726
  %tobool = icmp ne i32 %cond, 0, !dbg !1726
  store i1 %tobool, i1* %retval, !dbg !1726
  br label %return, !dbg !1726

return:                                           ; preds = %if.end12, %if.then11, %if.then3, %if.then
  %11 = load i1* %retval, !dbg !1727
  ret i1 %11, !dbg !1727
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %dirp) #10 {
entry:
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %dp = alloca %struct.dirent*, align 8
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8
  br label %while.body, !dbg !1728

while.body:                                       ; preds = %lor.lhs.false, %entry
  %0 = load %struct.__dirstream** %dirp.addr, align 8, !dbg !1730
  %call = call %struct.dirent* @readdir(%struct.__dirstream* %0), !dbg !1730
  store %struct.dirent* %call, %struct.dirent** %dp, align 8, !dbg !1730
  %1 = load %struct.dirent** %dp, align 8, !dbg !1732
  %cmp = icmp eq %struct.dirent* %1, null, !dbg !1732
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1732

lor.lhs.false:                                    ; preds = %while.body
  %2 = load %struct.dirent** %dp, align 8, !dbg !1734
  %d_name = getelementptr inbounds %struct.dirent* %2, i32 0, i32 4, !dbg !1734
  %arraydecay = getelementptr inbounds [256 x i8]* %d_name, i32 0, i32 0, !dbg !1734
  %call1 = call zeroext i1 @dot_or_dotdot(i8* %arraydecay), !dbg !1734
  br i1 %call1, label %while.body, label %if.then, !dbg !1734

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %3 = load %struct.dirent** %dp, align 8, !dbg !1735
  ret %struct.dirent* %3, !dbg !1735
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @write_protected_non_symlink(i32 %fd_cwd, i8* %file, %struct.dirstack_state* %ds, %struct.stat* %buf) #0 {
entry:
  %retval = alloca i1, align 1
  %fd_cwd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %buf.addr = alloca %struct.stat*, align 8
  %file_name_len = alloca i64, align 8
  %__o = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store i8* %file, i8** %file.addr, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store %struct.stat* %buf, %struct.stat** %buf.addr, align 8
  %0 = load i32* %fd_cwd.addr, align 4, !dbg !1736
  %1 = load i8** %file.addr, align 8, !dbg !1736
  %2 = load %struct.stat** %buf.addr, align 8, !dbg !1736
  %call = call i32 @cache_fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256), !dbg !1736
  %cmp = icmp ne i32 %call, 0, !dbg !1736
  br i1 %cmp, label %if.then, label %if.end, !dbg !1736

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, !dbg !1739
  br label %return, !dbg !1739

if.end:                                           ; preds = %entry
  %3 = load %struct.stat** %buf.addr, align 8, !dbg !1740
  %st_mode = getelementptr inbounds %struct.stat* %3, i32 0, i32 3, !dbg !1740
  %4 = load i32* %st_mode, align 4, !dbg !1740
  %and = and i32 %4, 61440, !dbg !1740
  %cmp1 = icmp eq i32 %and, 40960, !dbg !1740
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !1740

if.then2:                                         ; preds = %if.end
  store i1 false, i1* %retval, !dbg !1742
  br label %return, !dbg !1742

if.end3:                                          ; preds = %if.end
  %5 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1743
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %5, i32 0, i32 0, !dbg !1743
  store %struct.obstack* %dir_stack, %struct.obstack** %__o, align 8, !dbg !1743
  %6 = load %struct.obstack** %__o, align 8, !dbg !1743
  %next_free = getelementptr inbounds %struct.obstack* %6, i32 0, i32 3, !dbg !1743
  %7 = load i8** %next_free, align 8, !dbg !1743
  %8 = load %struct.obstack** %__o, align 8, !dbg !1743
  %object_base = getelementptr inbounds %struct.obstack* %8, i32 0, i32 2, !dbg !1743
  %9 = load i8** %object_base, align 8, !dbg !1743
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64, !dbg !1743
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !1743
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1743
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !1743
  store i32 %conv, i32* %tmp, !dbg !1743
  %10 = load i32* %tmp, !dbg !1743
  %conv4 = zext i32 %10 to i64, !dbg !1743
  %11 = load i8** %file.addr, align 8, !dbg !1746
  %call5 = call i64 @strlen(i8* %11) #19, !dbg !1746
  %add = add i64 %conv4, %call5, !dbg !1746
  store i64 %add, i64* %file_name_len, align 8, !dbg !1746
  %12 = load i64* %file_name_len, align 8, !dbg !1747
  %cmp6 = icmp ult i64 %12, 4096, !dbg !1747
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !1747

cond.true:                                        ; preds = %if.end3
  %13 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1748
  %14 = load i8** %file.addr, align 8, !dbg !1748
  %call8 = call i8* @full_filename_(%struct.dirstack_state* %13, i8* %14), !dbg !1748
  %call9 = call i32 @euidaccess(i8* %call8, i32 2) #9, !dbg !1748
  %cmp10 = icmp ne i32 %call9, 0, !dbg !1748
  br i1 %cmp10, label %land.rhs, label %cond.end, !dbg !1748

land.rhs:                                         ; preds = %cond.true
  %call12 = call i32* @__errno_location() #1, !dbg !1748
  %15 = load i32* %call12, align 4, !dbg !1748
  %cmp13 = icmp eq i32 %15, 13, !dbg !1748
  br label %cond.end

cond.false:                                       ; preds = %if.end3
  %16 = load %struct.stat** %buf.addr, align 8, !dbg !1749
  %call15 = call zeroext i1 @euidaccess_stat(%struct.stat* %16, i32 2), !dbg !1749
  %conv16 = zext i1 %call15 to i32, !dbg !1749
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !1749
  br label %cond.end, !dbg !1749

cond.end:                                         ; preds = %cond.true, %land.rhs, %cond.false
  %.sink = phi i1 [ %cmp17, %cond.false ], [ false, %cond.true ], [ %cmp13, %land.rhs ]
  %land.ext = zext i1 %.sink to i32
  %tobool = icmp ne i32 %land.ext, 0, !dbg !1749
  store i1 %tobool, i1* %retval, !dbg !1749
  br label %return, !dbg !1749

return:                                           ; preds = %cond.end, %if.then2, %if.then
  %17 = load i1* %retval, !dbg !1750
  ret i1 %17, !dbg !1750
}

; Function Attrs: nounwind uwtable
define internal i8* @AD_pop_and_chdir(%struct.__dirstream* %dirp, i32* %fdp, %struct.dirstack_state* %ds) #0 {
entry:
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %fdp.addr = alloca i32*, align 8
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %leaf_dir_ent = alloca %struct.AD_ent*, align 8
  %leaf_dev_ino = alloca %struct.dev_ino, align 8
  %old_status = alloca i32, align 4
  %top = alloca %struct.AD_ent*, align 8
  %prev_dir = alloca i8*, align 8
  %sb = alloca %struct.stat, align 8
  %fd = alloca i32, align 4
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8
  store i32* %fdp, i32** %fdp.addr, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1751
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %0), !dbg !1751
  store %struct.AD_ent* %call, %struct.AD_ent** %leaf_dir_ent, align 8, !dbg !1751
  %1 = load %struct.AD_ent** %leaf_dir_ent, align 8, !dbg !1752
  %dev_ino = getelementptr inbounds %struct.AD_ent* %1, i32 0, i32 2, !dbg !1752
  %2 = bitcast %struct.dev_ino* %leaf_dev_ino to i8*, !dbg !1752
  %3 = bitcast %struct.dev_ino* %dev_ino to i8*, !dbg !1752
  %4 = call i8* @memcpy(i8* %2, i8* %3, i64 16)
  %5 = load %struct.AD_ent** %leaf_dir_ent, align 8, !dbg !1753
  %status = getelementptr inbounds %struct.AD_ent* %5, i32 0, i32 1, !dbg !1753
  %6 = load i32* %status, align 4, !dbg !1753
  store i32 %6, i32* %old_status, align 4, !dbg !1753
  %7 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1754
  %call1 = call i8* @top_dir(%struct.dirstack_state* %7), !dbg !1754
  store i8* %call1, i8** %prev_dir, align 8, !dbg !1754
  %8 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1755
  call void @AD_stack_pop(%struct.dirstack_state* %8), !dbg !1755
  %9 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1756
  call void @pop_dir(%struct.dirstack_state* %9), !dbg !1756
  %10 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1757
  %call2 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %10), !dbg !1757
  store %struct.AD_ent* %call2, %struct.AD_ent** %top, align 8, !dbg !1757
  %11 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1758
  %cycle_check_state = getelementptr inbounds %struct.dirstack_state* %11, i32 0, i32 3, !dbg !1758
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state* %cycle_check_state, i32 0, i32 1, !dbg !1758
  %12 = load i64* %chdir_counter, align 8, !dbg !1758
  %cmp = icmp eq i64 %12, 0, !dbg !1758
  br i1 %cmp, label %if.then, label %if.end, !dbg !1758

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !1758
  unreachable, !dbg !1758

if.end:                                           ; preds = %entry
  %13 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1761
  %cycle_check_state3 = getelementptr inbounds %struct.dirstack_state* %13, i32 0, i32 3, !dbg !1761
  %dev_ino4 = getelementptr inbounds %struct.cycle_check_state* %cycle_check_state3, i32 0, i32 0, !dbg !1761
  %st_ino = getelementptr inbounds %struct.dev_ino* %dev_ino4, i32 0, i32 0, !dbg !1761
  %14 = load i64* %st_ino, align 8, !dbg !1761
  %st_ino5 = getelementptr inbounds %struct.dev_ino* %leaf_dev_ino, i32 0, i32 0, !dbg !1761
  %15 = load i64* %st_ino5, align 8, !dbg !1761
  %cmp6 = icmp eq i64 %14, %15, !dbg !1761
  br i1 %cmp6, label %land.lhs.true, label %do.body23, !dbg !1761

land.lhs.true:                                    ; preds = %if.end
  %16 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1761
  %cycle_check_state7 = getelementptr inbounds %struct.dirstack_state* %16, i32 0, i32 3, !dbg !1761
  %dev_ino8 = getelementptr inbounds %struct.cycle_check_state* %cycle_check_state7, i32 0, i32 0, !dbg !1761
  %st_dev = getelementptr inbounds %struct.dev_ino* %dev_ino8, i32 0, i32 1, !dbg !1761
  %17 = load i64* %st_dev, align 8, !dbg !1761
  %st_dev9 = getelementptr inbounds %struct.dev_ino* %leaf_dev_ino, i32 0, i32 1, !dbg !1761
  %18 = load i64* %st_dev9, align 8, !dbg !1761
  %cmp10 = icmp eq i64 %17, %18, !dbg !1761
  br i1 %cmp10, label %if.then11, label %do.body23, !dbg !1761

if.then11:                                        ; preds = %land.lhs.true
  %19 = load %struct.AD_ent** %top, align 8, !dbg !1763
  %dev_ino12 = getelementptr inbounds %struct.AD_ent* %19, i32 0, i32 2, !dbg !1763
  %st_dev13 = getelementptr inbounds %struct.dev_ino* %dev_ino12, i32 0, i32 1, !dbg !1763
  %20 = load i64* %st_dev13, align 8, !dbg !1763
  %21 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1763
  %cycle_check_state14 = getelementptr inbounds %struct.dirstack_state* %21, i32 0, i32 3, !dbg !1763
  %dev_ino15 = getelementptr inbounds %struct.cycle_check_state* %cycle_check_state14, i32 0, i32 0, !dbg !1763
  %st_dev16 = getelementptr inbounds %struct.dev_ino* %dev_ino15, i32 0, i32 1, !dbg !1763
  store i64 %20, i64* %st_dev16, align 8, !dbg !1763
  %22 = load %struct.AD_ent** %top, align 8, !dbg !1763
  %dev_ino17 = getelementptr inbounds %struct.AD_ent* %22, i32 0, i32 2, !dbg !1763
  %st_ino18 = getelementptr inbounds %struct.dev_ino* %dev_ino17, i32 0, i32 0, !dbg !1763
  %23 = load i64* %st_ino18, align 8, !dbg !1763
  %24 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1763
  %cycle_check_state19 = getelementptr inbounds %struct.dirstack_state* %24, i32 0, i32 3, !dbg !1763
  %dev_ino20 = getelementptr inbounds %struct.cycle_check_state* %cycle_check_state19, i32 0, i32 0, !dbg !1763
  %st_ino21 = getelementptr inbounds %struct.dev_ino* %dev_ino20, i32 0, i32 0, !dbg !1763
  store i64 %23, i64* %st_ino21, align 8, !dbg !1763
  br label %do.body23, !dbg !1763

do.body23:                                        ; preds = %if.then11, %land.lhs.true, %if.end
  %25 = load i32* %old_status, align 4, !dbg !1765
  %cmp24 = icmp eq i32 %25, 4, !dbg !1765
  br i1 %cmp24, label %if.then29, label %lor.lhs.false, !dbg !1765

lor.lhs.false:                                    ; preds = %do.body23
  %26 = load i32* %old_status, align 4, !dbg !1765
  %cmp25 = icmp eq i32 %26, 3, !dbg !1765
  br i1 %cmp25, label %land.lhs.true26, label %do.end32, !dbg !1765

land.lhs.true26:                                  ; preds = %lor.lhs.false
  %27 = load %struct.AD_ent** %top, align 8, !dbg !1765
  %status27 = getelementptr inbounds %struct.AD_ent* %27, i32 0, i32 1, !dbg !1765
  %28 = load i32* %status27, align 4, !dbg !1765
  %cmp28 = icmp eq i32 %28, 2, !dbg !1765
  br i1 %cmp28, label %if.then29, label %do.end32, !dbg !1765

if.then29:                                        ; preds = %land.lhs.true26, %do.body23
  %29 = load i32* %old_status, align 4, !dbg !1765
  %30 = load %struct.AD_ent** %top, align 8, !dbg !1765
  %status30 = getelementptr inbounds %struct.AD_ent* %30, i32 0, i32 1, !dbg !1765
  store i32 %29, i32* %status30, align 4, !dbg !1765
  br label %do.end32, !dbg !1765

do.end32:                                         ; preds = %lor.lhs.false, %land.lhs.true26, %if.then29
  %31 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1768
  %call33 = call i64 @AD_stack_height(%struct.dirstack_state* %31), !dbg !1768
  %tobool = icmp ne i64 %call33, 0, !dbg !1768
  br i1 %tobool, label %cond.end, label %cond.false, !dbg !1768

cond.false:                                       ; preds = %do.end32
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8]* @.str3077, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 489, i8* getelementptr inbounds ([55 x i8]* @__PRETTY_FUNCTION__.AD_pop_and_chdir, i32 0, i32 0
  unreachable, !dbg !1768

cond.end:                                         ; preds = %do.end32
  %32 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1769
  %call34 = call i64 @AD_stack_height(%struct.dirstack_state* %32), !dbg !1769
  %cmp35 = icmp ult i64 1, %call34, !dbg !1769
  %33 = load %struct.__dirstream** %dirp.addr, align 8, !dbg !1771
  br i1 %cmp35, label %if.then36, label %if.else, !dbg !1769

if.then36:                                        ; preds = %cond.end
  %call37 = call i32 @dirfd(%struct.__dirstream* %33) #9, !dbg !1771
  %call38 = call i32 (i32, i8*, i32, ...)* @openat(i32 %call37, i8* getelementptr inbounds ([3 x i8]* @.str3178, i32 0, i32 0), i32 0), !dbg !1771
  store i32 %call38, i32* %fd, align 4, !dbg !1771
  %34 = load %struct.__dirstream** %dirp.addr, align 8, !dbg !1773
  %call39 = call i32 @closedir(%struct.__dirstream* %34), !dbg !1773
  %cmp40 = icmp ne i32 %call39, 0, !dbg !1773
  br i1 %cmp40, label %if.then41, label %if.end45, !dbg !1773

if.then41:                                        ; preds = %if.then36
  %call42 = call i32* @__errno_location() #1, !dbg !1775
  %35 = load i32* %call42, align 4, !dbg !1775
  %conv = sext i32 %35 to i64, !dbg !1775
  %36 = inttoptr i64 %conv to i32* (...)*, !dbg !1775
  %37 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1775
  %38 = load i8** %prev_dir, align 8, !dbg !1775
  %call43 = call i8* @full_filename_(%struct.dirstack_state* %37, i8* %38), !dbg !1775
  %call44 = call i8* @quote(i8* %call43), !dbg !1775
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %36, i8* getelementptr inbounds ([36 x i8]* @.str3279, i32 0, i32 0), i8* %call44), !dbg !1775
  br label %next_cmdline_arg, !dbg !1777

if.end45:                                         ; preds = %if.then36
  %39 = load i32* %fd, align 4, !dbg !1778
  %cmp46 = icmp slt i32 %39, 0, !dbg !1778
  br i1 %cmp46, label %if.then48, label %if.end51, !dbg !1778

if.then48:                                        ; preds = %if.end45
  %40 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1780
  %call49 = call i8* @full_filename_(%struct.dirstack_state* %40, i8* getelementptr inbounds ([2 x i8]* @.str2471, i32 0, i32 0)), !dbg !1780
  %call50 = call i32 (i32, i8*, i32, ...)* @openat(i32 -100, i8* %call49, i32 0), !dbg !1780
  store i32 %call50, i32* %fd, align 4, !dbg !1780
  br label %if.end51, !dbg !1780

if.end51:                                         ; preds = %if.then48, %if.end45
  %41 = load i32* %fd, align 4, !dbg !1781
  %cmp52 = icmp slt i32 %41, 0, !dbg !1781
  br i1 %cmp52, label %if.then54, label %if.end59, !dbg !1781

if.then54:                                        ; preds = %if.end51
  %call55 = call i32* @__errno_location() #1, !dbg !1783
  %42 = load i32* %call55, align 4, !dbg !1783
  %conv56 = sext i32 %42 to i64, !dbg !1783
  %43 = inttoptr i64 %conv56 to i32* (...)*, !dbg !1783
  %44 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1783
  %45 = load i8** %prev_dir, align 8, !dbg !1783
  %call57 = call i8* @full_filename_(%struct.dirstack_state* %44, i8* %45), !dbg !1783
  %call58 = call i8* @quote(i8* %call57), !dbg !1783
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %43, i8* getelementptr inbounds ([30 x i8]* @.str3380, i32 0, i32 0), i8* %call58), !dbg !1783
  br label %next_cmdline_arg, !dbg !1785

if.end59:                                         ; preds = %if.end51
  %46 = load i32* %fd, align 4, !dbg !1786
  %call60 = call i32 @fstat(i32 %46, %struct.stat* %sb) #9, !dbg !1786
  %tobool61 = icmp ne i32 %call60, 0, !dbg !1786
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !1786

if.then62:                                        ; preds = %if.end59
  %call63 = call i32* @__errno_location() #1, !dbg !1788
  %47 = load i32* %call63, align 4, !dbg !1788
  %conv64 = sext i32 %47 to i64, !dbg !1788
  %48 = inttoptr i64 %conv64 to i32* (...)*, !dbg !1788
  %49 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1788
  %call65 = call i8* @full_filename_(%struct.dirstack_state* %49, i8* getelementptr inbounds ([2 x i8]* @.str2471, i32 0, i32 0)), !dbg !1788
  %call66 = call i8* @quote(i8* %call65), !dbg !1788
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %48, i8* getelementptr inbounds ([53 x i8]* @.str3481, i32 0, i32 0), i8* %call66), !dbg !1788
  br label %close_and_next, !dbg !1790

if.end67:                                         ; preds = %if.end59
  %st_ino68 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 1, !dbg !1791
  %50 = load i64* %st_ino68, align 8, !dbg !1791
  %51 = load %struct.AD_ent** %top, align 8, !dbg !1791
  %dev_ino69 = getelementptr inbounds %struct.AD_ent* %51, i32 0, i32 2, !dbg !1791
  %st_ino70 = getelementptr inbounds %struct.dev_ino* %dev_ino69, i32 0, i32 0, !dbg !1791
  %52 = load i64* %st_ino70, align 8, !dbg !1791
  %cmp71 = icmp eq i64 %50, %52, !dbg !1791
  br i1 %cmp71, label %land.lhs.true73, label %if.then79, !dbg !1791

land.lhs.true73:                                  ; preds = %if.end67
  %st_dev74 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 0, !dbg !1791
  %53 = load i64* %st_dev74, align 8, !dbg !1791
  %54 = load %struct.AD_ent** %top, align 8, !dbg !1791
  %dev_ino75 = getelementptr inbounds %struct.AD_ent* %54, i32 0, i32 2, !dbg !1791
  %st_dev76 = getelementptr inbounds %struct.dev_ino* %dev_ino75, i32 0, i32 1, !dbg !1791
  %55 = load i64* %st_dev76, align 8, !dbg !1791
  %cmp77 = icmp eq i64 %53, %55, !dbg !1791
  br i1 %cmp77, label %if.end83, label %if.then79, !dbg !1791

if.then79:                                        ; preds = %land.lhs.true73, %if.end67
  %56 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1793
  %call80 = call i8* @full_filename_(%struct.dirstack_state* %56, i8* getelementptr inbounds ([2 x i8]* @.str2471, i32 0, i32 0)), !dbg !1793
  %call81 = call i8* @quote(i8* %call80), !dbg !1793
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* getelementptr inbounds ([36 x i8]* @.str3582, i32 0, i32 0), i8* %call81), !dbg !1793
  br label %close_and_next, !dbg !1793

close_and_next:                                   ; preds = %if.then79, %if.then62
  %57 = load i32* %fd, align 4, !dbg !1795
  %call82 = call i32 @close(i32 %57), !dbg !1795
  br label %next_cmdline_arg, !dbg !1795

next_cmdline_arg:                                 ; preds = %if.then87, %close_and_next, %if.then54, %if.then41
  %58 = load i8** %prev_dir, align 8, !dbg !1796
  call void @free(i8* %58) #9, !dbg !1796
  %59 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1797
  %current_arg_jumpbuf = getelementptr inbounds %struct.dirstack_state* %59, i32 0, i32 4, !dbg !1797
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag]* %current_arg_jumpbuf, i32 0, i32 0, !dbg !1797
  call void @longjmp(%struct.__jmp_buf_tag* %arraydecay, i32 1) #17, !dbg !1797
  unreachable, !dbg !1797

if.end83:                                         ; preds = %land.lhs.true73
  %60 = load i32* %fd, align 4, !dbg !1798
  %61 = load i32** %fdp.addr, align 8, !dbg !1798
  store i32 %60, i32* %61, align 4, !dbg !1798
  br label %if.end93, !dbg !1799

if.else:                                          ; preds = %cond.end
  %call84 = call i32 @closedir(%struct.__dirstream* %33), !dbg !1800
  %cmp85 = icmp ne i32 %call84, 0, !dbg !1800
  br i1 %cmp85, label %if.then87, label %if.end92, !dbg !1800

if.then87:                                        ; preds = %if.else
  %call88 = call i32* @__errno_location() #1, !dbg !1803
  %62 = load i32* %call88, align 4, !dbg !1803
  %conv89 = sext i32 %62 to i64, !dbg !1803
  %63 = inttoptr i64 %conv89 to i32* (...)*, !dbg !1803
  %64 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1803
  %65 = load i8** %prev_dir, align 8, !dbg !1803
  %call90 = call i8* @full_filename_(%struct.dirstack_state* %64, i8* %65), !dbg !1803
  %call91 = call i8* @quote(i8* %call90), !dbg !1803
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %63, i8* getelementptr inbounds ([36 x i8]* @.str3279, i32 0, i32 0), i8* %call91), !dbg !1803
  br label %next_cmdline_arg, !dbg !1805

if.end92:                                         ; preds = %if.else
  %66 = load i32** %fdp.addr, align 8, !dbg !1806
  store i32 -100, i32* %66, align 4, !dbg !1806
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.end83
  %67 = load i8** %prev_dir, align 8, !dbg !1807
  ret i8* %67, !dbg !1807
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pop_dir(%struct.dirstack_state* %ds) #10 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %n_lengths = alloca i64, align 8
  %__o = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  %length = alloca i64*, align 8
  %top_len = alloca i64, align 8
  %__o13 = alloca %struct.obstack*, align 8
  %tmp14 = alloca i32, align 4
  %__o28 = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %__o42 = alloca %struct.obstack*, align 8
  %tmp44 = alloca i32, align 4
  %__o58 = alloca %struct.obstack*, align 8
  %__len61 = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1808
  %len_stack = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 1, !dbg !1808
  store %struct.obstack* %len_stack, %struct.obstack** %__o, align 8, !dbg !1808
  %1 = load %struct.obstack** %__o, align 8, !dbg !1808
  %next_free = getelementptr inbounds %struct.obstack* %1, i32 0, i32 3, !dbg !1808
  %2 = load i8** %next_free, align 8, !dbg !1808
  %3 = load %struct.obstack** %__o, align 8, !dbg !1808
  %object_base = getelementptr inbounds %struct.obstack* %3, i32 0, i32 2, !dbg !1808
  %4 = load i8** %object_base, align 8, !dbg !1808
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !1808
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !1808
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1808
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !1808
  store i32 %conv, i32* %tmp, !dbg !1808
  %5 = load i32* %tmp, !dbg !1808
  %conv1 = zext i32 %5 to i64, !dbg !1808
  %int_cast_to_i64 = bitcast i64 8 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !1808
  %div = udiv i64 %conv1, 8, !dbg !1808
  store i64 %div, i64* %n_lengths, align 8, !dbg !1808
  %6 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1810
  %len_stack3 = getelementptr inbounds %struct.dirstack_state* %6, i32 0, i32 1, !dbg !1810
  %object_base4 = getelementptr inbounds %struct.obstack* %len_stack3, i32 0, i32 2, !dbg !1810
  %7 = load i8** %object_base4, align 8, !dbg !1810
  %8 = bitcast i8* %7 to i64*, !dbg !1810
  store i64* %8, i64** %length, align 8, !dbg !1810
  %9 = load i64* %n_lengths, align 8, !dbg !1811
  %cmp = icmp ugt i64 %9, 0, !dbg !1811
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !1811

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str3683, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([31 x i8]* @__PRETTY_FUNCTION__.pop_dir, i32 0, i32 0)) #17, !
  unreachable, !dbg !1811

cond.end:                                         ; preds = %entry
  %10 = load i64* %n_lengths, align 8, !dbg !1812
  %sub = sub i64 %10, 1, !dbg !1812
  %11 = load i64** %length, align 8, !dbg !1812
  %arrayidx = getelementptr inbounds i64* %11, i64 %sub, !dbg !1812
  %12 = load i64* %arrayidx, align 8, !dbg !1812
  store i64 %12, i64* %top_len, align 8, !dbg !1812
  %13 = load i64* %top_len, align 8, !dbg !1813
  %cmp7 = icmp uge i64 %13, 2, !dbg !1813
  br i1 %cmp7, label %cond.end11, label %cond.false10, !dbg !1813

cond.false10:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8]* @.str3784, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 258, i8* getelementptr inbounds ([31 x i8]* @__PRETTY_FUNCTION__.pop_dir, i32 0, i32 0)) #17, !
  unreachable, !dbg !1813

cond.end11:                                       ; preds = %cond.end
  %14 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1814
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %14, i32 0, i32 0, !dbg !1814
  store %struct.obstack* %dir_stack, %struct.obstack** %__o13, align 8, !dbg !1814
  %15 = load %struct.obstack** %__o13, align 8, !dbg !1814
  %next_free15 = getelementptr inbounds %struct.obstack* %15, i32 0, i32 3, !dbg !1814
  %16 = load i8** %next_free15, align 8, !dbg !1814
  %17 = load %struct.obstack** %__o13, align 8, !dbg !1814
  %object_base16 = getelementptr inbounds %struct.obstack* %17, i32 0, i32 2, !dbg !1814
  %18 = load i8** %object_base16, align 8, !dbg !1814
  %sub.ptr.lhs.cast17 = ptrtoint i8* %16 to i64, !dbg !1814
  %sub.ptr.rhs.cast18 = ptrtoint i8* %18 to i64, !dbg !1814
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18, !dbg !1814
  %conv20 = trunc i64 %sub.ptr.sub19 to i32, !dbg !1814
  store i32 %conv20, i32* %tmp14, !dbg !1814
  %19 = load i32* %tmp14, !dbg !1814
  %conv21 = zext i32 %19 to i64, !dbg !1814
  %20 = load i64* %top_len, align 8, !dbg !1814
  %cmp22 = icmp uge i64 %conv21, %20, !dbg !1814
  br i1 %cmp22, label %cond.end26, label %cond.false25, !dbg !1814

cond.false25:                                     ; preds = %cond.end11
  call void @__assert_fail(i8* getelementptr inbounds ([125 x i8]* @.str3885, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 261, i8* getelementptr inbounds ([31 x i8]* @__PRETTY_FUNCTION__.pop_dir, i32 0, i32 0)) #17, 
  unreachable, !dbg !1816

cond.end26:                                       ; preds = %cond.end11
  %21 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1817
  %dir_stack29 = getelementptr inbounds %struct.dirstack_state* %21, i32 0, i32 0, !dbg !1817
  store %struct.obstack* %dir_stack29, %struct.obstack** %__o28, align 8, !dbg !1817
  %22 = load i64* %top_len, align 8, !dbg !1817
  %sub31 = sub i64 0, %22, !dbg !1817
  %conv32 = trunc i64 %sub31 to i32, !dbg !1817
  store i32 %conv32, i32* %__len, align 4, !dbg !1817
  %23 = load %struct.obstack** %__o28, align 8, !dbg !1819
  %chunk_limit = getelementptr inbounds %struct.obstack* %23, i32 0, i32 4, !dbg !1819
  %24 = load i8** %chunk_limit, align 8, !dbg !1819
  %25 = load %struct.obstack** %__o28, align 8, !dbg !1819
  %next_free33 = getelementptr inbounds %struct.obstack* %25, i32 0, i32 3, !dbg !1819
  %26 = load i8** %next_free33, align 8, !dbg !1819
  %sub.ptr.lhs.cast34 = ptrtoint i8* %24 to i64, !dbg !1819
  %sub.ptr.rhs.cast35 = ptrtoint i8* %26 to i64, !dbg !1819
  %sub.ptr.sub36 = sub i64 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast35, !dbg !1819
  %27 = load i32* %__len, align 4, !dbg !1819
  %conv37 = sext i32 %27 to i64, !dbg !1819
  %cmp38 = icmp slt i64 %sub.ptr.sub36, %conv37, !dbg !1819
  br i1 %cmp38, label %if.then, label %if.end, !dbg !1819

if.then:                                          ; preds = %cond.end26
  %28 = load %struct.obstack** %__o28, align 8, !dbg !1819
  %29 = load i32* %__len, align 4, !dbg !1819
  call void @_obstack_newchunk(%struct.obstack* %28, i32 %29), !dbg !1819
  br label %if.end, !dbg !1819

if.end:                                           ; preds = %if.then, %cond.end26
  %30 = load i32* %__len, align 4, !dbg !1817
  %31 = load %struct.obstack** %__o28, align 8, !dbg !1817
  %next_free40 = getelementptr inbounds %struct.obstack* %31, i32 0, i32 3, !dbg !1817
  %32 = load i8** %next_free40, align 8, !dbg !1817
  %idx.ext = sext i32 %30 to i64, !dbg !1817
  %add.ptr = getelementptr inbounds i8* %32, i64 %idx.ext, !dbg !1817
  store i8* %add.ptr, i8** %next_free40, align 8, !dbg !1817
  %33 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1821
  %len_stack43 = getelementptr inbounds %struct.dirstack_state* %33, i32 0, i32 1, !dbg !1821
  store %struct.obstack* %len_stack43, %struct.obstack** %__o42, align 8, !dbg !1821
  %34 = load %struct.obstack** %__o42, align 8, !dbg !1821
  %next_free45 = getelementptr inbounds %struct.obstack* %34, i32 0, i32 3, !dbg !1821
  %35 = load i8** %next_free45, align 8, !dbg !1821
  %36 = load %struct.obstack** %__o42, align 8, !dbg !1821
  %object_base46 = getelementptr inbounds %struct.obstack* %36, i32 0, i32 2, !dbg !1821
  %37 = load i8** %object_base46, align 8, !dbg !1821
  %sub.ptr.lhs.cast47 = ptrtoint i8* %35 to i64, !dbg !1821
  %sub.ptr.rhs.cast48 = ptrtoint i8* %37 to i64, !dbg !1821
  %sub.ptr.sub49 = sub i64 %sub.ptr.lhs.cast47, %sub.ptr.rhs.cast48, !dbg !1821
  %conv50 = trunc i64 %sub.ptr.sub49 to i32, !dbg !1821
  store i32 %conv50, i32* %tmp44, !dbg !1821
  %38 = load i32* %tmp44, !dbg !1821
  %conv51 = zext i32 %38 to i64, !dbg !1821
  %cmp52 = icmp uge i64 %conv51, 8, !dbg !1821
  br i1 %cmp52, label %cond.end56, label %cond.false55, !dbg !1821

cond.false55:                                     ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([133 x i8]* @.str3986, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 265, i8* getelementptr inbounds ([31 x i8]* @__PRETTY_FUNCTION__.pop_dir, i32 0, i32 0)) #17, 
  unreachable, !dbg !1823

cond.end56:                                       ; preds = %if.end
  %39 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1824
  %len_stack59 = getelementptr inbounds %struct.dirstack_state* %39, i32 0, i32 1, !dbg !1824
  store %struct.obstack* %len_stack59, %struct.obstack** %__o58, align 8, !dbg !1824
  store i32 -8, i32* %__len61, align 4, !dbg !1824
  %40 = load %struct.obstack** %__o58, align 8, !dbg !1826
  %chunk_limit62 = getelementptr inbounds %struct.obstack* %40, i32 0, i32 4, !dbg !1826
  %41 = load i8** %chunk_limit62, align 8, !dbg !1826
  %42 = load %struct.obstack** %__o58, align 8, !dbg !1826
  %next_free63 = getelementptr inbounds %struct.obstack* %42, i32 0, i32 3, !dbg !1826
  %43 = load i8** %next_free63, align 8, !dbg !1826
  %sub.ptr.lhs.cast64 = ptrtoint i8* %41 to i64, !dbg !1826
  %sub.ptr.rhs.cast65 = ptrtoint i8* %43 to i64, !dbg !1826
  %sub.ptr.sub66 = sub i64 %sub.ptr.lhs.cast64, %sub.ptr.rhs.cast65, !dbg !1826
  %44 = load i32* %__len61, align 4, !dbg !1826
  %conv67 = sext i32 %44 to i64, !dbg !1826
  %cmp68 = icmp slt i64 %sub.ptr.sub66, %conv67, !dbg !1826
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !1826

if.then70:                                        ; preds = %cond.end56
  %45 = load %struct.obstack** %__o58, align 8, !dbg !1826
  %46 = load i32* %__len61, align 4, !dbg !1826
  call void @_obstack_newchunk(%struct.obstack* %45, i32 %46), !dbg !1826
  br label %if.end71, !dbg !1826

if.end71:                                         ; preds = %if.then70, %cond.end56
  %47 = load i32* %__len61, align 4, !dbg !1824
  %48 = load %struct.obstack** %__o58, align 8, !dbg !1824
  %next_free72 = getelementptr inbounds %struct.obstack* %48, i32 0, i32 3, !dbg !1824
  %49 = load i8** %next_free72, align 8, !dbg !1824
  %idx.ext73 = sext i32 %47 to i64, !dbg !1824
  %add.ptr74 = getelementptr inbounds i8* %49, i64 %idx.ext73, !dbg !1824
  store i8* %add.ptr74, i8** %next_free72, align 8, !dbg !1824
  ret void, !dbg !1828
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @top_dir(%struct.dirstack_state* %ds) #10 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %n_lengths = alloca i64, align 8
  %__o = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  %length = alloca i64*, align 8
  %top_len = alloca i64, align 8
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1829
  %len_stack = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 1, !dbg !1829
  store %struct.obstack* %len_stack, %struct.obstack** %__o, align 8, !dbg !1829
  %1 = load %struct.obstack** %__o, align 8, !dbg !1829
  %next_free = getelementptr inbounds %struct.obstack* %1, i32 0, i32 3, !dbg !1829
  %2 = load i8** %next_free, align 8, !dbg !1829
  %3 = load %struct.obstack** %__o, align 8, !dbg !1829
  %object_base = getelementptr inbounds %struct.obstack* %3, i32 0, i32 2, !dbg !1829
  %4 = load i8** %object_base, align 8, !dbg !1829
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !1829
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !1829
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1829
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !1829
  store i32 %conv, i32* %tmp, !dbg !1829
  %5 = load i32* %tmp, !dbg !1829
  %conv1 = zext i32 %5 to i64, !dbg !1829
  %int_cast_to_i64 = bitcast i64 8 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !1829
  %div = udiv i64 %conv1, 8, !dbg !1829
  store i64 %div, i64* %n_lengths, align 8, !dbg !1829
  %6 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1831
  %len_stack3 = getelementptr inbounds %struct.dirstack_state* %6, i32 0, i32 1, !dbg !1831
  %object_base4 = getelementptr inbounds %struct.obstack* %len_stack3, i32 0, i32 2, !dbg !1831
  %7 = load i8** %object_base4, align 8, !dbg !1831
  %8 = bitcast i8* %7 to i64*, !dbg !1831
  store i64* %8, i64** %length, align 8, !dbg !1831
  %9 = load i64* %n_lengths, align 8, !dbg !1832
  %sub = sub i64 %9, 1, !dbg !1832
  %10 = load i64** %length, align 8, !dbg !1832
  %arrayidx = getelementptr inbounds i64* %10, i64 %sub, !dbg !1832
  %11 = load i64* %arrayidx, align 8, !dbg !1832
  store i64 %11, i64* %top_len, align 8, !dbg !1832
  %12 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1833
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %12, i32 0, i32 0, !dbg !1833
  %next_free7 = getelementptr inbounds %struct.obstack* %dir_stack, i32 0, i32 3, !dbg !1833
  %13 = load i8** %next_free7, align 8, !dbg !1833
  %14 = load i64* %top_len, align 8, !dbg !1833
  %idx.neg = sub i64 0, %14, !dbg !1833
  %add.ptr = getelementptr inbounds i8* %13, i64 %idx.neg, !dbg !1833
  store i8* %add.ptr, i8** %p, align 8, !dbg !1833
  %15 = load i64* %top_len, align 8, !dbg !1834
  %call = call i8* @xmalloc(i64 %15), !dbg !1834
  store i8* %call, i8** %q, align 8, !dbg !1834
  %16 = load i8** %q, align 8, !dbg !1835
  %17 = load i8** %p, align 8, !dbg !1835
  %18 = load i64* %top_len, align 8, !dbg !1835
  %sub9 = sub i64 %18, 1, !dbg !1835
  %19 = call i8* @memcpy(i8* %16, i8* %17, i64 %sub9)
  %20 = load i64* %top_len, align 8, !dbg !1836
  %sub10 = sub i64 %20, 1, !dbg !1836
  %21 = load i8** %q, align 8, !dbg !1836
  %arrayidx11 = getelementptr inbounds i8* %21, i64 %sub10, !dbg !1836
  store i8 0, i8* %arrayidx11, align 1, !dbg !1836
  %22 = load i8** %q, align 8, !dbg !1837
  ret i8* %22, !dbg !1837
}

; Function Attrs: nounwind uwtable
define internal void @AD_mark_current_as_unremovable(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %top = alloca %struct.AD_ent*, align 8
  %curr = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1838
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %0), !dbg !1838
  store %struct.AD_ent* %call, %struct.AD_ent** %top, align 8, !dbg !1838
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1839
  %call1 = call i8* @top_dir(%struct.dirstack_state* %1), !dbg !1839
  store i8* %call1, i8** %curr, align 8, !dbg !1839
  %2 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1840
  %call2 = call i64 @AD_stack_height(%struct.dirstack_state* %2), !dbg !1840
  %cmp = icmp ult i64 1, %call2, !dbg !1840
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !1840

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8]* @.str4087, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 613, i8* getelementptr inbounds ([54 x i8]* @__PRETTY_FUNCTION__.AD_mark_current_as_unremovable
  unreachable, !dbg !1840

cond.end:                                         ; preds = %entry
  %3 = load %struct.AD_ent** %top, align 8, !dbg !1841
  %incdec.ptr = getelementptr inbounds %struct.AD_ent* %3, i32 -1, !dbg !1841
  store %struct.AD_ent* %incdec.ptr, %struct.AD_ent** %top, align 8, !dbg !1841
  %4 = load %struct.AD_ent** %top, align 8, !dbg !1842
  %unremovable = getelementptr inbounds %struct.AD_ent* %4, i32 0, i32 0, !dbg !1842
  %5 = load i8** %curr, align 8, !dbg !1842
  call void @AD_mark_helper(%struct.hash_table** %unremovable, i8* %5), !dbg !1842
  ret void, !dbg !1843
}

; Function Attrs: nounwind uwtable
define internal i32 @remove_cwd_entries(%struct.__dirstream** %dirp, %struct.dirstack_state* %ds, i8** %subdir, %struct.stat* %subdir_sb, %struct.rm_options* %x) #0 {
entry:
  %dirp.addr = alloca %struct.__dirstream**, align 8
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %subdir.addr = alloca i8**, align 8
  %subdir_sb.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %top = alloca %struct.AD_ent*, align 8
  %status = alloca i32, align 4
  %n_unlinked_since_opendir_or_last_rewind = alloca i64, align 8
  %dp = alloca %struct.dirent*, align 8
  %tmp_status = alloca i32, align 4
  %f = alloca i8*, align 8
  %subdir_dirp = alloca %struct.__dirstream*, align 8
  %saved_errno = alloca i32, align 4
  store %struct.__dirstream** %dirp, %struct.__dirstream*** %dirp.addr, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8** %subdir, i8*** %subdir.addr, align 8
  store %struct.stat* %subdir_sb, %struct.stat** %subdir_sb.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1844
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %0), !dbg !1844
  store %struct.AD_ent* %call, %struct.AD_ent** %top, align 8, !dbg !1844
  %1 = load %struct.AD_ent** %top, align 8, !dbg !1845
  %status1 = getelementptr inbounds %struct.AD_ent* %1, i32 0, i32 1, !dbg !1845
  %2 = load i32* %status1, align 4, !dbg !1845
  store i32 %2, i32* %status, align 4, !dbg !1845
  store i64 0, i64* %n_unlinked_since_opendir_or_last_rewind, align 8, !dbg !1846
  %3 = load i32* %status, align 4, !dbg !1847
  %cmp = icmp eq i32 %3, 2, !dbg !1847
  %4 = load i32* %status, align 4, !dbg !1847
  %cmp2 = icmp eq i32 %4, 3, !dbg !1847
  %or.cond = or i1 %cmp, %cmp2, !dbg !1847
  %5 = load i32* %status, align 4, !dbg !1847
  %cmp4 = icmp eq i32 %5, 4, !dbg !1847
  %or.cond1 = or i1 %or.cond, %cmp4, !dbg !1847
  br i1 %or.cond1, label %cond.end, label %cond.false, !dbg !1847

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([76 x i8]* @.str4188, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 1231, i8* getelementptr inbounds ([111 x i8]* @__PRETTY_FUNCTION__.remove_cwd_entries, i32 0, i
  unreachable, !dbg !1847

cond.end:                                         ; preds = %entry
  %6 = load i8*** %subdir.addr, align 8, !dbg !1848
  store i8* null, i8** %6, align 8, !dbg !1848
  br label %while.body, !dbg !1849

while.body:                                       ; preds = %do.end73, %if.end13, %if.then11, %cond.end
  %call5 = call i32* @__errno_location() #1, !dbg !1850
  store i32 0, i32* %call5, align 4, !dbg !1850
  %7 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !1852
  %8 = load %struct.__dirstream** %7, align 8, !dbg !1852
  %call6 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %8), !dbg !1852
  store %struct.dirent* %call6, %struct.dirent** %dp, align 8, !dbg !1852
  %9 = load %struct.dirent** %dp, align 8, !dbg !1853
  %cmp7 = icmp eq %struct.dirent* %9, null, !dbg !1853
  br i1 %cmp7, label %if.then, label %if.end13, !dbg !1853

if.then:                                          ; preds = %while.body
  %call8 = call i32* @__errno_location() #1, !dbg !1855
  %10 = load i32* %call8, align 4, !dbg !1855
  %tobool = icmp eq i32 %10, 0, !dbg !1855
  %11 = load i64* %n_unlinked_since_opendir_or_last_rewind, align 8, !dbg !1858
  %cmp10 = icmp ule i64 10, %11, !dbg !1858
  %or.cond3 = and i1 %tobool, %cmp10, !dbg !1855
  br i1 %or.cond3, label %if.then11, label %while.end, !dbg !1855

if.then11:                                        ; preds = %if.then
  %12 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !1860
  %13 = load %struct.__dirstream** %12, align 8, !dbg !1860
  call void @rewinddir(%struct.__dirstream* %13) #9, !dbg !1860
  store i64 0, i64* %n_unlinked_since_opendir_or_last_rewind, align 8, !dbg !1862
  br label %while.body, !dbg !1863

if.end13:                                         ; preds = %while.body
  %14 = load %struct.dirent** %dp, align 8, !dbg !1864
  %d_name = getelementptr inbounds %struct.dirent* %14, i32 0, i32 4, !dbg !1864
  %arraydecay = getelementptr inbounds [256 x i8]* %d_name, i32 0, i32 0, !dbg !1864
  store i8* %arraydecay, i8** %f, align 8, !dbg !1864
  %15 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1865
  %16 = load i8** %f, align 8, !dbg !1865
  %call14 = call zeroext i1 @AD_is_removable(%struct.dirstack_state* %15, i8* %16), !dbg !1865
  br i1 %call14, label %if.end16, label %while.body, !dbg !1865

if.end16:                                         ; preds = %if.end13
  %17 = load %struct.stat** %subdir_sb.addr, align 8, !dbg !1867
  %call17 = call %struct.stat* @cache_stat_init(%struct.stat* %17), !dbg !1867
  %18 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !1868
  %19 = load %struct.__dirstream** %18, align 8, !dbg !1868
  %call18 = call i32 @dirfd(%struct.__dirstream* %19) #9, !dbg !1868
  %20 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1868
  %21 = load i8** %f, align 8, !dbg !1868
  %22 = load %struct.stat** %subdir_sb.addr, align 8, !dbg !1868
  %23 = load %struct.rm_options** %x.addr, align 8, !dbg !1868
  %24 = load %struct.dirent** %dp, align 8, !dbg !1868
  %call19 = call i32 @remove_entry(i32 %call18, %struct.dirstack_state* %20, i8* %21, %struct.stat* %22, %struct.rm_options* %23, %struct.dirent* %24), !dbg !1868
  store i32 %call19, i32* %tmp_status, align 4, !dbg !1868
  %25 = load i32* %tmp_status, align 4, !dbg !1869
  switch i32 %25, label %do.body60 [
    i32 2, label %sw.bb
    i32 4, label %sw.bb20
    i32 3, label %sw.bb20
    i32 5, label %sw.bb27
  ], !dbg !1869

sw.bb:                                            ; preds = %if.end16
  %26 = load i64* %n_unlinked_since_opendir_or_last_rewind, align 8, !dbg !1870
  %inc = add i64 %26, 1, !dbg !1870
  store i64 %inc, i64* %n_unlinked_since_opendir_or_last_rewind, align 8, !dbg !1870
  br label %do.body60, !dbg !1872

sw.bb20:                                          ; preds = %if.end16, %if.end16
  %27 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1873
  %28 = load i8** %f, align 8, !dbg !1873
  call void @AD_mark_as_unremovable(%struct.dirstack_state* %27, i8* %28), !dbg !1873
  %29 = load i32* %tmp_status, align 4, !dbg !1874
  %cmp21 = icmp eq i32 %29, 4, !dbg !1874
  br i1 %cmp21, label %if.then25, label %lor.lhs.false22, !dbg !1874

lor.lhs.false22:                                  ; preds = %sw.bb20
  %30 = load i32* %tmp_status, align 4, !dbg !1874
  %cmp23 = icmp eq i32 %30, 3, !dbg !1874
  %31 = load i32* %status, align 4, !dbg !1874
  %cmp24 = icmp eq i32 %31, 2, !dbg !1874
  %or.cond2 = and i1 %cmp23, %cmp24, !dbg !1874
  br i1 %or.cond2, label %if.then25, label %do.body60, !dbg !1874

if.then25:                                        ; preds = %lor.lhs.false22, %sw.bb20
  %32 = load i32* %tmp_status, align 4, !dbg !1874
  store i32 %32, i32* %status, align 4, !dbg !1874
  br label %do.body60, !dbg !1874

sw.bb27:                                          ; preds = %if.end16
  %33 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !1877
  %34 = load %struct.__dirstream** %33, align 8, !dbg !1877
  %call28 = call i32 @dirfd(%struct.__dirstream* %34) #9, !dbg !1877
  %35 = load i8** %f, align 8, !dbg !1877
  %36 = load %struct.rm_options** %x.addr, align 8, !dbg !1877
  %call29 = call i32* @__errno_location() #1, !dbg !1879
  %37 = load i32* %call29, align 4, !dbg !1879
  %38 = load %struct.stat** %subdir_sb.addr, align 8, !dbg !1877
  %call30 = call %struct.__dirstream* @fd_to_subdirp(i32 %call28, i8* %35, %struct.rm_options* %36, i32 %37, %struct.stat* %38, i32* null), !dbg !1877
  store %struct.__dirstream* %call30, %struct.__dirstream** %subdir_dirp, align 8, !dbg !1877
  %39 = load %struct.__dirstream** %subdir_dirp, align 8, !dbg !1880
  %cmp31 = icmp eq %struct.__dirstream* %39, null, !dbg !1880
  br i1 %cmp31, label %if.then32, label %if.end51, !dbg !1880

if.then32:                                        ; preds = %sw.bb27
  store i32 4, i32* %status, align 4, !dbg !1882
  %40 = load %struct.rm_options** %x.addr, align 8, !dbg !1884
  %call33 = call i32* @__errno_location() #1, !dbg !1886
  %41 = load i32* %call33, align 4, !dbg !1886
  %call34 = call zeroext i1 @ignorable_missing(%struct.rm_options* %40, i32 %41), !dbg !1884
  br i1 %call34, label %if.end46, label %if.else36, !dbg !1884

if.else36:                                        ; preds = %if.then32
  %call37 = call i32* @__errno_location() #1, !dbg !1887
  %42 = load i32* %call37, align 4, !dbg !1887
  store i32 %42, i32* %saved_errno, align 4, !dbg !1887
  %43 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !1889
  %44 = load %struct.__dirstream** %43, align 8, !dbg !1889
  %call38 = call i32 @dirfd(%struct.__dirstream* %44) #9, !dbg !1889
  %45 = load i8** %f, align 8, !dbg !1889
  %call39 = call i32 @unlinkat(i32 %call38, i8* %45, i32 512) #9, !dbg !1889
  %cmp40 = icmp eq i32 %call39, 0, !dbg !1889
  br i1 %cmp40, label %if.then41, label %if.else42, !dbg !1889

if.then41:                                        ; preds = %if.else36
  store i32 2, i32* %status, align 4, !dbg !1891
  br label %if.end46, !dbg !1891

if.else42:                                        ; preds = %if.else36
  %46 = load i32* %saved_errno, align 4, !dbg !1892
  %conv = sext i32 %46 to i64, !dbg !1892
  %47 = inttoptr i64 %conv to i32* (...)*, !dbg !1892
  %48 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1892
  %49 = load i8** %f, align 8, !dbg !1892
  %call43 = call i8* @full_filename_(%struct.dirstack_state* %48, i8* %49), !dbg !1892
  %call44 = call i8* @quote(i8* %call43), !dbg !1892
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %47, i8* getelementptr inbounds ([17 x i8]* @.str1360, i32 0, i32 0), i8* %call44), !dbg !1892
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %if.else42, %if.then32
  %50 = load i32* %status, align 4, !dbg !1894
  %cmp47 = icmp eq i32 %50, 4, !dbg !1894
  br i1 %cmp47, label %if.then49, label %do.body60, !dbg !1894

if.then49:                                        ; preds = %if.end46
  %51 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1896
  %52 = load i8** %f, align 8, !dbg !1896
  call void @AD_mark_as_unremovable(%struct.dirstack_state* %51, i8* %52), !dbg !1896
  br label %do.body60, !dbg !1896

if.end51:                                         ; preds = %sw.bb27
  %53 = load i8** %f, align 8, !dbg !1897
  %call52 = call i8* @xstrdup(i8* %53), !dbg !1897
  %54 = load i8*** %subdir.addr, align 8, !dbg !1897
  store i8* %call52, i8** %54, align 8, !dbg !1897
  %55 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !1898
  %56 = load %struct.__dirstream** %55, align 8, !dbg !1898
  %call53 = call i32 @closedir(%struct.__dirstream* %56), !dbg !1898
  %cmp54 = icmp ne i32 %call53, 0, !dbg !1898
  br i1 %cmp54, label %if.then56, label %if.end59, !dbg !1898

if.then56:                                        ; preds = %if.end51
  %57 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1900
  %call57 = call i8* @full_filename_(%struct.dirstack_state* %57, i8* getelementptr inbounds ([2 x i8]* @.str2471, i32 0, i32 0)), !dbg !1900
  %call58 = call i8* @quote(i8* %call57), !dbg !1900
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* getelementptr inbounds ([29 x i8]* @.str2572, i32 0, i32 0), i8* %call58), !dbg !1900
  store i32 4, i32* %status, align 4, !dbg !1902
  br label %if.end59, !dbg !1903

if.end59:                                         ; preds = %if.then56, %if.end51
  %58 = load %struct.__dirstream** %subdir_dirp, align 8, !dbg !1904
  %59 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !1904
  store %struct.__dirstream* %58, %struct.__dirstream** %59, align 8, !dbg !1904
  br label %do.body60, !dbg !1905

do.body60:                                        ; preds = %if.end16, %sw.bb, %if.end59, %lor.lhs.false22, %if.then25, %if.then49, %if.end46
  %60 = load i32* %status, align 4, !dbg !1906
  %cmp61 = icmp eq i32 %60, 4, !dbg !1906
  br i1 %cmp61, label %if.then70, label %lor.lhs.false63, !dbg !1906

lor.lhs.false63:                                  ; preds = %do.body60
  %61 = load i32* %status, align 4, !dbg !1906
  %cmp64 = icmp eq i32 %61, 3, !dbg !1906
  br i1 %cmp64, label %land.lhs.true66, label %do.end73, !dbg !1906

land.lhs.true66:                                  ; preds = %lor.lhs.false63
  %62 = load %struct.AD_ent** %top, align 8, !dbg !1906
  %status67 = getelementptr inbounds %struct.AD_ent* %62, i32 0, i32 1, !dbg !1906
  %63 = load i32* %status67, align 4, !dbg !1906
  %cmp68 = icmp eq i32 %63, 2, !dbg !1906
  br i1 %cmp68, label %if.then70, label %do.end73, !dbg !1906

if.then70:                                        ; preds = %land.lhs.true66, %do.body60
  %64 = load i32* %status, align 4, !dbg !1906
  %65 = load %struct.AD_ent** %top, align 8, !dbg !1906
  %status71 = getelementptr inbounds %struct.AD_ent* %65, i32 0, i32 1, !dbg !1906
  store i32 %64, i32* %status71, align 4, !dbg !1906
  br label %do.end73, !dbg !1906

do.end73:                                         ; preds = %lor.lhs.false63, %land.lhs.true66, %if.then70
  %66 = load i8*** %subdir.addr, align 8, !dbg !1909
  %67 = load i8** %66, align 8, !dbg !1909
  %tobool74 = icmp ne i8* %67, null, !dbg !1909
  br i1 %tobool74, label %while.end, label %while.body, !dbg !1909

while.end:                                        ; preds = %if.then, %do.end73
  %68 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !1911
  %69 = load %struct.__dirstream** %68, align 8, !dbg !1911
  %cmp77 = icmp ne %struct.__dirstream* %69, null, !dbg !1911
  br i1 %cmp77, label %cond.end81, label %cond.false80, !dbg !1911

cond.false80:                                     ; preds = %while.end
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8]* @.str4289, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 1349, i8* getelementptr inbounds ([111 x i8]* @__PRETTY_FUNCTION__.remove_cwd_entries, i32 0, i
  unreachable, !dbg !1911

cond.end81:                                       ; preds = %while.end
  %70 = load %struct.__dirstream*** %dirp.addr, align 8, !dbg !1912
  %71 = load %struct.__dirstream** %70, align 8, !dbg !1912
  %call82 = call i32 @dirfd(%struct.__dirstream* %71) #9, !dbg !1912
  %call83 = call i32 (i32, i32, ...)* @fcntl(i32 %call82, i32 1), !dbg !1912
  %cmp84 = icmp sle i32 0, %call83, !dbg !1912
  br i1 %cmp84, label %cond.end88, label %cond.false87, !dbg !1912

cond.false87:                                     ; preds = %cond.end81
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8]* @.str4390, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 1350, i8* getelementptr inbounds ([111 x i8]* @__PRETTY_FUNCTION__.remove_cwd_entries, i32 0, i
  unreachable, !dbg !1912

cond.end88:                                       ; preds = %cond.end81
  %72 = load i32* %status, align 4, !dbg !1913
  ret i32 %72, !dbg !1913
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @AD_is_removable(%struct.dirstack_state* %ds, i8* %file) #10 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %file.addr = alloca i8*, align 8
  %top = alloca %struct.AD_ent*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %file, i8** %file.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1914
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %0), !dbg !1914
  store %struct.AD_ent* %call, %struct.AD_ent** %top, align 8, !dbg !1914
  %1 = load %struct.AD_ent** %top, align 8, !dbg !1915
  %unremovable = getelementptr inbounds %struct.AD_ent* %1, i32 0, i32 0, !dbg !1915
  %2 = load %struct.hash_table** %unremovable, align 8, !dbg !1915
  %tobool = icmp ne %struct.hash_table* %2, null, !dbg !1915
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !1915

land.rhs:                                         ; preds = %entry
  %3 = load %struct.AD_ent** %top, align 8, !dbg !1915
  %unremovable1 = getelementptr inbounds %struct.AD_ent* %3, i32 0, i32 0, !dbg !1915
  %4 = load %struct.hash_table** %unremovable1, align 8, !dbg !1915
  %5 = load i8** %file.addr, align 8, !dbg !1915
  %call2 = call i8* @hash_lookup(%struct.hash_table* %4, i8* %5), !dbg !1915
  %tobool3 = icmp ne i8* %call2, null, !dbg !1915
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %tobool3, %land.rhs ]
  %lnot = xor i1 %6, true
  ret i1 %lnot, !dbg !1916
}

; Function Attrs: nounwind uwtable
define internal void @AD_push(i32 %fd_cwd, %struct.dirstack_state* %ds, i8* %dir, %struct.stat* %dir_sb_from_parent) #0 {
entry:
  %fd_cwd.addr = alloca i32, align 4
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %dir.addr = alloca i8*, align 8
  %dir_sb_from_parent.addr = alloca %struct.stat*, align 8
  %top = alloca %struct.AD_ent*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %__o8 = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %dir, i8** %dir.addr, align 8
  store %struct.stat* %dir_sb_from_parent, %struct.stat** %dir_sb_from_parent.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1917
  %1 = load i8** %dir.addr, align 8, !dbg !1917
  call void @push_dir(%struct.dirstack_state* %0, i8* %1), !dbg !1917
  %2 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1918
  %cycle_check_state = getelementptr inbounds %struct.dirstack_state* %2, i32 0, i32 3, !dbg !1918
  %3 = load %struct.stat** %dir_sb_from_parent.addr, align 8, !dbg !1918
  %call = call zeroext i1 @cycle_check(%struct.cycle_check_state* %cycle_check_state, %struct.stat* %3), !dbg !1918
  %4 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1920
  br i1 %call, label %if.then, label %if.end, !dbg !1918

if.then:                                          ; preds = %entry
  %call1 = call i8* @full_filename_(%struct.dirstack_state* %4, i8* getelementptr inbounds ([2 x i8]* @.str2471, i32 0, i32 0)), !dbg !1920
  %call2 = call i8* @quote(i8* %call1), !dbg !1920
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* null, i8* getelementptr inbounds ([186 x i8]* @.str4491, i32 0, i32 0), i8* %call2), !dbg !1922
  %5 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1923
  %current_arg_jumpbuf = getelementptr inbounds %struct.dirstack_state* %5, i32 0, i32 4, !dbg !1923
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag]* %current_arg_jumpbuf, i32 0, i32 0, !dbg !1923
  call void @longjmp(%struct.__jmp_buf_tag* %arraydecay, i32 1) #17, !dbg !1923
  unreachable, !dbg !1923

if.end:                                           ; preds = %entry
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %4, i32 0, i32 2, !dbg !1924
  store %struct.obstack* %Active_dir, %struct.obstack** %__o, align 8, !dbg !1924
  store i32 32, i32* %__len, align 4, !dbg !1924
  %6 = load %struct.obstack** %__o, align 8, !dbg !1926
  %chunk_limit = getelementptr inbounds %struct.obstack* %6, i32 0, i32 4, !dbg !1926
  %7 = load i8** %chunk_limit, align 8, !dbg !1926
  %8 = load %struct.obstack** %__o, align 8, !dbg !1926
  %next_free = getelementptr inbounds %struct.obstack* %8, i32 0, i32 3, !dbg !1926
  %9 = load i8** %next_free, align 8, !dbg !1926
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64, !dbg !1926
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !1926
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1926
  %10 = load i32* %__len, align 4, !dbg !1926
  %conv = sext i32 %10 to i64, !dbg !1926
  %cmp = icmp slt i64 %sub.ptr.sub, %conv, !dbg !1926
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !1926

if.then4:                                         ; preds = %if.end
  %11 = load %struct.obstack** %__o, align 8, !dbg !1926
  %12 = load i32* %__len, align 4, !dbg !1926
  call void @_obstack_newchunk(%struct.obstack* %11, i32 %12), !dbg !1926
  br label %if.end5, !dbg !1926

if.end5:                                          ; preds = %if.then4, %if.end
  %13 = load i32* %__len, align 4, !dbg !1924
  %14 = load %struct.obstack** %__o, align 8, !dbg !1924
  %next_free6 = getelementptr inbounds %struct.obstack* %14, i32 0, i32 3, !dbg !1924
  %15 = load i8** %next_free6, align 8, !dbg !1924
  %idx.ext = sext i32 %13 to i64, !dbg !1924
  %add.ptr = getelementptr inbounds i8* %15, i64 %idx.ext, !dbg !1924
  store i8* %add.ptr, i8** %next_free6, align 8, !dbg !1924
  %16 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1928
  %call7 = call i64 @AD_stack_height(%struct.dirstack_state* %16), !dbg !1928
  %17 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1929
  %len_stack = getelementptr inbounds %struct.dirstack_state* %17, i32 0, i32 1, !dbg !1929
  store %struct.obstack* %len_stack, %struct.obstack** %__o8, align 8, !dbg !1929
  %18 = load %struct.obstack** %__o8, align 8, !dbg !1929
  %next_free9 = getelementptr inbounds %struct.obstack* %18, i32 0, i32 3, !dbg !1929
  %19 = load i8** %next_free9, align 8, !dbg !1929
  %20 = load %struct.obstack** %__o8, align 8, !dbg !1929
  %object_base = getelementptr inbounds %struct.obstack* %20, i32 0, i32 2, !dbg !1929
  %21 = load i8** %object_base, align 8, !dbg !1929
  %sub.ptr.lhs.cast10 = ptrtoint i8* %19 to i64, !dbg !1929
  %sub.ptr.rhs.cast11 = ptrtoint i8* %21 to i64, !dbg !1929
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !1929
  %conv13 = trunc i64 %sub.ptr.sub12 to i32, !dbg !1929
  store i32 %conv13, i32* %tmp, !dbg !1929
  %22 = load i32* %tmp, !dbg !1929
  %conv14 = zext i32 %22 to i64, !dbg !1929
  %int_cast_to_i64 = bitcast i64 8 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !1929
  %div = udiv i64 %conv14, 8, !dbg !1929
  %add = add i64 1, %div, !dbg !1929
  %cmp15 = icmp eq i64 %call7, %add, !dbg !1929
  br i1 %cmp15, label %cond.end, label %cond.false, !dbg !1929

cond.false:                                       ; preds = %if.end5
  call void @__assert_fail(i8* getelementptr inbounds ([160 x i8]* @.str4592, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 706, i8* getelementptr inbounds ([71 x i8]* @__PRETTY_FUNCTION__.AD_push, i32 0, i32 0)) #17, 
  unreachable, !dbg !1928

cond.end:                                         ; preds = %if.end5
  %23 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1931
  %call17 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %23), !dbg !1931
  store %struct.AD_ent* %call17, %struct.AD_ent** %top, align 8, !dbg !1931
  %24 = load %struct.stat** %dir_sb_from_parent.addr, align 8, !dbg !1932
  %st_dev = getelementptr inbounds %struct.stat* %24, i32 0, i32 0, !dbg !1932
  %25 = load i64* %st_dev, align 8, !dbg !1932
  %26 = load %struct.AD_ent** %top, align 8, !dbg !1932
  %dev_ino = getelementptr inbounds %struct.AD_ent* %26, i32 0, i32 2, !dbg !1932
  %st_dev18 = getelementptr inbounds %struct.dev_ino* %dev_ino, i32 0, i32 1, !dbg !1932
  store i64 %25, i64* %st_dev18, align 8, !dbg !1932
  %27 = load %struct.stat** %dir_sb_from_parent.addr, align 8, !dbg !1933
  %st_ino = getelementptr inbounds %struct.stat* %27, i32 0, i32 1, !dbg !1933
  %28 = load i64* %st_ino, align 8, !dbg !1933
  %29 = load %struct.AD_ent** %top, align 8, !dbg !1933
  %dev_ino19 = getelementptr inbounds %struct.AD_ent* %29, i32 0, i32 2, !dbg !1933
  %st_ino20 = getelementptr inbounds %struct.dev_ino* %dev_ino19, i32 0, i32 0, !dbg !1933
  store i64 %28, i64* %st_ino20, align 8, !dbg !1933
  %30 = load %struct.AD_ent** %top, align 8, !dbg !1934
  %unremovable = getelementptr inbounds %struct.AD_ent* %30, i32 0, i32 0, !dbg !1934
  store %struct.hash_table* null, %struct.hash_table** %unremovable, align 8, !dbg !1934
  ret void, !dbg !1935
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @push_dir(%struct.dirstack_state* %ds, i8* %rm_dir_name) #10 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %rm_dir_name.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %__o7 = alloca %struct.obstack*, align 8
  %__o17 = alloca %struct.obstack*, align 8
  %__len18 = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %rm_dir_name, i8** %rm_dir_name.addr, align 8
  %0 = load i8** %rm_dir_name.addr, align 8, !dbg !1936
  %call = call i64 @strlen(i8* %0) #19, !dbg !1936
  store i64 %call, i64* %len, align 8, !dbg !1936
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1937
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %1, i32 0, i32 0, !dbg !1937
  store %struct.obstack* %dir_stack, %struct.obstack** %__o, align 8, !dbg !1937
  %2 = load i64* %len, align 8, !dbg !1937
  %conv = trunc i64 %2 to i32, !dbg !1937
  store i32 %conv, i32* %__len, align 4, !dbg !1937
  %3 = load %struct.obstack** %__o, align 8, !dbg !1939
  %next_free = getelementptr inbounds %struct.obstack* %3, i32 0, i32 3, !dbg !1939
  %4 = load i8** %next_free, align 8, !dbg !1939
  %5 = load i32* %__len, align 4, !dbg !1939
  %idx.ext = sext i32 %5 to i64, !dbg !1939
  %add.ptr = getelementptr inbounds i8* %4, i64 %idx.ext, !dbg !1939
  %6 = load %struct.obstack** %__o, align 8, !dbg !1939
  %chunk_limit = getelementptr inbounds %struct.obstack* %6, i32 0, i32 4, !dbg !1939
  %7 = load i8** %chunk_limit, align 8, !dbg !1939
  %cmp = icmp ugt i8* %add.ptr, %7, !dbg !1939
  br i1 %cmp, label %if.then, label %if.end, !dbg !1939

if.then:                                          ; preds = %entry
  %8 = load %struct.obstack** %__o, align 8, !dbg !1939
  %9 = load i32* %__len, align 4, !dbg !1939
  call void @_obstack_newchunk(%struct.obstack* %8, i32 %9), !dbg !1939
  br label %if.end, !dbg !1939

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.obstack** %__o, align 8, !dbg !1937
  %next_free2 = getelementptr inbounds %struct.obstack* %10, i32 0, i32 3, !dbg !1937
  %11 = load i8** %next_free2, align 8, !dbg !1937
  %12 = load i8** %rm_dir_name.addr, align 8, !dbg !1937
  %13 = load i32* %__len, align 4, !dbg !1937
  %conv3 = sext i32 %13 to i64, !dbg !1937
  %14 = call i8* @memcpy(i8* %11, i8* %12, i64 %conv3)
  %15 = load i32* %__len, align 4, !dbg !1937
  %16 = load %struct.obstack** %__o, align 8, !dbg !1937
  %next_free4 = getelementptr inbounds %struct.obstack* %16, i32 0, i32 3, !dbg !1937
  %17 = load i8** %next_free4, align 8, !dbg !1937
  %idx.ext5 = sext i32 %15 to i64, !dbg !1937
  %add.ptr6 = getelementptr inbounds i8* %17, i64 %idx.ext5, !dbg !1937
  store i8* %add.ptr6, i8** %next_free4, align 8, !dbg !1937
  %18 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1941
  %dir_stack8 = getelementptr inbounds %struct.dirstack_state* %18, i32 0, i32 0, !dbg !1941
  store %struct.obstack* %dir_stack8, %struct.obstack** %__o7, align 8, !dbg !1941
  %19 = load %struct.obstack** %__o7, align 8, !dbg !1943
  %next_free9 = getelementptr inbounds %struct.obstack* %19, i32 0, i32 3, !dbg !1943
  %20 = load i8** %next_free9, align 8, !dbg !1943
  %add.ptr10 = getelementptr inbounds i8* %20, i64 1, !dbg !1943
  %21 = load %struct.obstack** %__o7, align 8, !dbg !1943
  %chunk_limit11 = getelementptr inbounds %struct.obstack* %21, i32 0, i32 4, !dbg !1943
  %22 = load i8** %chunk_limit11, align 8, !dbg !1943
  %cmp12 = icmp ugt i8* %add.ptr10, %22, !dbg !1943
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !1943

if.then14:                                        ; preds = %if.end
  %23 = load %struct.obstack** %__o7, align 8, !dbg !1943
  call void @_obstack_newchunk(%struct.obstack* %23, i32 1), !dbg !1943
  br label %if.end15, !dbg !1943

if.end15:                                         ; preds = %if.then14, %if.end
  %24 = load %struct.obstack** %__o7, align 8, !dbg !1941
  %next_free16 = getelementptr inbounds %struct.obstack* %24, i32 0, i32 3, !dbg !1941
  %25 = load i8** %next_free16, align 8, !dbg !1941
  %incdec.ptr = getelementptr inbounds i8* %25, i32 1, !dbg !1941
  store i8* %incdec.ptr, i8** %next_free16, align 8, !dbg !1941
  store i8 47, i8* %25, align 1, !dbg !1941
  %26 = load i64* %len, align 8, !dbg !1945
  %inc = add i64 %26, 1, !dbg !1945
  store i64 %inc, i64* %len, align 8, !dbg !1945
  %27 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1946
  %len_stack = getelementptr inbounds %struct.dirstack_state* %27, i32 0, i32 1, !dbg !1946
  store %struct.obstack* %len_stack, %struct.obstack** %__o17, align 8, !dbg !1946
  store i32 8, i32* %__len18, align 4, !dbg !1946
  %28 = load %struct.obstack** %__o17, align 8, !dbg !1948
  %next_free19 = getelementptr inbounds %struct.obstack* %28, i32 0, i32 3, !dbg !1948
  %29 = load i8** %next_free19, align 8, !dbg !1948
  %30 = load i32* %__len18, align 4, !dbg !1948
  %idx.ext20 = sext i32 %30 to i64, !dbg !1948
  %add.ptr21 = getelementptr inbounds i8* %29, i64 %idx.ext20, !dbg !1948
  %31 = load %struct.obstack** %__o17, align 8, !dbg !1948
  %chunk_limit22 = getelementptr inbounds %struct.obstack* %31, i32 0, i32 4, !dbg !1948
  %32 = load i8** %chunk_limit22, align 8, !dbg !1948
  %cmp23 = icmp ugt i8* %add.ptr21, %32, !dbg !1948
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !1948

if.then25:                                        ; preds = %if.end15
  %33 = load %struct.obstack** %__o17, align 8, !dbg !1948
  %34 = load i32* %__len18, align 4, !dbg !1948
  call void @_obstack_newchunk(%struct.obstack* %33, i32 %34), !dbg !1948
  br label %if.end26, !dbg !1948

if.end26:                                         ; preds = %if.then25, %if.end15
  %35 = load %struct.obstack** %__o17, align 8, !dbg !1946
  %next_free27 = getelementptr inbounds %struct.obstack* %35, i32 0, i32 3, !dbg !1946
  %36 = load i8** %next_free27, align 8, !dbg !1946
  %37 = bitcast i64* %len to i8*, !dbg !1946
  %38 = load i32* %__len18, align 4, !dbg !1946
  %conv28 = sext i32 %38 to i64, !dbg !1946
  %39 = call i8* @memcpy(i8* %36, i8* %37, i64 %conv28)
  %40 = load i32* %__len18, align 4, !dbg !1946
  %41 = load %struct.obstack** %__o17, align 8, !dbg !1946
  %next_free29 = getelementptr inbounds %struct.obstack* %41, i32 0, i32 3, !dbg !1946
  %42 = load i8** %next_free29, align 8, !dbg !1946
  %idx.ext30 = sext i32 %40 to i64, !dbg !1946
  %add.ptr31 = getelementptr inbounds i8* %42, i64 %idx.ext30, !dbg !1946
  store i8* %add.ptr31, i8** %next_free29, align 8, !dbg !1946
  ret void, !dbg !1950
}

; Function Attrs: nounwind uwtable
define internal i8* @full_filename_(%struct.dirstack_state* %ds, i8* %filename) #0 {
entry:
  %retval = alloca i8*, align 8
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %filename.addr = alloca i8*, align 8
  %rm_dir_len = alloca i64, align 8
  %__o = alloca %struct.obstack*, align 8
  %tmp = alloca i32, align 4
  %rm_dir_name = alloca i8*, align 8
  %n_bytes_needed = alloca i64, align 8
  %filename_len = alloca i64, align 8
  %new_buf = alloca i8*, align 8
  %truncated = alloca i8, align 1
  %len = alloca i64, align 8
  %p = alloca i8*, align 8
  %p32 = alloca i8*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1951
  %dir_stack = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 0, !dbg !1951
  store %struct.obstack* %dir_stack, %struct.obstack** %__o, align 8, !dbg !1951
  %1 = load %struct.obstack** %__o, align 8, !dbg !1951
  %next_free = getelementptr inbounds %struct.obstack* %1, i32 0, i32 3, !dbg !1951
  %2 = load i8** %next_free, align 8, !dbg !1951
  %3 = load %struct.obstack** %__o, align 8, !dbg !1951
  %object_base = getelementptr inbounds %struct.obstack* %3, i32 0, i32 2, !dbg !1951
  %4 = load i8** %object_base, align 8, !dbg !1951
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !1951
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !1951
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1951
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !1951
  store i32 %conv, i32* %tmp, !dbg !1951
  %5 = load i32* %tmp, !dbg !1951
  %conv1 = zext i32 %5 to i64, !dbg !1951
  store i64 %conv1, i64* %rm_dir_len, align 8, !dbg !1951
  %6 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !1953
  %dir_stack3 = getelementptr inbounds %struct.dirstack_state* %6, i32 0, i32 0, !dbg !1953
  %object_base4 = getelementptr inbounds %struct.obstack* %dir_stack3, i32 0, i32 2, !dbg !1953
  %7 = load i8** %object_base4, align 8, !dbg !1953
  store i8* %7, i8** %rm_dir_name, align 8, !dbg !1953
  %8 = load i8** %filename.addr, align 8, !dbg !1954
  %call = call i64 @strlen(i8* %8) #19, !dbg !1954
  store i64 %call, i64* %filename_len, align 8, !dbg !1954
  %9 = load i64* %rm_dir_len, align 8, !dbg !1955
  %10 = load i64* %filename_len, align 8, !dbg !1955
  %add = add i64 %9, %10, !dbg !1955
  %add7 = add i64 %add, 1, !dbg !1955
  store i64 %add7, i64* %n_bytes_needed, align 8, !dbg !1955
  %11 = load i64* @full_filename_.n_allocated, align 8, !dbg !1956
  %12 = load i64* %n_bytes_needed, align 8, !dbg !1956
  %cmp = icmp ult i64 %11, %12, !dbg !1956
  br i1 %cmp, label %if.then, label %if.end22, !dbg !1956

if.then:                                          ; preds = %entry
  %13 = load i8** @full_filename_.buf, align 8, !dbg !1958
  %14 = load i64* %n_bytes_needed, align 8, !dbg !1958
  %call10 = call i8* @realloc(i8* %13, i64 %14) #9, !dbg !1958
  store i8* %call10, i8** %new_buf, align 8, !dbg !1958
  %15 = load i64* %n_bytes_needed, align 8, !dbg !1960
  store i64 %15, i64* @full_filename_.n_allocated, align 8, !dbg !1960
  %16 = load i8** %new_buf, align 8, !dbg !1961
  %cmp11 = icmp eq i8* %16, null, !dbg !1961
  br i1 %cmp11, label %if.then13, label %if.end21, !dbg !1961

if.then13:                                        ; preds = %if.then
  %17 = load i8** @full_filename_.buf, align 8, !dbg !1963
  call void @free(i8* %17) #9, !dbg !1963
  %18 = load i8** %filename.addr, align 8, !dbg !1965
  %19 = load i64* %filename_len, align 8, !dbg !1965
  %add17 = add i64 %19, 1, !dbg !1965
  %call18 = call i64 @right_justify(i8* getelementptr inbounds ([512 x i8]* @full_filename_.static_buf, i32 0, i32 0), i64 512, i8* %18, i64 %add17, i8** %p, i8* %truncated), !dbg !1965
  store i64 %call18, i64* %len, align 8, !dbg !1965
  %20 = load i64* %len, align 8, !dbg !1966
  %21 = load i8** %rm_dir_name, align 8, !dbg !1966
  %22 = load i64* %rm_dir_len, align 8, !dbg !1966
  %call19 = call i64 @right_justify(i8* getelementptr inbounds ([512 x i8]* @full_filename_.static_buf, i32 0, i32 0), i64 %20, i8* %21, i64 %22, i8** %p, i8* %truncated), !dbg !1966
  %23 = load i8* %truncated, align 1, !dbg !1967
  %tobool = trunc i8 %23 to i1, !dbg !1967
  br i1 %tobool, label %if.then20, label %if.end, !dbg !1967

if.then20:                                        ; preds = %if.then13
  %24 = call i8* @memcpy(i8* getelementptr inbounds ([512 x i8]* @full_filename_.static_buf, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str4693, i32 0, i32 0), i64 5)
  br label %if.end, !dbg !1969

if.end:                                           ; preds = %if.then20, %if.then13
  %25 = load i8** %p, align 8, !dbg !1971
  store i8* %25, i8** %retval, !dbg !1971
  br label %return, !dbg !1971

if.end21:                                         ; preds = %if.then
  %26 = load i8** %new_buf, align 8, !dbg !1972
  store i8* %26, i8** @full_filename_.buf, align 8, !dbg !1972
  br label %if.end22, !dbg !1973

if.end22:                                         ; preds = %if.end21, %entry
  %27 = load i64* %filename_len, align 8, !dbg !1974
  %cmp23 = icmp eq i64 %27, 1, !dbg !1974
  br i1 %cmp23, label %land.lhs.true, label %if.else, !dbg !1974

land.lhs.true:                                    ; preds = %if.end22
  %28 = load i8** %filename.addr, align 8, !dbg !1974
  %29 = load i8* %28, align 1, !dbg !1974
  %conv25 = sext i8 %29 to i32, !dbg !1974
  %cmp26 = icmp eq i32 %conv25, 46, !dbg !1974
  %30 = load i64* %rm_dir_len, align 8, !dbg !1974
  %tobool29 = icmp ne i64 %30, 0, !dbg !1974
  %or.cond = and i1 %cmp26, %tobool29, !dbg !1974
  br i1 %or.cond, label %if.then30, label %if.else, !dbg !1974

if.then30:                                        ; preds = %land.lhs.true
  %31 = load i8** @full_filename_.buf, align 8, !dbg !1976
  %32 = load i8** %rm_dir_name, align 8, !dbg !1976
  %33 = load i64* %rm_dir_len, align 8, !dbg !1976
  %sub = sub i64 %33, 1, !dbg !1976
  %call33 = call i8* @mempcpy(i8* %31, i8* %32, i64 %sub) #9, !dbg !1976
  store i8* %call33, i8** %p32, align 8, !dbg !1976
  %34 = load i8** %p32, align 8, !dbg !1978
  store i8 0, i8* %34, align 1, !dbg !1978
  br label %if.end40, !dbg !1979

if.else:                                          ; preds = %land.lhs.true, %if.end22
  %35 = load i8** @full_filename_.buf, align 8, !dbg !1980
  %36 = load i8** %rm_dir_name, align 8, !dbg !1980
  %37 = load i64* %rm_dir_len, align 8, !dbg !1980
  %call34 = call i8* @mempcpy(i8* %35, i8* %36, i64 %37) #9, !dbg !1980
  %38 = load i8** %filename.addr, align 8, !dbg !1980
  %39 = load i64* %filename_len, align 8, !dbg !1980
  %add35 = add i64 %39, 1, !dbg !1980
  %40 = call i8* @memcpy(i8* %call34, i8* %38, i64 %add35)
  %41 = load i8** @full_filename_.buf, align 8, !dbg !1982
  %call36 = call i64 @strlen(i8* %41) #19, !dbg !1982
  %add37 = add i64 %call36, 1, !dbg !1982
  %42 = load i64* %n_bytes_needed, align 8, !dbg !1982
  %cmp38 = icmp eq i64 %add37, %42, !dbg !1982
  br i1 %cmp38, label %if.end40, label %cond.false, !dbg !1982

cond.false:                                       ; preds = %if.else
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8]* @.str4794, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 367, i8* getelementptr inbounds ([59 x i8]* @__PRETTY_FUNCTION__.full_filename_, i32 0, i32 0))
  unreachable, !dbg !1982

if.end40:                                         ; preds = %if.else, %if.then30
  %43 = load i8** @full_filename_.buf, align 8, !dbg !1983
  store i8* %43, i8** %retval, !dbg !1983
  br label %return, !dbg !1983

return:                                           ; preds = %if.end40, %if.end
  %44 = load i8** %retval, !dbg !1984
  ret i8* %44, !dbg !1984
}

; Function Attrs: nounwind uwtable
define internal i64 @right_justify(i8* %dst, i64 %dst_len, i8* %src, i64 %src_len, i8** %result, i8* %truncated) #0 {
entry:
  %dst.addr = alloca i8*, align 8
  %dst_len.addr = alloca i64, align 8
  %src.addr = alloca i8*, align 8
  %src_len.addr = alloca i64, align 8
  %result.addr = alloca i8**, align 8
  %truncated.addr = alloca i8*, align 8
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  store i64 %dst_len, i64* %dst_len.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %src_len, i64* %src_len.addr, align 8
  store i8** %result, i8*** %result.addr, align 8
  store i8* %truncated, i8** %truncated.addr, align 8
  %0 = load i64* %src_len.addr, align 8, !dbg !1985
  %1 = load i64* %dst_len.addr, align 8, !dbg !1985
  %cmp = icmp ule i64 %0, %1, !dbg !1985
  %2 = load i8** %src.addr, align 8, !dbg !1987
  br i1 %cmp, label %if.then, label %if.else, !dbg !1985

if.then:                                          ; preds = %entry
  store i8* %2, i8** %sp, align 8, !dbg !1987
  %3 = load i8** %dst.addr, align 8, !dbg !1989
  %4 = load i64* %dst_len.addr, align 8, !dbg !1989
  %5 = load i64* %src_len.addr, align 8, !dbg !1989
  %sub = sub i64 %4, %5, !dbg !1989
  %add.ptr = getelementptr inbounds i8* %3, i64 %sub, !dbg !1989
  store i8* %add.ptr, i8** %dp, align 8, !dbg !1989
  %6 = load i8** %truncated.addr, align 8, !dbg !1990
  store i8 0, i8* %6, align 1, !dbg !1990
  br label %if.end, !dbg !1991

if.else:                                          ; preds = %entry
  %7 = load i64* %src_len.addr, align 8, !dbg !1992
  %8 = load i64* %dst_len.addr, align 8, !dbg !1992
  %sub1 = sub i64 %7, %8, !dbg !1992
  %add.ptr2 = getelementptr inbounds i8* %2, i64 %sub1, !dbg !1992
  store i8* %add.ptr2, i8** %sp, align 8, !dbg !1992
  %9 = load i8** %dst.addr, align 8, !dbg !1994
  store i8* %9, i8** %dp, align 8, !dbg !1994
  %10 = load i64* %dst_len.addr, align 8, !dbg !1995
  store i64 %10, i64* %src_len.addr, align 8, !dbg !1995
  %11 = load i8** %truncated.addr, align 8, !dbg !1996
  store i8 1, i8* %11, align 1, !dbg !1996
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load i8** %dp, align 8, !dbg !1997
  %13 = load i8** %sp, align 8, !dbg !1997
  %14 = load i64* %src_len.addr, align 8, !dbg !1997
  %15 = call i8* @memcpy(i8* %12, i8* %13, i64 %14)
  %16 = load i8*** %result.addr, align 8, !dbg !1997
  store i8* %12, i8** %16, align 8, !dbg !1997
  %17 = load i64* %dst_len.addr, align 8, !dbg !1998
  %18 = load i64* %src_len.addr, align 8, !dbg !1998
  %sub3 = sub i64 %17, %18, !dbg !1998
  ret i64 %sub3, !dbg !1998
}

; Function Attrs: nounwind uwtable
define internal %struct.__dirstream* @fd_to_subdirp(i32 %fd_cwd, i8* %f, %struct.rm_options* %x, i32 %prev_errno, %struct.stat* %subdir_sb, i32* %cwd_errno) #0 {
entry:
  %retval = alloca %struct.__dirstream*, align 8
  %fd_cwd.addr = alloca i32, align 4
  %f.addr = alloca i8*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %prev_errno.addr = alloca i32, align 4
  %subdir_sb.addr = alloca %struct.stat*, align 8
  %cwd_errno.addr = alloca i32*, align 8
  %open_flags = alloca i32, align 4
  %fd_sub = alloca i32, align 4
  %saved_errno = alloca i32, align 4
  %subdir_dirp = alloca %struct.__dirstream*, align 8
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store i8* %f, i8** %f.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32 %prev_errno, i32* %prev_errno.addr, align 4
  store %struct.stat* %subdir_sb, %struct.stat** %subdir_sb.addr, align 8
  store i32* %cwd_errno, i32** %cwd_errno.addr, align 8
  store i32 133376, i32* %open_flags, align 4, !dbg !1999
  %0 = load i32* %fd_cwd.addr, align 4, !dbg !2000
  %1 = load i8** %f.addr, align 8, !dbg !2000
  %2 = load i32* %open_flags, align 4, !dbg !2000
  %call = call i32 (i32, i8*, i32, ...)* @openat(i32 %0, i8* %1, i32 %2, i32 0), !dbg !2000
  store i32 %call, i32* %fd_sub, align 4, !dbg !2000
  %3 = load i32* %fd_sub, align 4, !dbg !2001
  %cmp = icmp slt i32 %3, 0, !dbg !2001
  br i1 %cmp, label %if.then, label %if.else, !dbg !2001

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, !dbg !2003
  br label %return, !dbg !2003

if.else:                                          ; preds = %entry
  %4 = load i32* %fd_sub, align 4, !dbg !2004
  %5 = load %struct.stat** %subdir_sb.addr, align 8, !dbg !2004
  %call1 = call i32 @fstat(i32 %4, %struct.stat* %5) #9, !dbg !2004
  %cmp2 = icmp ne i32 %call1, 0, !dbg !2004
  br i1 %cmp2, label %if.then3, label %if.else5, !dbg !2004

if.then3:                                         ; preds = %if.else
  %call4 = call i32* @__errno_location() #1, !dbg !2006
  %6 = load i32* %call4, align 4, !dbg !2006
  store i32 %6, i32* %saved_errno, align 4, !dbg !2006
  br label %if.end15, !dbg !2006

if.else5:                                         ; preds = %if.else
  %7 = load %struct.stat** %subdir_sb.addr, align 8, !dbg !2007
  %st_mode = getelementptr inbounds %struct.stat* %7, i32 0, i32 3, !dbg !2007
  %8 = load i32* %st_mode, align 4, !dbg !2007
  %and = and i32 %8, 61440, !dbg !2007
  %cmp6 = icmp eq i32 %and, 16384, !dbg !2007
  br i1 %cmp6, label %if.then7, label %if.else11, !dbg !2007

if.then7:                                         ; preds = %if.else5
  %9 = load i32* %fd_sub, align 4, !dbg !2009
  %call8 = call %struct.__dirstream* @fdopendir(i32 %9), !dbg !2009
  store %struct.__dirstream* %call8, %struct.__dirstream** %subdir_dirp, align 8, !dbg !2009
  %10 = load %struct.__dirstream** %subdir_dirp, align 8, !dbg !2011
  %tobool = icmp ne %struct.__dirstream* %10, null, !dbg !2011
  br i1 %tobool, label %if.then9, label %if.end, !dbg !2011

if.then9:                                         ; preds = %if.then7
  %11 = load %struct.__dirstream** %subdir_dirp, align 8, !dbg !2013
  store %struct.__dirstream* %11, %struct.__dirstream** %retval, !dbg !2013
  br label %return, !dbg !2013

if.end:                                           ; preds = %if.then7
  %call10 = call i32* @__errno_location() #1, !dbg !2014
  %12 = load i32* %call10, align 4, !dbg !2014
  store i32 %12, i32* %saved_errno, align 4, !dbg !2014
  br label %if.end15, !dbg !2015

if.else11:                                        ; preds = %if.else5
  %13 = load i32* %prev_errno.addr, align 4, !dbg !2016
  %tobool12 = icmp ne i32 %13, 0, !dbg !2016
  %14 = load i32* %prev_errno.addr, align 4, !dbg !2016
  %cond = select i1 %tobool12, i32 %14, i32 20, !dbg !2016
  store i32 %cond, i32* %saved_errno, align 4, !dbg !2016
  br label %if.end15

if.end15:                                         ; preds = %if.then3, %if.else11, %if.end
  %15 = load i32* %fd_sub, align 4, !dbg !2017
  %call16 = call i32 @close(i32 %15), !dbg !2017
  %16 = load i32* %saved_errno, align 4, !dbg !2018
  %call17 = call i32* @__errno_location() #1, !dbg !2018
  store i32 %16, i32* %call17, align 4, !dbg !2018
  store %struct.__dirstream* null, %struct.__dirstream** %retval, !dbg !2019
  br label %return, !dbg !2019

return:                                           ; preds = %if.end15, %if.then9, %if.then
  %17 = load %struct.__dirstream** %retval, !dbg !2020
  ret %struct.__dirstream* %17, !dbg !2020
}

; Function Attrs: nounwind uwtable
define internal i32 @remove_entry(i32 %fd_cwd, %struct.dirstack_state* %ds, i8* %filename, %struct.stat* %st, %struct.rm_options* %x, %struct.dirent* %dp) #0 {
entry:
  %retval = alloca i32, align 4
  %fd_cwd.addr = alloca i32, align 4
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %filename.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %dp.addr = alloca %struct.dirent*, align 8
  %is_empty_directory = alloca i32, align 4
  %s = alloca i32, align 4
  %known_to_be_dir = alloca i8, align 1
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store %struct.dirent* %dp, %struct.dirent** %dp.addr, align 8
  %0 = load i32* %fd_cwd.addr, align 4, !dbg !2021
  %1 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !2021
  %2 = load i8** %filename.addr, align 8, !dbg !2021
  %3 = load %struct.stat** %st.addr, align 8, !dbg !2021
  %4 = load %struct.rm_options** %x.addr, align 8, !dbg !2021
  %call = call i32 @prompt(i32 %0, %struct.dirstack_state* %1, i8* %2, %struct.stat* %3, %struct.rm_options* %4, i32 2, i32* %is_empty_directory), !dbg !2021
  store i32 %call, i32* %s, align 4, !dbg !2021
  %5 = load %struct.stat** %st.addr, align 8, !dbg !2022
  %call1 = call zeroext i1 @cache_stat_ok(%struct.stat* %5), !dbg !2022
  br i1 %call1, label %land.rhs, label %land.end, !dbg !2022

land.rhs:                                         ; preds = %entry
  %6 = load %struct.stat** %st.addr, align 8, !dbg !2022
  %st_mode = getelementptr inbounds %struct.stat* %6, i32 0, i32 3, !dbg !2022
  %7 = load i32* %st_mode, align 4, !dbg !2022
  %and = and i32 %7, 61440, !dbg !2022
  %cmp = icmp eq i32 %and, 16384, !dbg !2022
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ]
  %frombool = zext i1 %8 to i8
  store i8 %frombool, i8* %known_to_be_dir, align 1
  %9 = load i32* %s, align 4, !dbg !2023
  %cmp2 = icmp ne i32 %9, 2, !dbg !2023
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2023

if.then:                                          ; preds = %land.end
  %10 = load i32* %s, align 4, !dbg !2025
  store i32 %10, i32* %retval, !dbg !2025
  br label %return, !dbg !2025

if.end:                                           ; preds = %land.end
  %11 = load i8* %known_to_be_dir, align 1, !dbg !2026
  %tobool = trunc i8 %11 to i1, !dbg !2026
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !2026

land.lhs.true:                                    ; preds = %if.end
  %12 = load %struct.rm_options** %x.addr, align 8, !dbg !2026
  %recursive = getelementptr inbounds %struct.rm_options* %12, i32 0, i32 3, !dbg !2026
  %13 = load i8* %recursive, align 1, !dbg !2026
  %tobool3 = trunc i8 %13 to i1, !dbg !2026
  br i1 %tobool3, label %if.end7, label %if.then4, !dbg !2026

if.then4:                                         ; preds = %land.lhs.true
  %14 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !2030
  %15 = load i8** %filename.addr, align 8, !dbg !2030
  %call5 = call i8* @full_filename_(%struct.dirstack_state* %14, i8* %15), !dbg !2030
  %call6 = call i8* @quote(i8* %call5), !dbg !2030
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* inttoptr (i64 21 to i32* (...)*), i8* getelementptr inbounds ([17 x i8]* @.str1360, i32 0, i32 0), i8* %call6), !dbg !2030
  store i32 4, i32* %retval, !dbg !2032
  br label %return, !dbg !2032

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %16 = load i32* %is_empty_directory, align 4, !dbg !2033
  %cmp8 = icmp eq i32 %16, 4, !dbg !2033
  br i1 %cmp8, label %do.body, label %if.end30, !dbg !2033

do.body:                                          ; preds = %if.end7
  %17 = load i32* %fd_cwd.addr, align 4, !dbg !2035
  %18 = load i8** %filename.addr, align 8, !dbg !2035
  %call10 = call i32 @unlinkat(i32 %17, i8* %18, i32 512) #9, !dbg !2035
  %cmp11 = icmp eq i32 %call10, 0, !dbg !2035
  %19 = load %struct.rm_options** %x.addr, align 8, !dbg !2038
  br i1 %cmp11, label %if.then12, label %if.end19, !dbg !2035

if.then12:                                        ; preds = %do.body
  %verbose = getelementptr inbounds %struct.rm_options* %19, i32 0, i32 6, !dbg !2038
  %20 = load i8* %verbose, align 1, !dbg !2038
  %tobool13 = trunc i8 %20 to i1, !dbg !2038
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !2038

if.then14:                                        ; preds = %if.then12
  %21 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !2038
  %22 = load i8** %filename.addr, align 8, !dbg !2038
  %call15 = call i8* @full_filename_(%struct.dirstack_state* %21, i8* %22), !dbg !2038
  %call16 = call i8* @quote(i8* %call15), !dbg !2038
  %call17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str2269, i32 0, i32 0), i8* %call16), !dbg !2038
  br label %if.end18, !dbg !2038

if.end18:                                         ; preds = %if.then14, %if.then12
  store i32 2, i32* %retval, !dbg !2041
  br label %return, !dbg !2041

if.end19:                                         ; preds = %do.body
  %call20 = call i32* @__errno_location() #1, !dbg !2042
  %23 = load i32* %call20, align 4, !dbg !2042
  %call21 = call zeroext i1 @ignorable_missing(%struct.rm_options* %19, i32 %23), !dbg !2042
  br i1 %call21, label %if.then22, label %if.end23, !dbg !2042

if.then22:                                        ; preds = %if.end19
  store i32 2, i32* %retval, !dbg !2042
  br label %return, !dbg !2042

if.end23:                                         ; preds = %if.end19
  %call24 = call i32* @__errno_location() #1, !dbg !2044
  %24 = load i32* %call24, align 4, !dbg !2044
  %cmp25 = icmp eq i32 %24, 39, !dbg !2044
  br i1 %cmp25, label %if.then28, label %lor.lhs.false, !dbg !2044

lor.lhs.false:                                    ; preds = %if.end23
  %call26 = call i32* @__errno_location() #1, !dbg !2044
  %25 = load i32* %call26, align 4, !dbg !2044
  %cmp27 = icmp eq i32 %25, 17, !dbg !2044
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !2044

if.then28:                                        ; preds = %lor.lhs.false, %if.end23
  store i32 5, i32* %retval, !dbg !2044
  br label %return, !dbg !2044

if.end30:                                         ; preds = %lor.lhs.false, %if.end7
  %26 = load %struct.dirent** %dp.addr, align 8, !dbg !2046
  %tobool31 = icmp ne %struct.dirent* %26, null, !dbg !2046
  br i1 %tobool31, label %land.lhs.true32, label %lor.lhs.false35, !dbg !2046

land.lhs.true32:                                  ; preds = %if.end30
  %27 = load %struct.dirent** %dp.addr, align 8, !dbg !2046
  %d_type = getelementptr inbounds %struct.dirent* %27, i32 0, i32 3, !dbg !2046
  %28 = load i8* %d_type, align 1, !dbg !2046
  %conv = zext i8 %28 to i32, !dbg !2046
  %cmp33 = icmp eq i32 %conv, 4, !dbg !2046
  br i1 %cmp33, label %if.then38, label %lor.lhs.false35, !dbg !2046

lor.lhs.false35:                                  ; preds = %land.lhs.true32, %if.end30
  %29 = load i8* %known_to_be_dir, align 1, !dbg !2046
  %tobool36 = trunc i8 %29 to i1, !dbg !2046
  br i1 %tobool36, label %if.then38, label %do.body40, !dbg !2046

if.then38:                                        ; preds = %lor.lhs.false35, %land.lhs.true32
  store i32 5, i32* %retval, !dbg !2048
  br label %return, !dbg !2048

do.body40:                                        ; preds = %lor.lhs.false35
  %30 = load i32* %fd_cwd.addr, align 4, !dbg !2049
  %31 = load i8** %filename.addr, align 8, !dbg !2049
  %call41 = call i32 @unlinkat(i32 %30, i8* %31, i32 0) #9, !dbg !2049
  %cmp42 = icmp eq i32 %call41, 0, !dbg !2049
  %32 = load %struct.rm_options** %x.addr, align 8, !dbg !2052
  br i1 %cmp42, label %if.then44, label %if.end52, !dbg !2049

if.then44:                                        ; preds = %do.body40
  %verbose45 = getelementptr inbounds %struct.rm_options* %32, i32 0, i32 6, !dbg !2052
  %33 = load i8* %verbose45, align 1, !dbg !2052
  %tobool46 = trunc i8 %33 to i1, !dbg !2052
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !2052

if.then47:                                        ; preds = %if.then44
  %34 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !2052
  %35 = load i8** %filename.addr, align 8, !dbg !2052
  %call48 = call i8* @full_filename_(%struct.dirstack_state* %34, i8* %35), !dbg !2052
  %call49 = call i8* @quote(i8* %call48), !dbg !2052
  %call50 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str48, i32 0, i32 0), i8* %call49), !dbg !2052
  br label %if.end51, !dbg !2052

if.end51:                                         ; preds = %if.then47, %if.then44
  store i32 2, i32* %retval, !dbg !2055
  br label %return, !dbg !2055

if.end52:                                         ; preds = %do.body40
  %call53 = call i32* @__errno_location() #1, !dbg !2056
  %36 = load i32* %call53, align 4, !dbg !2056
  %call54 = call zeroext i1 @ignorable_missing(%struct.rm_options* %32, i32 %36), !dbg !2056
  br i1 %call54, label %if.then55, label %do.end57, !dbg !2056

if.then55:                                        ; preds = %if.end52
  store i32 2, i32* %retval, !dbg !2056
  br label %return, !dbg !2056

do.end57:                                         ; preds = %if.end52
  %37 = load %struct.rm_options** %x.addr, align 8, !dbg !2058
  %recursive58 = getelementptr inbounds %struct.rm_options* %37, i32 0, i32 3, !dbg !2058
  %38 = load i8* %recursive58, align 1, !dbg !2058
  %tobool59 = trunc i8 %38 to i1, !dbg !2058
  br i1 %tobool59, label %if.end69, label %land.lhs.true60, !dbg !2058

land.lhs.true60:                                  ; preds = %do.end57
  %call61 = call i32* @__errno_location() #1, !dbg !2058
  %39 = load i32* %call61, align 4, !dbg !2058
  %cmp62 = icmp eq i32 %39, 1, !dbg !2058
  br i1 %cmp62, label %land.lhs.true64, label %if.end69, !dbg !2058

land.lhs.true64:                                  ; preds = %land.lhs.true60
  %40 = load i8** %filename.addr, align 8, !dbg !2060
  %41 = load %struct.stat** %st.addr, align 8, !dbg !2060
  %call65 = call zeroext i1 @is_dir_lstat(i8* %40, %struct.stat* %41), !dbg !2060
  br i1 %call65, label %if.then67, label %if.end69, !dbg !2060

if.then67:                                        ; preds = %land.lhs.true64
  %call68 = call i32* @__errno_location() #1, !dbg !2061
  store i32 21, i32* %call68, align 4, !dbg !2061
  br label %if.end69, !dbg !2061

if.end69:                                         ; preds = %if.then67, %land.lhs.true64, %land.lhs.true60, %do.end57
  %42 = load %struct.rm_options** %x.addr, align 8, !dbg !2062
  %recursive70 = getelementptr inbounds %struct.rm_options* %42, i32 0, i32 3, !dbg !2062
  %43 = load i8* %recursive70, align 1, !dbg !2062
  %tobool71 = trunc i8 %43 to i1, !dbg !2062
  br i1 %tobool71, label %lor.lhs.false72, label %if.then80, !dbg !2062

lor.lhs.false72:                                  ; preds = %if.end69
  %44 = load %struct.stat** %st.addr, align 8, !dbg !2064
  %call73 = call zeroext i1 @cache_stat_ok(%struct.stat* %44), !dbg !2064
  br i1 %call73, label %land.lhs.true75, label %if.end89, !dbg !2064

land.lhs.true75:                                  ; preds = %lor.lhs.false72
  %45 = load %struct.stat** %st.addr, align 8, !dbg !2064
  %st_mode76 = getelementptr inbounds %struct.stat* %45, i32 0, i32 3, !dbg !2064
  %46 = load i32* %st_mode76, align 4, !dbg !2064
  %and77 = and i32 %46, 61440, !dbg !2064
  %cmp78 = icmp eq i32 %and77, 16384, !dbg !2064
  br i1 %cmp78, label %if.end89, label %if.then80, !dbg !2064

if.then80:                                        ; preds = %land.lhs.true75, %if.end69
  %47 = load %struct.rm_options** %x.addr, align 8, !dbg !2065
  %call81 = call i32* @__errno_location() #1, !dbg !2068
  %48 = load i32* %call81, align 4, !dbg !2068
  %call82 = call zeroext i1 @ignorable_missing(%struct.rm_options* %47, i32 %48), !dbg !2065
  br i1 %call82, label %if.then83, label %if.end84, !dbg !2065

if.then83:                                        ; preds = %if.then80
  store i32 2, i32* %retval, !dbg !2069
  br label %return, !dbg !2069

if.end84:                                         ; preds = %if.then80
  %call85 = call i32* @__errno_location() #1, !dbg !2070
  %49 = load i32* %call85, align 4, !dbg !2070
  %conv86 = sext i32 %49 to i64, !dbg !2070
  %50 = inttoptr i64 %conv86 to i32* (...)*, !dbg !2070
  %51 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !2070
  %52 = load i8** %filename.addr, align 8, !dbg !2070
  %call87 = call i8* @full_filename_(%struct.dirstack_state* %51, i8* %52), !dbg !2070
  %call88 = call i8* @quote(i8* %call87), !dbg !2070
  call void (i32, i32* (...)*, i8*, ...)* @klee_compatible_error(i32 0, i32* (...)* %50, i8* getelementptr inbounds ([17 x i8]* @.str1360, i32 0, i32 0), i8* %call88), !dbg !2070
  store i32 4, i32* %retval, !dbg !2071
  br label %return, !dbg !2071

if.end89:                                         ; preds = %land.lhs.true75, %lor.lhs.false72
  %53 = load %struct.stat** %st.addr, align 8, !dbg !2072
  %call90 = call zeroext i1 @cache_stat_ok(%struct.stat* %53), !dbg !2072
  br i1 %call90, label %lor.lhs.false91, label %cond.end, !dbg !2072

lor.lhs.false91:                                  ; preds = %if.end89
  %54 = load %struct.stat** %st.addr, align 8, !dbg !2072
  %st_mode92 = getelementptr inbounds %struct.stat* %54, i32 0, i32 3, !dbg !2072
  %55 = load i32* %st_mode92, align 4, !dbg !2072
  %and93 = and i32 %55, 61440, !dbg !2072
  %cmp94 = icmp eq i32 %and93, 16384, !dbg !2072
  br i1 %cmp94, label %cond.end, label %cond.false, !dbg !2072

cond.false:                                       ; preds = %lor.lhs.false91
  call void @__assert_fail(i8* getelementptr inbounds ([66 x i8]* @.str49, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str956, i32 0, i32 0), i32 1094, i8* getelementptr inbounds ([136 x i8]* @__PRETTY_FUNCTION__.remove_entry, i32 0, i32 0)) #
  unreachable, !dbg !2072

cond.end:                                         ; preds = %if.end89, %lor.lhs.false91
  store i32 5, i32* %retval, !dbg !2073
  br label %return, !dbg !2073

return:                                           ; preds = %cond.end, %if.end84, %if.then83, %if.then55, %if.end51, %if.then38, %if.then28, %if.then22, %if.end18, %if.then4, %if.then
  %56 = load i32* %retval, !dbg !2074
  ret i32 %56, !dbg !2074
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @is_dir_lstat(i8* %filename, %struct.stat* %st) #10 {
entry:
  %filename.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %saved_errno = alloca i32, align 4
  %is_dir = alloca i8, align 1
  store i8* %filename, i8** %filename.addr, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %call = call i32* @__errno_location() #1, !dbg !2075
  %0 = load i32* %call, align 4, !dbg !2075
  store i32 %0, i32* %saved_errno, align 4, !dbg !2075
  %1 = load i8** %filename.addr, align 8, !dbg !2076
  %2 = load %struct.stat** %st.addr, align 8, !dbg !2076
  %call1 = call i32 @cache_fstatat(i32 -100, i8* %1, %struct.stat* %2, i32 256), !dbg !2076
  %cmp = icmp eq i32 %call1, 0, !dbg !2076
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2076

land.rhs:                                         ; preds = %entry
  %3 = load %struct.stat** %st.addr, align 8, !dbg !2076
  %st_mode = getelementptr inbounds %struct.stat* %3, i32 0, i32 3, !dbg !2076
  %4 = load i32* %st_mode, align 4, !dbg !2076
  %and = and i32 %4, 61440, !dbg !2076
  %cmp2 = icmp eq i32 %and, 16384, !dbg !2076
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ]
  %frombool = zext i1 %5 to i8
  store i8 %frombool, i8* %is_dir, align 1
  %6 = load i32* %saved_errno, align 4, !dbg !2077
  %call3 = call i32* @__errno_location() #1, !dbg !2077
  store i32 %6, i32* %call3, align 4, !dbg !2077
  %7 = load i8* %is_dir, align 1, !dbg !2078
  %tobool = trunc i8 %7 to i1, !dbg !2078
  ret i1 %tobool, !dbg !2078
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @cache_stat_ok(%struct.stat* %st) #10 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %0 = load %struct.stat** %st.addr, align 8, !dbg !2079
  %st_size = getelementptr inbounds %struct.stat* %0, i32 0, i32 8, !dbg !2079
  %1 = load i64* %st_size, align 8, !dbg !2079
  %cmp = icmp sle i64 0, %1, !dbg !2079
  ret i1 %cmp, !dbg !2079
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %ds) #10 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !2080
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 2, !dbg !2080
  %next_free = getelementptr inbounds %struct.obstack* %Active_dir, i32 0, i32 3, !dbg !2080
  %1 = load i8** %next_free, align 8, !dbg !2080
  %add.ptr = getelementptr inbounds i8* %1, i64 -32, !dbg !2080
  %2 = bitcast i8* %add.ptr to %struct.AD_ent*, !dbg !2080
  ret %struct.AD_ent* %2, !dbg !2080
}

; Function Attrs: nounwind uwtable
define internal void @AD_push_initial(%struct.dirstack_state* %ds) #0 {
entry:
  %ds.addr = alloca %struct.dirstack_state*, align 8
  %top = alloca %struct.AD_ent*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  store %struct.dirstack_state* %ds, %struct.dirstack_state** %ds.addr, align 8
  %0 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !2081
  %Active_dir = getelementptr inbounds %struct.dirstack_state* %0, i32 0, i32 2, !dbg !2081
  store %struct.obstack* %Active_dir, %struct.obstack** %__o, align 8, !dbg !2081
  store i32 32, i32* %__len, align 4, !dbg !2081
  %1 = load %struct.obstack** %__o, align 8, !dbg !2083
  %chunk_limit = getelementptr inbounds %struct.obstack* %1, i32 0, i32 4, !dbg !2083
  %2 = load i8** %chunk_limit, align 8, !dbg !2083
  %3 = load %struct.obstack** %__o, align 8, !dbg !2083
  %next_free = getelementptr inbounds %struct.obstack* %3, i32 0, i32 3, !dbg !2083
  %4 = load i8** %next_free, align 8, !dbg !2083
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !2083
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !2083
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2083
  %5 = load i32* %__len, align 4, !dbg !2083
  %conv = sext i32 %5 to i64, !dbg !2083
  %cmp = icmp slt i64 %sub.ptr.sub, %conv, !dbg !2083
  br i1 %cmp, label %if.then, label %if.end, !dbg !2083

if.then:                                          ; preds = %entry
  %6 = load %struct.obstack** %__o, align 8, !dbg !2083
  %7 = load i32* %__len, align 4, !dbg !2083
  call void @_obstack_newchunk(%struct.obstack* %6, i32 %7), !dbg !2083
  br label %if.end, !dbg !2083

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32* %__len, align 4, !dbg !2081
  %9 = load %struct.obstack** %__o, align 8, !dbg !2081
  %next_free2 = getelementptr inbounds %struct.obstack* %9, i32 0, i32 3, !dbg !2081
  %10 = load i8** %next_free2, align 8, !dbg !2081
  %idx.ext = sext i32 %8 to i64, !dbg !2081
  %add.ptr = getelementptr inbounds i8* %10, i64 %idx.ext, !dbg !2081
  store i8* %add.ptr, i8** %next_free2, align 8, !dbg !2081
  %11 = load %struct.dirstack_state** %ds.addr, align 8, !dbg !2085
  %call = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %11), !dbg !2085
  store %struct.AD_ent* %call, %struct.AD_ent** %top, align 8, !dbg !2085
  %12 = load %struct.AD_ent** %top, align 8, !dbg !2086
  %unremovable = getelementptr inbounds %struct.AD_ent* %12, i32 0, i32 0, !dbg !2086
  store %struct.hash_table* null, %struct.hash_table** %unremovable, align 8, !dbg !2086
  %13 = load %struct.AD_ent** %top, align 8, !dbg !2087
  %dev_ino = getelementptr inbounds %struct.AD_ent* %13, i32 0, i32 2, !dbg !2087
  %st_dev = getelementptr inbounds %struct.dev_ino* %dev_ino, i32 0, i32 1, !dbg !2087
  store i64 -1, i64* %st_dev, align 8, !dbg !2087
  %14 = load %struct.AD_ent** %top, align 8, !dbg !2088
  %dev_ino3 = getelementptr inbounds %struct.AD_ent* %14, i32 0, i32 2, !dbg !2088
  %st_ino = getelementptr inbounds %struct.dev_ino* %dev_ino3, i32 0, i32 0, !dbg !2088
  store i64 -1, i64* %st_ino, align 8, !dbg !2088
  ret void, !dbg !2089
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @ignorable_missing(%struct.rm_options* %x, i32 %errnum) #10 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  %errnum.addr = alloca i32, align 4
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  store i32 %errnum, i32* %errnum.addr, align 4
  %0 = load %struct.rm_options** %x.addr, align 8, !dbg !2090
  %ignore_missing_files = getelementptr inbounds %struct.rm_options* %0, i32 0, i32 0, !dbg !2090
  %1 = load i8* %ignore_missing_files, align 1, !dbg !2090
  %tobool = trunc i8 %1 to i1, !dbg !2090
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2090

land.rhs:                                         ; preds = %entry
  %2 = load i32* %errnum.addr, align 4, !dbg !2091
  %call = call zeroext i1 @nonexistent_file_errno(i32 %2), !dbg !2091
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %call, %land.rhs ]
  ret i1 %3, !dbg !2092
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @nonexistent_file_errno(i32 %errnum) #10 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4
  %0 = load i32* %errnum.addr, align 4, !dbg !2093
  switch i32 %0, label %sw.default [
    i32 2, label %sw.bb
    i32 20, label %sw.bb
  ], !dbg !2093

sw.bb:                                            ; preds = %entry, %entry
  store i1 true, i1* %retval, !dbg !2094
  br label %return, !dbg !2094

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, !dbg !2096
  br label %return, !dbg !2096

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1* %retval, !dbg !2097
  ret i1 %1, !dbg !2097
}

; Function Attrs: nounwind uwtable
define internal i32 @cache_fstatat(i32 %fd, i8* %file, %struct.stat* %st, i32 %flag) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %flag.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i8* %file, i8** %file.addr, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  store i32 %flag, i32* %flag.addr, align 4
  %0 = load %struct.stat** %st.addr, align 8, !dbg !2098
  %st_size = getelementptr inbounds %struct.stat* %0, i32 0, i32 8, !dbg !2098
  %1 = load i64* %st_size, align 8, !dbg !2098
  %cmp = icmp eq i64 %1, -1, !dbg !2098
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2098

land.lhs.true:                                    ; preds = %entry
  %2 = load i32* %fd.addr, align 4, !dbg !2098
  %3 = load i8** %file.addr, align 8, !dbg !2098
  %4 = load %struct.stat** %st.addr, align 8, !dbg !2098
  %5 = load i32* %flag.addr, align 4, !dbg !2098
  %call = call i32 @fstatat(i32 %2, i8* %3, %struct.stat* %4, i32 %5) #9, !dbg !2098
  %cmp1 = icmp ne i32 %call, 0, !dbg !2098
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2098

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #1, !dbg !2100
  %6 = load i32* %call2, align 4, !dbg !2100
  %sub = sub nsw i32 -1, %6, !dbg !2100
  %conv = sext i32 %sub to i64, !dbg !2100
  %7 = load %struct.stat** %st.addr, align 8, !dbg !2100
  %st_size3 = getelementptr inbounds %struct.stat* %7, i32 0, i32 8, !dbg !2100
  store i64 %conv, i64* %st_size3, align 8, !dbg !2100
  br label %if.end, !dbg !2100

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load %struct.stat** %st.addr, align 8, !dbg !2101
  %st_size4 = getelementptr inbounds %struct.stat* %8, i32 0, i32 8, !dbg !2101
  %9 = load i64* %st_size4, align 8, !dbg !2101
  %cmp5 = icmp sle i64 0, %9, !dbg !2101
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !2101

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, !dbg !2103
  br label %return, !dbg !2103

if.end8:                                          ; preds = %if.end
  %10 = load %struct.stat** %st.addr, align 8, !dbg !2104
  %st_size9 = getelementptr inbounds %struct.stat* %10, i32 0, i32 8, !dbg !2104
  %11 = load i64* %st_size9, align 8, !dbg !2104
  %sub10 = sub nsw i64 -1, %11, !dbg !2104
  %conv11 = trunc i64 %sub10 to i32, !dbg !2104
  %call12 = call i32* @__errno_location() #1, !dbg !2104
  store i32 %conv11, i32* %call12, align 4, !dbg !2104
  store i32 -1, i32* %retval, !dbg !2105
  br label %return, !dbg !2105

return:                                           ; preds = %if.end8, %if.then7
  %12 = load i32* %retval, !dbg !2106
  ret i32 %12, !dbg !2106
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.stat* @cache_stat_init(%struct.stat* %st) #10 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %0 = load %struct.stat** %st.addr, align 8, !dbg !2107
  %st_size = getelementptr inbounds %struct.stat* %0, i32 0, i32 8, !dbg !2107
  store i64 -1, i64* %st_size, align 8, !dbg !2107
  %1 = load %struct.stat** %st.addr, align 8, !dbg !2108
  ret %struct.stat* %1, !dbg !2108
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #10 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1
  store i8* %file_name, i8** %file_name.addr, align 8
  %0 = load i8** %file_name.addr, align 8, !dbg !2109
  %arrayidx = getelementptr inbounds i8* %0, i64 0, !dbg !2109
  %1 = load i8* %arrayidx, align 1, !dbg !2109
  %conv = sext i8 %1 to i32, !dbg !2109
  %cmp = icmp eq i32 %conv, 46, !dbg !2109
  br i1 %cmp, label %if.then, label %if.else, !dbg !2109

if.then:                                          ; preds = %entry
  %2 = load i8** %file_name.addr, align 8, !dbg !2112
  %arrayidx2 = getelementptr inbounds i8* %2, i64 1, !dbg !2112
  %3 = load i8* %arrayidx2, align 1, !dbg !2112
  %conv3 = sext i8 %3 to i32, !dbg !2112
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !2112
  %conv5 = zext i1 %cmp4 to i32, !dbg !2112
  %add = add nsw i32 %conv5, 1, !dbg !2112
  %idxprom = sext i32 %add to i64, !dbg !2112
  %4 = load i8** %file_name.addr, align 8, !dbg !2112
  %arrayidx6 = getelementptr inbounds i8* %4, i64 %idxprom, !dbg !2112
  %5 = load i8* %arrayidx6, align 1, !dbg !2112
  store i8 %5, i8* %sep, align 1, !dbg !2112
  %6 = load i8* %sep, align 1, !dbg !2114
  %tobool = icmp ne i8 %6, 0, !dbg !2114
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !2114

lor.rhs:                                          ; preds = %if.then
  %7 = load i8* %sep, align 1, !dbg !2114
  %conv7 = sext i8 %7 to i32, !dbg !2114
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !2114
  br label %lor.end, !dbg !2114

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, !dbg !2114
  br label %return, !dbg !2114

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, !dbg !2115
  br label %return, !dbg !2115

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1* %retval, !dbg !2116
  ret i1 %9, !dbg !2116
}

; Function Attrs: nounwind uwtable
define i64 @hash_pjw(i8* %x, i64 %tablesize) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8
  %h = alloca i64, align 8
  store i8* %x, i8** %x.addr, align 8
  store i64 %tablesize, i64* %tablesize.addr, align 8
  store i64 0, i64* %h, align 8, !dbg !2117
  %0 = load i8** %x.addr, align 8, !dbg !2118
  store i8* %0, i8** %s, align 8, !dbg !2118
  br label %for.cond, !dbg !2118

for.cond:                                         ; preds = %for.body, %entry
  %1 = load i8** %s, align 8, !dbg !2118
  %2 = load i8* %1, align 1, !dbg !2118
  %tobool = icmp ne i8 %2, 0, !dbg !2118
  br i1 %tobool, label %for.body, label %for.end, !dbg !2118

for.body:                                         ; preds = %for.cond
  %3 = load i8** %s, align 8, !dbg !2120
  %4 = load i8* %3, align 1, !dbg !2120
  %conv = sext i8 %4 to i64, !dbg !2120
  %5 = load i64* %h, align 8, !dbg !2120
  %int_cast_to_i641 = bitcast i64 9 to i64
  call void @klee_overshift_check(i64 64, i64 %int_cast_to_i641), !dbg !2120
  %shl = shl i64 %5, 9, !dbg !2120
  %6 = load i64* %h, align 8, !dbg !2120
  %int_cast_to_i642 = bitcast i64 55 to i64
  call void @klee_overshift_check(i64 64, i64 %int_cast_to_i642), !dbg !2120
  %shr = lshr i64 %6, 55, !dbg !2120
  %or = or i64 %shl, %shr, !dbg !2120
  %add = add i64 %conv, %or, !dbg !2120
  store i64 %add, i64* %h, align 8, !dbg !2120
  %7 = load i8** %s, align 8, !dbg !2118
  %incdec.ptr = getelementptr inbounds i8* %7, i32 1, !dbg !2118
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !2118
  br label %for.cond, !dbg !2118

for.end:                                          ; preds = %for.cond
  %8 = load i64* %h, align 8, !dbg !2121
  %9 = load i64* %tablesize.addr, align 8, !dbg !2121
  %int_cast_to_i64 = bitcast i64 %9 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !2121
  %rem = urem i64 %8, %9, !dbg !2121
  ret i64 %rem, !dbg !2121
}

; Function Attrs: nounwind uwtable
define void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #0 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8
  %tmp_authors = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  store i8* %command_name, i8** %command_name.addr, align 8
  store i8* %package, i8** %package.addr, align 8
  store i8* %version, i8** %version.addr, align 8
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %tmp_authors, i32 0, i32 0, !dbg !2122
  %0 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2122
  %1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !2122
  %2 = bitcast %struct.__va_list_tag* %0 to i8*, !dbg !2122
  %vacopy.cast.dst = bitcast i8* %1 to i64*
  %vacopy.cast.src = bitcast i8* %2 to i64*
  %3 = load i64* %vacopy.cast.src
  store i64 %3, i64* %vacopy.cast.dst
  %4 = getelementptr i64* %vacopy.cast.dst, i64 1
  %5 = getelementptr i64* %vacopy.cast.src, i64 1
  %6 = load i64* %5
  store i64 %6, i64* %4
  %7 = getelementptr i64* %4, i64 1
  %8 = getelementptr i64* %5, i64 1
  %9 = load i64* %8
  store i64 %9, i64* %7
  store i64 0, i64* %n_authors, align 8, !dbg !2124
  br label %while.cond, !dbg !2125

while.cond:                                       ; preds = %while.body, %entry
  %arraydecay1 = getelementptr inbounds [1 x %struct.__va_list_tag]* %tmp_authors, i32 0, i32 0, !dbg !2125
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag* %arraydecay1, i32 0, i32 0, !dbg !2125
  %gp_offset = load i32* %gp_offset_p, !dbg !2125
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !2125
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !2125

vaarg.in_reg:                                     ; preds = %while.cond
  %10 = getelementptr inbounds %struct.__va_list_tag* %arraydecay1, i32 0, i32 3, !dbg !2125
  %reg_save_area = load i8** %10, !dbg !2125
  %11 = getelementptr i8* %reg_save_area, i32 %gp_offset, !dbg !2125
  %12 = bitcast i8* %11 to i8**, !dbg !2125
  %13 = add i32 %gp_offset, 8, !dbg !2125
  store i32 %13, i32* %gp_offset_p, !dbg !2125
  br label %vaarg.end, !dbg !2125

vaarg.in_mem:                                     ; preds = %while.cond
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag* %arraydecay1, i32 0, i32 2, !dbg !2125
  %overflow_arg_area = load i8** %overflow_arg_area_p, !dbg !2125
  %14 = bitcast i8* %overflow_arg_area to i8**, !dbg !2125
  %overflow_arg_area.next = getelementptr i8* %overflow_arg_area, i32 8, !dbg !2125
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, !dbg !2125
  br label %vaarg.end, !dbg !2125

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %12, %vaarg.in_reg ], [ %14, %vaarg.in_mem ], !dbg !2125
  %15 = load i8** %vaarg.addr, !dbg !2125
  %cmp = icmp ne i8* %15, null, !dbg !2125
  br i1 %cmp, label %while.body, label %while.end, !dbg !2125

while.body:                                       ; preds = %vaarg.end
  %16 = load i64* %n_authors, align 8, !dbg !2126
  %inc = add i64 %16, 1, !dbg !2126
  store i64 %inc, i64* %n_authors, align 8, !dbg !2126
  br label %while.cond, !dbg !2126

while.end:                                        ; preds = %vaarg.end
  %17 = load i8** %command_name.addr, align 8, !dbg !2127
  %tobool = icmp ne i8* %17, null, !dbg !2127
  %18 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2129
  br i1 %tobool, label %if.then, label %if.else, !dbg !2127

if.then:                                          ; preds = %while.end
  %19 = load i8** %command_name.addr, align 8, !dbg !2129
  %20 = load i8** %package.addr, align 8, !dbg !2129
  %21 = load i8** %version.addr, align 8, !dbg !2129
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([12 x i8]* @.str101, i32 0, i32 0), i8* %19, i8* %20, i8* %21), !dbg !2129
  br label %if.end, !dbg !2129

if.else:                                          ; preds = %while.end
  %22 = load i8** %package.addr, align 8, !dbg !2130
  %23 = load i8** %version.addr, align 8, !dbg !2130
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([7 x i8]* @.str1102, i32 0, i32 0), i8* %22, i8* %23), !dbg !2130
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2131
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([47 x i8]* @version_etc_copyright, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str2103, i32 0, i32 0), i32 2006), !dbg !2131
  %25 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2132
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([205 x i8]* @.str3104, i32 0, i32 0), %struct._IO_FILE* %25), !dbg !2132
  %26 = load i64* %n_authors, align 8, !dbg !2133
  switch i64 %26, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb5
    i64 2, label %sw.bb7
    i64 3, label %sw.bb9
    i64 4, label %sw.bb11
    i64 5, label %sw.bb13
    i64 6, label %sw.bb15
    i64 7, label %sw.bb17
    i64 8, label %sw.bb19
    i64 9, label %sw.bb21
  ], !dbg !2133

sw.bb:                                            ; preds = %if.end
  call void @abort() #17, !dbg !2134
  unreachable, !dbg !2134

sw.bb5:                                           ; preds = %if.end
  %27 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2136
  %28 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2136
  %call6 = call i32 @vfprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([16 x i8]* @.str4105, i32 0, i32 0), %struct.__va_list_tag* %28), !dbg !2136
  br label %sw.epilog, !dbg !2137

sw.bb7:                                           ; preds = %if.end
  %29 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2138
  %30 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2138
  %call8 = call i32 @vfprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([23 x i8]* @.str5106, i32 0, i32 0), %struct.__va_list_tag* %30), !dbg !2138
  br label %sw.epilog, !dbg !2139

sw.bb9:                                           ; preds = %if.end
  %31 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2140
  %32 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2140
  %call10 = call i32 @vfprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([28 x i8]* @.str6107, i32 0, i32 0), %struct.__va_list_tag* %32), !dbg !2140
  br label %sw.epilog, !dbg !2141

sw.bb11:                                          ; preds = %if.end
  %33 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2142
  %34 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2142
  %call12 = call i32 @vfprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([32 x i8]* @.str7108, i32 0, i32 0), %struct.__va_list_tag* %34), !dbg !2142
  br label %sw.epilog, !dbg !2143

sw.bb13:                                          ; preds = %if.end
  %35 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2144
  %36 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2144
  %call14 = call i32 @vfprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([36 x i8]* @.str8109, i32 0, i32 0), %struct.__va_list_tag* %36), !dbg !2144
  br label %sw.epilog, !dbg !2145

sw.bb15:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2146
  %38 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2146
  %call16 = call i32 @vfprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([40 x i8]* @.str9110, i32 0, i32 0), %struct.__va_list_tag* %38), !dbg !2146
  br label %sw.epilog, !dbg !2147

sw.bb17:                                          ; preds = %if.end
  %39 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2148
  %40 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2148
  %call18 = call i32 @vfprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([44 x i8]* @.str10111, i32 0, i32 0), %struct.__va_list_tag* %40), !dbg !2148
  br label %sw.epilog, !dbg !2149

sw.bb19:                                          ; preds = %if.end
  %41 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2150
  %42 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2150
  %call20 = call i32 @vfprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([48 x i8]* @.str11112, i32 0, i32 0), %struct.__va_list_tag* %42), !dbg !2150
  br label %sw.epilog, !dbg !2151

sw.bb21:                                          ; preds = %if.end
  %43 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2152
  %44 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2152
  %call22 = call i32 @vfprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([52 x i8]* @.str12113, i32 0, i32 0), %struct.__va_list_tag* %44), !dbg !2152
  br label %sw.epilog, !dbg !2153

sw.default:                                       ; preds = %if.end
  %45 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2154
  %46 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2154
  %call23 = call i32 @vfprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([60 x i8]* @.str13114, i32 0, i32 0), %struct.__va_list_tag* %46), !dbg !2154
  br label %sw.epilog, !dbg !2155

sw.epilog:                                        ; preds = %sw.default, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5
  %47 = load %struct.__va_list_tag** %authors.addr, align 8, !dbg !2156
  %48 = bitcast %struct.__va_list_tag* %47 to i8*, !dbg !2156
  call void @llvm.va_end(i8* %48), !dbg !2156
  ret void, !dbg !2157
}

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #9

; Function Attrs: nounwind uwtable
define void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #0 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  store i8* %command_name, i8** %command_name.addr, align 8
  store i8* %package, i8** %package.addr, align 8
  store i8* %version, i8** %version.addr, align 8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %authors, i32 0, i32 0, !dbg !2158
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !2158
  call void @llvm.va_start(i8* %arraydecay1), !dbg !2158
  %0 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2159
  %1 = load i8** %command_name.addr, align 8, !dbg !2159
  %2 = load i8** %package.addr, align 8, !dbg !2159
  %3 = load i8** %version.addr, align 8, !dbg !2159
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %authors, i32 0, i32 0, !dbg !2159
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !2159
  ret void, !dbg !2160
}

; Function Attrs: noreturn nounwind uwtable
define void @xalloc_die() #11 {
entry:
  %0 = load volatile i32* @exit_failure, align 4, !dbg !2161
  call void (i32, i32, i8*, ...)* @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8]* @.str119, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str1120, i32 0, i32 0)), !dbg !2161
  call void @abort() #17, !dbg !2162
  unreachable, !dbg !2162
}

; Function Attrs: nounwind uwtable
define i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #0 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %arglen = alloca i64, align 8
  %matchind = alloca i64, align 8
  %ambiguous = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8
  store i8** %arglist, i8*** %arglist.addr, align 8
  store i8* %vallist, i8** %vallist.addr, align 8
  store i64 %valsize, i64* %valsize.addr, align 8
  store i64 -1, i64* %matchind, align 8, !dbg !2163
  store i8 0, i8* %ambiguous, align 1, !dbg !2164
  %0 = load i8** %arg.addr, align 8, !dbg !2165
  %call = call i64 @strlen(i8* %0) #19, !dbg !2165
  store i64 %call, i64* %arglen, align 8, !dbg !2165
  store i64 0, i64* %i, align 8, !dbg !2166
  br label %for.cond, !dbg !2166

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64* %i, align 8, !dbg !2166
  %2 = load i8*** %arglist.addr, align 8, !dbg !2166
  %arrayidx = getelementptr inbounds i8** %2, i64 %1, !dbg !2166
  %3 = load i8** %arrayidx, align 8, !dbg !2166
  %tobool = icmp ne i8* %3, null, !dbg !2166
  br i1 %tobool, label %for.body, label %for.end, !dbg !2166

for.body:                                         ; preds = %for.cond
  %4 = load i64* %i, align 8, !dbg !2168
  %5 = load i8*** %arglist.addr, align 8, !dbg !2168
  %arrayidx1 = getelementptr inbounds i8** %5, i64 %4, !dbg !2168
  %6 = load i8** %arrayidx1, align 8, !dbg !2168
  %7 = load i8** %arg.addr, align 8, !dbg !2168
  %8 = load i64* %arglen, align 8, !dbg !2168
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #19, !dbg !2168
  %tobool3 = icmp ne i32 %call2, 0, !dbg !2168
  br i1 %tobool3, label %for.inc, label %if.then, !dbg !2168

if.then:                                          ; preds = %for.body
  %9 = load i64* %i, align 8, !dbg !2171
  %10 = load i8*** %arglist.addr, align 8, !dbg !2171
  %arrayidx4 = getelementptr inbounds i8** %10, i64 %9, !dbg !2171
  %11 = load i8** %arrayidx4, align 8, !dbg !2171
  %call5 = call i64 @strlen(i8* %11) #19, !dbg !2171
  %12 = load i64* %arglen, align 8, !dbg !2171
  %cmp = icmp eq i64 %call5, %12, !dbg !2171
  br i1 %cmp, label %if.then6, label %if.else, !dbg !2171

if.then6:                                         ; preds = %if.then
  %13 = load i64* %i, align 8, !dbg !2174
  store i64 %13, i64* %retval, !dbg !2174
  br label %return, !dbg !2174

if.else:                                          ; preds = %if.then
  %14 = load i64* %matchind, align 8, !dbg !2175
  %cmp7 = icmp eq i64 %14, -1, !dbg !2175
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !2175

if.then8:                                         ; preds = %if.else
  %15 = load i64* %i, align 8, !dbg !2177
  store i64 %15, i64* %matchind, align 8, !dbg !2177
  br label %for.inc, !dbg !2177

if.else9:                                         ; preds = %if.else
  %16 = load i8** %vallist.addr, align 8, !dbg !2178
  %cmp10 = icmp eq i8* %16, null, !dbg !2178
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !2178

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8** %vallist.addr, align 8, !dbg !2181
  %18 = load i64* %valsize.addr, align 8, !dbg !2181
  %19 = load i64* %matchind, align 8, !dbg !2181
  %mul = mul i64 %18, %19, !dbg !2181
  %add.ptr = getelementptr inbounds i8* %17, i64 %mul, !dbg !2181
  %20 = load i8** %vallist.addr, align 8, !dbg !2181
  %21 = load i64* %valsize.addr, align 8, !dbg !2181
  %22 = load i64* %i, align 8, !dbg !2181
  %mul11 = mul i64 %21, %22, !dbg !2181
  %add.ptr12 = getelementptr inbounds i8* %20, i64 %mul11, !dbg !2181
  %23 = load i64* %valsize.addr, align 8, !dbg !2181
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #19, !dbg !2181
  %tobool14 = icmp ne i32 %call13, 0, !dbg !2181
  br i1 %tobool14, label %if.then15, label %for.inc, !dbg !2181

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !2182
  br label %for.inc, !dbg !2184

for.inc:                                          ; preds = %for.body, %if.then8, %if.then15, %lor.lhs.false
  %24 = load i64* %i, align 8, !dbg !2166
  %inc = add i64 %24, 1, !dbg !2166
  store i64 %inc, i64* %i, align 8, !dbg !2166
  br label %for.cond, !dbg !2166

for.end:                                          ; preds = %for.cond
  %25 = load i8* %ambiguous, align 1, !dbg !2185
  %tobool19 = trunc i8 %25 to i1, !dbg !2185
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !2185

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, !dbg !2187
  br label %return, !dbg !2187

if.else21:                                        ; preds = %for.end
  %26 = load i64* %matchind, align 8, !dbg !2188
  store i64 %26, i64* %retval, !dbg !2188
  br label %return, !dbg !2188

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64* %retval, !dbg !2189
  ret i64 %27, !dbg !2189
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #8

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #8

; Function Attrs: nounwind uwtable
define void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #0 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  store i8* %value, i8** %value.addr, align 8
  store i64 %problem, i64* %problem.addr, align 8
  %0 = load i64* %problem.addr, align 8, !dbg !2190
  %cmp = icmp eq i64 %0, -1, !dbg !2190
  %cond = select i1 %cmp, i8* getelementptr inbounds ([27 x i8]* @.str125, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @.str1126, i32 0, i32 0), !dbg !2190
  store i8* %cond, i8** %format, align 8, !dbg !2190
  %1 = load i8** %format, align 8, !dbg !2191
  %2 = load i8** %value.addr, align 8, !dbg !2191
  %call = call i8* @quotearg_n_style(i32 0, i32 5, i8* %2), !dbg !2191
  %3 = load i8** %context.addr, align 8, !dbg !2192
  %call1 = call i8* @quote_n(i32 1, i8* %3), !dbg !2192
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 0, i8* %1, i8* %call, i8* %call1), !dbg !2191
  ret void, !dbg !2193
}

; Function Attrs: nounwind uwtable
define void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #0 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %last_val = alloca i8*, align 8
  store i8** %arglist, i8*** %arglist.addr, align 8
  store i8* %vallist, i8** %vallist.addr, align 8
  store i64 %valsize, i64* %valsize.addr, align 8
  store i8* null, i8** %last_val, align 8, !dbg !2194
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !2195
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([21 x i8]* @.str2127, i32 0, i32 0)), !dbg !2195
  store i64 0, i64* %i, align 8, !dbg !2196
  br label %for.cond, !dbg !2196

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64* %i, align 8, !dbg !2196
  %2 = load i8*** %arglist.addr, align 8, !dbg !2196
  %arrayidx = getelementptr inbounds i8** %2, i64 %1, !dbg !2196
  %3 = load i8** %arrayidx, align 8, !dbg !2196
  %tobool = icmp ne i8* %3, null, !dbg !2196
  br i1 %tobool, label %for.body, label %for.end, !dbg !2196

for.body:                                         ; preds = %for.cond
  %4 = load i64* %i, align 8, !dbg !2198
  %cmp = icmp eq i64 %4, 0, !dbg !2198
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2198

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8** %last_val, align 8, !dbg !2200
  %6 = load i8** %vallist.addr, align 8, !dbg !2200
  %7 = load i64* %valsize.addr, align 8, !dbg !2200
  %8 = load i64* %i, align 8, !dbg !2200
  %mul = mul i64 %7, %8, !dbg !2200
  %add.ptr = getelementptr inbounds i8* %6, i64 %mul, !dbg !2200
  %9 = load i64* %valsize.addr, align 8, !dbg !2200
  %call1 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #19, !dbg !2200
  %tobool2 = icmp ne i32 %call1, 0, !dbg !2200
  br i1 %tobool2, label %if.then, label %if.else, !dbg !2200

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE** @stderr, align 8, !dbg !2201
  %11 = load i64* %i, align 8, !dbg !2201
  %12 = load i8*** %arglist.addr, align 8, !dbg !2201
  %arrayidx3 = getelementptr inbounds i8** %12, i64 %11, !dbg !2201
  %13 = load i8** %arrayidx3, align 8, !dbg !2201
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([10 x i8]* @.str3128, i32 0, i32 0), i8* %13), !dbg !2201
  %14 = load i8** %vallist.addr, align 8, !dbg !2203
  %15 = load i64* %valsize.addr, align 8, !dbg !2203
  %16 = load i64* %i, align 8, !dbg !2203
  %mul5 = mul i64 %15, %16, !dbg !2203
  %add.ptr6 = getelementptr inbounds i8* %14, i64 %mul5, !dbg !2203
  store i8* %add.ptr6, i8** %last_val, align 8, !dbg !2203
  br label %for.inc, !dbg !2204

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE** @stderr, align 8, !dbg !2205
  %18 = load i64* %i, align 8, !dbg !2205
  %19 = load i8*** %arglist.addr, align 8, !dbg !2205
  %arrayidx7 = getelementptr inbounds i8** %19, i64 %18, !dbg !2205
  %20 = load i8** %arrayidx7, align 8, !dbg !2205
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([7 x i8]* @.str4129, i32 0, i32 0), i8* %20), !dbg !2205
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %21 = load i64* %i, align 8, !dbg !2196
  %inc = add i64 %21, 1, !dbg !2196
  store i64 %inc, i64* %i, align 8, !dbg !2196
  br label %for.cond, !dbg !2196

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE** @stderr, align 8, !dbg !2207
  %call9 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !2207
  ret void, !dbg !2208
}

; Function Attrs: nounwind uwtable
define i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #0 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8
  store i8* %context, i8** %context.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  store i8** %arglist, i8*** %arglist.addr, align 8
  store i8* %vallist, i8** %vallist.addr, align 8
  store i64 %valsize, i64* %valsize.addr, align 8
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8
  %0 = load i8** %arg.addr, align 8, !dbg !2209
  %1 = load i8*** %arglist.addr, align 8, !dbg !2209
  %2 = load i8** %vallist.addr, align 8, !dbg !2209
  %3 = load i64* %valsize.addr, align 8, !dbg !2209
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3), !dbg !2209
  store i64 %call, i64* %res, align 8, !dbg !2209
  %4 = load i64* %res, align 8, !dbg !2210
  %cmp = icmp sge i64 %4, 0, !dbg !2210
  br i1 %cmp, label %if.then, label %if.end, !dbg !2210

if.then:                                          ; preds = %entry
  %5 = load i64* %res, align 8, !dbg !2212
  store i64 %5, i64* %retval, !dbg !2212
  br label %return, !dbg !2212

if.end:                                           ; preds = %entry
  %6 = load i8** %context.addr, align 8, !dbg !2213
  %7 = load i8** %arg.addr, align 8, !dbg !2213
  %8 = load i64* %res, align 8, !dbg !2213
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !2213
  %9 = load i8*** %arglist.addr, align 8, !dbg !2214
  %10 = load i8** %vallist.addr, align 8, !dbg !2214
  %11 = load i64* %valsize.addr, align 8, !dbg !2214
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !2214
  %12 = load void ()** %exit_fn.addr, align 8, !dbg !2215
  call void %12(), !dbg !2215
  store i64 -1, i64* %retval, !dbg !2216
  br label %return, !dbg !2216

return:                                           ; preds = %if.end, %if.then
  %13 = load i64* %retval, !dbg !2217
  ret i64 %13, !dbg !2217
}

; Function Attrs: nounwind uwtable
define i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #0 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8
  store i8* %value, i8** %value.addr, align 8
  store i8** %arglist, i8*** %arglist.addr, align 8
  store i8* %vallist, i8** %vallist.addr, align 8
  store i64 %valsize, i64* %valsize.addr, align 8
  store i64 0, i64* %i, align 8, !dbg !2218
  br label %for.cond, !dbg !2218

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64* %i, align 8, !dbg !2218
  %1 = load i8*** %arglist.addr, align 8, !dbg !2218
  %arrayidx = getelementptr inbounds i8** %1, i64 %0, !dbg !2218
  %2 = load i8** %arrayidx, align 8, !dbg !2218
  %tobool = icmp ne i8* %2, null, !dbg !2218
  br i1 %tobool, label %for.body, label %for.end, !dbg !2218

for.body:                                         ; preds = %for.cond
  %3 = load i8** %value.addr, align 8, !dbg !2220
  %4 = load i8** %vallist.addr, align 8, !dbg !2220
  %5 = load i64* %valsize.addr, align 8, !dbg !2220
  %6 = load i64* %i, align 8, !dbg !2220
  %mul = mul i64 %5, %6, !dbg !2220
  %add.ptr = getelementptr inbounds i8* %4, i64 %mul, !dbg !2220
  %7 = load i64* %valsize.addr, align 8, !dbg !2220
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #19, !dbg !2220
  %tobool1 = icmp ne i32 %call, 0, !dbg !2220
  %8 = load i64* %i, align 8, !dbg !2218
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !2220

if.then:                                          ; preds = %for.body
  %9 = load i8*** %arglist.addr, align 8, !dbg !2222
  %arrayidx2 = getelementptr inbounds i8** %9, i64 %8, !dbg !2222
  %10 = load i8** %arrayidx2, align 8, !dbg !2222
  store i8* %10, i8** %retval, !dbg !2222
  br label %return, !dbg !2222

for.inc:                                          ; preds = %for.body
  %inc = add i64 %8, 1, !dbg !2218
  store i64 %inc, i64* %i, align 8, !dbg !2218
  br label %for.cond, !dbg !2218

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, !dbg !2223
  br label %return, !dbg !2223

return:                                           ; preds = %for.end, %if.then
  %11 = load i8** %retval, !dbg !2224
  ret i8* %11, !dbg !2224
}

; Function Attrs: nounwind uwtable
define internal void @__argmatch_die() #0 {
entry:
  call void (i32, ...)* bitcast (void (i32)* @usage to void (i32, ...)*)(i32 1), !dbg !2225
  ret void, !dbg !2226
}

; Function Attrs: nounwind uwtable
define i8* @last_component(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8
  %p = alloca i8*, align 8
  %saw_slash = alloca i8, align 1
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8** %name.addr, align 8, !dbg !2227
  %add.ptr = getelementptr inbounds i8* %0, i64 0, !dbg !2227
  store i8* %add.ptr, i8** %base, align 8, !dbg !2227
  store i8 0, i8* %saw_slash, align 1, !dbg !2228
  br label %while.cond, !dbg !2229

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8** %base, align 8, !dbg !2229
  %2 = load i8* %1, align 1, !dbg !2229
  %conv = sext i8 %2 to i32, !dbg !2229
  %cmp = icmp eq i32 %conv, 47, !dbg !2229
  %3 = load i8** %base, align 8, !dbg !2230
  br i1 %cmp, label %while.body, label %while.end, !dbg !2229

while.body:                                       ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8* %3, i32 1, !dbg !2230
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !2230
  br label %while.cond, !dbg !2230

while.end:                                        ; preds = %while.cond
  store i8* %3, i8** %p, align 8, !dbg !2231
  br label %for.cond, !dbg !2231

for.cond:                                         ; preds = %for.inc, %while.end
  %4 = load i8** %p, align 8, !dbg !2231
  %5 = load i8* %4, align 1, !dbg !2231
  %tobool = icmp ne i8 %5, 0, !dbg !2231
  br i1 %tobool, label %for.body, label %for.end, !dbg !2231

for.body:                                         ; preds = %for.cond
  %6 = load i8** %p, align 8, !dbg !2233
  %7 = load i8* %6, align 1, !dbg !2233
  %conv2 = sext i8 %7 to i32, !dbg !2233
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !2233
  br i1 %cmp3, label %if.then, label %if.else, !dbg !2233

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !2236
  br label %for.inc, !dbg !2236

if.else:                                          ; preds = %for.body
  %8 = load i8* %saw_slash, align 1, !dbg !2237
  %tobool5 = trunc i8 %8 to i1, !dbg !2237
  br i1 %tobool5, label %if.then6, label %for.inc, !dbg !2237

if.then6:                                         ; preds = %if.else
  %9 = load i8** %p, align 8, !dbg !2239
  store i8* %9, i8** %base, align 8, !dbg !2239
  store i8 0, i8* %saw_slash, align 1, !dbg !2241
  br label %for.inc, !dbg !2242

for.inc:                                          ; preds = %if.then, %if.then6, %if.else
  %10 = load i8** %p, align 8, !dbg !2231
  %incdec.ptr8 = getelementptr inbounds i8* %10, i32 1, !dbg !2231
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !2231
  br label %for.cond, !dbg !2231

for.end:                                          ; preds = %for.cond
  %11 = load i8** %base, align 8, !dbg !2243
  ret i8* %11, !dbg !2243
}

; Function Attrs: nounwind uwtable
define i8* @base_name(i8* %name) #0 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8
  %length = alloca i64, align 8
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8** %name.addr, align 8, !dbg !2244
  %call = call i8* @last_component(i8* %0), !dbg !2244
  store i8* %call, i8** %base, align 8, !dbg !2244
  %1 = load i8** %base, align 8, !dbg !2245
  %2 = load i8* %1, align 1, !dbg !2245
  %tobool = icmp ne i8 %2, 0, !dbg !2245
  br i1 %tobool, label %if.end, label %if.then, !dbg !2245

if.then:                                          ; preds = %entry
  %3 = load i8** %name.addr, align 8, !dbg !2247
  %4 = load i8** %name.addr, align 8, !dbg !2247
  %call1 = call i64 @base_len(i8* %4), !dbg !2247
  %call2 = call i8* @xstrndup(i8* %3, i64 %call1), !dbg !2247
  store i8* %call2, i8** %retval, !dbg !2247
  br label %return, !dbg !2247

if.end:                                           ; preds = %entry
  %5 = load i8** %base, align 8, !dbg !2248
  %call3 = call i64 @base_len(i8* %5), !dbg !2248
  store i64 %call3, i64* %length, align 8, !dbg !2248
  %6 = load i64* %length, align 8, !dbg !2249
  %7 = load i8** %base, align 8, !dbg !2249
  %arrayidx = getelementptr inbounds i8* %7, i64 %6, !dbg !2249
  %8 = load i8* %arrayidx, align 1, !dbg !2249
  %conv = sext i8 %8 to i32, !dbg !2249
  %cmp = icmp eq i32 %conv, 47, !dbg !2249
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !2249

if.then5:                                         ; preds = %if.end
  %9 = load i64* %length, align 8, !dbg !2251
  %inc = add i64 %9, 1, !dbg !2251
  store i64 %inc, i64* %length, align 8, !dbg !2251
  br label %if.end6, !dbg !2251

if.end6:                                          ; preds = %if.then5, %if.end
  %10 = load i8** %base, align 8, !dbg !2252
  %11 = load i64* %length, align 8, !dbg !2252
  %call7 = call i8* @xstrndup(i8* %10, i64 %11), !dbg !2252
  store i8* %call7, i8** %retval, !dbg !2252
  br label %return, !dbg !2252

return:                                           ; preds = %if.end6, %if.then
  %12 = load i8** %retval, !dbg !2253
  ret i8* %12, !dbg !2253
}

; Function Attrs: nounwind uwtable
define i64 @base_len(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  %prefix_len = alloca i64, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 0, i64* %prefix_len, align 8, !dbg !2254
  %0 = load i8** %name.addr, align 8, !dbg !2255
  %call = call i64 @strlen(i8* %0) #19, !dbg !2255
  store i64 %call, i64* %len, align 8, !dbg !2255
  br label %for.cond, !dbg !2255

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64* %len, align 8, !dbg !2255
  %cmp = icmp ult i64 1, %1, !dbg !2255
  br i1 %cmp, label %land.lhs.true, label %for.end, !dbg !2255

land.lhs.true:                                    ; preds = %for.cond
  %2 = load i64* %len, align 8, !dbg !2255
  %sub = sub i64 %2, 1, !dbg !2255
  %3 = load i8** %name.addr, align 8, !dbg !2255
  %arrayidx = getelementptr inbounds i8* %3, i64 %sub, !dbg !2255
  %4 = load i8* %arrayidx, align 1, !dbg !2255
  %conv = sext i8 %4 to i32, !dbg !2255
  %cmp1 = icmp eq i32 %conv, 47, !dbg !2255
  br i1 %cmp1, label %for.inc, label %for.end, !dbg !2255

for.inc:                                          ; preds = %land.lhs.true
  %5 = load i64* %len, align 8, !dbg !2255
  %dec = add i64 %5, -1, !dbg !2255
  store i64 %dec, i64* %len, align 8, !dbg !2255
  br label %for.cond, !dbg !2255

for.end:                                          ; preds = %land.lhs.true, %for.cond
  %6 = load i64* %len, align 8, !dbg !2257
  ret i64 %6, !dbg !2257
}

; Function Attrs: nounwind uwtable
define void @close_stdout_set_file_name(i8* %file) #0 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  %0 = load i8** %file.addr, align 8, !dbg !2258
  store i8* %0, i8** @file_name, align 8, !dbg !2258
  ret void, !dbg !2259
}

; Function Attrs: nounwind uwtable
define void @close_stdout() #0 {
entry:
  %write_error = alloca i8*, align 8
  %0 = load %struct._IO_FILE** @stdout, align 8, !dbg !2260
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !2260
  %cmp = icmp ne i32 %call, 0, !dbg !2260
  br i1 %cmp, label %if.then, label %if.end5, !dbg !2260

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([12 x i8]* @.str134, i32 0, i32 0), i8** %write_error, align 8, !dbg !2262
  %1 = load i8** @file_name, align 8, !dbg !2264
  %tobool = icmp ne i8* %1, null, !dbg !2264
  %call2 = call i32* @__errno_location() #1, !dbg !2266
  %2 = load i32* %call2, align 4, !dbg !2266
  br i1 %tobool, label %if.then1, label %if.else, !dbg !2264

if.then1:                                         ; preds = %if.then
  %3 = load i8** @file_name, align 8, !dbg !2266
  %call3 = call i8* @quotearg_colon(i8* %3), !dbg !2266
  %4 = load i8** %write_error, align 8, !dbg !2266
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 %2, i8* getelementptr inbounds ([7 x i8]* @.str1135, i32 0, i32 0), i8* %call3, i8* %4), !dbg !2266
  br label %if.end, !dbg !2266

if.else:                                          ; preds = %if.then
  %5 = load i8** %write_error, align 8, !dbg !2267
  call void (i32, i32, i8*, ...)* @error(i32 0, i32 %2, i8* getelementptr inbounds ([3 x i8]* @.str2136, i32 0, i32 0), i8* %5), !dbg !2267
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %6 = load volatile i32* @exit_failure, align 4, !dbg !2268
  call void @_exit(i32 %6) #20, !dbg !2268
  unreachable, !dbg !2268

if.end5:                                          ; preds = %entry
  %7 = load %struct._IO_FILE** @stderr, align 8, !dbg !2269
  %call6 = call i32 @close_stream(%struct._IO_FILE* %7), !dbg !2269
  %cmp7 = icmp ne i32 %call6, 0, !dbg !2269
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2269

if.then8:                                         ; preds = %if.end5
  %8 = load volatile i32* @exit_failure, align 4, !dbg !2271
  call void @_exit(i32 %8) #20, !dbg !2271
  unreachable, !dbg !2271

if.end9:                                          ; preds = %if.end5
  ret void, !dbg !2272
}

; Function Attrs: noreturn
declare void @_exit(i32) #12

; Function Attrs: nounwind uwtable
define void @cycle_check_init(%struct.cycle_check_state* %state) #0 {
entry:
  %state.addr = alloca %struct.cycle_check_state*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8
  %0 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !2273
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state* %0, i32 0, i32 1, !dbg !2273
  store i64 0, i64* %chdir_counter, align 8, !dbg !2273
  %1 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !2274
  %magic = getelementptr inbounds %struct.cycle_check_state* %1, i32 0, i32 2, !dbg !2274
  store i32 9827862, i32* %magic, align 4, !dbg !2274
  ret void, !dbg !2275
}

; Function Attrs: nounwind uwtable
define zeroext i1 @cycle_check(%struct.cycle_check_state* %state, %struct.stat* %sb) #0 {
entry:
  %retval = alloca i1, align 1
  %state.addr = alloca %struct.cycle_check_state*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  %0 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !2276
  %magic = getelementptr inbounds %struct.cycle_check_state* %0, i32 0, i32 2, !dbg !2276
  %1 = load i32* %magic, align 4, !dbg !2276
  %cmp = icmp eq i32 %1, 9827862, !dbg !2276
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !2276

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8]* @.str139, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str1140, i32 0, i32 0), i32 62, i8* getelementptr inbounds ([67 x i8]* @__PRETTY_FUNCTION__.cycle_check, i32 0, i32 0)) #1
  unreachable, !dbg !2276

cond.end:                                         ; preds = %entry
  %2 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !2277
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state* %2, i32 0, i32 1, !dbg !2277
  %3 = load i64* %chdir_counter, align 8, !dbg !2277
  %tobool = icmp ne i64 %3, 0, !dbg !2277
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2277

land.lhs.true:                                    ; preds = %cond.end
  %4 = load %struct.stat** %sb.addr, align 8, !dbg !2277
  %st_ino = getelementptr inbounds %struct.stat* %4, i32 0, i32 1, !dbg !2277
  %5 = load i64* %st_ino, align 8, !dbg !2277
  %6 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !2277
  %dev_ino = getelementptr inbounds %struct.cycle_check_state* %6, i32 0, i32 0, !dbg !2277
  %st_ino1 = getelementptr inbounds %struct.dev_ino* %dev_ino, i32 0, i32 0, !dbg !2277
  %7 = load i64* %st_ino1, align 8, !dbg !2277
  %cmp2 = icmp eq i64 %5, %7, !dbg !2277
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !2277

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.stat** %sb.addr, align 8, !dbg !2277
  %st_dev = getelementptr inbounds %struct.stat* %8, i32 0, i32 0, !dbg !2277
  %9 = load i64* %st_dev, align 8, !dbg !2277
  %10 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !2277
  %dev_ino4 = getelementptr inbounds %struct.cycle_check_state* %10, i32 0, i32 0, !dbg !2277
  %st_dev5 = getelementptr inbounds %struct.dev_ino* %dev_ino4, i32 0, i32 1, !dbg !2277
  %11 = load i64* %st_dev5, align 8, !dbg !2277
  %cmp6 = icmp eq i64 %9, %11, !dbg !2277
  br i1 %cmp6, label %if.then, label %if.end, !dbg !2277

if.then:                                          ; preds = %land.lhs.true3
  store i1 true, i1* %retval, !dbg !2279
  br label %return, !dbg !2279

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %cond.end
  %12 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !2280
  %chdir_counter7 = getelementptr inbounds %struct.cycle_check_state* %12, i32 0, i32 1, !dbg !2280
  %13 = load i64* %chdir_counter7, align 8, !dbg !2280
  %inc = add i64 %13, 1, !dbg !2280
  store i64 %inc, i64* %chdir_counter7, align 8, !dbg !2280
  %call = call zeroext i1 @is_zero_or_power_of_two(i64 %inc), !dbg !2280
  br i1 %call, label %if.then8, label %if.end19, !dbg !2280

if.then8:                                         ; preds = %if.end
  %14 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !2282
  %chdir_counter9 = getelementptr inbounds %struct.cycle_check_state* %14, i32 0, i32 1, !dbg !2282
  %15 = load i64* %chdir_counter9, align 8, !dbg !2282
  %cmp10 = icmp eq i64 %15, 0, !dbg !2282
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !2282

if.then11:                                        ; preds = %if.then8
  store i1 true, i1* %retval, !dbg !2285
  br label %return, !dbg !2285

if.end12:                                         ; preds = %if.then8
  %16 = load %struct.stat** %sb.addr, align 8, !dbg !2286
  %st_dev13 = getelementptr inbounds %struct.stat* %16, i32 0, i32 0, !dbg !2286
  %17 = load i64* %st_dev13, align 8, !dbg !2286
  %18 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !2286
  %dev_ino14 = getelementptr inbounds %struct.cycle_check_state* %18, i32 0, i32 0, !dbg !2286
  %st_dev15 = getelementptr inbounds %struct.dev_ino* %dev_ino14, i32 0, i32 1, !dbg !2286
  store i64 %17, i64* %st_dev15, align 8, !dbg !2286
  %19 = load %struct.stat** %sb.addr, align 8, !dbg !2287
  %st_ino16 = getelementptr inbounds %struct.stat* %19, i32 0, i32 1, !dbg !2287
  %20 = load i64* %st_ino16, align 8, !dbg !2287
  %21 = load %struct.cycle_check_state** %state.addr, align 8, !dbg !2287
  %dev_ino17 = getelementptr inbounds %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !2287
  %st_ino18 = getelementptr inbounds %struct.dev_ino* %dev_ino17, i32 0, i32 0, !dbg !2287
  store i64 %20, i64* %st_ino18, align 8, !dbg !2287
  br label %if.end19, !dbg !2288

if.end19:                                         ; preds = %if.end12, %if.end
  store i1 false, i1* %retval, !dbg !2289
  br label %return, !dbg !2289

return:                                           ; preds = %if.end19, %if.then11, %if.then
  %22 = load i1* %retval, !dbg !2290
  ret i1 %22, !dbg !2290
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @is_zero_or_power_of_two(i64 %i) #10 {
entry:
  %i.addr = alloca i64, align 8
  store i64 %i, i64* %i.addr, align 8
  %0 = load i64* %i.addr, align 8, !dbg !2291
  %1 = load i64* %i.addr, align 8, !dbg !2291
  %sub = sub i64 %1, 1, !dbg !2291
  %and = and i64 %0, %sub, !dbg !2291
  %cmp = icmp eq i64 %and, 0, !dbg !2291
  ret i1 %cmp, !dbg !2291
}

; Function Attrs: nounwind uwtable
define i8* @file_type(%struct.stat* %st) #0 {
entry:
  %retval = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  %0 = load %struct.stat** %st.addr, align 8, !dbg !2292
  %st_mode = getelementptr inbounds %struct.stat* %0, i32 0, i32 3, !dbg !2292
  %1 = load i32* %st_mode, align 4, !dbg !2292
  %and = and i32 %1, 61440, !dbg !2292
  %cmp = icmp eq i32 %and, 32768, !dbg !2292
  %2 = load %struct.stat** %st.addr, align 8, !dbg !2294
  br i1 %cmp, label %if.then, label %if.end, !dbg !2292

if.then:                                          ; preds = %entry
  %st_size = getelementptr inbounds %struct.stat* %2, i32 0, i32 8, !dbg !2294
  %3 = load i64* %st_size, align 8, !dbg !2294
  %cmp1 = icmp eq i64 %3, 0, !dbg !2294
  %cond = select i1 %cmp1, i8* getelementptr inbounds ([19 x i8]* @.str147, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str1148, i32 0, i32 0), !dbg !2294
  store i8* %cond, i8** %retval, !dbg !2294
  br label %return, !dbg !2294

if.end:                                           ; preds = %entry
  %st_mode2 = getelementptr inbounds %struct.stat* %2, i32 0, i32 3, !dbg !2295
  %4 = load i32* %st_mode2, align 4, !dbg !2295
  %and3 = and i32 %4, 61440, !dbg !2295
  %cmp4 = icmp eq i32 %and3, 16384, !dbg !2295
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !2295

if.then5:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([10 x i8]* @.str2149, i32 0, i32 0), i8** %retval, !dbg !2297
  br label %return, !dbg !2297

if.end6:                                          ; preds = %if.end
  %5 = load %struct.stat** %st.addr, align 8, !dbg !2298
  %st_mode7 = getelementptr inbounds %struct.stat* %5, i32 0, i32 3, !dbg !2298
  %6 = load i32* %st_mode7, align 4, !dbg !2298
  %and8 = and i32 %6, 61440, !dbg !2298
  %cmp9 = icmp eq i32 %and8, 24576, !dbg !2298
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !2298

if.then10:                                        ; preds = %if.end6
  store i8* getelementptr inbounds ([19 x i8]* @.str3150, i32 0, i32 0), i8** %retval, !dbg !2300
  br label %return, !dbg !2300

if.end11:                                         ; preds = %if.end6
  %7 = load %struct.stat** %st.addr, align 8, !dbg !2301
  %st_mode12 = getelementptr inbounds %struct.stat* %7, i32 0, i32 3, !dbg !2301
  %8 = load i32* %st_mode12, align 4, !dbg !2301
  %and13 = and i32 %8, 61440, !dbg !2301
  %cmp14 = icmp eq i32 %and13, 8192, !dbg !2301
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2301

if.then15:                                        ; preds = %if.end11
  store i8* getelementptr inbounds ([23 x i8]* @.str4151, i32 0, i32 0), i8** %retval, !dbg !2303
  br label %return, !dbg !2303

if.end16:                                         ; preds = %if.end11
  %9 = load %struct.stat** %st.addr, align 8, !dbg !2304
  %st_mode17 = getelementptr inbounds %struct.stat* %9, i32 0, i32 3, !dbg !2304
  %10 = load i32* %st_mode17, align 4, !dbg !2304
  %and18 = and i32 %10, 61440, !dbg !2304
  %cmp19 = icmp eq i32 %and18, 4096, !dbg !2304
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !2304

if.then20:                                        ; preds = %if.end16
  store i8* getelementptr inbounds ([5 x i8]* @.str5152, i32 0, i32 0), i8** %retval, !dbg !2306
  br label %return, !dbg !2306

if.end21:                                         ; preds = %if.end16
  %11 = load %struct.stat** %st.addr, align 8, !dbg !2307
  %st_mode22 = getelementptr inbounds %struct.stat* %11, i32 0, i32 3, !dbg !2307
  %12 = load i32* %st_mode22, align 4, !dbg !2307
  %and23 = and i32 %12, 61440, !dbg !2307
  %cmp24 = icmp eq i32 %and23, 40960, !dbg !2307
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !2307

if.then25:                                        ; preds = %if.end21
  store i8* getelementptr inbounds ([14 x i8]* @.str6153, i32 0, i32 0), i8** %retval, !dbg !2309
  br label %return, !dbg !2309

if.end26:                                         ; preds = %if.end21
  %13 = load %struct.stat** %st.addr, align 8, !dbg !2310
  %st_mode27 = getelementptr inbounds %struct.stat* %13, i32 0, i32 3, !dbg !2310
  %14 = load i32* %st_mode27, align 4, !dbg !2310
  %and28 = and i32 %14, 61440, !dbg !2310
  %cmp29 = icmp eq i32 %and28, 49152, !dbg !2310
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !2310

if.then30:                                        ; preds = %if.end26
  store i8* getelementptr inbounds ([7 x i8]* @.str7154, i32 0, i32 0), i8** %retval, !dbg !2312
  br label %return, !dbg !2312

if.end31:                                         ; preds = %if.end26
  %15 = load %struct.stat** %st.addr, align 8, !dbg !2313
  %st_mode32 = getelementptr inbounds %struct.stat* %15, i32 0, i32 3, !dbg !2313
  %16 = load i32* %st_mode32, align 4, !dbg !2313
  %17 = load %struct.stat** %st.addr, align 8, !dbg !2313
  %st_mode33 = getelementptr inbounds %struct.stat* %17, i32 0, i32 3, !dbg !2313
  %18 = load i32* %st_mode33, align 4, !dbg !2313
  %sub = sub i32 %16, %18, !dbg !2313
  %tobool = icmp ne i32 %sub, 0, !dbg !2313
  br i1 %tobool, label %if.then34, label %if.end35, !dbg !2313

if.then34:                                        ; preds = %if.end31
  store i8* getelementptr inbounds ([14 x i8]* @.str8155, i32 0, i32 0), i8** %retval, !dbg !2315
  br label %return, !dbg !2315

if.end35:                                         ; preds = %if.end31
  %19 = load %struct.stat** %st.addr, align 8, !dbg !2316
  %st_mode36 = getelementptr inbounds %struct.stat* %19, i32 0, i32 3, !dbg !2316
  %20 = load i32* %st_mode36, align 4, !dbg !2316
  %21 = load %struct.stat** %st.addr, align 8, !dbg !2316
  %st_mode37 = getelementptr inbounds %struct.stat* %21, i32 0, i32 3, !dbg !2316
  %22 = load i32* %st_mode37, align 4, !dbg !2316
  %sub38 = sub i32 %20, %22, !dbg !2316
  %tobool39 = icmp ne i32 %sub38, 0, !dbg !2316
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !2316

if.then40:                                        ; preds = %if.end35
  store i8* getelementptr inbounds ([10 x i8]* @.str9156, i32 0, i32 0), i8** %retval, !dbg !2318
  br label %return, !dbg !2318

if.end41:                                         ; preds = %if.end35
  %23 = load %struct.stat** %st.addr, align 8, !dbg !2319
  %st_mode42 = getelementptr inbounds %struct.stat* %23, i32 0, i32 3, !dbg !2319
  %24 = load i32* %st_mode42, align 4, !dbg !2319
  %25 = load %struct.stat** %st.addr, align 8, !dbg !2319
  %st_mode43 = getelementptr inbounds %struct.stat* %25, i32 0, i32 3, !dbg !2319
  %26 = load i32* %st_mode43, align 4, !dbg !2319
  %sub44 = sub i32 %24, %26, !dbg !2319
  %tobool45 = icmp ne i32 %sub44, 0, !dbg !2319
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !2319

if.then46:                                        ; preds = %if.end41
  store i8* getelementptr inbounds ([21 x i8]* @.str10157, i32 0, i32 0), i8** %retval, !dbg !2321
  br label %return, !dbg !2321

if.end47:                                         ; preds = %if.end41
  store i8* getelementptr inbounds ([11 x i8]* @.str11158, i32 0, i32 0), i8** %retval, !dbg !2322
  br label %return, !dbg !2322

return:                                           ; preds = %if.end47, %if.then46, %if.then40, %if.then34, %if.then30, %if.then25, %if.then20, %if.then15, %if.then10, %if.then5, %if.then
  %27 = load i8** %retval, !dbg !2323
  ret i8* %27, !dbg !2323
}

; Function Attrs: nounwind uwtable
define i64 @hash_get_n_buckets(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2324
  %n_buckets = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 2, !dbg !2324
  %1 = load i64* %n_buckets, align 8, !dbg !2324
  ret i64 %1, !dbg !2324
}

; Function Attrs: nounwind uwtable
define i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2325
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 3, !dbg !2325
  %1 = load i64* %n_buckets_used, align 8, !dbg !2325
  ret i64 %1, !dbg !2325
}

; Function Attrs: nounwind uwtable
define i64 @hash_get_n_entries(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2326
  %n_entries = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 4, !dbg !2326
  %1 = load i64* %n_entries, align 8, !dbg !2326
  ret i64 %1, !dbg !2326
}

; Function Attrs: nounwind uwtable
define i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %max_bucket_length = alloca i64, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  %bucket_length = alloca i64, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i64 0, i64* %max_bucket_length, align 8, !dbg !2327
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2328
  %bucket1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !2328
  %1 = load %struct.hash_entry** %bucket1, align 8, !dbg !2328
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !2328
  br label %for.cond, !dbg !2328

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry** %bucket, align 8, !dbg !2328
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !2328
  %bucket_limit = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 1, !dbg !2328
  %4 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !2328
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !2328
  br i1 %cmp, label %for.body, label %for.end, !dbg !2328

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !2330
  %data = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !2330
  %6 = load i8** %data, align 8, !dbg !2330
  %tobool = icmp ne i8* %6, null, !dbg !2330
  br i1 %tobool, label %if.then, label %for.inc, !dbg !2330

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !2333
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !2333
  store i64 1, i64* %bucket_length, align 8, !dbg !2335
  br label %while.cond, !dbg !2336

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry** %cursor, align 8, !dbg !2336
  %next = getelementptr inbounds %struct.hash_entry* %8, i32 0, i32 1, !dbg !2336
  %9 = load %struct.hash_entry** %next, align 8, !dbg !2336
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !2336
  %10 = load %struct.hash_entry** %cursor, align 8, !dbg !2336
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !2336
  %11 = load i64* %bucket_length, align 8, !dbg !2337
  br i1 %tobool2, label %while.body, label %while.end, !dbg !2336

while.body:                                       ; preds = %while.cond
  %inc = add i64 %11, 1, !dbg !2337
  store i64 %inc, i64* %bucket_length, align 8, !dbg !2337
  br label %while.cond, !dbg !2337

while.end:                                        ; preds = %while.cond
  %12 = load i64* %max_bucket_length, align 8, !dbg !2338
  %cmp3 = icmp ugt i64 %11, %12, !dbg !2338
  br i1 %cmp3, label %if.then4, label %for.inc, !dbg !2338

if.then4:                                         ; preds = %while.end
  %13 = load i64* %bucket_length, align 8, !dbg !2340
  store i64 %13, i64* %max_bucket_length, align 8, !dbg !2340
  br label %for.inc, !dbg !2340

for.inc:                                          ; preds = %for.body, %if.then4, %while.end
  %14 = load %struct.hash_entry** %bucket, align 8, !dbg !2328
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %14, i32 1, !dbg !2328
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2328
  br label %for.cond, !dbg !2328

for.end:                                          ; preds = %for.cond
  %15 = load i64* %max_bucket_length, align 8, !dbg !2341
  ret i64 %15, !dbg !2341
}

; Function Attrs: nounwind uwtable
define zeroext i1 @hash_table_ok(%struct.hash_table* %table) #0 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %n_buckets_used = alloca i64, align 8
  %n_entries = alloca i64, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i64 0, i64* %n_buckets_used, align 8, !dbg !2342
  store i64 0, i64* %n_entries, align 8, !dbg !2343
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2344
  %bucket1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !2344
  %1 = load %struct.hash_entry** %bucket1, align 8, !dbg !2344
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !2344
  br label %for.cond, !dbg !2344

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry** %bucket, align 8, !dbg !2344
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !2344
  %bucket_limit = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 1, !dbg !2344
  %4 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !2344
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !2344
  br i1 %cmp, label %for.body, label %for.end, !dbg !2344

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !2346
  %data = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !2346
  %6 = load i8** %data, align 8, !dbg !2346
  %tobool = icmp ne i8* %6, null, !dbg !2346
  br i1 %tobool, label %if.then, label %for.inc, !dbg !2346

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !2349
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !2349
  %8 = load i64* %n_buckets_used, align 8, !dbg !2351
  %inc = add i64 %8, 1, !dbg !2351
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !2351
  %9 = load i64* %n_entries, align 8, !dbg !2352
  %inc2 = add i64 %9, 1, !dbg !2352
  store i64 %inc2, i64* %n_entries, align 8, !dbg !2352
  br label %while.cond, !dbg !2353

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry** %cursor, align 8, !dbg !2353
  %next = getelementptr inbounds %struct.hash_entry* %10, i32 0, i32 1, !dbg !2353
  %11 = load %struct.hash_entry** %next, align 8, !dbg !2353
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !2353
  %12 = load %struct.hash_entry** %cursor, align 8, !dbg !2353
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !2353
  br i1 %tobool3, label %while.body, label %for.inc, !dbg !2353

while.body:                                       ; preds = %while.cond
  %13 = load i64* %n_entries, align 8, !dbg !2354
  %inc4 = add i64 %13, 1, !dbg !2354
  store i64 %inc4, i64* %n_entries, align 8, !dbg !2354
  br label %while.cond, !dbg !2354

for.inc:                                          ; preds = %for.body, %while.cond
  %14 = load %struct.hash_entry** %bucket, align 8, !dbg !2344
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %14, i32 1, !dbg !2344
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2344
  br label %for.cond, !dbg !2344

for.end:                                          ; preds = %for.cond
  %15 = load i64* %n_buckets_used, align 8, !dbg !2355
  %16 = load %struct.hash_table** %table.addr, align 8, !dbg !2355
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table* %16, i32 0, i32 3, !dbg !2355
  %17 = load i64* %n_buckets_used5, align 8, !dbg !2355
  %cmp6 = icmp eq i64 %15, %17, !dbg !2355
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !2355

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64* %n_entries, align 8, !dbg !2355
  %19 = load %struct.hash_table** %table.addr, align 8, !dbg !2355
  %n_entries7 = getelementptr inbounds %struct.hash_table* %19, i32 0, i32 4, !dbg !2355
  %20 = load i64* %n_entries7, align 8, !dbg !2355
  %cmp8 = icmp eq i64 %18, %20, !dbg !2355
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2355

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, !dbg !2357
  br label %return, !dbg !2357

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, !dbg !2358
  br label %return, !dbg !2358

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1* %retval, !dbg !2359
  ret i1 %21, !dbg !2359
}

; Function Attrs: nounwind uwtable
define void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8
  %n_buckets = alloca i64, align 8
  %n_buckets_used = alloca i64, align 8
  %max_bucket_length = alloca i64, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2360
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0), !dbg !2360
  store i64 %call, i64* %n_entries, align 8, !dbg !2360
  %1 = load %struct.hash_table** %table.addr, align 8, !dbg !2361
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1), !dbg !2361
  store i64 %call1, i64* %n_buckets, align 8, !dbg !2361
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !2362
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2), !dbg !2362
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !2362
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !2363
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3), !dbg !2363
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !2363
  %4 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2364
  %5 = load i64* %n_entries, align 8, !dbg !2364
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8]* @.str161, i32 0, i32 0), i64 %5), !dbg !2364
  %6 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2365
  %7 = load i64* %n_buckets, align 8, !dbg !2365
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8]* @.str1162, i32 0, i32 0), i64 %7), !dbg !2365
  %8 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2366
  %9 = load i64* %n_buckets_used, align 8, !dbg !2366
  %10 = load i64* %n_buckets_used, align 8, !dbg !2366
  %conv = uitofp i64 %10 to double, !dbg !2366
  %mul = fmul double 1.000000e+02, %conv, !dbg !2366
  %11 = load i64* %n_buckets, align 8, !dbg !2366
  %conv6 = uitofp i64 %11 to double, !dbg !2366
  %div = fdiv double %mul, %conv6, !dbg !2366
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8]* @.str2163, i32 0, i32 0), i64 %9, double %div), !dbg !2366
  %12 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !2367
  %13 = load i64* %max_bucket_length, align 8, !dbg !2367
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8]* @.str3164, i32 0, i32 0), i64 %13), !dbg !2367
  ret void, !dbg !2368
}

; Function Attrs: nounwind uwtable
define i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8* %entry1, i8** %entry.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2369
  %bucket2 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !2369
  %1 = load %struct.hash_entry** %bucket2, align 8, !dbg !2369
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !2370
  %hasher = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 6, !dbg !2370
  %3 = load i64 (i8*, i64)** %hasher, align 8, !dbg !2370
  %4 = load i8** %entry.addr, align 8, !dbg !2370
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !2370
  %n_buckets = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 2, !dbg !2370
  %6 = load i64* %n_buckets, align 8, !dbg !2370
  %call = call i64 %3(i8* %4, i64 %6), !dbg !2370
  %add.ptr = getelementptr inbounds %struct.hash_entry* %1, i64 %call, !dbg !2370
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2370
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !2371
  %8 = load %struct.hash_table** %table.addr, align 8, !dbg !2371
  %bucket_limit = getelementptr inbounds %struct.hash_table* %8, i32 0, i32 1, !dbg !2371
  %9 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !2371
  %cmp = icmp ult %struct.hash_entry* %7, %9, !dbg !2371
  br i1 %cmp, label %if.end, label %if.then, !dbg !2371

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !2373
  unreachable, !dbg !2373

if.end:                                           ; preds = %entry
  %10 = load %struct.hash_entry** %bucket, align 8, !dbg !2374
  %data = getelementptr inbounds %struct.hash_entry* %10, i32 0, i32 0, !dbg !2374
  %11 = load i8** %data, align 8, !dbg !2374
  %cmp3 = icmp eq i8* %11, null, !dbg !2374
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2374

if.then4:                                         ; preds = %if.end
  store i8* null, i8** %retval, !dbg !2376
  br label %return, !dbg !2376

if.end5:                                          ; preds = %if.end
  %12 = load %struct.hash_entry** %bucket, align 8, !dbg !2377
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !2377
  br label %for.cond, !dbg !2377

for.cond:                                         ; preds = %for.inc, %if.end5
  %13 = load %struct.hash_entry** %cursor, align 8, !dbg !2377
  %tobool = icmp ne %struct.hash_entry* %13, null, !dbg !2377
  br i1 %tobool, label %for.body, label %for.end, !dbg !2377

for.body:                                         ; preds = %for.cond
  %14 = load %struct.hash_table** %table.addr, align 8, !dbg !2379
  %comparator = getelementptr inbounds %struct.hash_table* %14, i32 0, i32 7, !dbg !2379
  %15 = load i1 (i8*, i8*)** %comparator, align 8, !dbg !2379
  %16 = load i8** %entry.addr, align 8, !dbg !2379
  %17 = load %struct.hash_entry** %cursor, align 8, !dbg !2379
  %data6 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 0, !dbg !2379
  %18 = load i8** %data6, align 8, !dbg !2379
  %call7 = call zeroext i1 %15(i8* %16, i8* %18), !dbg !2379
  %19 = load %struct.hash_entry** %cursor, align 8, !dbg !2381
  br i1 %call7, label %if.then8, label %for.inc, !dbg !2379

if.then8:                                         ; preds = %for.body
  %data9 = getelementptr inbounds %struct.hash_entry* %19, i32 0, i32 0, !dbg !2381
  %20 = load i8** %data9, align 8, !dbg !2381
  store i8* %20, i8** %retval, !dbg !2381
  br label %return, !dbg !2381

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.hash_entry* %19, i32 0, i32 1, !dbg !2377
  %21 = load %struct.hash_entry** %next, align 8, !dbg !2377
  store %struct.hash_entry* %21, %struct.hash_entry** %cursor, align 8, !dbg !2377
  br label %for.cond, !dbg !2377

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, !dbg !2382
  br label %return, !dbg !2382

return:                                           ; preds = %for.end, %if.then8, %if.then4
  %22 = load i8** %retval, !dbg !2383
  ret i8* %22, !dbg !2383
}

; Function Attrs: nounwind uwtable
define i8* @hash_get_first(%struct.hash_table* %table) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2384
  %n_entries = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 4, !dbg !2384
  %1 = load i64* %n_entries, align 8, !dbg !2384
  %cmp = icmp eq i64 %1, 0, !dbg !2384
  br i1 %cmp, label %if.then, label %if.end, !dbg !2384

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, !dbg !2386
  br label %return, !dbg !2386

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !2387
  %bucket1 = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 0, !dbg !2387
  %3 = load %struct.hash_entry** %bucket1, align 8, !dbg !2387
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !2387
  br label %for.cond, !dbg !2387

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry** %bucket, align 8, !dbg !2389
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !2389
  %bucket_limit = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 1, !dbg !2389
  %6 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !2389
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !2389
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !2389

if.then3:                                         ; preds = %for.cond
  call void @abort() #17, !dbg !2391
  unreachable, !dbg !2391

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !2392
  %data = getelementptr inbounds %struct.hash_entry* %7, i32 0, i32 0, !dbg !2392
  %8 = load i8** %data, align 8, !dbg !2392
  %tobool = icmp ne i8* %8, null, !dbg !2392
  %9 = load %struct.hash_entry** %bucket, align 8, !dbg !2394
  br i1 %tobool, label %if.then4, label %for.inc, !dbg !2392

if.then4:                                         ; preds = %if.else
  %data5 = getelementptr inbounds %struct.hash_entry* %9, i32 0, i32 0, !dbg !2394
  %10 = load i8** %data5, align 8, !dbg !2394
  store i8* %10, i8** %retval, !dbg !2394
  br label %return, !dbg !2394

for.inc:                                          ; preds = %if.else
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %9, i32 1, !dbg !2387
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2387
  br label %for.cond, !dbg !2387

return:                                           ; preds = %if.then4, %if.then
  %11 = load i8** %retval, !dbg !2395
  ret i8* %11, !dbg !2395
}

; Function Attrs: nounwind uwtable
define i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8* %entry1, i8** %entry.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2396
  %bucket2 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !2396
  %1 = load %struct.hash_entry** %bucket2, align 8, !dbg !2396
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !2397
  %hasher = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 6, !dbg !2397
  %3 = load i64 (i8*, i64)** %hasher, align 8, !dbg !2397
  %4 = load i8** %entry.addr, align 8, !dbg !2397
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !2397
  %n_buckets = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 2, !dbg !2397
  %6 = load i64* %n_buckets, align 8, !dbg !2397
  %call = call i64 %3(i8* %4, i64 %6), !dbg !2397
  %add.ptr = getelementptr inbounds %struct.hash_entry* %1, i64 %call, !dbg !2397
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2397
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !2398
  %8 = load %struct.hash_table** %table.addr, align 8, !dbg !2398
  %bucket_limit = getelementptr inbounds %struct.hash_table* %8, i32 0, i32 1, !dbg !2398
  %9 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !2398
  %cmp = icmp ult %struct.hash_entry* %7, %9, !dbg !2398
  br i1 %cmp, label %if.end, label %if.then, !dbg !2398

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !2400
  unreachable, !dbg !2400

if.end:                                           ; preds = %entry
  %10 = load %struct.hash_entry** %bucket, align 8, !dbg !2401
  store %struct.hash_entry* %10, %struct.hash_entry** %cursor, align 8, !dbg !2401
  br label %for.cond, !dbg !2401

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load %struct.hash_entry** %cursor, align 8, !dbg !2401
  %tobool = icmp ne %struct.hash_entry* %11, null, !dbg !2401
  br i1 %tobool, label %for.body, label %while.cond, !dbg !2401

for.body:                                         ; preds = %for.cond
  %12 = load %struct.hash_entry** %cursor, align 8, !dbg !2403
  %data = getelementptr inbounds %struct.hash_entry* %12, i32 0, i32 0, !dbg !2403
  %13 = load i8** %data, align 8, !dbg !2403
  %14 = load i8** %entry.addr, align 8, !dbg !2403
  %cmp3 = icmp eq i8* %13, %14, !dbg !2403
  br i1 %cmp3, label %land.lhs.true, label %for.inc, !dbg !2403

land.lhs.true:                                    ; preds = %for.body
  %15 = load %struct.hash_entry** %cursor, align 8, !dbg !2403
  %next = getelementptr inbounds %struct.hash_entry* %15, i32 0, i32 1, !dbg !2403
  %16 = load %struct.hash_entry** %next, align 8, !dbg !2403
  %tobool4 = icmp ne %struct.hash_entry* %16, null, !dbg !2403
  br i1 %tobool4, label %if.then5, label %for.inc, !dbg !2403

if.then5:                                         ; preds = %land.lhs.true
  %17 = load %struct.hash_entry** %cursor, align 8, !dbg !2405
  %next6 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 1, !dbg !2405
  %18 = load %struct.hash_entry** %next6, align 8, !dbg !2405
  %data7 = getelementptr inbounds %struct.hash_entry* %18, i32 0, i32 0, !dbg !2405
  %19 = load i8** %data7, align 8, !dbg !2405
  store i8* %19, i8** %retval, !dbg !2405
  br label %return, !dbg !2405

for.inc:                                          ; preds = %for.body, %land.lhs.true
  %20 = load %struct.hash_entry** %cursor, align 8, !dbg !2401
  %next9 = getelementptr inbounds %struct.hash_entry* %20, i32 0, i32 1, !dbg !2401
  %21 = load %struct.hash_entry** %next9, align 8, !dbg !2401
  store %struct.hash_entry* %21, %struct.hash_entry** %cursor, align 8, !dbg !2401
  br label %for.cond, !dbg !2401

while.cond:                                       ; preds = %while.body, %for.cond
  %22 = load %struct.hash_entry** %bucket, align 8, !dbg !2406
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %22, i32 1, !dbg !2406
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2406
  %23 = load %struct.hash_table** %table.addr, align 8, !dbg !2406
  %bucket_limit10 = getelementptr inbounds %struct.hash_table* %23, i32 0, i32 1, !dbg !2406
  %24 = load %struct.hash_entry** %bucket_limit10, align 8, !dbg !2406
  %cmp11 = icmp ult %struct.hash_entry* %incdec.ptr, %24, !dbg !2406
  br i1 %cmp11, label %while.body, label %while.end, !dbg !2406

while.body:                                       ; preds = %while.cond
  %25 = load %struct.hash_entry** %bucket, align 8, !dbg !2407
  %data12 = getelementptr inbounds %struct.hash_entry* %25, i32 0, i32 0, !dbg !2407
  %26 = load i8** %data12, align 8, !dbg !2407
  %tobool13 = icmp ne i8* %26, null, !dbg !2407
  br i1 %tobool13, label %if.then14, label %while.cond, !dbg !2407

if.then14:                                        ; preds = %while.body
  %27 = load %struct.hash_entry** %bucket, align 8, !dbg !2409
  %data15 = getelementptr inbounds %struct.hash_entry* %27, i32 0, i32 0, !dbg !2409
  %28 = load i8** %data15, align 8, !dbg !2409
  store i8* %28, i8** %retval, !dbg !2409
  br label %return, !dbg !2409

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, !dbg !2410
  br label %return, !dbg !2410

return:                                           ; preds = %while.end, %if.then14, %if.then5
  %29 = load i8** %retval, !dbg !2411
  ret i8* %29, !dbg !2411
}

; Function Attrs: nounwind uwtable
define i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #0 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8** %buffer, i8*** %buffer.addr, align 8
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  store i64 0, i64* %counter, align 8, !dbg !2412
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2413
  %bucket1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !2413
  %1 = load %struct.hash_entry** %bucket1, align 8, !dbg !2413
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !2413
  br label %for.cond, !dbg !2413

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry** %bucket, align 8, !dbg !2413
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !2413
  %bucket_limit = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 1, !dbg !2413
  %4 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !2413
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !2413
  br i1 %cmp, label %for.body, label %for.end10, !dbg !2413

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !2415
  %data = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !2415
  %6 = load i8** %data, align 8, !dbg !2415
  %tobool = icmp ne i8* %6, null, !dbg !2415
  br i1 %tobool, label %if.then, label %for.inc9, !dbg !2415

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !2418
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !2418
  br label %for.cond2, !dbg !2418

for.cond2:                                        ; preds = %if.end, %if.then
  %8 = load %struct.hash_entry** %cursor, align 8, !dbg !2418
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !2418
  br i1 %tobool3, label %for.body4, label %for.inc9, !dbg !2418

for.body4:                                        ; preds = %for.cond2
  %9 = load i64* %counter, align 8, !dbg !2421
  %10 = load i64* %buffer_size.addr, align 8, !dbg !2421
  %cmp5 = icmp uge i64 %9, %10, !dbg !2421
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !2421

if.then6:                                         ; preds = %for.body4
  %11 = load i64* %counter, align 8, !dbg !2424
  store i64 %11, i64* %retval, !dbg !2424
  br label %return, !dbg !2424

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry** %cursor, align 8, !dbg !2425
  %data7 = getelementptr inbounds %struct.hash_entry* %12, i32 0, i32 0, !dbg !2425
  %13 = load i8** %data7, align 8, !dbg !2425
  %14 = load i64* %counter, align 8, !dbg !2425
  %inc = add i64 %14, 1, !dbg !2425
  store i64 %inc, i64* %counter, align 8, !dbg !2425
  %15 = load i8*** %buffer.addr, align 8, !dbg !2425
  %arrayidx = getelementptr inbounds i8** %15, i64 %14, !dbg !2425
  store i8* %13, i8** %arrayidx, align 8, !dbg !2425
  %16 = load %struct.hash_entry** %cursor, align 8, !dbg !2418
  %next = getelementptr inbounds %struct.hash_entry* %16, i32 0, i32 1, !dbg !2418
  %17 = load %struct.hash_entry** %next, align 8, !dbg !2418
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !2418
  br label %for.cond2, !dbg !2418

for.inc9:                                         ; preds = %for.body, %for.cond2
  %18 = load %struct.hash_entry** %bucket, align 8, !dbg !2413
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %18, i32 1, !dbg !2413
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2413
  br label %for.cond, !dbg !2413

for.end10:                                        ; preds = %for.cond
  %19 = load i64* %counter, align 8, !dbg !2426
  store i64 %19, i64* %retval, !dbg !2426
  br label %return, !dbg !2426

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64* %retval, !dbg !2427
  ret i64 %20, !dbg !2427
}

; Function Attrs: nounwind uwtable
define i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #0 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8
  store i8* %processor_data, i8** %processor_data.addr, align 8
  store i64 0, i64* %counter, align 8, !dbg !2428
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2429
  %bucket1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !2429
  %1 = load %struct.hash_entry** %bucket1, align 8, !dbg !2429
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !2429
  br label %for.cond, !dbg !2429

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry** %bucket, align 8, !dbg !2429
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !2429
  %bucket_limit = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 1, !dbg !2429
  %4 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !2429
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !2429
  br i1 %cmp, label %for.body, label %for.end9, !dbg !2429

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !2431
  %data = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !2431
  %6 = load i8** %data, align 8, !dbg !2431
  %tobool = icmp ne i8* %6, null, !dbg !2431
  br i1 %tobool, label %if.then, label %for.inc8, !dbg !2431

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !2434
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !2434
  br label %for.cond2, !dbg !2434

for.cond2:                                        ; preds = %if.end, %if.then
  %8 = load %struct.hash_entry** %cursor, align 8, !dbg !2434
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !2434
  br i1 %tobool3, label %for.body4, label %for.inc8, !dbg !2434

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)** %processor.addr, align 8, !dbg !2437
  %10 = load %struct.hash_entry** %cursor, align 8, !dbg !2437
  %data5 = getelementptr inbounds %struct.hash_entry* %10, i32 0, i32 0, !dbg !2437
  %11 = load i8** %data5, align 8, !dbg !2437
  %12 = load i8** %processor_data.addr, align 8, !dbg !2437
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !2437
  %13 = load i64* %counter, align 8, !dbg !2440
  br i1 %call, label %if.end, label %if.then6, !dbg !2437

if.then6:                                         ; preds = %for.body4
  store i64 %13, i64* %retval, !dbg !2441
  br label %return, !dbg !2441

if.end:                                           ; preds = %for.body4
  %inc = add i64 %13, 1, !dbg !2440
  store i64 %inc, i64* %counter, align 8, !dbg !2440
  %14 = load %struct.hash_entry** %cursor, align 8, !dbg !2434
  %next = getelementptr inbounds %struct.hash_entry* %14, i32 0, i32 1, !dbg !2434
  %15 = load %struct.hash_entry** %next, align 8, !dbg !2434
  store %struct.hash_entry* %15, %struct.hash_entry** %cursor, align 8, !dbg !2434
  br label %for.cond2, !dbg !2434

for.inc8:                                         ; preds = %for.body, %for.cond2
  %16 = load %struct.hash_entry** %bucket, align 8, !dbg !2429
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %16, i32 1, !dbg !2429
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2429
  br label %for.cond, !dbg !2429

for.end9:                                         ; preds = %for.cond
  %17 = load i64* %counter, align 8, !dbg !2442
  store i64 %17, i64* %retval, !dbg !2442
  br label %return, !dbg !2442

return:                                           ; preds = %for.end9, %if.then6
  %18 = load i64* %retval, !dbg !2443
  ret i64 %18, !dbg !2443
}

; Function Attrs: nounwind uwtable
define i64 @hash_string(i8* %string, i64 %n_buckets) #0 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8
  %ch = alloca i8, align 1
  store i8* %string, i8** %string.addr, align 8
  store i64 %n_buckets, i64* %n_buckets.addr, align 8
  store i64 0, i64* %value, align 8, !dbg !2444
  br label %for.cond, !dbg !2445

for.cond:                                         ; preds = %for.body, %entry
  %0 = load i8** %string.addr, align 8, !dbg !2445
  %1 = load i8* %0, align 1, !dbg !2445
  store i8 %1, i8* %ch, align 1, !dbg !2445
  %tobool = icmp ne i8 %1, 0, !dbg !2445
  %2 = load i64* %value, align 8, !dbg !2447
  br i1 %tobool, label %for.body, label %for.end, !dbg !2445

for.body:                                         ; preds = %for.cond
  %mul = mul i64 %2, 31, !dbg !2447
  %3 = load i8* %ch, align 1, !dbg !2447
  %conv = zext i8 %3 to i64, !dbg !2447
  %add = add i64 %mul, %conv, !dbg !2447
  %4 = load i64* %n_buckets.addr, align 8, !dbg !2447
  %int_cast_to_i64 = bitcast i64 %4 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !2447
  %rem = urem i64 %add, %4, !dbg !2447
  store i64 %rem, i64* %value, align 8, !dbg !2447
  %5 = load i8** %string.addr, align 8, !dbg !2445
  %incdec.ptr = getelementptr inbounds i8* %5, i32 1, !dbg !2445
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !2445
  br label %for.cond, !dbg !2445

for.end:                                          ; preds = %for.cond
  ret i64 %2, !dbg !2448
}

; Function Attrs: nounwind uwtable
define void @hash_reset_tuning(%struct.hash_tuning* %tuning) #0 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  %0 = load %struct.hash_tuning** %tuning.addr, align 8, !dbg !2449
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !2449
  %2 = call i8* @memcpy(i8* %1, i8* bitcast ({ float, float, float, float, i8, [3 x i8] }* @default_tuning to i8*), i64 20)
  ret void, !dbg !2450
}

; Function Attrs: nounwind uwtable
define %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #0 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8
  %new_candidate = alloca float, align 4
  store i64 %candidate, i64* %candidate.addr, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8
  %0 = load i64 (i8*, i64)** %hasher.addr, align 8, !dbg !2451
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !2451
  %1 = load i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !2451
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !2451
  %or.cond = or i1 %cmp, %cmp1, !dbg !2451
  br i1 %or.cond, label %if.then, label %if.end, !dbg !2451

if.then:                                          ; preds = %entry
  store %struct.hash_table* null, %struct.hash_table** %retval, !dbg !2453
  br label %return, !dbg !2453

if.end:                                           ; preds = %entry
  %call = call noalias i8* @malloc(i64 80) #9, !dbg !2454
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !2454
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !2454
  %3 = load %struct.hash_table** %table, align 8, !dbg !2455
  %cmp2 = icmp eq %struct.hash_table* %3, null, !dbg !2455
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2455

if.then3:                                         ; preds = %if.end
  store %struct.hash_table* null, %struct.hash_table** %retval, !dbg !2457
  br label %return, !dbg !2457

if.end4:                                          ; preds = %if.end
  %4 = load %struct.hash_tuning** %tuning.addr, align 8, !dbg !2458
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !2458
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !2458

if.then5:                                         ; preds = %if.end4
  store %struct.hash_tuning* bitcast ({ float, float, float, float, i8, [3 x i8] }* @default_tuning to %struct.hash_tuning*), %struct.hash_tuning** %tuning.addr, align 8, !dbg !2460
  br label %if.end6, !dbg !2460

if.end6:                                          ; preds = %if.then5, %if.end4
  %5 = load %struct.hash_tuning** %tuning.addr, align 8, !dbg !2461
  %6 = load %struct.hash_table** %table, align 8, !dbg !2461
  %tuning7 = getelementptr inbounds %struct.hash_table* %6, i32 0, i32 5, !dbg !2461
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning7, align 8, !dbg !2461
  %7 = load %struct.hash_table** %table, align 8, !dbg !2462
  %call8 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !2462
  br i1 %call8, label %if.end10, label %fail, !dbg !2462

if.end10:                                         ; preds = %if.end6
  %8 = load %struct.hash_tuning** %tuning.addr, align 8, !dbg !2464
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning* %8, i32 0, i32 4, !dbg !2464
  %9 = load i8* %is_n_buckets, align 1, !dbg !2464
  %tobool11 = trunc i8 %9 to i1, !dbg !2464
  br i1 %tobool11, label %if.end18, label %if.then12, !dbg !2464

if.then12:                                        ; preds = %if.end10
  %10 = load i64* %candidate.addr, align 8, !dbg !2466
  %conv = uitofp i64 %10 to float, !dbg !2466
  %11 = load %struct.hash_tuning** %tuning.addr, align 8, !dbg !2466
  %growth_threshold = getelementptr inbounds %struct.hash_tuning* %11, i32 0, i32 2, !dbg !2466
  %12 = load float* %growth_threshold, align 4, !dbg !2466
  %div = fdiv float %conv, %12, !dbg !2466
  store float %div, float* %new_candidate, align 4, !dbg !2466
  %13 = load float* %new_candidate, align 4, !dbg !2468
  %cmp13 = fcmp ole float 0x43F0000000000000, %13, !dbg !2468
  br i1 %cmp13, label %fail, label %if.end16, !dbg !2468

if.end16:                                         ; preds = %if.then12
  %14 = load float* %new_candidate, align 4, !dbg !2470
  %conv17 = fptoui float %14 to i64, !dbg !2470
  store i64 %conv17, i64* %candidate.addr, align 8, !dbg !2470
  br label %if.end18, !dbg !2471

if.end18:                                         ; preds = %if.end16, %if.end10
  %15 = load i64* %candidate.addr, align 8, !dbg !2472
  %cmp19 = icmp ult i64 1152921504606846975, %15, !dbg !2472
  br i1 %cmp19, label %fail, label %if.end22, !dbg !2472

if.end22:                                         ; preds = %if.end18
  %16 = load i64* %candidate.addr, align 8, !dbg !2474
  %call23 = call i64 @next_prime(i64 %16), !dbg !2474
  %17 = load %struct.hash_table** %table, align 8, !dbg !2474
  %n_buckets = getelementptr inbounds %struct.hash_table* %17, i32 0, i32 2, !dbg !2474
  store i64 %call23, i64* %n_buckets, align 8, !dbg !2474
  %18 = load %struct.hash_table** %table, align 8, !dbg !2475
  %n_buckets24 = getelementptr inbounds %struct.hash_table* %18, i32 0, i32 2, !dbg !2475
  %19 = load i64* %n_buckets24, align 8, !dbg !2475
  %cmp25 = icmp ult i64 1152921504606846975, %19, !dbg !2475
  br i1 %cmp25, label %fail, label %if.end28, !dbg !2475

if.end28:                                         ; preds = %if.end22
  %20 = load %struct.hash_table** %table, align 8, !dbg !2477
  %n_buckets29 = getelementptr inbounds %struct.hash_table* %20, i32 0, i32 2, !dbg !2477
  %21 = load i64* %n_buckets29, align 8, !dbg !2477
  %call30 = call noalias i8* @calloc(i64 %21, i64 16) #9, !dbg !2477
  %22 = bitcast i8* %call30 to %struct.hash_entry*, !dbg !2477
  %23 = load %struct.hash_table** %table, align 8, !dbg !2477
  %bucket = getelementptr inbounds %struct.hash_table* %23, i32 0, i32 0, !dbg !2477
  store %struct.hash_entry* %22, %struct.hash_entry** %bucket, align 8, !dbg !2477
  %24 = load %struct.hash_table** %table, align 8, !dbg !2478
  %bucket31 = getelementptr inbounds %struct.hash_table* %24, i32 0, i32 0, !dbg !2478
  %25 = load %struct.hash_entry** %bucket31, align 8, !dbg !2478
  %26 = load %struct.hash_table** %table, align 8, !dbg !2478
  %n_buckets32 = getelementptr inbounds %struct.hash_table* %26, i32 0, i32 2, !dbg !2478
  %27 = load i64* %n_buckets32, align 8, !dbg !2478
  %add.ptr = getelementptr inbounds %struct.hash_entry* %25, i64 %27, !dbg !2478
  %28 = load %struct.hash_table** %table, align 8, !dbg !2478
  %bucket_limit = getelementptr inbounds %struct.hash_table* %28, i32 0, i32 1, !dbg !2478
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !2478
  %29 = load %struct.hash_table** %table, align 8, !dbg !2479
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %29, i32 0, i32 3, !dbg !2479
  store i64 0, i64* %n_buckets_used, align 8, !dbg !2479
  %30 = load %struct.hash_table** %table, align 8, !dbg !2480
  %n_entries = getelementptr inbounds %struct.hash_table* %30, i32 0, i32 4, !dbg !2480
  store i64 0, i64* %n_entries, align 8, !dbg !2480
  %31 = load i64 (i8*, i64)** %hasher.addr, align 8, !dbg !2481
  %32 = load %struct.hash_table** %table, align 8, !dbg !2481
  %hasher33 = getelementptr inbounds %struct.hash_table* %32, i32 0, i32 6, !dbg !2481
  store i64 (i8*, i64)* %31, i64 (i8*, i64)** %hasher33, align 8, !dbg !2481
  %33 = load i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !2482
  %34 = load %struct.hash_table** %table, align 8, !dbg !2482
  %comparator34 = getelementptr inbounds %struct.hash_table* %34, i32 0, i32 7, !dbg !2482
  store i1 (i8*, i8*)* %33, i1 (i8*, i8*)** %comparator34, align 8, !dbg !2482
  %35 = load void (i8*)** %data_freer.addr, align 8, !dbg !2483
  %36 = load %struct.hash_table** %table, align 8, !dbg !2483
  %data_freer35 = getelementptr inbounds %struct.hash_table* %36, i32 0, i32 8, !dbg !2483
  store void (i8*)* %35, void (i8*)** %data_freer35, align 8, !dbg !2483
  %37 = load %struct.hash_table** %table, align 8, !dbg !2484
  %free_entry_list = getelementptr inbounds %struct.hash_table* %37, i32 0, i32 9, !dbg !2484
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !2484
  %38 = load %struct.hash_table** %table, align 8, !dbg !2485
  store %struct.hash_table* %38, %struct.hash_table** %retval, !dbg !2485
  br label %return, !dbg !2485

fail:                                             ; preds = %if.end22, %if.end18, %if.then12, %if.end6
  %39 = load %struct.hash_table** %table, align 8, !dbg !2486
  %40 = bitcast %struct.hash_table* %39 to i8*, !dbg !2486
  call void @free(i8* %40) #9, !dbg !2486
  store %struct.hash_table* null, %struct.hash_table** %retval, !dbg !2487
  br label %return, !dbg !2487

return:                                           ; preds = %fail, %if.end28, %if.then3, %if.then
  %41 = load %struct.hash_table** %retval, !dbg !2488
  ret %struct.hash_table* %41, !dbg !2488
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #4

; Function Attrs: nounwind uwtable
define void @hash_clear(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  %next = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2489
  %bucket1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !2489
  %1 = load %struct.hash_entry** %bucket1, align 8, !dbg !2489
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !2489
  br label %for.cond, !dbg !2489

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry** %bucket, align 8, !dbg !2489
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !2489
  %bucket_limit = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 1, !dbg !2489
  %4 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !2489
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !2489
  br i1 %cmp, label %for.body, label %for.end24, !dbg !2489

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !2491
  %data = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !2491
  %6 = load i8** %data, align 8, !dbg !2491
  %tobool = icmp ne i8* %6, null, !dbg !2491
  br i1 %tobool, label %if.then, label %for.inc23, !dbg !2491

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !2494
  %next2 = getelementptr inbounds %struct.hash_entry* %7, i32 0, i32 1, !dbg !2494
  %8 = load %struct.hash_entry** %next2, align 8, !dbg !2494
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !2494
  br label %for.cond3, !dbg !2494

for.cond3:                                        ; preds = %if.end, %if.then
  %9 = load %struct.hash_entry** %cursor, align 8, !dbg !2494
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !2494
  %10 = load %struct.hash_table** %table.addr, align 8, !dbg !2497
  %data_freer = getelementptr inbounds %struct.hash_table* %10, i32 0, i32 8, !dbg !2497
  %11 = load void (i8*)** %data_freer, align 8, !dbg !2497
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !2497
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !2494

for.body5:                                        ; preds = %for.cond3
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !2497

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table** %table.addr, align 8, !dbg !2500
  %data_freer8 = getelementptr inbounds %struct.hash_table* %12, i32 0, i32 8, !dbg !2500
  %13 = load void (i8*)** %data_freer8, align 8, !dbg !2500
  %14 = load %struct.hash_entry** %cursor, align 8, !dbg !2500
  %data9 = getelementptr inbounds %struct.hash_entry* %14, i32 0, i32 0, !dbg !2500
  %15 = load i8** %data9, align 8, !dbg !2500
  call void %13(i8* %15), !dbg !2500
  br label %if.end, !dbg !2500

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry** %cursor, align 8, !dbg !2501
  %data10 = getelementptr inbounds %struct.hash_entry* %16, i32 0, i32 0, !dbg !2501
  store i8* null, i8** %data10, align 8, !dbg !2501
  %17 = load %struct.hash_entry** %cursor, align 8, !dbg !2502
  %next11 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 1, !dbg !2502
  %18 = load %struct.hash_entry** %next11, align 8, !dbg !2502
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !2502
  %19 = load %struct.hash_table** %table.addr, align 8, !dbg !2503
  %free_entry_list = getelementptr inbounds %struct.hash_table* %19, i32 0, i32 9, !dbg !2503
  %20 = load %struct.hash_entry** %free_entry_list, align 8, !dbg !2503
  %21 = load %struct.hash_entry** %cursor, align 8, !dbg !2503
  %next12 = getelementptr inbounds %struct.hash_entry* %21, i32 0, i32 1, !dbg !2503
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !2503
  %22 = load %struct.hash_entry** %cursor, align 8, !dbg !2504
  %23 = load %struct.hash_table** %table.addr, align 8, !dbg !2504
  %free_entry_list13 = getelementptr inbounds %struct.hash_table* %23, i32 0, i32 9, !dbg !2504
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !2504
  %24 = load %struct.hash_entry** %next, align 8, !dbg !2494
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !2494
  br label %for.cond3, !dbg !2494

for.end:                                          ; preds = %for.cond3
  br i1 %tobool6, label %if.then16, label %if.end19, !dbg !2505

if.then16:                                        ; preds = %for.end
  %25 = load %struct.hash_table** %table.addr, align 8, !dbg !2507
  %data_freer17 = getelementptr inbounds %struct.hash_table* %25, i32 0, i32 8, !dbg !2507
  %26 = load void (i8*)** %data_freer17, align 8, !dbg !2507
  %27 = load %struct.hash_entry** %bucket, align 8, !dbg !2507
  %data18 = getelementptr inbounds %struct.hash_entry* %27, i32 0, i32 0, !dbg !2507
  %28 = load i8** %data18, align 8, !dbg !2507
  call void %26(i8* %28), !dbg !2507
  br label %if.end19, !dbg !2507

if.end19:                                         ; preds = %if.then16, %for.end
  %29 = load %struct.hash_entry** %bucket, align 8, !dbg !2508
  %data20 = getelementptr inbounds %struct.hash_entry* %29, i32 0, i32 0, !dbg !2508
  store i8* null, i8** %data20, align 8, !dbg !2508
  %30 = load %struct.hash_entry** %bucket, align 8, !dbg !2509
  %next21 = getelementptr inbounds %struct.hash_entry* %30, i32 0, i32 1, !dbg !2509
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !2509
  br label %for.inc23, !dbg !2510

for.inc23:                                        ; preds = %for.body, %if.end19
  %31 = load %struct.hash_entry** %bucket, align 8, !dbg !2489
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %31, i32 1, !dbg !2489
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2489
  br label %for.cond, !dbg !2489

for.end24:                                        ; preds = %for.cond
  %32 = load %struct.hash_table** %table.addr, align 8, !dbg !2511
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %32, i32 0, i32 3, !dbg !2511
  store i64 0, i64* %n_buckets_used, align 8, !dbg !2511
  %33 = load %struct.hash_table** %table.addr, align 8, !dbg !2512
  %n_entries = getelementptr inbounds %struct.hash_table* %33, i32 0, i32 4, !dbg !2512
  store i64 0, i64* %n_entries, align 8, !dbg !2512
  ret void, !dbg !2513
}

; Function Attrs: nounwind uwtable
define void @hash_free(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  %next = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2514
  %data_freer = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 8, !dbg !2514
  %1 = load void (i8*)** %data_freer, align 8, !dbg !2514
  %tobool = icmp ne void (i8*)* %1, null, !dbg !2514
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !2514

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !2514
  %n_entries = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 4, !dbg !2514
  %3 = load i64* %n_entries, align 8, !dbg !2514
  %tobool1 = icmp ne i64 %3, 0, !dbg !2514
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !2514

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table** %table.addr, align 8, !dbg !2516
  %bucket2 = getelementptr inbounds %struct.hash_table* %4, i32 0, i32 0, !dbg !2516
  %5 = load %struct.hash_entry** %bucket2, align 8, !dbg !2516
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !2516
  br label %for.cond, !dbg !2516

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry** %bucket, align 8, !dbg !2516
  %7 = load %struct.hash_table** %table.addr, align 8, !dbg !2516
  %bucket_limit = getelementptr inbounds %struct.hash_table* %7, i32 0, i32 1, !dbg !2516
  %8 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !2516
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !2516
  br i1 %cmp, label %for.body, label %if.end13, !dbg !2516

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry** %bucket, align 8, !dbg !2519
  %data = getelementptr inbounds %struct.hash_entry* %9, i32 0, i32 0, !dbg !2519
  %10 = load i8** %data, align 8, !dbg !2519
  %tobool3 = icmp ne i8* %10, null, !dbg !2519
  br i1 %tobool3, label %if.then4, label %for.inc11, !dbg !2519

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry** %bucket, align 8, !dbg !2522
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !2522
  br label %for.cond5, !dbg !2522

for.cond5:                                        ; preds = %for.body7, %if.then4
  %12 = load %struct.hash_entry** %cursor, align 8, !dbg !2522
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !2522
  br i1 %tobool6, label %for.body7, label %for.inc11, !dbg !2522

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table** %table.addr, align 8, !dbg !2525
  %data_freer8 = getelementptr inbounds %struct.hash_table* %13, i32 0, i32 8, !dbg !2525
  %14 = load void (i8*)** %data_freer8, align 8, !dbg !2525
  %15 = load %struct.hash_entry** %cursor, align 8, !dbg !2525
  %data9 = getelementptr inbounds %struct.hash_entry* %15, i32 0, i32 0, !dbg !2525
  %16 = load i8** %data9, align 8, !dbg !2525
  call void %14(i8* %16), !dbg !2525
  %17 = load %struct.hash_entry** %cursor, align 8, !dbg !2522
  %next10 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 1, !dbg !2522
  %18 = load %struct.hash_entry** %next10, align 8, !dbg !2522
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !2522
  br label %for.cond5, !dbg !2522

for.inc11:                                        ; preds = %for.body, %for.cond5
  %19 = load %struct.hash_entry** %bucket, align 8, !dbg !2516
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %19, i32 1, !dbg !2516
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2516
  br label %for.cond, !dbg !2516

if.end13:                                         ; preds = %for.cond, %land.lhs.true, %entry
  %20 = load %struct.hash_table** %table.addr, align 8, !dbg !2527
  %bucket14 = getelementptr inbounds %struct.hash_table* %20, i32 0, i32 0, !dbg !2527
  %21 = load %struct.hash_entry** %bucket14, align 8, !dbg !2527
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !2527
  br label %for.cond15, !dbg !2527

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry** %bucket, align 8, !dbg !2527
  %23 = load %struct.hash_table** %table.addr, align 8, !dbg !2527
  %bucket_limit16 = getelementptr inbounds %struct.hash_table* %23, i32 0, i32 1, !dbg !2527
  %24 = load %struct.hash_entry** %bucket_limit16, align 8, !dbg !2527
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !2527
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !2527

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry** %bucket, align 8, !dbg !2529
  %next19 = getelementptr inbounds %struct.hash_entry* %25, i32 0, i32 1, !dbg !2529
  %26 = load %struct.hash_entry** %next19, align 8, !dbg !2529
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !2529
  br label %for.cond20, !dbg !2529

for.cond20:                                       ; preds = %for.body22, %for.body18
  %27 = load %struct.hash_entry** %cursor, align 8, !dbg !2529
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !2529
  br i1 %tobool21, label %for.body22, label %for.inc26, !dbg !2529

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry** %cursor, align 8, !dbg !2532
  %next23 = getelementptr inbounds %struct.hash_entry* %28, i32 0, i32 1, !dbg !2532
  %29 = load %struct.hash_entry** %next23, align 8, !dbg !2532
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !2532
  %30 = load %struct.hash_entry** %cursor, align 8, !dbg !2534
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !2534
  call void @free(i8* %31) #9, !dbg !2534
  %32 = load %struct.hash_entry** %next, align 8, !dbg !2529
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !2529
  br label %for.cond20, !dbg !2529

for.inc26:                                        ; preds = %for.cond20
  %33 = load %struct.hash_entry** %bucket, align 8, !dbg !2527
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry* %33, i32 1, !dbg !2527
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !2527
  br label %for.cond15, !dbg !2527

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table** %table.addr, align 8, !dbg !2535
  %free_entry_list = getelementptr inbounds %struct.hash_table* %34, i32 0, i32 9, !dbg !2535
  %35 = load %struct.hash_entry** %free_entry_list, align 8, !dbg !2535
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !2535
  br label %for.cond29, !dbg !2535

for.cond29:                                       ; preds = %for.body31, %for.end28
  %36 = load %struct.hash_entry** %cursor, align 8, !dbg !2535
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !2535
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !2535

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry** %cursor, align 8, !dbg !2537
  %next32 = getelementptr inbounds %struct.hash_entry* %37, i32 0, i32 1, !dbg !2537
  %38 = load %struct.hash_entry** %next32, align 8, !dbg !2537
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !2537
  %39 = load %struct.hash_entry** %cursor, align 8, !dbg !2539
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !2539
  call void @free(i8* %40) #9, !dbg !2539
  %41 = load %struct.hash_entry** %next, align 8, !dbg !2535
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !2535
  br label %for.cond29, !dbg !2535

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table** %table.addr, align 8, !dbg !2540
  %bucket35 = getelementptr inbounds %struct.hash_table* %42, i32 0, i32 0, !dbg !2540
  %43 = load %struct.hash_entry** %bucket35, align 8, !dbg !2540
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !2540
  call void @free(i8* %44) #9, !dbg !2540
  %45 = load %struct.hash_table** %table.addr, align 8, !dbg !2541
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !2541
  call void @free(i8* %46) #9, !dbg !2541
  ret void, !dbg !2542
}

; Function Attrs: nounwind uwtable
define zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #0 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %new_table = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  %next = alloca %struct.hash_entry*, align 8
  %data8 = alloca i8*, align 8
  %new_bucket = alloca %struct.hash_entry*, align 8
  %new_entry = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i64 %candidate, i64* %candidate.addr, align 8
  %0 = load i64* %candidate.addr, align 8, !dbg !2543
  %1 = load %struct.hash_table** %table.addr, align 8, !dbg !2543
  %tuning = getelementptr inbounds %struct.hash_table* %1, i32 0, i32 5, !dbg !2543
  %2 = load %struct.hash_tuning** %tuning, align 8, !dbg !2543
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !2543
  %hasher = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 6, !dbg !2543
  %4 = load i64 (i8*, i64)** %hasher, align 8, !dbg !2543
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !2543
  %comparator = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 7, !dbg !2543
  %6 = load i1 (i8*, i8*)** %comparator, align 8, !dbg !2543
  %7 = load %struct.hash_table** %table.addr, align 8, !dbg !2543
  %data_freer = getelementptr inbounds %struct.hash_table* %7, i32 0, i32 8, !dbg !2543
  %8 = load void (i8*)** %data_freer, align 8, !dbg !2543
  %call = call %struct.hash_table* @hash_initialize(i64 %0, %struct.hash_tuning* %2, i64 (i8*, i64)* %4, i1 (i8*, i8*)* %6, void (i8*)* %8), !dbg !2543
  store %struct.hash_table* %call, %struct.hash_table** %new_table, align 8, !dbg !2543
  %9 = load %struct.hash_table** %new_table, align 8, !dbg !2544
  %cmp = icmp eq %struct.hash_table* %9, null, !dbg !2544
  br i1 %cmp, label %if.then, label %if.end, !dbg !2544

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, !dbg !2546
  br label %return, !dbg !2546

if.end:                                           ; preds = %entry
  %10 = load %struct.hash_table** %table.addr, align 8, !dbg !2547
  %free_entry_list = getelementptr inbounds %struct.hash_table* %10, i32 0, i32 9, !dbg !2547
  %11 = load %struct.hash_entry** %free_entry_list, align 8, !dbg !2547
  %12 = load %struct.hash_table** %new_table, align 8, !dbg !2547
  %free_entry_list1 = getelementptr inbounds %struct.hash_table* %12, i32 0, i32 9, !dbg !2547
  store %struct.hash_entry* %11, %struct.hash_entry** %free_entry_list1, align 8, !dbg !2547
  %13 = load %struct.hash_table** %table.addr, align 8, !dbg !2548
  %bucket2 = getelementptr inbounds %struct.hash_table* %13, i32 0, i32 0, !dbg !2548
  %14 = load %struct.hash_entry** %bucket2, align 8, !dbg !2548
  store %struct.hash_entry* %14, %struct.hash_entry** %bucket, align 8, !dbg !2548
  br label %for.cond, !dbg !2548

for.cond:                                         ; preds = %for.inc42, %if.end
  %15 = load %struct.hash_entry** %bucket, align 8, !dbg !2548
  %16 = load %struct.hash_table** %table.addr, align 8, !dbg !2548
  %bucket_limit = getelementptr inbounds %struct.hash_table* %16, i32 0, i32 1, !dbg !2548
  %17 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !2548
  %cmp3 = icmp ult %struct.hash_entry* %15, %17, !dbg !2548
  br i1 %cmp3, label %for.body, label %for.end43, !dbg !2548

for.body:                                         ; preds = %for.cond
  %18 = load %struct.hash_entry** %bucket, align 8, !dbg !2550
  %data = getelementptr inbounds %struct.hash_entry* %18, i32 0, i32 0, !dbg !2550
  %19 = load i8** %data, align 8, !dbg !2550
  %tobool = icmp ne i8* %19, null, !dbg !2550
  br i1 %tobool, label %if.then4, label %for.inc42, !dbg !2550

if.then4:                                         ; preds = %for.body
  %20 = load %struct.hash_entry** %bucket, align 8, !dbg !2552
  store %struct.hash_entry* %20, %struct.hash_entry** %cursor, align 8, !dbg !2552
  br label %for.cond5, !dbg !2552

for.cond5:                                        ; preds = %for.inc, %if.then4
  %21 = load %struct.hash_entry** %cursor, align 8, !dbg !2552
  %tobool6 = icmp ne %struct.hash_entry* %21, null, !dbg !2552
  br i1 %tobool6, label %for.body7, label %for.inc42, !dbg !2552

for.body7:                                        ; preds = %for.cond5
  %22 = load %struct.hash_entry** %cursor, align 8, !dbg !2554
  %data9 = getelementptr inbounds %struct.hash_entry* %22, i32 0, i32 0, !dbg !2554
  %23 = load i8** %data9, align 8, !dbg !2554
  store i8* %23, i8** %data8, align 8, !dbg !2554
  %24 = load %struct.hash_table** %new_table, align 8, !dbg !2556
  %bucket10 = getelementptr inbounds %struct.hash_table* %24, i32 0, i32 0, !dbg !2556
  %25 = load %struct.hash_entry** %bucket10, align 8, !dbg !2556
  %26 = load %struct.hash_table** %new_table, align 8, !dbg !2557
  %hasher11 = getelementptr inbounds %struct.hash_table* %26, i32 0, i32 6, !dbg !2557
  %27 = load i64 (i8*, i64)** %hasher11, align 8, !dbg !2557
  %28 = load i8** %data8, align 8, !dbg !2557
  %29 = load %struct.hash_table** %new_table, align 8, !dbg !2557
  %n_buckets = getelementptr inbounds %struct.hash_table* %29, i32 0, i32 2, !dbg !2557
  %30 = load i64* %n_buckets, align 8, !dbg !2557
  %call12 = call i64 %27(i8* %28, i64 %30), !dbg !2557
  %add.ptr = getelementptr inbounds %struct.hash_entry* %25, i64 %call12, !dbg !2557
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %new_bucket, align 8, !dbg !2557
  %31 = load %struct.hash_entry** %new_bucket, align 8, !dbg !2558
  %32 = load %struct.hash_table** %new_table, align 8, !dbg !2558
  %bucket_limit13 = getelementptr inbounds %struct.hash_table* %32, i32 0, i32 1, !dbg !2558
  %33 = load %struct.hash_entry** %bucket_limit13, align 8, !dbg !2558
  %cmp14 = icmp ult %struct.hash_entry* %31, %33, !dbg !2558
  br i1 %cmp14, label %if.end16, label %if.then15, !dbg !2558

if.then15:                                        ; preds = %for.body7
  call void @abort() #17, !dbg !2560
  unreachable, !dbg !2560

if.end16:                                         ; preds = %for.body7
  %34 = load %struct.hash_entry** %cursor, align 8, !dbg !2561
  %next17 = getelementptr inbounds %struct.hash_entry* %34, i32 0, i32 1, !dbg !2561
  %35 = load %struct.hash_entry** %next17, align 8, !dbg !2561
  store %struct.hash_entry* %35, %struct.hash_entry** %next, align 8, !dbg !2561
  %36 = load %struct.hash_entry** %new_bucket, align 8, !dbg !2562
  %data18 = getelementptr inbounds %struct.hash_entry* %36, i32 0, i32 0, !dbg !2562
  %37 = load i8** %data18, align 8, !dbg !2562
  %tobool19 = icmp ne i8* %37, null, !dbg !2562
  br i1 %tobool19, label %if.then20, label %if.else35, !dbg !2562

if.then20:                                        ; preds = %if.end16
  %38 = load %struct.hash_entry** %cursor, align 8, !dbg !2564
  %39 = load %struct.hash_entry** %bucket, align 8, !dbg !2564
  %cmp21 = icmp eq %struct.hash_entry* %38, %39, !dbg !2564
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !2564

if.then22:                                        ; preds = %if.then20
  %40 = load %struct.hash_table** %new_table, align 8, !dbg !2567
  %call23 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %40), !dbg !2567
  store %struct.hash_entry* %call23, %struct.hash_entry** %new_entry, align 8, !dbg !2567
  %41 = load %struct.hash_entry** %new_entry, align 8, !dbg !2569
  %cmp24 = icmp eq %struct.hash_entry* %41, null, !dbg !2569
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !2569

if.then25:                                        ; preds = %if.then22
  store i1 false, i1* %retval, !dbg !2571
  br label %return, !dbg !2571

if.end26:                                         ; preds = %if.then22
  %42 = load i8** %data8, align 8, !dbg !2572
  %43 = load %struct.hash_entry** %new_entry, align 8, !dbg !2572
  %data27 = getelementptr inbounds %struct.hash_entry* %43, i32 0, i32 0, !dbg !2572
  store i8* %42, i8** %data27, align 8, !dbg !2572
  %44 = load %struct.hash_entry** %new_bucket, align 8, !dbg !2573
  %next28 = getelementptr inbounds %struct.hash_entry* %44, i32 0, i32 1, !dbg !2573
  %45 = load %struct.hash_entry** %next28, align 8, !dbg !2573
  %46 = load %struct.hash_entry** %new_entry, align 8, !dbg !2573
  %next29 = getelementptr inbounds %struct.hash_entry* %46, i32 0, i32 1, !dbg !2573
  store %struct.hash_entry* %45, %struct.hash_entry** %next29, align 8, !dbg !2573
  %47 = load %struct.hash_entry** %new_entry, align 8, !dbg !2574
  %48 = load %struct.hash_entry** %new_bucket, align 8, !dbg !2574
  %next30 = getelementptr inbounds %struct.hash_entry* %48, i32 0, i32 1, !dbg !2574
  store %struct.hash_entry* %47, %struct.hash_entry** %next30, align 8, !dbg !2574
  br label %for.inc, !dbg !2575

if.else:                                          ; preds = %if.then20
  %49 = load %struct.hash_entry** %new_bucket, align 8, !dbg !2576
  %next31 = getelementptr inbounds %struct.hash_entry* %49, i32 0, i32 1, !dbg !2576
  %50 = load %struct.hash_entry** %next31, align 8, !dbg !2576
  %51 = load %struct.hash_entry** %cursor, align 8, !dbg !2576
  %next32 = getelementptr inbounds %struct.hash_entry* %51, i32 0, i32 1, !dbg !2576
  store %struct.hash_entry* %50, %struct.hash_entry** %next32, align 8, !dbg !2576
  %52 = load %struct.hash_entry** %cursor, align 8, !dbg !2578
  %53 = load %struct.hash_entry** %new_bucket, align 8, !dbg !2578
  %next33 = getelementptr inbounds %struct.hash_entry* %53, i32 0, i32 1, !dbg !2578
  store %struct.hash_entry* %52, %struct.hash_entry** %next33, align 8, !dbg !2578
  br label %for.inc

if.else35:                                        ; preds = %if.end16
  %54 = load i8** %data8, align 8, !dbg !2579
  %55 = load %struct.hash_entry** %new_bucket, align 8, !dbg !2579
  %data36 = getelementptr inbounds %struct.hash_entry* %55, i32 0, i32 0, !dbg !2579
  store i8* %54, i8** %data36, align 8, !dbg !2579
  %56 = load %struct.hash_table** %new_table, align 8, !dbg !2581
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %56, i32 0, i32 3, !dbg !2581
  %57 = load i64* %n_buckets_used, align 8, !dbg !2581
  %inc = add i64 %57, 1, !dbg !2581
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !2581
  %58 = load %struct.hash_entry** %cursor, align 8, !dbg !2582
  %59 = load %struct.hash_entry** %bucket, align 8, !dbg !2582
  %cmp37 = icmp ne %struct.hash_entry* %58, %59, !dbg !2582
  br i1 %cmp37, label %if.then38, label %for.inc, !dbg !2582

if.then38:                                        ; preds = %if.else35
  %60 = load %struct.hash_table** %new_table, align 8, !dbg !2584
  %61 = load %struct.hash_entry** %cursor, align 8, !dbg !2584
  call void @free_entry(%struct.hash_table* %60, %struct.hash_entry* %61), !dbg !2584
  br label %for.inc, !dbg !2584

for.inc:                                          ; preds = %if.else, %if.end26, %if.then38, %if.else35
  %62 = load %struct.hash_entry** %next, align 8, !dbg !2552
  store %struct.hash_entry* %62, %struct.hash_entry** %cursor, align 8, !dbg !2552
  br label %for.cond5, !dbg !2552

for.inc42:                                        ; preds = %for.body, %for.cond5
  %63 = load %struct.hash_entry** %bucket, align 8, !dbg !2548
  %incdec.ptr = getelementptr inbounds %struct.hash_entry* %63, i32 1, !dbg !2548
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2548
  br label %for.cond, !dbg !2548

for.end43:                                        ; preds = %for.cond
  %64 = load %struct.hash_table** %table.addr, align 8, !dbg !2585
  %bucket44 = getelementptr inbounds %struct.hash_table* %64, i32 0, i32 0, !dbg !2585
  %65 = load %struct.hash_entry** %bucket44, align 8, !dbg !2585
  %66 = bitcast %struct.hash_entry* %65 to i8*, !dbg !2585
  call void @free(i8* %66) #9, !dbg !2585
  %67 = load %struct.hash_table** %new_table, align 8, !dbg !2586
  %bucket45 = getelementptr inbounds %struct.hash_table* %67, i32 0, i32 0, !dbg !2586
  %68 = load %struct.hash_entry** %bucket45, align 8, !dbg !2586
  %69 = load %struct.hash_table** %table.addr, align 8, !dbg !2586
  %bucket46 = getelementptr inbounds %struct.hash_table* %69, i32 0, i32 0, !dbg !2586
  store %struct.hash_entry* %68, %struct.hash_entry** %bucket46, align 8, !dbg !2586
  %70 = load %struct.hash_table** %new_table, align 8, !dbg !2587
  %bucket_limit47 = getelementptr inbounds %struct.hash_table* %70, i32 0, i32 1, !dbg !2587
  %71 = load %struct.hash_entry** %bucket_limit47, align 8, !dbg !2587
  %72 = load %struct.hash_table** %table.addr, align 8, !dbg !2587
  %bucket_limit48 = getelementptr inbounds %struct.hash_table* %72, i32 0, i32 1, !dbg !2587
  store %struct.hash_entry* %71, %struct.hash_entry** %bucket_limit48, align 8, !dbg !2587
  %73 = load %struct.hash_table** %new_table, align 8, !dbg !2588
  %n_buckets49 = getelementptr inbounds %struct.hash_table* %73, i32 0, i32 2, !dbg !2588
  %74 = load i64* %n_buckets49, align 8, !dbg !2588
  %75 = load %struct.hash_table** %table.addr, align 8, !dbg !2588
  %n_buckets50 = getelementptr inbounds %struct.hash_table* %75, i32 0, i32 2, !dbg !2588
  store i64 %74, i64* %n_buckets50, align 8, !dbg !2588
  %76 = load %struct.hash_table** %new_table, align 8, !dbg !2589
  %n_buckets_used51 = getelementptr inbounds %struct.hash_table* %76, i32 0, i32 3, !dbg !2589
  %77 = load i64* %n_buckets_used51, align 8, !dbg !2589
  %78 = load %struct.hash_table** %table.addr, align 8, !dbg !2589
  %n_buckets_used52 = getelementptr inbounds %struct.hash_table* %78, i32 0, i32 3, !dbg !2589
  store i64 %77, i64* %n_buckets_used52, align 8, !dbg !2589
  %79 = load %struct.hash_table** %new_table, align 8, !dbg !2590
  %free_entry_list53 = getelementptr inbounds %struct.hash_table* %79, i32 0, i32 9, !dbg !2590
  %80 = load %struct.hash_entry** %free_entry_list53, align 8, !dbg !2590
  %81 = load %struct.hash_table** %table.addr, align 8, !dbg !2590
  %free_entry_list54 = getelementptr inbounds %struct.hash_table* %81, i32 0, i32 9, !dbg !2590
  store %struct.hash_entry* %80, %struct.hash_entry** %free_entry_list54, align 8, !dbg !2590
  %82 = load %struct.hash_table** %new_table, align 8, !dbg !2591
  %83 = bitcast %struct.hash_table* %82 to i8*, !dbg !2591
  call void @free(i8* %83) #9, !dbg !2591
  store i1 true, i1* %retval, !dbg !2592
  br label %return, !dbg !2592

return:                                           ; preds = %for.end43, %if.then25, %if.then
  %84 = load i1* %retval, !dbg !2593
  ret i1 %84, !dbg !2593
}

; Function Attrs: nounwind uwtable
define i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %new_entry = alloca %struct.hash_entry*, align 8
  %tuning35 = alloca %struct.hash_tuning*, align 8
  %candidate = alloca float, align 4
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8* %entry1, i8** %entry.addr, align 8
  %0 = load i8** %entry.addr, align 8, !dbg !2594
  %tobool = icmp ne i8* %0, null, !dbg !2594
  br i1 %tobool, label %if.end, label %if.then, !dbg !2594

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !2596
  unreachable, !dbg !2596

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table** %table.addr, align 8, !dbg !2597
  %2 = load i8** %entry.addr, align 8, !dbg !2597
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !2597
  store i8* %call, i8** %data, align 8, !dbg !2597
  %cmp = icmp ne i8* %call, null, !dbg !2597
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !2597

if.then2:                                         ; preds = %if.end
  %3 = load i8** %data, align 8, !dbg !2599
  store i8* %3, i8** %retval, !dbg !2599
  br label %return, !dbg !2599

if.end3:                                          ; preds = %if.end
  %4 = load %struct.hash_entry** %bucket, align 8, !dbg !2600
  %data4 = getelementptr inbounds %struct.hash_entry* %4, i32 0, i32 0, !dbg !2600
  %5 = load i8** %data4, align 8, !dbg !2600
  %tobool5 = icmp ne i8* %5, null, !dbg !2600
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !2600

if.then6:                                         ; preds = %if.end3
  %6 = load %struct.hash_table** %table.addr, align 8, !dbg !2602
  %call7 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %6), !dbg !2602
  store %struct.hash_entry* %call7, %struct.hash_entry** %new_entry, align 8, !dbg !2602
  %7 = load %struct.hash_entry** %new_entry, align 8, !dbg !2604
  %cmp8 = icmp eq %struct.hash_entry* %7, null, !dbg !2604
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2604

if.then9:                                         ; preds = %if.then6
  store i8* null, i8** %retval, !dbg !2606
  br label %return, !dbg !2606

if.end10:                                         ; preds = %if.then6
  %8 = load i8** %entry.addr, align 8, !dbg !2607
  %9 = load %struct.hash_entry** %new_entry, align 8, !dbg !2607
  %data11 = getelementptr inbounds %struct.hash_entry* %9, i32 0, i32 0, !dbg !2607
  store i8* %8, i8** %data11, align 8, !dbg !2607
  %10 = load %struct.hash_entry** %bucket, align 8, !dbg !2608
  %next = getelementptr inbounds %struct.hash_entry* %10, i32 0, i32 1, !dbg !2608
  %11 = load %struct.hash_entry** %next, align 8, !dbg !2608
  %12 = load %struct.hash_entry** %new_entry, align 8, !dbg !2608
  %next12 = getelementptr inbounds %struct.hash_entry* %12, i32 0, i32 1, !dbg !2608
  store %struct.hash_entry* %11, %struct.hash_entry** %next12, align 8, !dbg !2608
  %13 = load %struct.hash_entry** %new_entry, align 8, !dbg !2609
  %14 = load %struct.hash_entry** %bucket, align 8, !dbg !2609
  %next13 = getelementptr inbounds %struct.hash_entry* %14, i32 0, i32 1, !dbg !2609
  store %struct.hash_entry* %13, %struct.hash_entry** %next13, align 8, !dbg !2609
  %15 = load %struct.hash_table** %table.addr, align 8, !dbg !2610
  %n_entries = getelementptr inbounds %struct.hash_table* %15, i32 0, i32 4, !dbg !2610
  %16 = load i64* %n_entries, align 8, !dbg !2610
  %inc = add i64 %16, 1, !dbg !2610
  store i64 %inc, i64* %n_entries, align 8, !dbg !2610
  %17 = load i8** %entry.addr, align 8, !dbg !2611
  store i8* %17, i8** %retval, !dbg !2611
  br label %return, !dbg !2611

if.end14:                                         ; preds = %if.end3
  %18 = load i8** %entry.addr, align 8, !dbg !2612
  %19 = load %struct.hash_entry** %bucket, align 8, !dbg !2612
  %data15 = getelementptr inbounds %struct.hash_entry* %19, i32 0, i32 0, !dbg !2612
  store i8* %18, i8** %data15, align 8, !dbg !2612
  %20 = load %struct.hash_table** %table.addr, align 8, !dbg !2613
  %n_entries16 = getelementptr inbounds %struct.hash_table* %20, i32 0, i32 4, !dbg !2613
  %21 = load i64* %n_entries16, align 8, !dbg !2613
  %inc17 = add i64 %21, 1, !dbg !2613
  store i64 %inc17, i64* %n_entries16, align 8, !dbg !2613
  %22 = load %struct.hash_table** %table.addr, align 8, !dbg !2614
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %22, i32 0, i32 3, !dbg !2614
  %23 = load i64* %n_buckets_used, align 8, !dbg !2614
  %inc18 = add i64 %23, 1, !dbg !2614
  store i64 %inc18, i64* %n_buckets_used, align 8, !dbg !2614
  %24 = load %struct.hash_table** %table.addr, align 8, !dbg !2615
  %n_buckets_used19 = getelementptr inbounds %struct.hash_table* %24, i32 0, i32 3, !dbg !2615
  %25 = load i64* %n_buckets_used19, align 8, !dbg !2615
  %conv = uitofp i64 %25 to float, !dbg !2615
  %26 = load %struct.hash_table** %table.addr, align 8, !dbg !2615
  %tuning = getelementptr inbounds %struct.hash_table* %26, i32 0, i32 5, !dbg !2615
  %27 = load %struct.hash_tuning** %tuning, align 8, !dbg !2615
  %growth_threshold = getelementptr inbounds %struct.hash_tuning* %27, i32 0, i32 2, !dbg !2615
  %28 = load float* %growth_threshold, align 4, !dbg !2615
  %29 = load %struct.hash_table** %table.addr, align 8, !dbg !2615
  %n_buckets = getelementptr inbounds %struct.hash_table* %29, i32 0, i32 2, !dbg !2615
  %30 = load i64* %n_buckets, align 8, !dbg !2615
  %conv20 = uitofp i64 %30 to float, !dbg !2615
  %mul = fmul float %28, %conv20, !dbg !2615
  %cmp21 = fcmp ogt float %conv, %mul, !dbg !2615
  br i1 %cmp21, label %if.then23, label %if.end57, !dbg !2615

if.then23:                                        ; preds = %if.end14
  %31 = load %struct.hash_table** %table.addr, align 8, !dbg !2617
  %call24 = call zeroext i1 @check_tuning(%struct.hash_table* %31), !dbg !2617
  %32 = load %struct.hash_table** %table.addr, align 8, !dbg !2619
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table* %32, i32 0, i32 3, !dbg !2619
  %33 = load i64* %n_buckets_used25, align 8, !dbg !2619
  %conv26 = uitofp i64 %33 to float, !dbg !2619
  %34 = load %struct.hash_table** %table.addr, align 8, !dbg !2619
  %tuning27 = getelementptr inbounds %struct.hash_table* %34, i32 0, i32 5, !dbg !2619
  %35 = load %struct.hash_tuning** %tuning27, align 8, !dbg !2619
  %growth_threshold28 = getelementptr inbounds %struct.hash_tuning* %35, i32 0, i32 2, !dbg !2619
  %36 = load float* %growth_threshold28, align 4, !dbg !2619
  %37 = load %struct.hash_table** %table.addr, align 8, !dbg !2619
  %n_buckets29 = getelementptr inbounds %struct.hash_table* %37, i32 0, i32 2, !dbg !2619
  %38 = load i64* %n_buckets29, align 8, !dbg !2619
  %conv30 = uitofp i64 %38 to float, !dbg !2619
  %mul31 = fmul float %36, %conv30, !dbg !2619
  %cmp32 = fcmp ogt float %conv26, %mul31, !dbg !2619
  br i1 %cmp32, label %if.then34, label %if.end57, !dbg !2619

if.then34:                                        ; preds = %if.then23
  %39 = load %struct.hash_table** %table.addr, align 8, !dbg !2621
  %tuning36 = getelementptr inbounds %struct.hash_table* %39, i32 0, i32 5, !dbg !2621
  %40 = load %struct.hash_tuning** %tuning36, align 8, !dbg !2621
  store %struct.hash_tuning* %40, %struct.hash_tuning** %tuning35, align 8, !dbg !2621
  %41 = load %struct.hash_tuning** %tuning35, align 8, !dbg !2623
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning* %41, i32 0, i32 4, !dbg !2623
  %42 = load i8* %is_n_buckets, align 1, !dbg !2623
  %tobool37 = trunc i8 %42 to i1, !dbg !2623
  %43 = load %struct.hash_table** %table.addr, align 8, !dbg !2623
  %n_buckets39 = getelementptr inbounds %struct.hash_table* %43, i32 0, i32 2, !dbg !2623
  %44 = load i64* %n_buckets39, align 8, !dbg !2623
  %conv40 = uitofp i64 %44 to float, !dbg !2623
  %45 = load %struct.hash_tuning** %tuning35, align 8, !dbg !2623
  %growth_factor = getelementptr inbounds %struct.hash_tuning* %45, i32 0, i32 3, !dbg !2623
  %46 = load float* %growth_factor, align 4, !dbg !2623
  %mul41 = fmul float %conv40, %46, !dbg !2623
  br i1 %tobool37, label %cond.end, label %cond.false, !dbg !2623

cond.false:                                       ; preds = %if.then34
  %47 = load %struct.hash_tuning** %tuning35, align 8, !dbg !2623
  %growth_threshold46 = getelementptr inbounds %struct.hash_tuning* %47, i32 0, i32 2, !dbg !2623
  %48 = load float* %growth_threshold46, align 4, !dbg !2623
  %mul47 = fmul float %mul41, %48, !dbg !2623
  br label %cond.end, !dbg !2623

cond.end:                                         ; preds = %if.then34, %cond.false
  %cond = phi float [ %mul47, %cond.false ], [ %mul41, %if.then34 ], !dbg !2623
  store float %cond, float* %candidate, align 4, !dbg !2623
  %49 = load float* %candidate, align 4, !dbg !2624
  %cmp48 = fcmp ole float 0x43F0000000000000, %49, !dbg !2624
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !2624

if.then50:                                        ; preds = %cond.end
  store i8* null, i8** %retval, !dbg !2626
  br label %return, !dbg !2626

if.end51:                                         ; preds = %cond.end
  %50 = load %struct.hash_table** %table.addr, align 8, !dbg !2627
  %51 = load float* %candidate, align 4, !dbg !2627
  %conv52 = fptoui float %51 to i64, !dbg !2627
  %call53 = call zeroext i1 @hash_rehash(%struct.hash_table* %50, i64 %conv52), !dbg !2627
  br i1 %call53, label %if.end57, label %if.then54, !dbg !2627

if.then54:                                        ; preds = %if.end51
  store i8* null, i8** %entry.addr, align 8, !dbg !2629
  br label %if.end57, !dbg !2629

if.end57:                                         ; preds = %if.then23, %if.then54, %if.end51, %if.end14
  %52 = load i8** %entry.addr, align 8, !dbg !2630
  store i8* %52, i8** %retval, !dbg !2630
  br label %return, !dbg !2630

return:                                           ; preds = %if.end57, %if.then50, %if.end10, %if.then9, %if.then2
  %53 = load i8** %retval, !dbg !2631
  ret i8* %53, !dbg !2631
}

; Function Attrs: nounwind uwtable
define i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8
  %tuning21 = alloca %struct.hash_tuning*, align 8
  %candidate = alloca i64, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8* %entry1, i8** %entry.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2632
  %1 = load i8** %entry.addr, align 8, !dbg !2632
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !2632
  store i8* %call, i8** %data, align 8, !dbg !2632
  %2 = load i8** %data, align 8, !dbg !2633
  %tobool = icmp ne i8* %2, null, !dbg !2633
  br i1 %tobool, label %if.end, label %if.then, !dbg !2633

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, !dbg !2635
  br label %return, !dbg !2635

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table** %table.addr, align 8, !dbg !2636
  %n_entries = getelementptr inbounds %struct.hash_table* %3, i32 0, i32 4, !dbg !2636
  %4 = load i64* %n_entries, align 8, !dbg !2636
  %dec = add i64 %4, -1, !dbg !2636
  store i64 %dec, i64* %n_entries, align 8, !dbg !2636
  %5 = load %struct.hash_entry** %bucket, align 8, !dbg !2637
  %data2 = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0, !dbg !2637
  %6 = load i8** %data2, align 8, !dbg !2637
  %tobool3 = icmp ne i8* %6, null, !dbg !2637
  br i1 %tobool3, label %if.end37, label %if.then4, !dbg !2637

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table** %table.addr, align 8, !dbg !2639
  %n_buckets_used = getelementptr inbounds %struct.hash_table* %7, i32 0, i32 3, !dbg !2639
  %8 = load i64* %n_buckets_used, align 8, !dbg !2639
  %dec5 = add i64 %8, -1, !dbg !2639
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !2639
  %9 = load %struct.hash_table** %table.addr, align 8, !dbg !2641
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table* %9, i32 0, i32 3, !dbg !2641
  %10 = load i64* %n_buckets_used6, align 8, !dbg !2641
  %conv = uitofp i64 %10 to float, !dbg !2641
  %11 = load %struct.hash_table** %table.addr, align 8, !dbg !2641
  %tuning = getelementptr inbounds %struct.hash_table* %11, i32 0, i32 5, !dbg !2641
  %12 = load %struct.hash_tuning** %tuning, align 8, !dbg !2641
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning* %12, i32 0, i32 0, !dbg !2641
  %13 = load float* %shrink_threshold, align 4, !dbg !2641
  %14 = load %struct.hash_table** %table.addr, align 8, !dbg !2641
  %n_buckets = getelementptr inbounds %struct.hash_table* %14, i32 0, i32 2, !dbg !2641
  %15 = load i64* %n_buckets, align 8, !dbg !2641
  %conv7 = uitofp i64 %15 to float, !dbg !2641
  %mul = fmul float %13, %conv7, !dbg !2641
  %cmp = fcmp olt float %conv, %mul, !dbg !2641
  br i1 %cmp, label %if.then9, label %if.end37, !dbg !2641

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table** %table.addr, align 8, !dbg !2643
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !2643
  %17 = load %struct.hash_table** %table.addr, align 8, !dbg !2645
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table* %17, i32 0, i32 3, !dbg !2645
  %18 = load i64* %n_buckets_used11, align 8, !dbg !2645
  %conv12 = uitofp i64 %18 to float, !dbg !2645
  %19 = load %struct.hash_table** %table.addr, align 8, !dbg !2645
  %tuning13 = getelementptr inbounds %struct.hash_table* %19, i32 0, i32 5, !dbg !2645
  %20 = load %struct.hash_tuning** %tuning13, align 8, !dbg !2645
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning* %20, i32 0, i32 0, !dbg !2645
  %21 = load float* %shrink_threshold14, align 4, !dbg !2645
  %22 = load %struct.hash_table** %table.addr, align 8, !dbg !2645
  %n_buckets15 = getelementptr inbounds %struct.hash_table* %22, i32 0, i32 2, !dbg !2645
  %23 = load i64* %n_buckets15, align 8, !dbg !2645
  %conv16 = uitofp i64 %23 to float, !dbg !2645
  %mul17 = fmul float %21, %conv16, !dbg !2645
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !2645
  br i1 %cmp18, label %if.then20, label %if.end37, !dbg !2645

if.then20:                                        ; preds = %if.then9
  %24 = load %struct.hash_table** %table.addr, align 8, !dbg !2647
  %tuning22 = getelementptr inbounds %struct.hash_table* %24, i32 0, i32 5, !dbg !2647
  %25 = load %struct.hash_tuning** %tuning22, align 8, !dbg !2647
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !2647
  %26 = load %struct.hash_tuning** %tuning21, align 8, !dbg !2649
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning* %26, i32 0, i32 4, !dbg !2649
  %27 = load i8* %is_n_buckets, align 1, !dbg !2649
  %tobool23 = trunc i8 %27 to i1, !dbg !2649
  %28 = load %struct.hash_table** %table.addr, align 8, !dbg !2649
  %n_buckets25 = getelementptr inbounds %struct.hash_table* %28, i32 0, i32 2, !dbg !2649
  %29 = load i64* %n_buckets25, align 8, !dbg !2649
  %conv26 = uitofp i64 %29 to float, !dbg !2649
  %30 = load %struct.hash_tuning** %tuning21, align 8, !dbg !2649
  %shrink_factor = getelementptr inbounds %struct.hash_tuning* %30, i32 0, i32 1, !dbg !2649
  %31 = load float* %shrink_factor, align 4, !dbg !2649
  %mul27 = fmul float %conv26, %31, !dbg !2649
  br i1 %tobool23, label %cond.end, label %cond.false, !dbg !2649

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_tuning** %tuning21, align 8, !dbg !2649
  %growth_threshold = getelementptr inbounds %struct.hash_tuning* %32, i32 0, i32 2, !dbg !2649
  %33 = load float* %growth_threshold, align 4, !dbg !2649
  %mul32 = fmul float %mul27, %33, !dbg !2649
  br label %cond.end, !dbg !2649

cond.end:                                         ; preds = %if.then20, %cond.false
  %cond = phi float [ %mul32, %cond.false ], [ %mul27, %if.then20 ], !dbg !2649
  %conv33 = fptoui float %cond to i64, !dbg !2649
  store i64 %conv33, i64* %candidate, align 8, !dbg !2649
  %34 = load %struct.hash_table** %table.addr, align 8, !dbg !2650
  %35 = load i64* %candidate, align 8, !dbg !2650
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %34, i64 %35), !dbg !2650
  br label %if.end37, !dbg !2651

if.end37:                                         ; preds = %if.then4, %cond.end, %if.then9, %if.end
  %36 = load i8** %data, align 8, !dbg !2652
  store i8* %36, i8** %retval, !dbg !2652
  br label %return, !dbg !2652

return:                                           ; preds = %if.end37, %if.then
  %37 = load i8** %retval, !dbg !2653
  ret i8* %37, !dbg !2653
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #0 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8
  %epsilon = alloca float, align 4
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2654
  %tuning1 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 5, !dbg !2654
  %1 = load %struct.hash_tuning** %tuning1, align 8, !dbg !2654
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !2654
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !2655
  %2 = load float* %epsilon, align 4, !dbg !2656
  %3 = load %struct.hash_tuning** %tuning, align 8, !dbg !2656
  %growth_threshold = getelementptr inbounds %struct.hash_tuning* %3, i32 0, i32 2, !dbg !2656
  %4 = load float* %growth_threshold, align 4, !dbg !2656
  %cmp = fcmp olt float %2, %4, !dbg !2656
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2656

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.hash_tuning** %tuning, align 8, !dbg !2656
  %growth_threshold2 = getelementptr inbounds %struct.hash_tuning* %5, i32 0, i32 2, !dbg !2656
  %6 = load float* %growth_threshold2, align 4, !dbg !2656
  %7 = load float* %epsilon, align 4, !dbg !2656
  %sub = fsub float 1.000000e+00, %7, !dbg !2656
  %cmp3 = fcmp olt float %6, %sub, !dbg !2656
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !2656

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load float* %epsilon, align 4, !dbg !2656
  %add = fadd float 1.000000e+00, %8, !dbg !2656
  %9 = load %struct.hash_tuning** %tuning, align 8, !dbg !2656
  %growth_factor = getelementptr inbounds %struct.hash_tuning* %9, i32 0, i32 3, !dbg !2656
  %10 = load float* %growth_factor, align 4, !dbg !2656
  %cmp5 = fcmp olt float %add, %10, !dbg !2656
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !2656

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %11 = load %struct.hash_tuning** %tuning, align 8, !dbg !2656
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning* %11, i32 0, i32 0, !dbg !2656
  %12 = load float* %shrink_threshold, align 4, !dbg !2656
  %cmp7 = fcmp ole float 0.000000e+00, %12, !dbg !2656
  br i1 %cmp7, label %land.lhs.true8, label %if.end, !dbg !2656

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %13 = load %struct.hash_tuning** %tuning, align 8, !dbg !2656
  %shrink_threshold9 = getelementptr inbounds %struct.hash_tuning* %13, i32 0, i32 0, !dbg !2656
  %14 = load float* %shrink_threshold9, align 4, !dbg !2656
  %15 = load float* %epsilon, align 4, !dbg !2656
  %add10 = fadd float %14, %15, !dbg !2656
  %16 = load %struct.hash_tuning** %tuning, align 8, !dbg !2656
  %shrink_factor = getelementptr inbounds %struct.hash_tuning* %16, i32 0, i32 1, !dbg !2656
  %17 = load float* %shrink_factor, align 4, !dbg !2656
  %cmp11 = fcmp olt float %add10, %17, !dbg !2656
  br i1 %cmp11, label %land.lhs.true12, label %if.end, !dbg !2656

land.lhs.true12:                                  ; preds = %land.lhs.true8
  %18 = load %struct.hash_tuning** %tuning, align 8, !dbg !2656
  %shrink_factor13 = getelementptr inbounds %struct.hash_tuning* %18, i32 0, i32 1, !dbg !2656
  %19 = load float* %shrink_factor13, align 4, !dbg !2656
  %cmp14 = fcmp ole float %19, 1.000000e+00, !dbg !2656
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !2656

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %20 = load %struct.hash_tuning** %tuning, align 8, !dbg !2656
  %shrink_threshold16 = getelementptr inbounds %struct.hash_tuning* %20, i32 0, i32 0, !dbg !2656
  %21 = load float* %shrink_threshold16, align 4, !dbg !2656
  %22 = load float* %epsilon, align 4, !dbg !2656
  %add17 = fadd float %21, %22, !dbg !2656
  %23 = load %struct.hash_tuning** %tuning, align 8, !dbg !2656
  %growth_threshold18 = getelementptr inbounds %struct.hash_tuning* %23, i32 0, i32 2, !dbg !2656
  %24 = load float* %growth_threshold18, align 4, !dbg !2656
  %cmp19 = fcmp olt float %add17, %24, !dbg !2656
  br i1 %cmp19, label %if.then, label %if.end, !dbg !2656

if.then:                                          ; preds = %land.lhs.true15
  store i1 true, i1* %retval, !dbg !2658
  br label %return, !dbg !2658

if.end:                                           ; preds = %land.lhs.true15, %land.lhs.true12, %land.lhs.true8, %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %entry
  %25 = load %struct.hash_table** %table.addr, align 8, !dbg !2659
  %tuning20 = getelementptr inbounds %struct.hash_table* %25, i32 0, i32 5, !dbg !2659
  store %struct.hash_tuning* bitcast ({ float, float, float, float, i8, [3 x i8] }* @default_tuning to %struct.hash_tuning*), %struct.hash_tuning** %tuning20, align 8, !dbg !2659
  store i1 false, i1* %retval, !dbg !2660
  br label %return, !dbg !2660

return:                                           ; preds = %if.end, %if.then
  %26 = load i1* %retval, !dbg !2661
  ret i1 %26, !dbg !2661
}

; Function Attrs: nounwind uwtable
define internal i64 @next_prime(i64 %candidate) #0 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8
  %0 = load i64* %candidate.addr, align 8, !dbg !2662
  %cmp = icmp ult i64 %0, 10, !dbg !2662
  %.candidate = select i1 %cmp, i64 10, i64 %candidate, !dbg !2662
  store i64 %.candidate, i64* %candidate.addr, align 8, !dbg !2664
  %1 = load i64* %candidate.addr, align 8, !dbg !2665
  %or = or i64 %1, 1, !dbg !2665
  store i64 %or, i64* %candidate.addr, align 8, !dbg !2665
  br label %while.cond, !dbg !2666

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64* %candidate.addr, align 8, !dbg !2666
  %call = call zeroext i1 @is_prime(i64 %2), !dbg !2666
  %lnot = xor i1 %call, true, !dbg !2666
  %3 = load i64* %candidate.addr, align 8, !dbg !2667
  br i1 %lnot, label %while.body, label %while.end, !dbg !2666

while.body:                                       ; preds = %while.cond
  %add = add i64 %3, 2, !dbg !2667
  store i64 %add, i64* %candidate.addr, align 8, !dbg !2667
  br label %while.cond, !dbg !2667

while.end:                                        ; preds = %while.cond
  ret i64 %3, !dbg !2668
}

; Function Attrs: nounwind uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2669
  %free_entry_list = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 9, !dbg !2669
  %1 = load %struct.hash_entry** %free_entry_list, align 8, !dbg !2669
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !2669
  br i1 %tobool, label %if.then, label %if.else, !dbg !2669

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !2671
  %free_entry_list1 = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 9, !dbg !2671
  %3 = load %struct.hash_entry** %free_entry_list1, align 8, !dbg !2671
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !2671
  %4 = load %struct.hash_entry** %new, align 8, !dbg !2673
  %next = getelementptr inbounds %struct.hash_entry* %4, i32 0, i32 1, !dbg !2673
  %5 = load %struct.hash_entry** %next, align 8, !dbg !2673
  %6 = load %struct.hash_table** %table.addr, align 8, !dbg !2673
  %free_entry_list2 = getelementptr inbounds %struct.hash_table* %6, i32 0, i32 9, !dbg !2673
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !2673
  br label %if.end, !dbg !2674

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #9, !dbg !2675
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !2675
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !2675
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry** %new, align 8, !dbg !2677
  ret %struct.hash_entry* %8, !dbg !2677
}

; Function Attrs: nounwind uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #0 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8
  %0 = load %struct.hash_entry** %entry.addr, align 8, !dbg !2678
  %data = getelementptr inbounds %struct.hash_entry* %0, i32 0, i32 0, !dbg !2678
  store i8* null, i8** %data, align 8, !dbg !2678
  %1 = load %struct.hash_table** %table.addr, align 8, !dbg !2679
  %free_entry_list = getelementptr inbounds %struct.hash_table* %1, i32 0, i32 9, !dbg !2679
  %2 = load %struct.hash_entry** %free_entry_list, align 8, !dbg !2679
  %3 = load %struct.hash_entry** %entry.addr, align 8, !dbg !2679
  %next = getelementptr inbounds %struct.hash_entry* %3, i32 0, i32 1, !dbg !2679
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !2679
  %4 = load %struct.hash_entry** %entry.addr, align 8, !dbg !2680
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !2680
  %free_entry_list2 = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 9, !dbg !2680
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !2680
  ret void, !dbg !2681
}

; Function Attrs: nounwind uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #0 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8
  %cursor = alloca %struct.hash_entry*, align 8
  %data9 = alloca i8*, align 8
  %next14 = alloca %struct.hash_entry*, align 8
  %data27 = alloca i8*, align 8
  %next32 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  store i8* %entry1, i8** %entry.addr, align 8
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1
  %0 = load %struct.hash_table** %table.addr, align 8, !dbg !2682
  %bucket2 = getelementptr inbounds %struct.hash_table* %0, i32 0, i32 0, !dbg !2682
  %1 = load %struct.hash_entry** %bucket2, align 8, !dbg !2682
  %2 = load %struct.hash_table** %table.addr, align 8, !dbg !2683
  %hasher = getelementptr inbounds %struct.hash_table* %2, i32 0, i32 6, !dbg !2683
  %3 = load i64 (i8*, i64)** %hasher, align 8, !dbg !2683
  %4 = load i8** %entry.addr, align 8, !dbg !2683
  %5 = load %struct.hash_table** %table.addr, align 8, !dbg !2683
  %n_buckets = getelementptr inbounds %struct.hash_table* %5, i32 0, i32 2, !dbg !2683
  %6 = load i64* %n_buckets, align 8, !dbg !2683
  %call = call i64 %3(i8* %4, i64 %6), !dbg !2683
  %add.ptr = getelementptr inbounds %struct.hash_entry* %1, i64 %call, !dbg !2683
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket, align 8, !dbg !2683
  %7 = load %struct.hash_entry** %bucket, align 8, !dbg !2684
  %8 = load %struct.hash_table** %table.addr, align 8, !dbg !2684
  %bucket_limit = getelementptr inbounds %struct.hash_table* %8, i32 0, i32 1, !dbg !2684
  %9 = load %struct.hash_entry** %bucket_limit, align 8, !dbg !2684
  %cmp = icmp ult %struct.hash_entry* %7, %9, !dbg !2684
  br i1 %cmp, label %if.end, label %if.then, !dbg !2684

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !2686
  unreachable, !dbg !2686

if.end:                                           ; preds = %entry
  %10 = load %struct.hash_entry** %bucket, align 8, !dbg !2687
  %11 = load %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !2687
  store %struct.hash_entry* %10, %struct.hash_entry** %11, align 8, !dbg !2687
  %12 = load %struct.hash_entry** %bucket, align 8, !dbg !2688
  %data = getelementptr inbounds %struct.hash_entry* %12, i32 0, i32 0, !dbg !2688
  %13 = load i8** %data, align 8, !dbg !2688
  %cmp3 = icmp eq i8* %13, null, !dbg !2688
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2688

if.then4:                                         ; preds = %if.end
  store i8* null, i8** %retval, !dbg !2690
  br label %return, !dbg !2690

if.end5:                                          ; preds = %if.end
  %14 = load %struct.hash_table** %table.addr, align 8, !dbg !2691
  %comparator = getelementptr inbounds %struct.hash_table* %14, i32 0, i32 7, !dbg !2691
  %15 = load i1 (i8*, i8*)** %comparator, align 8, !dbg !2691
  %16 = load i8** %entry.addr, align 8, !dbg !2691
  %17 = load %struct.hash_entry** %bucket, align 8, !dbg !2691
  %data6 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 0, !dbg !2691
  %18 = load i8** %data6, align 8, !dbg !2691
  %call7 = call zeroext i1 %15(i8* %16, i8* %18), !dbg !2691
  %19 = load %struct.hash_entry** %bucket, align 8, !dbg !2693
  br i1 %call7, label %if.then8, label %if.end19, !dbg !2691

if.then8:                                         ; preds = %if.end5
  %data10 = getelementptr inbounds %struct.hash_entry* %19, i32 0, i32 0, !dbg !2693
  %20 = load i8** %data10, align 8, !dbg !2693
  store i8* %20, i8** %data9, align 8, !dbg !2693
  %21 = load i8* %delete.addr, align 1, !dbg !2695
  %tobool = trunc i8 %21 to i1, !dbg !2695
  br i1 %tobool, label %if.then11, label %if.end18, !dbg !2695

if.then11:                                        ; preds = %if.then8
  %22 = load %struct.hash_entry** %bucket, align 8, !dbg !2697
  %next = getelementptr inbounds %struct.hash_entry* %22, i32 0, i32 1, !dbg !2697
  %23 = load %struct.hash_entry** %next, align 8, !dbg !2697
  %tobool12 = icmp ne %struct.hash_entry* %23, null, !dbg !2697
  %24 = load %struct.hash_entry** %bucket, align 8, !dbg !2700
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !2697

if.then13:                                        ; preds = %if.then11
  %next15 = getelementptr inbounds %struct.hash_entry* %24, i32 0, i32 1, !dbg !2700
  %25 = load %struct.hash_entry** %next15, align 8, !dbg !2700
  store %struct.hash_entry* %25, %struct.hash_entry** %next14, align 8, !dbg !2700
  %26 = load %struct.hash_entry** %bucket, align 8, !dbg !2702
  %27 = load %struct.hash_entry** %next14, align 8, !dbg !2702
  %28 = bitcast %struct.hash_entry* %26 to i8*, !dbg !2702
  %29 = bitcast %struct.hash_entry* %27 to i8*, !dbg !2702
  %30 = call i8* @memcpy(i8* %28, i8* %29, i64 16)
  %31 = load %struct.hash_table** %table.addr, align 8, !dbg !2703
  %32 = load %struct.hash_entry** %next14, align 8, !dbg !2703
  call void @free_entry(%struct.hash_table* %31, %struct.hash_entry* %32), !dbg !2703
  br label %if.end18, !dbg !2704

if.else:                                          ; preds = %if.then11
  %data16 = getelementptr inbounds %struct.hash_entry* %24, i32 0, i32 0, !dbg !2705
  store i8* null, i8** %data16, align 8, !dbg !2705
  br label %if.end18

if.end18:                                         ; preds = %if.then13, %if.else, %if.then8
  %33 = load i8** %data9, align 8, !dbg !2707
  store i8* %33, i8** %retval, !dbg !2707
  br label %return, !dbg !2707

if.end19:                                         ; preds = %if.end5
  store %struct.hash_entry* %19, %struct.hash_entry** %cursor, align 8, !dbg !2708
  br label %for.cond, !dbg !2708

for.cond:                                         ; preds = %for.inc, %if.end19
  %34 = load %struct.hash_entry** %cursor, align 8, !dbg !2708
  %next20 = getelementptr inbounds %struct.hash_entry* %34, i32 0, i32 1, !dbg !2708
  %35 = load %struct.hash_entry** %next20, align 8, !dbg !2708
  %tobool21 = icmp ne %struct.hash_entry* %35, null, !dbg !2708
  br i1 %tobool21, label %for.body, label %for.end, !dbg !2708

for.body:                                         ; preds = %for.cond
  %36 = load %struct.hash_table** %table.addr, align 8, !dbg !2710
  %comparator22 = getelementptr inbounds %struct.hash_table* %36, i32 0, i32 7, !dbg !2710
  %37 = load i1 (i8*, i8*)** %comparator22, align 8, !dbg !2710
  %38 = load i8** %entry.addr, align 8, !dbg !2710
  %39 = load %struct.hash_entry** %cursor, align 8, !dbg !2710
  %next23 = getelementptr inbounds %struct.hash_entry* %39, i32 0, i32 1, !dbg !2710
  %40 = load %struct.hash_entry** %next23, align 8, !dbg !2710
  %data24 = getelementptr inbounds %struct.hash_entry* %40, i32 0, i32 0, !dbg !2710
  %41 = load i8** %data24, align 8, !dbg !2710
  %call25 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !2710
  %42 = load %struct.hash_entry** %cursor, align 8, !dbg !2713
  %next28 = getelementptr inbounds %struct.hash_entry* %42, i32 0, i32 1, !dbg !2713
  %43 = load %struct.hash_entry** %next28, align 8, !dbg !2713
  br i1 %call25, label %if.then26, label %for.inc, !dbg !2710

if.then26:                                        ; preds = %for.body
  %data29 = getelementptr inbounds %struct.hash_entry* %43, i32 0, i32 0, !dbg !2713
  %44 = load i8** %data29, align 8, !dbg !2713
  store i8* %44, i8** %data27, align 8, !dbg !2713
  %45 = load i8* %delete.addr, align 1, !dbg !2715
  %tobool30 = trunc i8 %45 to i1, !dbg !2715
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !2715

if.then31:                                        ; preds = %if.then26
  %46 = load %struct.hash_entry** %cursor, align 8, !dbg !2717
  %next33 = getelementptr inbounds %struct.hash_entry* %46, i32 0, i32 1, !dbg !2717
  %47 = load %struct.hash_entry** %next33, align 8, !dbg !2717
  store %struct.hash_entry* %47, %struct.hash_entry** %next32, align 8, !dbg !2717
  %48 = load %struct.hash_entry** %next32, align 8, !dbg !2719
  %next34 = getelementptr inbounds %struct.hash_entry* %48, i32 0, i32 1, !dbg !2719
  %49 = load %struct.hash_entry** %next34, align 8, !dbg !2719
  %50 = load %struct.hash_entry** %cursor, align 8, !dbg !2719
  %next35 = getelementptr inbounds %struct.hash_entry* %50, i32 0, i32 1, !dbg !2719
  store %struct.hash_entry* %49, %struct.hash_entry** %next35, align 8, !dbg !2719
  %51 = load %struct.hash_table** %table.addr, align 8, !dbg !2720
  %52 = load %struct.hash_entry** %next32, align 8, !dbg !2720
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !2720
  br label %if.end36, !dbg !2721

if.end36:                                         ; preds = %if.then31, %if.then26
  %53 = load i8** %data27, align 8, !dbg !2722
  store i8* %53, i8** %retval, !dbg !2722
  br label %return, !dbg !2722

for.inc:                                          ; preds = %for.body
  store %struct.hash_entry* %43, %struct.hash_entry** %cursor, align 8, !dbg !2708
  br label %for.cond, !dbg !2708

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, !dbg !2723
  br label %return, !dbg !2723

return:                                           ; preds = %for.end, %if.end36, %if.end18, %if.then4
  %54 = load i8** %retval, !dbg !2724
  ret i8* %54, !dbg !2724
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #0 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8
  %square = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8
  store i64 3, i64* %divisor, align 8, !dbg !2725
  %0 = load i64* %divisor, align 8, !dbg !2726
  %1 = load i64* %divisor, align 8, !dbg !2726
  %mul = mul i64 %0, %1, !dbg !2726
  store i64 %mul, i64* %square, align 8, !dbg !2726
  br label %while.cond, !dbg !2727

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64* %square, align 8, !dbg !2727
  %3 = load i64* %candidate.addr, align 8, !dbg !2727
  %cmp = icmp ult i64 %2, %3, !dbg !2727
  br i1 %cmp, label %land.rhs, label %while.end, !dbg !2727

land.rhs:                                         ; preds = %while.cond
  %4 = load i64* %candidate.addr, align 8, !dbg !2727
  %5 = load i64* %divisor, align 8, !dbg !2727
  %int_cast_to_i64 = bitcast i64 %5 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !2727
  %rem = urem i64 %4, %5, !dbg !2727
  %tobool = icmp ne i64 %rem, 0, !dbg !2727
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %6 = load i64* %divisor, align 8, !dbg !2728
  %inc = add i64 %6, 1, !dbg !2728
  store i64 %inc, i64* %divisor, align 8, !dbg !2728
  %7 = load i64* %divisor, align 8, !dbg !2730
  %mul1 = mul i64 4, %7, !dbg !2730
  %8 = load i64* %square, align 8, !dbg !2730
  %add = add i64 %8, %mul1, !dbg !2730
  store i64 %add, i64* %square, align 8, !dbg !2730
  %9 = load i64* %divisor, align 8, !dbg !2731
  %inc2 = add i64 %9, 1, !dbg !2731
  store i64 %inc2, i64* %divisor, align 8, !dbg !2731
  br label %while.cond, !dbg !2732

while.end:                                        ; preds = %while.cond, %land.rhs
  %10 = load i64* %candidate.addr, align 8, !dbg !2733
  %11 = load i64* %divisor, align 8, !dbg !2733
  %int_cast_to_i641 = bitcast i64 %11 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !2733
  %rem3 = urem i64 %10, %11, !dbg !2733
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !2733
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !2733
  %tobool5 = icmp ne i32 %cond, 0, !dbg !2733
  ret i1 %tobool5, !dbg !2733
}

; Function Attrs: nounwind uwtable
define i8* @quote_n(i32 %n, i8* %name) #0 {
entry:
  %n.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  store i8* %name, i8** %name.addr, align 8
  %0 = load i32* %n.addr, align 4, !dbg !2734
  %1 = load i8** %name.addr, align 8, !dbg !2734
  %call = call i8* @quotearg_n_style(i32 %0, i32 5, i8* %1), !dbg !2734
  ret i8* %call, !dbg !2734
}

; Function Attrs: nounwind uwtable
define i8* @quote(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8** %name.addr, align 8, !dbg !2735
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !2735
  ret i8* %call, !dbg !2735
}

; Function Attrs: nounwind uwtable
define %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #0 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %p = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  %call = call i32* @__errno_location() #1, !dbg !2736
  %0 = load i32* %call, align 4, !dbg !2736
  store i32 %0, i32* %e, align 4, !dbg !2736
  %1 = load %struct.quoting_options** %o.addr, align 8, !dbg !2737
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !2737
  %2 = load %struct.quoting_options** %o.addr, align 8, !dbg !2737
  %cond = select i1 %tobool, %struct.quoting_options* %2, %struct.quoting_options* @default_quoting_options, !dbg !2737
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !2737
  %call1 = call i8* @xmemdup(i8* %3, i64 36), !dbg !2737
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !2737
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !2737
  %5 = load i32* %e, align 4, !dbg !2738
  %call2 = call i32* @__errno_location() #1, !dbg !2738
  store i32 %5, i32* %call2, align 4, !dbg !2738
  %6 = load %struct.quoting_options** %p, align 8, !dbg !2739
  ret %struct.quoting_options* %6, !dbg !2739
}

; Function Attrs: nounwind uwtable
define i32 @get_quoting_style(%struct.quoting_options* %o) #0 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  %0 = load %struct.quoting_options** %o.addr, align 8, !dbg !2740
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !2740
  %1 = load %struct.quoting_options** %o.addr, align 8, !dbg !2740
  %cond = select i1 %tobool, %struct.quoting_options* %1, %struct.quoting_options* @default_quoting_options, !dbg !2740
  %style = getelementptr inbounds %struct.quoting_options* %cond, i32 0, i32 0, !dbg !2740
  %2 = load i32* %style, align 4, !dbg !2740
  ret i32 %2, !dbg !2740
}

; Function Attrs: nounwind uwtable
define void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #0 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  store i32 %s, i32* %s.addr, align 4
  %0 = load i32* %s.addr, align 4, !dbg !2741
  %1 = load %struct.quoting_options** %o.addr, align 8, !dbg !2741
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !2741
  %2 = load %struct.quoting_options** %o.addr, align 8, !dbg !2741
  %cond = select i1 %tobool, %struct.quoting_options* %2, %struct.quoting_options* @default_quoting_options, !dbg !2741
  %style = getelementptr inbounds %struct.quoting_options* %cond, i32 0, i32 0, !dbg !2741
  store i32 %0, i32* %style, align 4, !dbg !2741
  ret void, !dbg !2742
}

; Function Attrs: nounwind uwtable
define i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #0 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1
  %p = alloca i32*, align 8
  %shift = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  store i8 %c, i8* %c.addr, align 1
  store i32 %i, i32* %i.addr, align 4
  %0 = load i8* %c.addr, align 1, !dbg !2743
  store i8 %0, i8* %uc, align 1, !dbg !2743
  %1 = load %struct.quoting_options** %o.addr, align 8, !dbg !2744
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !2744
  %2 = load %struct.quoting_options** %o.addr, align 8, !dbg !2744
  %cond = select i1 %tobool, %struct.quoting_options* %2, %struct.quoting_options* @default_quoting_options, !dbg !2744
  %quote_these_too = getelementptr inbounds %struct.quoting_options* %cond, i32 0, i32 1, !dbg !2744
  %arraydecay = getelementptr inbounds [8 x i32]* %quote_these_too, i32 0, i32 0, !dbg !2744
  %3 = load i8* %uc, align 1, !dbg !2744
  %conv = zext i8 %3 to i64, !dbg !2744
  %int_cast_to_i64 = bitcast i64 32 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !2744
  %div = udiv i64 %conv, 32, !dbg !2744
  %add.ptr = getelementptr inbounds i32* %arraydecay, i64 %div, !dbg !2744
  store i32* %add.ptr, i32** %p, align 8, !dbg !2744
  %4 = load i8* %uc, align 1, !dbg !2745
  %conv1 = zext i8 %4 to i64, !dbg !2745
  %int_cast_to_i641 = bitcast i64 32 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !2745
  %rem = urem i64 %conv1, 32, !dbg !2745
  %conv2 = trunc i64 %rem to i32, !dbg !2745
  store i32 %conv2, i32* %shift, align 4, !dbg !2745
  %5 = load i32** %p, align 8, !dbg !2746
  %6 = load i32* %5, align 4, !dbg !2746
  %7 = load i32* %shift, align 4, !dbg !2746
  %int_cast_to_i642 = zext i32 %7 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i642), !dbg !2746
  %shr = lshr i32 %6, %7, !dbg !2746
  %and = and i32 %shr, 1, !dbg !2746
  store i32 %and, i32* %r, align 4, !dbg !2746
  %8 = load i32* %i.addr, align 4, !dbg !2747
  %and3 = and i32 %8, 1, !dbg !2747
  %9 = load i32* %r, align 4, !dbg !2747
  %xor = xor i32 %and3, %9, !dbg !2747
  %10 = load i32* %shift, align 4, !dbg !2747
  %int_cast_to_i643 = zext i32 %10 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i643), !dbg !2747
  %shl = shl i32 %xor, %10, !dbg !2747
  %11 = load i32** %p, align 8, !dbg !2747
  %12 = load i32* %11, align 4, !dbg !2747
  %xor4 = xor i32 %12, %shl, !dbg !2747
  store i32 %xor4, i32* %11, align 4, !dbg !2747
  %13 = load i32* %r, align 4, !dbg !2748
  ret i32 %13, !dbg !2748
}

; Function Attrs: nounwind uwtable
define i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %r = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  store i64 %buffersize, i64* %buffersize.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  store i64 %argsize, i64* %argsize.addr, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  %0 = load %struct.quoting_options** %o.addr, align 8, !dbg !2749
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !2749
  %1 = load %struct.quoting_options** %o.addr, align 8, !dbg !2749
  %cond = select i1 %tobool, %struct.quoting_options* %1, %struct.quoting_options* @default_quoting_options, !dbg !2749
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !2749
  %call = call i32* @__errno_location() #1, !dbg !2750
  %2 = load i32* %call, align 4, !dbg !2750
  store i32 %2, i32* %e, align 4, !dbg !2750
  %3 = load i8** %buffer.addr, align 8, !dbg !2751
  %4 = load i64* %buffersize.addr, align 8, !dbg !2751
  %5 = load i8** %arg.addr, align 8, !dbg !2751
  %6 = load i64* %argsize.addr, align 8, !dbg !2751
  %7 = load %struct.quoting_options** %p, align 8, !dbg !2751
  %style = getelementptr inbounds %struct.quoting_options* %7, i32 0, i32 0, !dbg !2751
  %8 = load i32* %style, align 4, !dbg !2751
  %9 = load %struct.quoting_options** %p, align 8, !dbg !2751
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, %struct.quoting_options* %9), !dbg !2751
  store i64 %call1, i64* %r, align 8, !dbg !2751
  %10 = load i32* %e, align 4, !dbg !2752
  %call2 = call i32* @__errno_location() #1, !dbg !2752
  store i32 %10, i32* %call2, align 4, !dbg !2752
  %11 = load i64* %r, align 8, !dbg !2753
  ret i64 %11, !dbg !2753
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %bufsize = alloca i64, align 8
  %buf = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  store i64 %argsize, i64* %argsize.addr, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  %call = call i32* @__errno_location() #1, !dbg !2754
  %0 = load i32* %call, align 4, !dbg !2754
  store i32 %0, i32* %e, align 4, !dbg !2754
  %1 = load i8** %arg.addr, align 8, !dbg !2755
  %2 = load i64* %argsize.addr, align 8, !dbg !2755
  %3 = load %struct.quoting_options** %o.addr, align 8, !dbg !2755
  %call1 = call i64 @quotearg_buffer(i8* null, i64 0, i8* %1, i64 %2, %struct.quoting_options* %3), !dbg !2755
  %add = add i64 %call1, 1, !dbg !2755
  store i64 %add, i64* %bufsize, align 8, !dbg !2755
  %4 = load i64* %bufsize, align 8, !dbg !2756
  %call2 = call i8* @xcharalloc(i64 %4), !dbg !2756
  store i8* %call2, i8** %buf, align 8, !dbg !2756
  %5 = load i8** %buf, align 8, !dbg !2757
  %6 = load i64* %bufsize, align 8, !dbg !2757
  %7 = load i8** %arg.addr, align 8, !dbg !2757
  %8 = load i64* %argsize.addr, align 8, !dbg !2757
  %9 = load %struct.quoting_options** %o.addr, align 8, !dbg !2757
  %call3 = call i64 @quotearg_buffer(i8* %5, i64 %6, i8* %7, i64 %8, %struct.quoting_options* %9), !dbg !2757
  %10 = load i32* %e, align 4, !dbg !2758
  %call4 = call i32* @__errno_location() #1, !dbg !2758
  store i32 %10, i32* %call4, align 4, !dbg !2758
  %11 = load i8** %buf, align 8, !dbg !2759
  ret i8* %11, !dbg !2759
}

; Function Attrs: nounwind uwtable
define void @quotearg_free() #0 {
entry:
  %sv = alloca %struct.slotvec*, align 8
  %i = alloca i32, align 4
  %0 = load %struct.slotvec** @slotvec, align 8, !dbg !2760
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !2760
  store i32 1, i32* %i, align 4, !dbg !2761
  br label %for.cond, !dbg !2761

for.cond:                                         ; preds = %for.body, %entry
  %1 = load i32* %i, align 4, !dbg !2761
  %2 = load i32* @nslots, align 4, !dbg !2761
  %cmp = icmp ult i32 %1, %2, !dbg !2761
  br i1 %cmp, label %for.body, label %for.end, !dbg !2761

for.body:                                         ; preds = %for.cond
  %3 = load i32* %i, align 4, !dbg !2763
  %idxprom = zext i32 %3 to i64, !dbg !2763
  %4 = load %struct.slotvec** %sv, align 8, !dbg !2763
  %arrayidx = getelementptr inbounds %struct.slotvec* %4, i64 %idxprom, !dbg !2763
  %val = getelementptr inbounds %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !2763
  %5 = load i8** %val, align 8, !dbg !2763
  call void @free(i8* %5) #9, !dbg !2763
  %6 = load i32* %i, align 4, !dbg !2761
  %inc = add i32 %6, 1, !dbg !2761
  store i32 %inc, i32* %i, align 4, !dbg !2761
  br label %for.cond, !dbg !2761

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec** %sv, align 8, !dbg !2764
  %arrayidx1 = getelementptr inbounds %struct.slotvec* %7, i64 0, !dbg !2764
  %val2 = getelementptr inbounds %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !2764
  %8 = load i8** %val2, align 8, !dbg !2764
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8]* @slot0, i32 0, i32 0), !dbg !2764
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2764

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec** %sv, align 8, !dbg !2766
  %arrayidx4 = getelementptr inbounds %struct.slotvec* %9, i64 0, !dbg !2766
  %val5 = getelementptr inbounds %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !2766
  %10 = load i8** %val5, align 8, !dbg !2766
  call void @free(i8* %10) #9, !dbg !2766
  store i64 256, i64* getelementptr inbounds (%struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !2768
  store i8* getelementptr inbounds ([256 x i8]* @slot0, i32 0, i32 0), i8** getelementptr inbounds (%struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !2769
  br label %if.end, !dbg !2770

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec** %sv, align 8, !dbg !2771
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !2771
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2771

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec** %sv, align 8, !dbg !2773
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !2773
  call void @free(i8* %13) #9, !dbg !2773
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !2775
  br label %if.end8, !dbg !2776

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !2777
  ret void, !dbg !2778
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_n(i32 %n, i8* %arg) #0 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i32* %n.addr, align 4, !dbg !2779
  %1 = load i8** %arg.addr, align 8, !dbg !2779
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !2779
  ret i8* %call, !dbg !2779
}

; Function Attrs: nounwind uwtable
define i8* @quotearg(i8* %arg) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i8** %arg.addr, align 8, !dbg !2780
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !2780
  ret i8* %call, !dbg !2780
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #0 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 4
  store i32 %n, i32* %n.addr, align 4
  store i32 %s, i32* %s.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i32* %s.addr, align 4, !dbg !2781
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !2781
  %1 = load i32* %n.addr, align 4, !dbg !2782
  %2 = load i8** %arg.addr, align 8, !dbg !2782
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !2782
  ret i8* %call, !dbg !2782
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #0 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 4
  store i32 %n, i32* %n.addr, align 4
  store i32 %s, i32* %s.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  store i64 %argsize, i64* %argsize.addr, align 8
  %0 = load i32* %s.addr, align 4, !dbg !2783
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !2783
  %1 = load i32* %n.addr, align 4, !dbg !2784
  %2 = load i8** %arg.addr, align 8, !dbg !2784
  %3 = load i64* %argsize.addr, align 8, !dbg !2784
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !2784
  ret i8* %call, !dbg !2784
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_style(i32 %s, i8* %arg) #0 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i32* %s.addr, align 4, !dbg !2785
  %1 = load i8** %arg.addr, align 8, !dbg !2785
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !2785
  ret i8* %call, !dbg !2785
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_char(i8* %arg, i8 signext %ch) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 4
  store i8* %arg, i8** %arg.addr, align 8
  store i8 %ch, i8* %ch.addr, align 1
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !2786
  %1 = call i8* @memcpy(i8* %0, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 36)
  %2 = load i8* %ch.addr, align 1, !dbg !2787
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %2, i32 1), !dbg !2787
  %3 = load i8** %arg.addr, align 8, !dbg !2788
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %3, i64 -1, %struct.quoting_options* %options), !dbg !2788
  ret i8* %call1, !dbg !2788
}

; Function Attrs: nounwind uwtable
define i8* @quotearg_colon(i8* %arg) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i8** %arg.addr, align 8, !dbg !2789
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !2789
  ret i8* %call, !dbg !2789
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #9

; Function Attrs: nounwind
declare i64 @__ctype_get_mb_cur_max() #4

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #5

; Function Attrs: nounwind
declare i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4

; Function Attrs: nounwind
declare i32 @iswprint(i32) #4

; Function Attrs: nounwind readonly
declare i32 @mbsinit(%struct.__mbstate_t*) #8

; Function Attrs: nounwind uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, %struct.quoting_options* %o) #0 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %o.addr = alloca %struct.quoting_options*, align 8
  %i = alloca i64, align 8
  %len = alloca i64, align 8
  %quote_string = alloca i8*, align 8
  %quote_string_len = alloca i64, align 8
  %backslash_escapes = alloca i8, align 1
  %unibyte_locale = alloca i8, align 1
  %left = alloca i8*, align 8
  %right = alloca i8*, align 8
  %c = alloca i8, align 1
  %esc = alloca i8, align 1
  %m = alloca i64, align 8
  %printable = alloca i8, align 1
  %mbstate = alloca %struct.__mbstate_t, align 4
  %w = alloca i32, align 4
  %bytes = alloca i64, align 8
  %j = alloca i64, align 8
  %ilim = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  store i64 %buffersize, i64* %buffersize.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  store i64 %argsize, i64* %argsize.addr, align 8
  store i32 %quoting_style, i32* %quoting_style.addr, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  store i64 0, i64* %len, align 8, !dbg !2790
  store i8* null, i8** %quote_string, align 8, !dbg !2791
  store i64 0, i64* %quote_string_len, align 8, !dbg !2792
  store i8 0, i8* %backslash_escapes, align 1, !dbg !2793
  %call = call i64 @__ctype_get_mb_cur_max() #9, !dbg !2794
  %cmp = icmp eq i64 %call, 1, !dbg !2794
  %frombool = zext i1 %cmp to i8, !dbg !2794
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !2794
  %0 = load i32* %quoting_style.addr, align 4, !dbg !2795
  switch i32 %0, label %sw.epilog [
    i32 3, label %do.body
    i32 4, label %sw.bb2
    i32 5, label %sw.bb3
    i32 6, label %sw.bb3
    i32 2, label %do.body15
  ], !dbg !2795

do.body:                                          ; preds = %entry
  %1 = load i64* %len, align 8, !dbg !2796
  %2 = load i64* %buffersize.addr, align 8, !dbg !2796
  %cmp1 = icmp ult i64 %1, %2, !dbg !2796
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2796

if.then:                                          ; preds = %do.body
  %3 = load i64* %len, align 8, !dbg !2796
  %4 = load i8** %buffer.addr, align 8, !dbg !2796
  %arrayidx = getelementptr inbounds i8* %4, i64 %3, !dbg !2796
  store i8 34, i8* %arrayidx, align 1, !dbg !2796
  br label %if.end, !dbg !2796

if.end:                                           ; preds = %if.then, %do.body
  %5 = load i64* %len, align 8, !dbg !2800
  %inc = add i64 %5, 1, !dbg !2800
  store i64 %inc, i64* %len, align 8, !dbg !2800
  store i8 1, i8* %backslash_escapes, align 1, !dbg !2801
  store i8* getelementptr inbounds ([2 x i8]* @.str7184, i32 0, i32 0), i8** %quote_string, align 8, !dbg !2802
  store i64 1, i64* %quote_string_len, align 8, !dbg !2803
  br label %sw.epilog, !dbg !2804

sw.bb2:                                           ; preds = %entry
  store i8 1, i8* %backslash_escapes, align 1, !dbg !2805
  br label %sw.epilog, !dbg !2806

sw.bb3:                                           ; preds = %entry, %entry
  %6 = load i32* %quoting_style.addr, align 4, !dbg !2807
  %call4 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8]* @.str8185, i32 0, i32 0), i32 %6), !dbg !2807
  store i8* %call4, i8** %left, align 8, !dbg !2807
  %7 = load i32* %quoting_style.addr, align 4, !dbg !2809
  %call5 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8]* @.str9186, i32 0, i32 0), i32 %7), !dbg !2809
  store i8* %call5, i8** %right, align 8, !dbg !2809
  %8 = load i8** %left, align 8, !dbg !2810
  store i8* %8, i8** %quote_string, align 8, !dbg !2810
  br label %for.cond, !dbg !2810

for.cond:                                         ; preds = %if.end10, %sw.bb3
  %9 = load i8** %quote_string, align 8, !dbg !2810
  %10 = load i8* %9, align 1, !dbg !2810
  %tobool = icmp ne i8 %10, 0, !dbg !2810
  br i1 %tobool, label %do.body6, label %for.end, !dbg !2810

do.body6:                                         ; preds = %for.cond
  %11 = load i64* %len, align 8, !dbg !2812
  %12 = load i64* %buffersize.addr, align 8, !dbg !2812
  %cmp7 = icmp ult i64 %11, %12, !dbg !2812
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !2812

if.then8:                                         ; preds = %do.body6
  %13 = load i8** %quote_string, align 8, !dbg !2812
  %14 = load i8* %13, align 1, !dbg !2812
  %15 = load i64* %len, align 8, !dbg !2812
  %16 = load i8** %buffer.addr, align 8, !dbg !2812
  %arrayidx9 = getelementptr inbounds i8* %16, i64 %15, !dbg !2812
  store i8 %14, i8* %arrayidx9, align 1, !dbg !2812
  br label %if.end10, !dbg !2812

if.end10:                                         ; preds = %if.then8, %do.body6
  %17 = load i64* %len, align 8, !dbg !2815
  %inc11 = add i64 %17, 1, !dbg !2815
  store i64 %inc11, i64* %len, align 8, !dbg !2815
  %18 = load i8** %quote_string, align 8, !dbg !2810
  %incdec.ptr = getelementptr inbounds i8* %18, i32 1, !dbg !2810
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !2810
  br label %for.cond, !dbg !2810

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %backslash_escapes, align 1, !dbg !2816
  %19 = load i8** %right, align 8, !dbg !2817
  store i8* %19, i8** %quote_string, align 8, !dbg !2817
  %20 = load i8** %quote_string, align 8, !dbg !2818
  %call13 = call i64 @strlen(i8* %20) #19, !dbg !2818
  store i64 %call13, i64* %quote_string_len, align 8, !dbg !2818
  br label %sw.epilog, !dbg !2819

do.body15:                                        ; preds = %entry
  %21 = load i64* %len, align 8, !dbg !2820
  %22 = load i64* %buffersize.addr, align 8, !dbg !2820
  %cmp16 = icmp ult i64 %21, %22, !dbg !2820
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !2820

if.then17:                                        ; preds = %do.body15
  %23 = load i64* %len, align 8, !dbg !2820
  %24 = load i8** %buffer.addr, align 8, !dbg !2820
  %arrayidx18 = getelementptr inbounds i8* %24, i64 %23, !dbg !2820
  store i8 39, i8* %arrayidx18, align 1, !dbg !2820
  br label %if.end19, !dbg !2820

if.end19:                                         ; preds = %if.then17, %do.body15
  %25 = load i64* %len, align 8, !dbg !2823
  %inc20 = add i64 %25, 1, !dbg !2823
  store i64 %inc20, i64* %len, align 8, !dbg !2823
  store i8* getelementptr inbounds ([2 x i8]* @.str9186, i32 0, i32 0), i8** %quote_string, align 8, !dbg !2824
  store i64 1, i64* %quote_string_len, align 8, !dbg !2825
  br label %sw.epilog, !dbg !2826

sw.epilog:                                        ; preds = %entry, %if.end19, %for.end, %sw.bb2, %if.end
  store i64 0, i64* %i, align 8, !dbg !2827
  br label %for.cond22, !dbg !2827

for.cond22:                                       ; preds = %if.end364, %sw.epilog
  %26 = load i64* %argsize.addr, align 8, !dbg !2827
  %cmp23 = icmp eq i64 %26, -1, !dbg !2827
  %27 = load i64* %i, align 8, !dbg !2827
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !2827

cond.true:                                        ; preds = %for.cond22
  %28 = load i8** %arg.addr, align 8, !dbg !2827
  %arrayidx24 = getelementptr inbounds i8* %28, i64 %27, !dbg !2827
  %29 = load i8* %arrayidx24, align 1, !dbg !2827
  %conv = sext i8 %29 to i32, !dbg !2827
  %cmp25 = icmp eq i32 %conv, 0, !dbg !2827
  br i1 %cmp25, label %for.end370, label %for.body29, !dbg !2827

cond.false:                                       ; preds = %for.cond22
  %30 = load i64* %argsize.addr, align 8, !dbg !2827
  %cmp27 = icmp eq i64 %27, %30, !dbg !2827
  br i1 %cmp27, label %for.end370, label %for.body29, !dbg !2827

for.body29:                                       ; preds = %cond.false, %cond.true
  %31 = load i8* %backslash_escapes, align 1, !dbg !2829
  %tobool30 = trunc i8 %31 to i1, !dbg !2829
  %32 = load i64* %quote_string_len, align 8, !dbg !2829
  %tobool32 = icmp ne i64 %32, 0, !dbg !2829
  %or.cond = and i1 %tobool30, %tobool32, !dbg !2829
  br i1 %or.cond, label %land.lhs.true33, label %if.end49, !dbg !2829

land.lhs.true33:                                  ; preds = %for.body29
  %33 = load i64* %i, align 8, !dbg !2829
  %34 = load i64* %quote_string_len, align 8, !dbg !2829
  %add = add i64 %33, %34, !dbg !2829
  %35 = load i64* %argsize.addr, align 8, !dbg !2829
  %cmp34 = icmp ule i64 %add, %35, !dbg !2829
  br i1 %cmp34, label %land.lhs.true36, label %if.end49, !dbg !2829

land.lhs.true36:                                  ; preds = %land.lhs.true33
  %36 = load i8** %arg.addr, align 8, !dbg !2832
  %37 = load i64* %i, align 8, !dbg !2832
  %add.ptr = getelementptr inbounds i8* %36, i64 %37, !dbg !2832
  %38 = load i8** %quote_string, align 8, !dbg !2832
  %39 = load i64* %quote_string_len, align 8, !dbg !2832
  %call37 = call i32 @memcmp(i8* %add.ptr, i8* %38, i64 %39) #19, !dbg !2832
  %cmp38 = icmp eq i32 %call37, 0, !dbg !2832
  br i1 %cmp38, label %do.body41, label %if.end49, !dbg !2832

do.body41:                                        ; preds = %land.lhs.true36
  %40 = load i64* %len, align 8, !dbg !2833
  %41 = load i64* %buffersize.addr, align 8, !dbg !2833
  %cmp42 = icmp ult i64 %40, %41, !dbg !2833
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !2833

if.then44:                                        ; preds = %do.body41
  %42 = load i64* %len, align 8, !dbg !2833
  %43 = load i8** %buffer.addr, align 8, !dbg !2833
  %arrayidx45 = getelementptr inbounds i8* %43, i64 %42, !dbg !2833
  store i8 92, i8* %arrayidx45, align 1, !dbg !2833
  br label %if.end46, !dbg !2833

if.end46:                                         ; preds = %if.then44, %do.body41
  %44 = load i64* %len, align 8, !dbg !2836
  %inc47 = add i64 %44, 1, !dbg !2836
  store i64 %inc47, i64* %len, align 8, !dbg !2836
  br label %if.end49, !dbg !2836

if.end49:                                         ; preds = %if.end46, %land.lhs.true36, %land.lhs.true33, %for.body29
  %45 = load i64* %i, align 8, !dbg !2837
  %46 = load i8** %arg.addr, align 8, !dbg !2837
  %arrayidx50 = getelementptr inbounds i8* %46, i64 %45, !dbg !2837
  %47 = load i8* %arrayidx50, align 1, !dbg !2837
  store i8 %47, i8* %c, align 1, !dbg !2837
  %48 = load i8* %c, align 1, !dbg !2838
  %conv51 = zext i8 %48 to i32, !dbg !2838
  switch i32 %conv51, label %sw.default197 [
    i32 0, label %sw.bb52
    i32 63, label %sw.bb80
    i32 7, label %sw.bb129
    i32 8, label %sw.bb130
    i32 12, label %sw.bb131
    i32 10, label %sw.bb132
    i32 13, label %sw.bb133
    i32 9, label %sw.bb134
    i32 11, label %sw.bb135
    i32 92, label %sw.bb136
    i32 123, label %sw.bb144
    i32 125, label %sw.bb144
    i32 35, label %sw.bb157
    i32 126, label %sw.bb157
    i32 32, label %sw.bb162
    i32 33, label %sw.bb162
    i32 34, label %sw.bb162
    i32 36, label %sw.bb162
    i32 38, label %sw.bb162
    i32 40, label %sw.bb162
    i32 41, label %sw.bb162
    i32 42, label %sw.bb162
    i32 59, label %sw.bb162
    i32 60, label %sw.bb162
    i32 61, label %sw.bb162
    i32 62, label %sw.bb162
    i32 91, label %sw.bb162
    i32 94, label %sw.bb162
    i32 96, label %sw.bb162
    i32 124, label %sw.bb162
    i32 39, label %sw.bb167
    i32 37, label %sw.epilog339
    i32 43, label %sw.epilog339
    i32 44, label %sw.epilog339
    i32 45, label %sw.epilog339
    i32 46, label %sw.epilog339
    i32 47, label %sw.epilog339
    i32 48, label %sw.epilog339
    i32 49, label %sw.epilog339
    i32 50, label %sw.epilog339
    i32 51, label %sw.epilog339
    i32 52, label %sw.epilog339
    i32 53, label %sw.epilog339
    i32 54, label %sw.epilog339
    i32 55, label %sw.epilog339
    i32 56, label %sw.epilog339
    i32 57, label %sw.epilog339
    i32 58, label %sw.epilog339
    i32 65, label %sw.epilog339
    i32 66, label %sw.epilog339
    i32 67, label %sw.epilog339
    i32 68, label %sw.epilog339
    i32 69, label %sw.epilog339
    i32 70, label %sw.epilog339
    i32 71, label %sw.epilog339
    i32 72, label %sw.epilog339
    i32 73, label %sw.epilog339
    i32 74, label %sw.epilog339
    i32 75, label %sw.epilog339
    i32 76, label %sw.epilog339
    i32 77, label %sw.epilog339
    i32 78, label %sw.epilog339
    i32 79, label %sw.epilog339
    i32 80, label %sw.epilog339
    i32 81, label %sw.epilog339
    i32 82, label %sw.epilog339
    i32 83, label %sw.epilog339
    i32 84, label %sw.epilog339
    i32 85, label %sw.epilog339
    i32 86, label %sw.epilog339
    i32 87, label %sw.epilog339
    i32 88, label %sw.epilog339
    i32 89, label %sw.epilog339
    i32 90, label %sw.epilog339
    i32 93, label %sw.epilog339
    i32 95, label %sw.epilog339
    i32 97, label %sw.epilog339
    i32 98, label %sw.epilog339
    i32 99, label %sw.epilog339
    i32 100, label %sw.epilog339
    i32 101, label %sw.epilog339
    i32 102, label %sw.epilog339
    i32 103, label %sw.epilog339
    i32 104, label %sw.epilog339
    i32 105, label %sw.epilog339
    i32 106, label %sw.epilog339
    i32 107, label %sw.epilog339
    i32 108, label %sw.epilog339
    i32 109, label %sw.epilog339
    i32 110, label %sw.epilog339
    i32 111, label %sw.epilog339
    i32 112, label %sw.epilog339
    i32 113, label %sw.epilog339
    i32 114, label %sw.epilog339
    i32 115, label %sw.epilog339
    i32 116, label %sw.epilog339
    i32 117, label %sw.epilog339
    i32 118, label %sw.epilog339
    i32 119, label %sw.epilog339
    i32 120, label %sw.epilog339
    i32 121, label %sw.epilog339
    i32 122, label %sw.epilog339
  ], !dbg !2838

sw.bb52:                                          ; preds = %if.end49
  %49 = load i8* %backslash_escapes, align 1, !dbg !2839
  %tobool53 = trunc i8 %49 to i1, !dbg !2839
  br i1 %tobool53, label %do.body55, label %sw.epilog339, !dbg !2839

do.body55:                                        ; preds = %sw.bb52
  %50 = load i64* %len, align 8, !dbg !2842
  %51 = load i64* %buffersize.addr, align 8, !dbg !2842
  %cmp56 = icmp ult i64 %50, %51, !dbg !2842
  br i1 %cmp56, label %if.then58, label %if.end60, !dbg !2842

if.then58:                                        ; preds = %do.body55
  %52 = load i64* %len, align 8, !dbg !2842
  %53 = load i8** %buffer.addr, align 8, !dbg !2842
  %arrayidx59 = getelementptr inbounds i8* %53, i64 %52, !dbg !2842
  store i8 92, i8* %arrayidx59, align 1, !dbg !2842
  br label %if.end60, !dbg !2842

if.end60:                                         ; preds = %if.then58, %do.body55
  %54 = load i64* %len, align 8, !dbg !2846
  %inc61 = add i64 %54, 1, !dbg !2846
  store i64 %inc61, i64* %len, align 8, !dbg !2846
  %55 = load i64* %len, align 8, !dbg !2847
  %56 = load i64* %buffersize.addr, align 8, !dbg !2847
  %cmp64 = icmp ult i64 %55, %56, !dbg !2847
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !2847

if.then66:                                        ; preds = %if.end60
  %57 = load i64* %len, align 8, !dbg !2847
  %58 = load i8** %buffer.addr, align 8, !dbg !2847
  %arrayidx67 = getelementptr inbounds i8* %58, i64 %57, !dbg !2847
  store i8 48, i8* %arrayidx67, align 1, !dbg !2847
  br label %if.end68, !dbg !2847

if.end68:                                         ; preds = %if.then66, %if.end60
  %59 = load i64* %len, align 8, !dbg !2850
  %inc69 = add i64 %59, 1, !dbg !2850
  store i64 %inc69, i64* %len, align 8, !dbg !2850
  %60 = load i64* %len, align 8, !dbg !2851
  %61 = load i64* %buffersize.addr, align 8, !dbg !2851
  %cmp72 = icmp ult i64 %60, %61, !dbg !2851
  br i1 %cmp72, label %if.then74, label %if.end76, !dbg !2851

if.then74:                                        ; preds = %if.end68
  %62 = load i64* %len, align 8, !dbg !2851
  %63 = load i8** %buffer.addr, align 8, !dbg !2851
  %arrayidx75 = getelementptr inbounds i8* %63, i64 %62, !dbg !2851
  store i8 48, i8* %arrayidx75, align 1, !dbg !2851
  br label %if.end76, !dbg !2851

if.end76:                                         ; preds = %if.then74, %if.end68
  %64 = load i64* %len, align 8, !dbg !2854
  %inc77 = add i64 %64, 1, !dbg !2854
  store i64 %inc77, i64* %len, align 8, !dbg !2854
  store i8 48, i8* %c, align 1, !dbg !2855
  br label %sw.epilog339, !dbg !2856

sw.bb80:                                          ; preds = %if.end49
  %65 = load i32* %quoting_style.addr, align 4, !dbg !2857
  switch i32 %65, label %sw.epilog339 [
    i32 1, label %use_shell_always_quoting_style
    i32 3, label %sw.bb82
  ], !dbg !2857

sw.bb82:                                          ; preds = %sw.bb80
  %66 = load i64* %i, align 8, !dbg !2858
  %add83 = add i64 %66, 2, !dbg !2858
  %67 = load i64* %argsize.addr, align 8, !dbg !2858
  %cmp84 = icmp ult i64 %add83, %67, !dbg !2858
  br i1 %cmp84, label %land.lhs.true86, label %sw.epilog339, !dbg !2858

land.lhs.true86:                                  ; preds = %sw.bb82
  %68 = load i64* %i, align 8, !dbg !2858
  %add87 = add i64 %68, 1, !dbg !2858
  %69 = load i8** %arg.addr, align 8, !dbg !2858
  %arrayidx88 = getelementptr inbounds i8* %69, i64 %add87, !dbg !2858
  %70 = load i8* %arrayidx88, align 1, !dbg !2858
  %conv89 = sext i8 %70 to i32, !dbg !2858
  %cmp90 = icmp eq i32 %conv89, 63, !dbg !2858
  br i1 %cmp90, label %if.then92, label %sw.epilog339, !dbg !2858

if.then92:                                        ; preds = %land.lhs.true86
  %71 = load i64* %i, align 8, !dbg !2861
  %add93 = add i64 %71, 2, !dbg !2861
  %72 = load i8** %arg.addr, align 8, !dbg !2861
  %arrayidx94 = getelementptr inbounds i8* %72, i64 %add93, !dbg !2861
  %73 = load i8* %arrayidx94, align 1, !dbg !2861
  %conv95 = sext i8 %73 to i32, !dbg !2861
  switch i32 %conv95, label %sw.epilog339 [
    i32 33, label %sw.bb96
    i32 39, label %sw.bb96
    i32 40, label %sw.bb96
    i32 41, label %sw.bb96
    i32 45, label %sw.bb96
    i32 47, label %sw.bb96
    i32 60, label %sw.bb96
    i32 61, label %sw.bb96
    i32 62, label %sw.bb96
  ], !dbg !2861

sw.bb96:                                          ; preds = %if.then92, %if.then92, %if.then92, %if.then92, %if.then92, %if.then92, %if.then92, %if.then92, %if.then92
  %74 = load i64* %i, align 8, !dbg !2862
  %add97 = add i64 %74, 2, !dbg !2862
  %75 = load i8** %arg.addr, align 8, !dbg !2862
  %arrayidx98 = getelementptr inbounds i8* %75, i64 %add97, !dbg !2862
  %76 = load i8* %arrayidx98, align 1, !dbg !2862
  store i8 %76, i8* %c, align 1, !dbg !2862
  %77 = load i64* %i, align 8, !dbg !2864
  %add99 = add i64 %77, 2, !dbg !2864
  store i64 %add99, i64* %i, align 8, !dbg !2864
  %78 = load i64* %len, align 8, !dbg !2865
  %79 = load i64* %buffersize.addr, align 8, !dbg !2865
  %cmp101 = icmp ult i64 %78, %79, !dbg !2865
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !2865

if.then103:                                       ; preds = %sw.bb96
  %80 = load i64* %len, align 8, !dbg !2865
  %81 = load i8** %buffer.addr, align 8, !dbg !2865
  %arrayidx104 = getelementptr inbounds i8* %81, i64 %80, !dbg !2865
  store i8 63, i8* %arrayidx104, align 1, !dbg !2865
  br label %if.end105, !dbg !2865

if.end105:                                        ; preds = %if.then103, %sw.bb96
  %82 = load i64* %len, align 8, !dbg !2868
  %inc106 = add i64 %82, 1, !dbg !2868
  store i64 %inc106, i64* %len, align 8, !dbg !2868
  %83 = load i64* %len, align 8, !dbg !2869
  %84 = load i64* %buffersize.addr, align 8, !dbg !2869
  %cmp109 = icmp ult i64 %83, %84, !dbg !2869
  br i1 %cmp109, label %if.then111, label %if.end113, !dbg !2869

if.then111:                                       ; preds = %if.end105
  %85 = load i64* %len, align 8, !dbg !2869
  %86 = load i8** %buffer.addr, align 8, !dbg !2869
  %arrayidx112 = getelementptr inbounds i8* %86, i64 %85, !dbg !2869
  store i8 92, i8* %arrayidx112, align 1, !dbg !2869
  br label %if.end113, !dbg !2869

if.end113:                                        ; preds = %if.then111, %if.end105
  %87 = load i64* %len, align 8, !dbg !2872
  %inc114 = add i64 %87, 1, !dbg !2872
  store i64 %inc114, i64* %len, align 8, !dbg !2872
  %88 = load i64* %len, align 8, !dbg !2873
  %89 = load i64* %buffersize.addr, align 8, !dbg !2873
  %cmp117 = icmp ult i64 %88, %89, !dbg !2873
  br i1 %cmp117, label %if.then119, label %if.end121, !dbg !2873

if.then119:                                       ; preds = %if.end113
  %90 = load i64* %len, align 8, !dbg !2873
  %91 = load i8** %buffer.addr, align 8, !dbg !2873
  %arrayidx120 = getelementptr inbounds i8* %91, i64 %90, !dbg !2873
  store i8 63, i8* %arrayidx120, align 1, !dbg !2873
  br label %if.end121, !dbg !2873

if.end121:                                        ; preds = %if.then119, %if.end113
  %92 = load i64* %len, align 8, !dbg !2876
  %inc122 = add i64 %92, 1, !dbg !2876
  store i64 %inc122, i64* %len, align 8, !dbg !2876
  br label %sw.epilog339, !dbg !2877

sw.bb129:                                         ; preds = %if.end49
  store i8 97, i8* %esc, align 1, !dbg !2878
  br label %c_escape, !dbg !2878

sw.bb130:                                         ; preds = %if.end49
  store i8 98, i8* %esc, align 1, !dbg !2879
  br label %c_escape, !dbg !2879

sw.bb131:                                         ; preds = %if.end49
  store i8 102, i8* %esc, align 1, !dbg !2880
  br label %c_escape, !dbg !2880

sw.bb132:                                         ; preds = %if.end49
  store i8 110, i8* %esc, align 1, !dbg !2881
  br label %c_and_shell_escape, !dbg !2881

sw.bb133:                                         ; preds = %if.end49
  store i8 114, i8* %esc, align 1, !dbg !2882
  br label %c_and_shell_escape, !dbg !2882

sw.bb134:                                         ; preds = %if.end49
  store i8 116, i8* %esc, align 1, !dbg !2883
  br label %c_and_shell_escape, !dbg !2883

sw.bb135:                                         ; preds = %if.end49
  store i8 118, i8* %esc, align 1, !dbg !2884
  br label %c_escape, !dbg !2884

sw.bb136:                                         ; preds = %if.end49
  %93 = load i8* %c, align 1, !dbg !2885
  store i8 %93, i8* %esc, align 1, !dbg !2885
  br label %c_and_shell_escape, !dbg !2885

c_and_shell_escape:                               ; preds = %sw.bb136, %sw.bb134, %sw.bb133, %sw.bb132
  %94 = load i32* %quoting_style.addr, align 4, !dbg !2886
  %cmp137 = icmp eq i32 %94, 1, !dbg !2886
  br i1 %cmp137, label %use_shell_always_quoting_style, label %c_escape, !dbg !2886

c_escape:                                         ; preds = %c_and_shell_escape, %sw.bb135, %sw.bb131, %sw.bb130, %sw.bb129
  %95 = load i8* %backslash_escapes, align 1, !dbg !2888
  %tobool141 = trunc i8 %95 to i1, !dbg !2888
  br i1 %tobool141, label %if.then142, label %sw.epilog339, !dbg !2888

if.then142:                                       ; preds = %c_escape
  %96 = load i8* %esc, align 1, !dbg !2890
  store i8 %96, i8* %c, align 1, !dbg !2890
  br label %do.body350, !dbg !2892

sw.bb144:                                         ; preds = %if.end49, %if.end49
  %97 = load i64* %argsize.addr, align 8, !dbg !2893
  %cmp145 = icmp eq i64 %97, -1, !dbg !2893
  br i1 %cmp145, label %cond.true147, label %cond.false152, !dbg !2893

cond.true147:                                     ; preds = %sw.bb144
  %98 = load i8** %arg.addr, align 8, !dbg !2893
  %arrayidx148 = getelementptr inbounds i8* %98, i64 1, !dbg !2893
  %99 = load i8* %arrayidx148, align 1, !dbg !2893
  %conv149 = sext i8 %99 to i32, !dbg !2893
  %cmp150 = icmp ne i32 %conv149, 0, !dbg !2893
  %100 = load i64* %i, align 8, !dbg !2895
  %cmp158 = icmp ne i64 %100, 0, !dbg !2895
  %or.cond6 = or i1 %cmp150, %cmp158, !dbg !2893
  %or.cond6.not = xor i1 %or.cond6, true, !dbg !2893
  %.old9 = load i32* %quoting_style.addr, align 4, !dbg !2897
  %cmp163.old = icmp eq i32 %.old9, 1, !dbg !2897
  %or.cond12 = and i1 %or.cond6.not, %cmp163.old, !dbg !2893
  br i1 %or.cond12, label %use_shell_always_quoting_style, label %sw.epilog339, !dbg !2893

cond.false152:                                    ; preds = %sw.bb144
  %101 = load i64* %argsize.addr, align 8, !dbg !2893
  %cmp153 = icmp ne i64 %101, 1, !dbg !2893
  %.old = load i64* %i, align 8, !dbg !2895
  %cmp158.old = icmp ne i64 %.old, 0, !dbg !2895
  %or.cond8 = or i1 %cmp153, %cmp158.old, !dbg !2893
  %or.cond8.not = xor i1 %or.cond8, true, !dbg !2893
  %102 = load i32* %quoting_style.addr, align 4, !dbg !2897
  %cmp163 = icmp eq i32 %102, 1, !dbg !2897
  %or.cond10 = and i1 %or.cond8.not, %cmp163, !dbg !2893
  br i1 %or.cond10, label %use_shell_always_quoting_style, label %sw.epilog339, !dbg !2893

sw.bb157:                                         ; preds = %if.end49, %if.end49
  %.old7 = load i64* %i, align 8, !dbg !2895
  %cmp158.old.old = icmp eq i64 %.old7, 0, !dbg !2895
  %.old11 = load i32* %quoting_style.addr, align 4, !dbg !2897
  %cmp163.old.old = icmp eq i32 %.old11, 1, !dbg !2897
  %or.cond14 = and i1 %cmp158.old.old, %cmp163.old.old, !dbg !2895
  br i1 %or.cond14, label %use_shell_always_quoting_style, label %sw.epilog339, !dbg !2895

sw.bb162:                                         ; preds = %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49
  %.old13 = load i32* %quoting_style.addr, align 4, !dbg !2897
  %cmp163.old.old.old = icmp eq i32 %.old13, 1, !dbg !2897
  br i1 %cmp163.old.old.old, label %use_shell_always_quoting_style, label %sw.epilog339, !dbg !2897

sw.bb167:                                         ; preds = %if.end49
  %103 = load i32* %quoting_style.addr, align 4, !dbg !2899
  switch i32 %103, label %sw.epilog339 [
    i32 1, label %use_shell_always_quoting_style
    i32 2, label %do.body170
  ], !dbg !2899

do.body170:                                       ; preds = %sw.bb167
  %104 = load i64* %len, align 8, !dbg !2900
  %105 = load i64* %buffersize.addr, align 8, !dbg !2900
  %cmp171 = icmp ult i64 %104, %105, !dbg !2900
  br i1 %cmp171, label %if.then173, label %if.end175, !dbg !2900

if.then173:                                       ; preds = %do.body170
  %106 = load i64* %len, align 8, !dbg !2900
  %107 = load i8** %buffer.addr, align 8, !dbg !2900
  %arrayidx174 = getelementptr inbounds i8* %107, i64 %106, !dbg !2900
  store i8 39, i8* %arrayidx174, align 1, !dbg !2900
  br label %if.end175, !dbg !2900

if.end175:                                        ; preds = %if.then173, %do.body170
  %108 = load i64* %len, align 8, !dbg !2904
  %inc176 = add i64 %108, 1, !dbg !2904
  store i64 %inc176, i64* %len, align 8, !dbg !2904
  %109 = load i64* %len, align 8, !dbg !2905
  %110 = load i64* %buffersize.addr, align 8, !dbg !2905
  %cmp179 = icmp ult i64 %109, %110, !dbg !2905
  br i1 %cmp179, label %if.then181, label %if.end183, !dbg !2905

if.then181:                                       ; preds = %if.end175
  %111 = load i64* %len, align 8, !dbg !2905
  %112 = load i8** %buffer.addr, align 8, !dbg !2905
  %arrayidx182 = getelementptr inbounds i8* %112, i64 %111, !dbg !2905
  store i8 92, i8* %arrayidx182, align 1, !dbg !2905
  br label %if.end183, !dbg !2905

if.end183:                                        ; preds = %if.then181, %if.end175
  %113 = load i64* %len, align 8, !dbg !2908
  %inc184 = add i64 %113, 1, !dbg !2908
  store i64 %inc184, i64* %len, align 8, !dbg !2908
  %114 = load i64* %len, align 8, !dbg !2909
  %115 = load i64* %buffersize.addr, align 8, !dbg !2909
  %cmp187 = icmp ult i64 %114, %115, !dbg !2909
  br i1 %cmp187, label %if.then189, label %if.end191, !dbg !2909

if.then189:                                       ; preds = %if.end183
  %116 = load i64* %len, align 8, !dbg !2909
  %117 = load i8** %buffer.addr, align 8, !dbg !2909
  %arrayidx190 = getelementptr inbounds i8* %117, i64 %116, !dbg !2909
  store i8 39, i8* %arrayidx190, align 1, !dbg !2909
  br label %if.end191, !dbg !2909

if.end191:                                        ; preds = %if.then189, %if.end183
  %118 = load i64* %len, align 8, !dbg !2912
  %inc192 = add i64 %118, 1, !dbg !2912
  store i64 %inc192, i64* %len, align 8, !dbg !2912
  br label %sw.epilog339, !dbg !2913

sw.default197:                                    ; preds = %if.end49
  %119 = load i8* %unibyte_locale, align 1, !dbg !2914
  %tobool198 = trunc i8 %119 to i1, !dbg !2914
  br i1 %tobool198, label %if.then199, label %if.else, !dbg !2914

if.then199:                                       ; preds = %sw.default197
  store i64 1, i64* %m, align 8, !dbg !2917
  %120 = load i8* %c, align 1, !dbg !2919
  %conv200 = zext i8 %120 to i32, !dbg !2919
  %idxprom = sext i32 %conv200 to i64, !dbg !2919
  %call201 = call i16** @__ctype_b_loc() #1, !dbg !2919
  %121 = load i16** %call201, align 8, !dbg !2919
  %arrayidx202 = getelementptr inbounds i16* %121, i64 %idxprom, !dbg !2919
  %122 = load i16* %arrayidx202, align 2, !dbg !2919
  %conv203 = zext i16 %122 to i32, !dbg !2919
  %and = and i32 %conv203, 16384, !dbg !2919
  %cmp204 = icmp ne i32 %and, 0, !dbg !2919
  %frombool206 = zext i1 %cmp204 to i8, !dbg !2919
  store i8 %frombool206, i8* %printable, align 1, !dbg !2919
  br label %if.end266, !dbg !2920

if.else:                                          ; preds = %sw.default197
  %123 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !2921
  %124 = call i8* @memset(i8* %123, i32 0, i64 8)
  store i64 0, i64* %m, align 8, !dbg !2923
  store i8 1, i8* %printable, align 1, !dbg !2924
  %125 = load i64* %argsize.addr, align 8, !dbg !2925
  %cmp207 = icmp eq i64 %125, -1, !dbg !2925
  br i1 %cmp207, label %if.then209, label %do.body212, !dbg !2925

if.then209:                                       ; preds = %if.else
  %126 = load i8** %arg.addr, align 8, !dbg !2927
  %call210 = call i64 @strlen(i8* %126) #19, !dbg !2927
  store i64 %call210, i64* %argsize.addr, align 8, !dbg !2927
  br label %do.body212, !dbg !2927

do.body212:                                       ; preds = %if.else, %if.then209, %if.end258
  %127 = load i64* %i, align 8, !dbg !2928
  %128 = load i64* %m, align 8, !dbg !2928
  %add213 = add i64 %127, %128, !dbg !2928
  %129 = load i8** %arg.addr, align 8, !dbg !2928
  %arrayidx214 = getelementptr inbounds i8* %129, i64 %add213, !dbg !2928
  %130 = load i64* %argsize.addr, align 8, !dbg !2928
  %131 = load i64* %i, align 8, !dbg !2928
  %132 = load i64* %m, align 8, !dbg !2928
  %add215 = add i64 %131, %132, !dbg !2928
  %sub = sub i64 %130, %add215, !dbg !2928
  %call216 = call i64 @mbrtowc(i32* %w, i8* %arrayidx214, i64 %sub, %struct.__mbstate_t* %mbstate) #9, !dbg !2928
  store i64 %call216, i64* %bytes, align 8, !dbg !2928
  %133 = load i64* %bytes, align 8, !dbg !2930
  %cmp217 = icmp eq i64 %133, 0, !dbg !2930
  br i1 %cmp217, label %if.end266, label %if.else220, !dbg !2930

if.else220:                                       ; preds = %do.body212
  %134 = load i64* %bytes, align 8, !dbg !2932
  %cmp221 = icmp eq i64 %134, -1, !dbg !2932
  br i1 %cmp221, label %if.then223, label %if.else224, !dbg !2932

if.then223:                                       ; preds = %if.else220
  store i8 0, i8* %printable, align 1, !dbg !2934
  br label %if.end266, !dbg !2936

if.else224:                                       ; preds = %if.else220
  %135 = load i64* %bytes, align 8, !dbg !2937
  %cmp225 = icmp eq i64 %135, -2, !dbg !2937
  br i1 %cmp225, label %if.then227, label %if.else236, !dbg !2937

if.then227:                                       ; preds = %if.else224
  store i8 0, i8* %printable, align 1, !dbg !2939
  br label %while.cond, !dbg !2941

while.cond:                                       ; preds = %while.body, %if.then227
  %136 = load i64* %i, align 8, !dbg !2941
  %137 = load i64* %m, align 8, !dbg !2941
  %add228 = add i64 %136, %137, !dbg !2941
  %138 = load i64* %argsize.addr, align 8, !dbg !2941
  %cmp229 = icmp ult i64 %add228, %138, !dbg !2941
  br i1 %cmp229, label %land.rhs, label %if.end266, !dbg !2941

land.rhs:                                         ; preds = %while.cond
  %139 = load i64* %i, align 8, !dbg !2941
  %140 = load i64* %m, align 8, !dbg !2941
  %add231 = add i64 %139, %140, !dbg !2941
  %141 = load i8** %arg.addr, align 8, !dbg !2941
  %arrayidx232 = getelementptr inbounds i8* %141, i64 %add231, !dbg !2941
  %142 = load i8* %arrayidx232, align 1, !dbg !2941
  %conv233 = sext i8 %142 to i32, !dbg !2941
  %tobool234 = icmp ne i32 %conv233, 0, !dbg !2941
  br i1 %tobool234, label %while.body, label %if.end266

while.body:                                       ; preds = %land.rhs
  %143 = load i64* %m, align 8, !dbg !2942
  %inc235 = add i64 %143, 1, !dbg !2942
  store i64 %inc235, i64* %m, align 8, !dbg !2942
  br label %while.cond, !dbg !2942

if.else236:                                       ; preds = %if.else224
  %144 = load i32* %quoting_style.addr, align 4, !dbg !2943
  %cmp237 = icmp eq i32 %144, 1, !dbg !2943
  br i1 %cmp237, label %if.then239, label %if.end254, !dbg !2943

if.then239:                                       ; preds = %if.else236
  store i64 1, i64* %j, align 8, !dbg !2946
  br label %for.cond240, !dbg !2946

for.cond240:                                      ; preds = %for.inc251, %if.then239
  %145 = load i64* %j, align 8, !dbg !2946
  %146 = load i64* %bytes, align 8, !dbg !2946
  %cmp241 = icmp ult i64 %145, %146, !dbg !2946
  br i1 %cmp241, label %for.body243, label %if.end254, !dbg !2946

for.body243:                                      ; preds = %for.cond240
  %147 = load i64* %i, align 8, !dbg !2949
  %148 = load i64* %m, align 8, !dbg !2949
  %add244 = add i64 %147, %148, !dbg !2949
  %149 = load i64* %j, align 8, !dbg !2949
  %add245 = add i64 %add244, %149, !dbg !2949
  %150 = load i8** %arg.addr, align 8, !dbg !2949
  %arrayidx246 = getelementptr inbounds i8* %150, i64 %add245, !dbg !2949
  %151 = load i8* %arrayidx246, align 1, !dbg !2949
  %conv247 = sext i8 %151 to i32, !dbg !2949
  switch i32 %conv247, label %for.inc251 [
    i32 91, label %use_shell_always_quoting_style
    i32 92, label %use_shell_always_quoting_style
    i32 94, label %use_shell_always_quoting_style
    i32 96, label %use_shell_always_quoting_style
    i32 124, label %use_shell_always_quoting_style
  ], !dbg !2949

for.inc251:                                       ; preds = %for.body243
  %152 = load i64* %j, align 8, !dbg !2946
  %inc252 = add i64 %152, 1, !dbg !2946
  store i64 %inc252, i64* %j, align 8, !dbg !2946
  br label %for.cond240, !dbg !2946

if.end254:                                        ; preds = %for.cond240, %if.else236
  %153 = load i32* %w, align 4, !dbg !2950
  %call255 = call i32 @iswprint(i32 %153) #9, !dbg !2950
  %tobool256 = icmp ne i32 %call255, 0, !dbg !2950
  br i1 %tobool256, label %if.end258, label %if.then257, !dbg !2950

if.then257:                                       ; preds = %if.end254
  store i8 0, i8* %printable, align 1, !dbg !2952
  br label %if.end258, !dbg !2952

if.end258:                                        ; preds = %if.then257, %if.end254
  %154 = load i64* %bytes, align 8, !dbg !2953
  %155 = load i64* %m, align 8, !dbg !2953
  %add259 = add i64 %155, %154, !dbg !2953
  store i64 %add259, i64* %m, align 8, !dbg !2953
  %call263 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #19, !dbg !2954
  %tobool264 = icmp ne i32 %call263, 0, !dbg !2954
  %lnot = xor i1 %tobool264, true, !dbg !2954
  br i1 %lnot, label %do.body212, label %if.end266, !dbg !2954

if.end266:                                        ; preds = %if.then223, %if.end258, %do.body212, %while.cond, %land.rhs, %if.then199
  %156 = load i64* %m, align 8, !dbg !2955
  %cmp267 = icmp ult i64 1, %156, !dbg !2955
  br i1 %cmp267, label %if.then273, label %lor.lhs.false, !dbg !2955

lor.lhs.false:                                    ; preds = %if.end266
  %157 = load i8* %backslash_escapes, align 1, !dbg !2955
  %tobool269 = trunc i8 %157 to i1, !dbg !2955
  br i1 %tobool269, label %land.lhs.true271, label %sw.epilog339, !dbg !2955

land.lhs.true271:                                 ; preds = %lor.lhs.false
  %158 = load i8* %printable, align 1, !dbg !2955
  %tobool272 = trunc i8 %158 to i1, !dbg !2955
  br i1 %tobool272, label %sw.epilog339, label %if.then273, !dbg !2955

if.then273:                                       ; preds = %land.lhs.true271, %if.end266
  %159 = load i64* %i, align 8, !dbg !2957
  %160 = load i64* %m, align 8, !dbg !2957
  %add274 = add i64 %159, %160, !dbg !2957
  store i64 %add274, i64* %ilim, align 8, !dbg !2957
  br label %for.cond275, !dbg !2959

for.cond275:                                      ; preds = %if.end331, %if.then273
  %161 = load i8* %backslash_escapes, align 1, !dbg !2961
  %tobool276 = trunc i8 %161 to i1, !dbg !2961
  br i1 %tobool276, label %land.lhs.true278, label %if.end320, !dbg !2961

land.lhs.true278:                                 ; preds = %for.cond275
  %162 = load i8* %printable, align 1, !dbg !2961
  %tobool279 = trunc i8 %162 to i1, !dbg !2961
  br i1 %tobool279, label %if.end320, label %do.body281, !dbg !2961

do.body281:                                       ; preds = %land.lhs.true278
  %163 = load i64* %len, align 8, !dbg !2964
  %164 = load i64* %buffersize.addr, align 8, !dbg !2964
  %cmp282 = icmp ult i64 %163, %164, !dbg !2964
  br i1 %cmp282, label %if.then284, label %if.end286, !dbg !2964

if.then284:                                       ; preds = %do.body281
  %165 = load i64* %len, align 8, !dbg !2964
  %166 = load i8** %buffer.addr, align 8, !dbg !2964
  %arrayidx285 = getelementptr inbounds i8* %166, i64 %165, !dbg !2964
  store i8 92, i8* %arrayidx285, align 1, !dbg !2964
  br label %if.end286, !dbg !2964

if.end286:                                        ; preds = %if.then284, %do.body281
  %167 = load i64* %len, align 8, !dbg !2968
  %inc287 = add i64 %167, 1, !dbg !2968
  store i64 %inc287, i64* %len, align 8, !dbg !2968
  %168 = load i64* %len, align 8, !dbg !2969
  %169 = load i64* %buffersize.addr, align 8, !dbg !2969
  %cmp291 = icmp ult i64 %168, %169, !dbg !2969
  br i1 %cmp291, label %if.then293, label %if.end298, !dbg !2969

if.then293:                                       ; preds = %if.end286
  %170 = load i8* %c, align 1, !dbg !2969
  %conv294 = zext i8 %170 to i32, !dbg !2969
  %int_cast_to_i642 = zext i32 6 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i642), !dbg !2969
  %shr = ashr i32 %conv294, 6, !dbg !2969
  %add295 = add nsw i32 48, %shr, !dbg !2969
  %conv296 = trunc i32 %add295 to i8, !dbg !2969
  %171 = load i64* %len, align 8, !dbg !2969
  %172 = load i8** %buffer.addr, align 8, !dbg !2969
  %arrayidx297 = getelementptr inbounds i8* %172, i64 %171, !dbg !2969
  store i8 %conv296, i8* %arrayidx297, align 1, !dbg !2969
  br label %if.end298, !dbg !2969

if.end298:                                        ; preds = %if.then293, %if.end286
  %173 = load i64* %len, align 8, !dbg !2972
  %inc299 = add i64 %173, 1, !dbg !2972
  store i64 %inc299, i64* %len, align 8, !dbg !2972
  %174 = load i64* %len, align 8, !dbg !2973
  %175 = load i64* %buffersize.addr, align 8, !dbg !2973
  %cmp303 = icmp ult i64 %174, %175, !dbg !2973
  br i1 %cmp303, label %if.then305, label %if.end312, !dbg !2973

if.then305:                                       ; preds = %if.end298
  %176 = load i8* %c, align 1, !dbg !2973
  %conv306 = zext i8 %176 to i32, !dbg !2973
  %int_cast_to_i643 = zext i32 3 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i643), !dbg !2973
  %shr307 = ashr i32 %conv306, 3, !dbg !2973
  %and308 = and i32 %shr307, 7, !dbg !2973
  %add309 = add nsw i32 48, %and308, !dbg !2973
  %conv310 = trunc i32 %add309 to i8, !dbg !2973
  %177 = load i64* %len, align 8, !dbg !2973
  %178 = load i8** %buffer.addr, align 8, !dbg !2973
  %arrayidx311 = getelementptr inbounds i8* %178, i64 %177, !dbg !2973
  store i8 %conv310, i8* %arrayidx311, align 1, !dbg !2973
  br label %if.end312, !dbg !2973

if.end312:                                        ; preds = %if.then305, %if.end298
  %179 = load i64* %len, align 8, !dbg !2976
  %inc313 = add i64 %179, 1, !dbg !2976
  store i64 %inc313, i64* %len, align 8, !dbg !2976
  %180 = load i8* %c, align 1, !dbg !2977
  %conv316 = zext i8 %180 to i32, !dbg !2977
  %and317 = and i32 %conv316, 7, !dbg !2977
  %add318 = add nsw i32 48, %and317, !dbg !2977
  %conv319 = trunc i32 %add318 to i8, !dbg !2977
  store i8 %conv319, i8* %c, align 1, !dbg !2977
  br label %if.end320, !dbg !2978

if.end320:                                        ; preds = %if.end312, %land.lhs.true278, %for.cond275
  %181 = load i64* %ilim, align 8, !dbg !2979
  %182 = load i64* %i, align 8, !dbg !2979
  %add321 = add i64 %182, 1, !dbg !2979
  %cmp322 = icmp ule i64 %181, %add321, !dbg !2979
  br i1 %cmp322, label %do.body359, label %do.body326, !dbg !2979

do.body326:                                       ; preds = %if.end320
  %183 = load i64* %len, align 8, !dbg !2981
  %184 = load i64* %buffersize.addr, align 8, !dbg !2981
  %cmp327 = icmp ult i64 %183, %184, !dbg !2981
  br i1 %cmp327, label %if.then329, label %if.end331, !dbg !2981

if.then329:                                       ; preds = %do.body326
  %185 = load i8* %c, align 1, !dbg !2981
  %186 = load i64* %len, align 8, !dbg !2981
  %187 = load i8** %buffer.addr, align 8, !dbg !2981
  %arrayidx330 = getelementptr inbounds i8* %187, i64 %186, !dbg !2981
  store i8 %185, i8* %arrayidx330, align 1, !dbg !2981
  br label %if.end331, !dbg !2981

if.end331:                                        ; preds = %if.then329, %do.body326
  %188 = load i64* %len, align 8, !dbg !2984
  %inc332 = add i64 %188, 1, !dbg !2984
  store i64 %inc332, i64* %len, align 8, !dbg !2984
  %189 = load i64* %i, align 8, !dbg !2985
  %inc335 = add i64 %189, 1, !dbg !2985
  store i64 %inc335, i64* %i, align 8, !dbg !2985
  %190 = load i8** %arg.addr, align 8, !dbg !2985
  %arrayidx336 = getelementptr inbounds i8* %190, i64 %inc335, !dbg !2985
  %191 = load i8* %arrayidx336, align 1, !dbg !2985
  store i8 %191, i8* %c, align 1, !dbg !2985
  br label %for.cond275, !dbg !2986

sw.epilog339:                                     ; preds = %sw.bb157, %cond.true147, %cond.false152, %lor.lhs.false, %land.lhs.true271, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end
  %192 = load i8* %backslash_escapes, align 1, !dbg !2987
  %tobool340 = trunc i8 %192 to i1, !dbg !2987
  br i1 %tobool340, label %land.lhs.true342, label %do.body359, !dbg !2987

land.lhs.true342:                                 ; preds = %sw.epilog339
  %193 = load i8* %c, align 1, !dbg !2987
  %conv343 = zext i8 %193 to i64, !dbg !2987
  %int_cast_to_i64 = bitcast i64 32 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !2987
  %div = udiv i64 %conv343, 32, !dbg !2987
  %194 = load %struct.quoting_options** %o.addr, align 8, !dbg !2987
  %quote_these_too = getelementptr inbounds %struct.quoting_options* %194, i32 0, i32 1, !dbg !2987
  %arrayidx344 = getelementptr inbounds [8 x i32]* %quote_these_too, i32 0, i64 %div, !dbg !2987
  %195 = load i32* %arrayidx344, align 4, !dbg !2987
  %196 = load i8* %c, align 1, !dbg !2987
  %conv345 = zext i8 %196 to i64, !dbg !2987
  %int_cast_to_i641 = bitcast i64 32 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !2987
  %rem = urem i64 %conv345, 32, !dbg !2987
  %sh_prom = trunc i64 %rem to i32, !dbg !2987
  %int_cast_to_i644 = zext i32 %sh_prom to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i644), !dbg !2987
  %shl = shl i32 1, %sh_prom, !dbg !2987
  %and346 = and i32 %195, %shl, !dbg !2987
  %tobool347 = icmp ne i32 %and346, 0, !dbg !2987
  br i1 %tobool347, label %do.body350, label %do.body359, !dbg !2987

do.body350:                                       ; preds = %if.then142, %land.lhs.true342
  %197 = load i64* %len, align 8, !dbg !2989
  %198 = load i64* %buffersize.addr, align 8, !dbg !2989
  %cmp351 = icmp ult i64 %197, %198, !dbg !2989
  br i1 %cmp351, label %if.then353, label %if.end355, !dbg !2989

if.then353:                                       ; preds = %do.body350
  %199 = load i64* %len, align 8, !dbg !2989
  %200 = load i8** %buffer.addr, align 8, !dbg !2989
  %arrayidx354 = getelementptr inbounds i8* %200, i64 %199, !dbg !2989
  store i8 92, i8* %arrayidx354, align 1, !dbg !2989
  br label %if.end355, !dbg !2989

if.end355:                                        ; preds = %if.then353, %do.body350
  %201 = load i64* %len, align 8, !dbg !2992
  %inc356 = add i64 %201, 1, !dbg !2992
  store i64 %inc356, i64* %len, align 8, !dbg !2992
  br label %do.body359, !dbg !2992

do.body359:                                       ; preds = %if.end355, %if.end320, %land.lhs.true342, %sw.epilog339
  %202 = load i64* %len, align 8, !dbg !2993
  %203 = load i64* %buffersize.addr, align 8, !dbg !2993
  %cmp360 = icmp ult i64 %202, %203, !dbg !2993
  br i1 %cmp360, label %if.then362, label %if.end364, !dbg !2993

if.then362:                                       ; preds = %do.body359
  %204 = load i8* %c, align 1, !dbg !2993
  %205 = load i64* %len, align 8, !dbg !2993
  %206 = load i8** %buffer.addr, align 8, !dbg !2993
  %arrayidx363 = getelementptr inbounds i8* %206, i64 %205, !dbg !2993
  store i8 %204, i8* %arrayidx363, align 1, !dbg !2993
  br label %if.end364, !dbg !2993

if.end364:                                        ; preds = %if.then362, %do.body359
  %207 = load i64* %len, align 8, !dbg !2996
  %inc365 = add i64 %207, 1, !dbg !2996
  store i64 %inc365, i64* %len, align 8, !dbg !2996
  %208 = load i64* %i, align 8, !dbg !2827
  %inc369 = add i64 %208, 1, !dbg !2827
  store i64 %inc369, i64* %i, align 8, !dbg !2827
  br label %for.cond22, !dbg !2827

for.end370:                                       ; preds = %cond.false, %cond.true
  %209 = load i64* %i, align 8, !dbg !2997
  %cmp371 = icmp eq i64 %209, 0, !dbg !2997
  %210 = load i32* %quoting_style.addr, align 4, !dbg !2997
  %cmp374 = icmp eq i32 %210, 1, !dbg !2997
  %or.cond5 = and i1 %cmp371, %cmp374, !dbg !2997
  br i1 %or.cond5, label %use_shell_always_quoting_style, label %if.end377, !dbg !2997

if.end377:                                        ; preds = %for.end370
  %211 = load i8** %quote_string, align 8, !dbg !2999
  %tobool378 = icmp ne i8* %211, null, !dbg !2999
  br i1 %tobool378, label %for.cond380, label %if.end395, !dbg !2999

for.cond380:                                      ; preds = %if.end377, %if.end388
  %212 = load i8** %quote_string, align 8, !dbg !3001
  %213 = load i8* %212, align 1, !dbg !3001
  %tobool381 = icmp ne i8 %213, 0, !dbg !3001
  br i1 %tobool381, label %do.body383, label %if.end395, !dbg !3001

do.body383:                                       ; preds = %for.cond380
  %214 = load i64* %len, align 8, !dbg !3003
  %215 = load i64* %buffersize.addr, align 8, !dbg !3003
  %cmp384 = icmp ult i64 %214, %215, !dbg !3003
  br i1 %cmp384, label %if.then386, label %if.end388, !dbg !3003

if.then386:                                       ; preds = %do.body383
  %216 = load i8** %quote_string, align 8, !dbg !3003
  %217 = load i8* %216, align 1, !dbg !3003
  %218 = load i64* %len, align 8, !dbg !3003
  %219 = load i8** %buffer.addr, align 8, !dbg !3003
  %arrayidx387 = getelementptr inbounds i8* %219, i64 %218, !dbg !3003
  store i8 %217, i8* %arrayidx387, align 1, !dbg !3003
  br label %if.end388, !dbg !3003

if.end388:                                        ; preds = %if.then386, %do.body383
  %220 = load i64* %len, align 8, !dbg !3006
  %inc389 = add i64 %220, 1, !dbg !3006
  store i64 %inc389, i64* %len, align 8, !dbg !3006
  %221 = load i8** %quote_string, align 8, !dbg !3001
  %incdec.ptr393 = getelementptr inbounds i8* %221, i32 1, !dbg !3001
  store i8* %incdec.ptr393, i8** %quote_string, align 8, !dbg !3001
  br label %for.cond380, !dbg !3001

if.end395:                                        ; preds = %for.cond380, %if.end377
  %222 = load i64* %len, align 8, !dbg !3007
  %223 = load i64* %buffersize.addr, align 8, !dbg !3007
  %cmp396 = icmp ult i64 %222, %223, !dbg !3007
  br i1 %cmp396, label %if.then398, label %if.end400, !dbg !3007

if.then398:                                       ; preds = %if.end395
  %224 = load i64* %len, align 8, !dbg !3009
  %225 = load i8** %buffer.addr, align 8, !dbg !3009
  %arrayidx399 = getelementptr inbounds i8* %225, i64 %224, !dbg !3009
  store i8 0, i8* %arrayidx399, align 1, !dbg !3009
  br label %if.end400, !dbg !3009

if.end400:                                        ; preds = %if.then398, %if.end395
  %226 = load i64* %len, align 8, !dbg !3010
  store i64 %226, i64* %retval, !dbg !3010
  br label %return, !dbg !3010

use_shell_always_quoting_style:                   ; preds = %sw.bb157, %cond.true147, %cond.false152, %for.end370, %for.body243, %for.body243, %for.body243, %for.body243, %for.body243, %sw.bb167, %sw.bb162, %c_and_shell_escape, %sw.bb80
  %227 = load i8** %buffer.addr, align 8, !dbg !3011
  %228 = load i64* %buffersize.addr, align 8, !dbg !3011
  %229 = load i8** %arg.addr, align 8, !dbg !3011
  %230 = load i64* %argsize.addr, align 8, !dbg !3011
  %231 = load %struct.quoting_options** %o.addr, align 8, !dbg !3011
  %call401 = call i64 @quotearg_buffer_restyled(i8* %227, i64 %228, i8* %229, i64 %230, i32 2, %struct.quoting_options* %231), !dbg !3011
  store i64 %call401, i64* %retval, !dbg !3011
  br label %return, !dbg !3011

return:                                           ; preds = %use_shell_always_quoting_style, %if.end400
  %232 = load i64* %retval, !dbg !3012
  ret i64 %232, !dbg !3012
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #0 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %n0 = alloca i32, align 4
  %sv = alloca %struct.slotvec*, align 8
  %n1 = alloca i64, align 8
  %preallocated = alloca i8, align 1
  %size = alloca i64, align 8
  %val = alloca i8*, align 8
  %qsize = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  store i64 %argsize, i64* %argsize.addr, align 8
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8
  %call = call i32* @__errno_location() #1, !dbg !3013
  %0 = load i32* %call, align 4, !dbg !3013
  store i32 %0, i32* %e, align 4, !dbg !3013
  %1 = load i32* %n.addr, align 4, !dbg !3014
  store i32 %1, i32* %n0, align 4, !dbg !3014
  %2 = load %struct.slotvec** @slotvec, align 8, !dbg !3015
  store %struct.slotvec* %2, %struct.slotvec** %sv, align 8, !dbg !3015
  %3 = load i32* %n.addr, align 4, !dbg !3016
  %cmp = icmp slt i32 %3, 0, !dbg !3016
  br i1 %cmp, label %if.then, label %if.end, !dbg !3016

if.then:                                          ; preds = %entry
  call void @abort() #17, !dbg !3018
  unreachable, !dbg !3018

if.end:                                           ; preds = %entry
  %4 = load i32* @nslots, align 4, !dbg !3019
  %5 = load i32* %n0, align 4, !dbg !3019
  %cmp1 = icmp ule i32 %4, %5, !dbg !3019
  br i1 %cmp1, label %if.then2, label %if.end17, !dbg !3019

if.then2:                                         ; preds = %if.end
  %6 = load i32* %n0, align 4, !dbg !3021
  %add = add i32 %6, 1, !dbg !3021
  %conv = zext i32 %add to i64, !dbg !3021
  store i64 %conv, i64* %n1, align 8, !dbg !3021
  %7 = load %struct.slotvec** %sv, align 8, !dbg !3023
  %cmp3 = icmp eq %struct.slotvec* %7, @slotvec0, !dbg !3023
  %frombool = zext i1 %cmp3 to i8, !dbg !3023
  store i8 %frombool, i8* %preallocated, align 1, !dbg !3023
  %8 = load i64* %n1, align 8, !dbg !3024
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !3024
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !3024

if.then7:                                         ; preds = %if.then2
  call void @xalloc_die() #20, !dbg !3026
  unreachable, !dbg !3026

if.end8:                                          ; preds = %if.then2
  %9 = load i8* %preallocated, align 1, !dbg !3027
  %tobool = trunc i8 %9 to i1, !dbg !3027
  %10 = load %struct.slotvec** %sv, align 8, !dbg !3027
  %cond = select i1 %tobool, %struct.slotvec* null, %struct.slotvec* %10, !dbg !3027
  %11 = bitcast %struct.slotvec* %cond to i8*, !dbg !3027
  %12 = load i64* %n1, align 8, !dbg !3027
  %mul = mul i64 %12, 16, !dbg !3027
  %call10 = call i8* @xrealloc(i8* %11, i64 %mul), !dbg !3027
  %13 = bitcast i8* %call10 to %struct.slotvec*, !dbg !3027
  store %struct.slotvec* %13, %struct.slotvec** %sv, align 8, !dbg !3027
  store %struct.slotvec* %13, %struct.slotvec** @slotvec, align 8, !dbg !3027
  %14 = load i8* %preallocated, align 1, !dbg !3028
  %tobool11 = trunc i8 %14 to i1, !dbg !3028
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !3028

if.then12:                                        ; preds = %if.end8
  %15 = load %struct.slotvec** %sv, align 8, !dbg !3030
  %16 = bitcast %struct.slotvec* %15 to i8*, !dbg !3030
  %17 = call i8* @memcpy(i8* %16, i8* bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16)
  br label %if.end13, !dbg !3030

if.end13:                                         ; preds = %if.then12, %if.end8
  %18 = load %struct.slotvec** %sv, align 8, !dbg !3031
  %19 = load i32* @nslots, align 4, !dbg !3031
  %idx.ext = zext i32 %19 to i64, !dbg !3031
  %add.ptr = getelementptr inbounds %struct.slotvec* %18, i64 %idx.ext, !dbg !3031
  %20 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !3031
  %21 = load i64* %n1, align 8, !dbg !3031
  %22 = load i32* @nslots, align 4, !dbg !3031
  %conv14 = zext i32 %22 to i64, !dbg !3031
  %sub = sub i64 %21, %conv14, !dbg !3031
  %mul15 = mul i64 %sub, 16, !dbg !3031
  %23 = call i8* @memset(i8* %20, i32 0, i64 %mul15)
  %24 = load i64* %n1, align 8, !dbg !3032
  %conv16 = trunc i64 %24 to i32, !dbg !3032
  store i32 %conv16, i32* @nslots, align 4, !dbg !3032
  br label %if.end17, !dbg !3033

if.end17:                                         ; preds = %if.end13, %if.end
  %25 = load i32* %n.addr, align 4, !dbg !3034
  %idxprom = sext i32 %25 to i64, !dbg !3034
  %26 = load %struct.slotvec** %sv, align 8, !dbg !3034
  %arrayidx = getelementptr inbounds %struct.slotvec* %26, i64 %idxprom, !dbg !3034
  %size18 = getelementptr inbounds %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !3034
  %27 = load i64* %size18, align 8, !dbg !3034
  store i64 %27, i64* %size, align 8, !dbg !3034
  %28 = load i32* %n.addr, align 4, !dbg !3036
  %idxprom19 = sext i32 %28 to i64, !dbg !3036
  %29 = load %struct.slotvec** %sv, align 8, !dbg !3036
  %arrayidx20 = getelementptr inbounds %struct.slotvec* %29, i64 %idxprom19, !dbg !3036
  %val21 = getelementptr inbounds %struct.slotvec* %arrayidx20, i32 0, i32 1, !dbg !3036
  %30 = load i8** %val21, align 8, !dbg !3036
  store i8* %30, i8** %val, align 8, !dbg !3036
  %31 = load i8** %val, align 8, !dbg !3037
  %32 = load i64* %size, align 8, !dbg !3037
  %33 = load i8** %arg.addr, align 8, !dbg !3037
  %34 = load i64* %argsize.addr, align 8, !dbg !3037
  %35 = load %struct.quoting_options** %options.addr, align 8, !dbg !3037
  %call22 = call i64 @quotearg_buffer(i8* %31, i64 %32, i8* %33, i64 %34, %struct.quoting_options* %35), !dbg !3037
  store i64 %call22, i64* %qsize, align 8, !dbg !3037
  %36 = load i64* %size, align 8, !dbg !3038
  %37 = load i64* %qsize, align 8, !dbg !3038
  %cmp23 = icmp ule i64 %36, %37, !dbg !3038
  br i1 %cmp23, label %if.then25, label %if.end39, !dbg !3038

if.then25:                                        ; preds = %if.end17
  %38 = load i64* %qsize, align 8, !dbg !3040
  %add26 = add i64 %38, 1, !dbg !3040
  store i64 %add26, i64* %size, align 8, !dbg !3040
  %39 = load i32* %n.addr, align 4, !dbg !3040
  %idxprom27 = sext i32 %39 to i64, !dbg !3040
  %40 = load %struct.slotvec** %sv, align 8, !dbg !3040
  %arrayidx28 = getelementptr inbounds %struct.slotvec* %40, i64 %idxprom27, !dbg !3040
  %size29 = getelementptr inbounds %struct.slotvec* %arrayidx28, i32 0, i32 0, !dbg !3040
  store i64 %add26, i64* %size29, align 8, !dbg !3040
  %41 = load i8** %val, align 8, !dbg !3042
  %cmp30 = icmp ne i8* %41, getelementptr inbounds ([256 x i8]* @slot0, i32 0, i32 0), !dbg !3042
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !3042

if.then32:                                        ; preds = %if.then25
  %42 = load i8** %val, align 8, !dbg !3044
  call void @free(i8* %42) #9, !dbg !3044
  br label %if.end33, !dbg !3044

if.end33:                                         ; preds = %if.then32, %if.then25
  %43 = load i64* %size, align 8, !dbg !3045
  %call34 = call i8* @xcharalloc(i64 %43), !dbg !3045
  store i8* %call34, i8** %val, align 8, !dbg !3045
  %44 = load i32* %n.addr, align 4, !dbg !3045
  %idxprom35 = sext i32 %44 to i64, !dbg !3045
  %45 = load %struct.slotvec** %sv, align 8, !dbg !3045
  %arrayidx36 = getelementptr inbounds %struct.slotvec* %45, i64 %idxprom35, !dbg !3045
  %val37 = getelementptr inbounds %struct.slotvec* %arrayidx36, i32 0, i32 1, !dbg !3045
  store i8* %call34, i8** %val37, align 8, !dbg !3045
  %46 = load i8** %val, align 8, !dbg !3046
  %47 = load i64* %size, align 8, !dbg !3046
  %48 = load i8** %arg.addr, align 8, !dbg !3046
  %49 = load i64* %argsize.addr, align 8, !dbg !3046
  %50 = load %struct.quoting_options** %options.addr, align 8, !dbg !3046
  %call38 = call i64 @quotearg_buffer(i8* %46, i64 %47, i8* %48, i64 %49, %struct.quoting_options* %50), !dbg !3046
  br label %if.end39, !dbg !3047

if.end39:                                         ; preds = %if.end33, %if.end17
  %51 = load i32* %e, align 4, !dbg !3048
  %call40 = call i32* @__errno_location() #1, !dbg !3048
  store i32 %51, i32* %call40, align 4, !dbg !3048
  %52 = load i8** %val, align 8, !dbg !3049
  ret i8* %52, !dbg !3049
}

; Function Attrs: nounwind uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #0 {
entry:
  %style.addr = alloca i32, align 4
  %o = alloca %struct.quoting_options, align 4
  store i32 %style, i32* %style.addr, align 4
  %0 = load i32* %style.addr, align 4, !dbg !3050
  %style1 = getelementptr inbounds %struct.quoting_options* %o, i32 0, i32 0, !dbg !3050
  store i32 %0, i32* %style1, align 4, !dbg !3050
  %quote_these_too = getelementptr inbounds %struct.quoting_options* %o, i32 0, i32 1, !dbg !3051
  %1 = bitcast [8 x i32]* %quote_these_too to i8*, !dbg !3051
  %2 = call i8* @memset(i8* %1, i32 0, i64 32)
  %3 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !3052
  %4 = bitcast %struct.quoting_options* %o to i8*, !dbg !3052
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 36)
  ret void, !dbg !3052
}

; Function Attrs: nounwind uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #0 {
entry:
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8
  store i8* %msgid, i8** %msgid.addr, align 8
  store i32 %s, i32* %s.addr, align 4
  %0 = load i8** %msgid.addr, align 8, !dbg !3053
  store i8* %0, i8** %translation, align 8, !dbg !3053
  %1 = load i8** %translation, align 8, !dbg !3054
  %2 = load i8** %msgid.addr, align 8, !dbg !3054
  %cmp = icmp eq i8* %1, %2, !dbg !3054
  %3 = load i32* %s.addr, align 4, !dbg !3054
  %cmp1 = icmp eq i32 %3, 6, !dbg !3054
  %or.cond = and i1 %cmp, %cmp1, !dbg !3054
  %. = select i1 %or.cond, i8* getelementptr inbounds ([2 x i8]* @.str7184, i32 0, i32 0), i8* %0, !dbg !3054
  store i8* %., i8** %translation, align 8, !dbg !3056
  %4 = load i8** %translation, align 8, !dbg !3057
  ret i8* %4, !dbg !3057
}

; Function Attrs: nounwind uwtable
define %struct.dev_ino* @get_root_dev_ino(%struct.dev_ino* %root_d_i) #0 {
entry:
  %retval = alloca %struct.dev_ino*, align 8
  %root_d_i.addr = alloca %struct.dev_ino*, align 8
  %statbuf = alloca %struct.stat, align 8
  store %struct.dev_ino* %root_d_i, %struct.dev_ino** %root_d_i.addr, align 8
  %call = call i32 @lstat(i8* getelementptr inbounds ([2 x i8]* @.str191, i32 0, i32 0), %struct.stat* %statbuf) #9, !dbg !3058
  %tobool = icmp ne i32 %call, 0, !dbg !3058
  br i1 %tobool, label %if.then, label %if.end, !dbg !3058

if.then:                                          ; preds = %entry
  store %struct.dev_ino* null, %struct.dev_ino** %retval, !dbg !3060
  br label %return, !dbg !3060

if.end:                                           ; preds = %entry
  %st_ino = getelementptr inbounds %struct.stat* %statbuf, i32 0, i32 1, !dbg !3061
  %0 = load i64* %st_ino, align 8, !dbg !3061
  %1 = load %struct.dev_ino** %root_d_i.addr, align 8, !dbg !3061
  %st_ino1 = getelementptr inbounds %struct.dev_ino* %1, i32 0, i32 0, !dbg !3061
  store i64 %0, i64* %st_ino1, align 8, !dbg !3061
  %st_dev = getelementptr inbounds %struct.stat* %statbuf, i32 0, i32 0, !dbg !3062
  %2 = load i64* %st_dev, align 8, !dbg !3062
  %3 = load %struct.dev_ino** %root_d_i.addr, align 8, !dbg !3062
  %st_dev2 = getelementptr inbounds %struct.dev_ino* %3, i32 0, i32 1, !dbg !3062
  store i64 %2, i64* %st_dev2, align 8, !dbg !3062
  %4 = load %struct.dev_ino** %root_d_i.addr, align 8, !dbg !3063
  store %struct.dev_ino* %4, %struct.dev_ino** %retval, !dbg !3063
  br label %return, !dbg !3063

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.dev_ino** %retval, !dbg !3064
  ret %struct.dev_ino* %5, !dbg !3064
}

; Function Attrs: nounwind uwtable
define i8* @xnmalloc(i64 %n, i64 %s) #0 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64* %s.addr, align 8, !dbg !3065
  %int_cast_to_i64 = bitcast i64 %0 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !3065
  %div = udiv i64 -1, %0, !dbg !3065
  %1 = load i64* %n.addr, align 8, !dbg !3065
  %cmp = icmp ult i64 %div, %1, !dbg !3065
  br i1 %cmp, label %if.then, label %if.end, !dbg !3065

if.then:                                          ; preds = %entry
  call void @xalloc_die() #20, !dbg !3067
  unreachable, !dbg !3067

if.end:                                           ; preds = %entry
  %2 = load i64* %n.addr, align 8, !dbg !3068
  %3 = load i64* %s.addr, align 8, !dbg !3068
  %mul = mul i64 %2, %3, !dbg !3068
  %call = call i8* @xmalloc(i64 %mul), !dbg !3068
  ret i8* %call, !dbg !3068
}

; Function Attrs: nounwind uwtable
define i8* @xmalloc(i64 %n) #0 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  store i64 %n, i64* %n.addr, align 8
  %0 = load i64* %n.addr, align 8, !dbg !3069
  %call = call noalias i8* @malloc(i64 %0) #9, !dbg !3069
  store i8* %call, i8** %p, align 8, !dbg !3069
  %1 = load i8** %p, align 8, !dbg !3071
  %tobool = icmp eq i8* %1, null, !dbg !3071
  %2 = load i64* %n.addr, align 8, !dbg !3071
  %cmp = icmp ne i64 %2, 0, !dbg !3071
  %or.cond = and i1 %tobool, %cmp, !dbg !3071
  br i1 %or.cond, label %if.then, label %if.end, !dbg !3071

if.then:                                          ; preds = %entry
  call void @xalloc_die() #20, !dbg !3073
  unreachable, !dbg !3073

if.end:                                           ; preds = %entry
  %3 = load i8** %p, align 8, !dbg !3074
  ret i8* %3, !dbg !3074
}

; Function Attrs: nounwind uwtable
define i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64 %n, i64* %n.addr, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64* %s.addr, align 8, !dbg !3075
  %int_cast_to_i64 = bitcast i64 %0 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !3075
  %div = udiv i64 -1, %0, !dbg !3075
  %1 = load i64* %n.addr, align 8, !dbg !3075
  %cmp = icmp ult i64 %div, %1, !dbg !3075
  br i1 %cmp, label %if.then, label %if.end, !dbg !3075

if.then:                                          ; preds = %entry
  call void @xalloc_die() #20, !dbg !3077
  unreachable, !dbg !3077

if.end:                                           ; preds = %entry
  %2 = load i8** %p.addr, align 8, !dbg !3078
  %3 = load i64* %n.addr, align 8, !dbg !3078
  %4 = load i64* %s.addr, align 8, !dbg !3078
  %mul = mul i64 %3, %4, !dbg !3078
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !3078
  ret i8* %call, !dbg !3078
}

; Function Attrs: nounwind uwtable
define i8* @xrealloc(i8* %p, i64 %n) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64 %n, i64* %n.addr, align 8
  %0 = load i8** %p.addr, align 8, !dbg !3079
  %1 = load i64* %n.addr, align 8, !dbg !3079
  %call = call i8* @realloc(i8* %0, i64 %1) #9, !dbg !3079
  store i8* %call, i8** %p.addr, align 8, !dbg !3079
  %2 = load i8** %p.addr, align 8, !dbg !3080
  %tobool = icmp eq i8* %2, null, !dbg !3080
  %3 = load i64* %n.addr, align 8, !dbg !3080
  %cmp = icmp ne i64 %3, 0, !dbg !3080
  %or.cond = and i1 %tobool, %cmp, !dbg !3080
  br i1 %or.cond, label %if.then, label %if.end, !dbg !3080

if.then:                                          ; preds = %entry
  call void @xalloc_die() #20, !dbg !3082
  unreachable, !dbg !3082

if.end:                                           ; preds = %entry
  %4 = load i8** %p.addr, align 8, !dbg !3083
  ret i8* %4, !dbg !3083
}

; Function Attrs: nounwind uwtable
define i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64* %pn, i64** %pn.addr, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64** %pn.addr, align 8, !dbg !3084
  %1 = load i64* %0, align 8, !dbg !3084
  store i64 %1, i64* %n, align 8, !dbg !3084
  %2 = load i8** %p.addr, align 8, !dbg !3085
  %tobool = icmp ne i8* %2, null, !dbg !3085
  br i1 %tobool, label %if.else, label %if.then, !dbg !3085

if.then:                                          ; preds = %entry
  %3 = load i64* %n, align 8, !dbg !3087
  %tobool1 = icmp ne i64 %3, 0, !dbg !3087
  br i1 %tobool1, label %if.end8, label %if.then2, !dbg !3087

if.then2:                                         ; preds = %if.then
  %4 = load i64* %s.addr, align 8, !dbg !3090
  %int_cast_to_i64 = bitcast i64 %4 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i64), !dbg !3090
  %div = udiv i64 64, %4, !dbg !3090
  store i64 %div, i64* %n, align 8, !dbg !3090
  %5 = load i64* %n, align 8, !dbg !3092
  %tobool3 = icmp ne i64 %5, 0, !dbg !3092
  %lnot = xor i1 %tobool3, true, !dbg !3092
  %lnot.ext = zext i1 %lnot to i32, !dbg !3092
  %conv = sext i32 %lnot.ext to i64, !dbg !3092
  %6 = load i64* %n, align 8, !dbg !3092
  %add = add i64 %6, %conv, !dbg !3092
  store i64 %add, i64* %n, align 8, !dbg !3092
  br label %if.end8, !dbg !3093

if.else:                                          ; preds = %entry
  %7 = load i64* %s.addr, align 8, !dbg !3094
  %int_cast_to_i641 = bitcast i64 %7 to i64
  call void @klee_div_zero_check(i64 %int_cast_to_i641), !dbg !3094
  %div4 = udiv i64 9223372036854775807, %7, !dbg !3094
  %8 = load i64* %n, align 8, !dbg !3094
  %cmp = icmp ult i64 %div4, %8, !dbg !3094
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !3094

if.then6:                                         ; preds = %if.else
  call void @xalloc_die() #20, !dbg !3097
  unreachable, !dbg !3097

if.end7:                                          ; preds = %if.else
  %9 = load i64* %n, align 8, !dbg !3098
  %mul = mul i64 %9, 2, !dbg !3098
  store i64 %mul, i64* %n, align 8, !dbg !3098
  br label %if.end8

if.end8:                                          ; preds = %if.then, %if.then2, %if.end7
  %10 = load i64* %n, align 8, !dbg !3099
  %11 = load i64** %pn.addr, align 8, !dbg !3099
  store i64 %10, i64* %11, align 8, !dbg !3099
  %12 = load i8** %p.addr, align 8, !dbg !3100
  %13 = load i64* %n, align 8, !dbg !3100
  %14 = load i64* %s.addr, align 8, !dbg !3100
  %mul9 = mul i64 %13, %14, !dbg !3100
  %call = call i8* @xrealloc(i8* %12, i64 %mul9), !dbg !3100
  ret i8* %call, !dbg !3100
}

; Function Attrs: nounwind uwtable
define i8* @xcharalloc(i64 %n) #0 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  %0 = load i64* %n.addr, align 8, !dbg !3101
  %call = call i8* @xmalloc(i64 %0), !dbg !3101
  ret i8* %call, !dbg !3101
}

; Function Attrs: nounwind uwtable
define i8* @x2realloc(i8* %p, i64* %pn) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64* %pn, i64** %pn.addr, align 8
  %0 = load i8** %p.addr, align 8, !dbg !3102
  %1 = load i64** %pn.addr, align 8, !dbg !3102
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !3102
  ret i8* %call, !dbg !3102
}

; Function Attrs: nounwind uwtable
define i8* @xzalloc(i64 %s) #0 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64* %s.addr, align 8, !dbg !3103
  %call = call i8* @xmalloc(i64 %0), !dbg !3103
  %1 = load i64* %s.addr, align 8, !dbg !3103
  %2 = call i8* @memset(i8* %call, i32 0, i64 %1)
  ret i8* %call, !dbg !3103
}

; Function Attrs: nounwind uwtable
define i8* @xcalloc(i64 %n, i64 %s) #0 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  store i64 %n, i64* %n.addr, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64* %n.addr, align 8, !dbg !3104
  %1 = load i64* %s.addr, align 8, !dbg !3104
  %call = call noalias i8* @calloc(i64 %0, i64 %1) #9, !dbg !3104
  store i8* %call, i8** %p, align 8, !dbg !3104
  %tobool = icmp ne i8* %call, null, !dbg !3104
  br i1 %tobool, label %if.end, label %if.then, !dbg !3104

if.then:                                          ; preds = %entry
  call void @xalloc_die() #20, !dbg !3106
  unreachable, !dbg !3106

if.end:                                           ; preds = %entry
  %2 = load i8** %p, align 8, !dbg !3107
  ret i8* %2, !dbg !3107
}

; Function Attrs: nounwind uwtable
define i8* @xmemdup(i8* %p, i64 %s) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64 %s, i64* %s.addr, align 8
  %0 = load i64* %s.addr, align 8, !dbg !3108
  %call = call i8* @xmalloc(i64 %0), !dbg !3108
  %1 = load i8** %p.addr, align 8, !dbg !3108
  %2 = load i64* %s.addr, align 8, !dbg !3108
  %3 = call i8* @memcpy(i8* %call, i8* %1, i64 %2)
  ret i8* %call, !dbg !3108
}

; Function Attrs: nounwind uwtable
define i8* @xstrdup(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  %0 = load i8** %string.addr, align 8, !dbg !3109
  %1 = load i8** %string.addr, align 8, !dbg !3109
  %call = call i64 @strlen(i8* %1) #19, !dbg !3109
  %add = add i64 %call, 1, !dbg !3109
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !3109
  ret i8* %call1, !dbg !3109
}

; Function Attrs: nounwind uwtable
define zeroext i1 @yesno() #0 {
entry:
  %yes = alloca i8, align 1
  %c = alloca i32, align 4
  %call = call i32 @getchar(), !dbg !3110
  store i32 %call, i32* %c, align 4, !dbg !3110
  %0 = load i32* %c, align 4, !dbg !3111
  %cmp = icmp eq i32 %0, 121, !dbg !3111
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3111

lor.rhs:                                          ; preds = %entry
  %1 = load i32* %c, align 4, !dbg !3111
  %cmp1 = icmp eq i32 %1, 89, !dbg !3111
  br label %lor.end, !dbg !3111

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !3111
  store i8 %frombool, i8* %yes, align 1, !dbg !3111
  br label %while.cond, !dbg !3112

while.cond:                                       ; preds = %while.body, %lor.end
  %3 = load i32* %c, align 4, !dbg !3112
  %cmp2 = icmp ne i32 %3, 10, !dbg !3112
  %4 = load i32* %c, align 4, !dbg !3112
  %cmp3 = icmp ne i32 %4, -1, !dbg !3112
  %or.cond = and i1 %cmp2, %cmp3, !dbg !3112
  br i1 %or.cond, label %while.body, label %while.end, !dbg !3112

while.body:                                       ; preds = %while.cond
  %call4 = call i32 @getchar(), !dbg !3113
  store i32 %call4, i32* %c, align 4, !dbg !3113
  br label %while.cond, !dbg !3113

while.end:                                        ; preds = %while.cond
  %5 = load i8* %yes, align 1, !dbg !3114
  %tobool = trunc i8 %5 to i1, !dbg !3114
  ret i1 %tobool, !dbg !3114
}

declare i32 @getchar() #2

; Function Attrs: nounwind uwtable
define zeroext i1 @euidaccess_stat(%struct.stat* %st, i32 %mode) #0 {
entry:
  %retval = alloca i1, align 1
  %st.addr = alloca %struct.stat*, align 8
  %mode.addr = alloca i32, align 4
  %euid = alloca i32, align 4
  %granted = alloca i32, align 4
  %egid = alloca i32, align 4
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32* %mode.addr, align 4, !dbg !3115
  %and = and i32 %0, 7, !dbg !3115
  store i32 %and, i32* %mode.addr, align 4, !dbg !3115
  %1 = load i32* %mode.addr, align 4, !dbg !3117
  %cmp = icmp eq i32 %1, 0, !dbg !3117
  br i1 %cmp, label %if.then, label %if.end, !dbg !3117

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, !dbg !3119
  br label %return, !dbg !3119

if.end:                                           ; preds = %entry
  %call = call i32 @geteuid() #9, !dbg !3120
  store i32 %call, i32* %euid, align 4, !dbg !3120
  %2 = load i32* %euid, align 4, !dbg !3121
  %cmp1 = icmp eq i32 %2, 0, !dbg !3121
  br i1 %cmp1, label %land.lhs.true, label %if.end6, !dbg !3121

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32* %mode.addr, align 4, !dbg !3121
  %and2 = and i32 %3, 1, !dbg !3121
  %cmp3 = icmp eq i32 %and2, 0, !dbg !3121
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !3121

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.stat** %st.addr, align 8, !dbg !3121
  %st_mode = getelementptr inbounds %struct.stat* %4, i32 0, i32 3, !dbg !3121
  %5 = load i32* %st_mode, align 4, !dbg !3121
  %and4 = and i32 %5, 73, !dbg !3121
  %tobool = icmp ne i32 %and4, 0, !dbg !3121
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !3121

if.then5:                                         ; preds = %lor.lhs.false, %land.lhs.true
  store i1 true, i1* %retval, !dbg !3123
  br label %return, !dbg !3123

if.end6:                                          ; preds = %lor.lhs.false, %if.end
  %6 = load %struct.stat** %st.addr, align 8, !dbg !3124
  %st_mode7 = getelementptr inbounds %struct.stat* %6, i32 0, i32 3, !dbg !3124
  %7 = load i32* %st_mode7, align 4, !dbg !3124
  store i32 %7, i32* %granted, align 4, !dbg !3124
  %8 = load i32* %euid, align 4, !dbg !3126
  %9 = load %struct.stat** %st.addr, align 8, !dbg !3126
  %st_uid = getelementptr inbounds %struct.stat* %9, i32 0, i32 4, !dbg !3126
  %10 = load i32* %st_uid, align 4, !dbg !3126
  %cmp8 = icmp eq i32 %8, %10, !dbg !3126
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !3126

if.then9:                                         ; preds = %if.end6
  %11 = load i32* %granted, align 4, !dbg !3128
  %int_cast_to_i64 = zext i32 6 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64), !dbg !3128
  %shr = lshr i32 %11, 6, !dbg !3128
  store i32 %shr, i32* %granted, align 4, !dbg !3128
  br label %if.end19, !dbg !3128

if.else:                                          ; preds = %if.end6
  %call10 = call i32 @getegid() #9, !dbg !3129
  store i32 %call10, i32* %egid, align 4, !dbg !3129
  %12 = load i32* %egid, align 4, !dbg !3131
  %13 = load %struct.stat** %st.addr, align 8, !dbg !3131
  %st_gid = getelementptr inbounds %struct.stat* %13, i32 0, i32 5, !dbg !3131
  %14 = load i32* %st_gid, align 4, !dbg !3131
  %cmp11 = icmp eq i32 %12, %14, !dbg !3131
  br i1 %cmp11, label %if.then16, label %lor.lhs.false12, !dbg !3131

lor.lhs.false12:                                  ; preds = %if.else
  %15 = load %struct.stat** %st.addr, align 8, !dbg !3131
  %st_gid13 = getelementptr inbounds %struct.stat* %15, i32 0, i32 5, !dbg !3131
  %16 = load i32* %st_gid13, align 4, !dbg !3131
  %call14 = call i32 @group_member(i32 %16) #9, !dbg !3131
  %tobool15 = icmp ne i32 %call14, 0, !dbg !3131
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !3131

if.then16:                                        ; preds = %lor.lhs.false12, %if.else
  %17 = load i32* %granted, align 4, !dbg !3133
  %int_cast_to_i641 = zext i32 3 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i641), !dbg !3133
  %shr17 = lshr i32 %17, 3, !dbg !3133
  store i32 %shr17, i32* %granted, align 4, !dbg !3133
  br label %if.end19, !dbg !3133

if.end19:                                         ; preds = %lor.lhs.false12, %if.then16, %if.then9
  %18 = load i32* %mode.addr, align 4, !dbg !3134
  %19 = load i32* %granted, align 4, !dbg !3134
  %neg = xor i32 %19, -1, !dbg !3134
  %and20 = and i32 %18, %neg, !dbg !3134
  %cmp21 = icmp eq i32 %and20, 0, !dbg !3134
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !3134

if.then22:                                        ; preds = %if.end19
  store i1 true, i1* %retval, !dbg !3136
  br label %return, !dbg !3136

if.end23:                                         ; preds = %if.end19
  store i1 false, i1* %retval, !dbg !3137
  br label %return, !dbg !3137

return:                                           ; preds = %if.end23, %if.then22, %if.then5, %if.then
  %20 = load i1* %retval, !dbg !3138
  ret i1 %20, !dbg !3138
}

; Function Attrs: nounwind
declare i32 @geteuid() #4

; Function Attrs: nounwind
declare i32 @getegid() #4

; Function Attrs: nounwind
declare i32 @group_member(i32) #4

; Function Attrs: nounwind uwtable
define i8* @xstrndup(i8* %string, i64 %n) #0 {
entry:
  %string.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  store i64 %n, i64* %n.addr, align 8
  %0 = load i8** %string.addr, align 8, !dbg !3139
  %1 = load i64* %n.addr, align 8, !dbg !3139
  %call = call noalias i8* @strndup(i8* %0, i64 %1) #9, !dbg !3139
  store i8* %call, i8** %s, align 8, !dbg !3139
  %2 = load i8** %s, align 8, !dbg !3140
  %tobool = icmp ne i8* %2, null, !dbg !3140
  br i1 %tobool, label %if.end, label %if.then, !dbg !3140

if.then:                                          ; preds = %entry
  call void @xalloc_die() #20, !dbg !3142
  unreachable, !dbg !3142

if.end:                                           ; preds = %entry
  %3 = load i8** %s, align 8, !dbg !3143
  ret i8* %3, !dbg !3143
}

; Function Attrs: nounwind
declare noalias i8* @strndup(i8*, i64) #4

; Function Attrs: nounwind uwtable
define i32 @close_stream(%struct._IO_FILE* %stream) #0 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1
  %prev_fail = alloca i8, align 1
  %fclose_fail = alloca i8, align 1
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  %0 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3144
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #9, !dbg !3144
  %cmp = icmp ne i64 %call, 0, !dbg !3144
  %frombool = zext i1 %cmp to i8, !dbg !3144
  store i8 %frombool, i8* %some_pending, align 1, !dbg !3144
  %1 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3145
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #9, !dbg !3145
  %cmp2 = icmp ne i32 %call1, 0, !dbg !3145
  %frombool3 = zext i1 %cmp2 to i8, !dbg !3145
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !3145
  %2 = load %struct._IO_FILE** %stream.addr, align 8, !dbg !3146
  %call4 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !3146
  %cmp5 = icmp ne i32 %call4, 0, !dbg !3146
  %frombool6 = zext i1 %cmp5 to i8, !dbg !3146
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !3146
  %3 = load i8* %prev_fail, align 1, !dbg !3147
  %tobool = trunc i8 %3 to i1, !dbg !3147
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3147

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8* %fclose_fail, align 1, !dbg !3147
  %tobool7 = trunc i8 %4 to i1, !dbg !3147
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !3147

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8* %some_pending, align 1, !dbg !3147
  %tobool8 = trunc i8 %5 to i1, !dbg !3147
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !3147

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #1, !dbg !3147
  %6 = load i32* %call10, align 4, !dbg !3147
  %cmp11 = icmp ne i32 %6, 9, !dbg !3147
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !3147

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8* %fclose_fail, align 1, !dbg !3149
  %tobool12 = trunc i8 %7 to i1, !dbg !3149
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !3149

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #1, !dbg !3152
  store i32 0, i32* %call14, align 4, !dbg !3152
  br label %if.end, !dbg !3152

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, !dbg !3153
  br label %return, !dbg !3153

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, !dbg !3154
  br label %return, !dbg !3154

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32* %retval, !dbg !3155
  ret i32 %8, !dbg !3155
}

; Function Attrs: nounwind
declare i64 @__fpending(%struct._IO_FILE*) #4

; Function Attrs: nounwind
declare i32 @ferror_unlocked(%struct._IO_FILE*) #4

declare void @klee_make_symbolic(i8*, i64, i8*)

; Function Attrs: noinline optnone
define i64 @macke_fork_several_sizes(i32) #13 {
  switch i32 %0, label %2 [
    i32 128, label %6
    i32 2, label %3
    i32 4, label %4
    i32 16, label %5
  ]

; <label>:2                                       ; preds = %6, %5, %4, %3, %1
  %merge = phi i64 [ 1, %1 ], [ 2, %3 ], [ 4, %4 ], [ 16, %5 ], [ 128, %6 ]
  ret i64 %merge

; <label>:3                                       ; preds = %1
  br label %2

; <label>:4                                       ; preds = %1
  br label %2

; <label>:5                                       ; preds = %1
  br label %2

; <label>:6                                       ; preds = %1
  br label %2
}

; Function Attrs: noinline optnone
define i32 @main(i32, i8**) #13 {
  call void @klee_mark_arg_symbolic(i32 %0, i8** %1)
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @0, i32 0, i32 0))
  %4 = load i32* %argno0
  call void @usage(i32 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_klee_change_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @1, i32 0, i32 0))
  %4 = load i64* %argno0
  %argno1 = alloca i64
  %5 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([7 x i8]* @2, i32 0, i32 0))
  %6 = load i64* %argno1
  %7 = call i64 @klee_change(i64 %4, i64 %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_rm_option_init_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @3, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 32
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @4, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.rm_options*
  call void @rm_option_init(%struct.rm_options* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quoting_options_from_style_main(i32, i8**) #13 {
  %argno0 = alloca %struct.quoting_options
  %argno1 = alloca i32
  %3 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @5, i32 0, i32 0))
  %4 = load i32* %argno1
  call void @quoting_options_from_style(%struct.quoting_options* %argno0, i32 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xalloc_die_main(i32, i8**) #13 {
  call void @xalloc_die()
  unreachable
}

; Function Attrs: noinline optnone
define i32 @macke_xrealloc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @6, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @7, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @8, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i8* @xrealloc(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_gettext_quote_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @9, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @10, i32 0, i32 0))
  %argno1 = alloca i32
  %7 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 4, i8* getelementptr inbounds ([7 x i8]* @11, i32 0, i32 0))
  %8 = load i32* %argno1
  %9 = call i8* @gettext_quote(i8* %6, i32 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_buffer_restyled_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @12, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @13, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @14, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @15, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 1
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @16, i32 0, i32 0))
  %argno3 = alloca i64
  %13 = bitcast i64* %argno3 to i8*
  call void @klee_make_symbolic(i8* %13, i64 8, i8* getelementptr inbounds ([7 x i8]* @17, i32 0, i32 0))
  %14 = load i64* %argno3
  %argno4 = alloca i32
  %15 = bitcast i32* %argno4 to i8*
  call void @klee_make_symbolic(i8* %15, i64 4, i8* getelementptr inbounds ([7 x i8]* @18, i32 0, i32 0))
  %16 = load i32* %argno4
  %17 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @19, i32 0, i32 0))
  %18 = call i64 @macke_fork_several_sizes(i32 %17)
  %19 = mul i64 %18, 36
  %20 = call i8* @malloc(i64 %19)
  call void @klee_make_symbolic(i8* %20, i64 %19, i8* getelementptr inbounds ([7 x i8]* @20, i32 0, i32 0))
  %21 = bitcast i8* %20 to %struct.quoting_options*
  %22 = call i64 @quotearg_buffer_restyled(i8* %6, i64 %8, i8* %12, i64 %14, i32 %16, %struct.quoting_options* %21)
  call void @free(i8* %6)
  call void @free(i8* %12)
  call void @free(i8* %20)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_buffer_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @21, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @22, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @23, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @24, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 1
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @25, i32 0, i32 0))
  %argno3 = alloca i64
  %13 = bitcast i64* %argno3 to i8*
  call void @klee_make_symbolic(i8* %13, i64 8, i8* getelementptr inbounds ([7 x i8]* @26, i32 0, i32 0))
  %14 = load i64* %argno3
  %15 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @27, i32 0, i32 0))
  %16 = call i64 @macke_fork_several_sizes(i32 %15)
  %17 = mul i64 %16, 36
  %18 = call i8* @malloc(i64 %17)
  call void @klee_make_symbolic(i8* %18, i64 %17, i8* getelementptr inbounds ([7 x i8]* @28, i32 0, i32 0))
  %19 = bitcast i8* %18 to %struct.quoting_options*
  %20 = call i64 @quotearg_buffer(i8* %6, i64 %8, i8* %12, i64 %14, %struct.quoting_options* %19)
  call void @free(i8* %6)
  call void @free(i8* %12)
  call void @free(i8* %18)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xmalloc_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @29, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i8* @xmalloc(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xcharalloc_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @30, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i8* @xcharalloc(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_n_options_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @31, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @32, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @33, i32 0, i32 0))
  %argno2 = alloca i64
  %9 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 8, i8* getelementptr inbounds ([7 x i8]* @34, i32 0, i32 0))
  %10 = load i64* %argno2
  %11 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @35, i32 0, i32 0))
  %12 = call i64 @macke_fork_several_sizes(i32 %11)
  %13 = mul i64 %12, 36
  %14 = call i8* @malloc(i64 %13)
  call void @klee_make_symbolic(i8* %14, i64 %13, i8* getelementptr inbounds ([7 x i8]* @36, i32 0, i32 0))
  %15 = bitcast i8* %14 to %struct.quoting_options*
  %16 = call i8* @quotearg_n_options(i32 %4, i8* %8, i64 %10, %struct.quoting_options* %15)
  call void @free(i8* %8)
  call void @free(i8* %14)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_n_style_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @37, i32 0, i32 0))
  %4 = load i32* %argno0
  %argno1 = alloca i32
  %5 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 4, i8* getelementptr inbounds ([7 x i8]* @38, i32 0, i32 0))
  %6 = load i32* %argno1
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @39, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @40, i32 0, i32 0))
  %11 = call i8* @quotearg_n_style(i32 %4, i32 %6, i8* %10)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quote_n_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @41, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @42, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @43, i32 0, i32 0))
  %9 = call i8* @quote_n(i32 %4, i8* %8)
  call void @free(i8* %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_argmatch_invalid_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @44, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @45, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @46, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @47, i32 0, i32 0))
  %argno2 = alloca i64
  %11 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %11, i64 8, i8* getelementptr inbounds ([7 x i8]* @48, i32 0, i32 0))
  %12 = load i64* %argno2
  call void @argmatch_invalid(i8* %6, i8* %10, i64 %12)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_version_etc_va_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @49, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 216
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @50, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct._IO_FILE*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @51, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @52, i32 0, i32 0))
  %12 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @53, i32 0, i32 0))
  %13 = call i64 @macke_fork_several_sizes(i32 %12)
  %14 = mul i64 %13, 1
  %15 = call i8* @malloc(i64 %14)
  call void @klee_make_symbolic(i8* %15, i64 %14, i8* getelementptr inbounds ([7 x i8]* @54, i32 0, i32 0))
  %16 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @55, i32 0, i32 0))
  %17 = call i64 @macke_fork_several_sizes(i32 %16)
  %18 = mul i64 %17, 1
  %19 = call i8* @malloc(i64 %18)
  call void @klee_make_symbolic(i8* %19, i64 %18, i8* getelementptr inbounds ([7 x i8]* @56, i32 0, i32 0))
  %20 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @57, i32 0, i32 0))
  %21 = call i64 @macke_fork_several_sizes(i32 %20)
  %22 = mul i64 %21, 24
  %23 = call i8* @malloc(i64 %22)
  call void @klee_make_symbolic(i8* %23, i64 %22, i8* getelementptr inbounds ([7 x i8]* @58, i32 0, i32 0))
  %24 = bitcast i8* %23 to %struct.__va_list_tag*
  call void @version_etc_va(%struct._IO_FILE* %7, i8* %11, i8* %15, i8* %19, %struct.__va_list_tag* %24)
  call void @free(i8* %6)
  call void @free(i8* %11)
  call void @free(i8* %15)
  call void @free(i8* %19)
  call void @free(i8* %23)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_version_etc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @59, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 216
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @60, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct._IO_FILE*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @61, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @62, i32 0, i32 0))
  %12 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @63, i32 0, i32 0))
  %13 = call i64 @macke_fork_several_sizes(i32 %12)
  %14 = mul i64 %13, 1
  %15 = call i8* @malloc(i64 %14)
  call void @klee_make_symbolic(i8* %15, i64 %14, i8* getelementptr inbounds ([7 x i8]* @64, i32 0, i32 0))
  %16 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @65, i32 0, i32 0))
  %17 = call i64 @macke_fork_several_sizes(i32 %16)
  %18 = mul i64 %17, 1
  %19 = call i8* @malloc(i64 %18)
  call void @klee_make_symbolic(i8* %19, i64 %18, i8* getelementptr inbounds ([7 x i8]* @66, i32 0, i32 0))
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...)* @version_etc(%struct._IO_FILE* %7, i8* %11, i8* %15, i8* %19)
  call void @free(i8* %6)
  call void @free(i8* %11)
  call void @free(i8* %15)
  call void @free(i8* %19)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quote_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @67, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @68, i32 0, i32 0))
  %7 = call i8* @quote(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_get_root_dev_ino_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @69, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 16
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @70, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dev_ino*
  %8 = call %struct.dev_ino* @get_root_dev_ino(%struct.dev_ino* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_yesno_main(i32, i8**) #13 {
  %3 = call i1 @yesno()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_ds_init_main(i32, i8**) #13 {
  %3 = call %struct.dirstack_state* @ds_init()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_last_component_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @71, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @72, i32 0, i32 0))
  %7 = call i8* @last_component(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_dot_or_dotdot_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @73, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @74, i32 0, i32 0))
  %7 = call i1 @dot_or_dotdot(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cache_stat_init_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @75, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @76, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call %struct.stat* @cache_stat_init(%struct.stat* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cycle_check_init_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @77, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 32
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @78, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.cycle_check_state*
  call void @cycle_check_init(%struct.cycle_check_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cache_fstatat_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @79, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @80, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @81, i32 0, i32 0))
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @82, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 144
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @83, i32 0, i32 0))
  %13 = bitcast i8* %12 to %struct.stat*
  %argno3 = alloca i32
  %14 = bitcast i32* %argno3 to i8*
  call void @klee_make_symbolic(i8* %14, i64 4, i8* getelementptr inbounds ([7 x i8]* @84, i32 0, i32 0))
  %15 = load i32* %argno3
  %16 = call i32 @cache_fstatat(i32 %4, i8* %8, %struct.stat* %13, i32 %15)
  call void @free(i8* %8)
  call void @free(i8* %12)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_nonexistent_file_errno_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @85, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i1 @nonexistent_file_errno(i32 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_ignorable_missing_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @86, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 32
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @87, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.rm_options*
  %argno1 = alloca i32
  %8 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %8, i64 4, i8* getelementptr inbounds ([7 x i8]* @88, i32 0, i32 0))
  %9 = load i32* %argno1
  %10 = call i1 @ignorable_missing(%struct.rm_options* %7, i32 %9)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_stack_top_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @89, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @90, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call %struct.AD_ent* @AD_stack_top(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_push_initial_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @91, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @92, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @AD_push_initial(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_klee_get_false_main(i32, i8**) #13 {
  %3 = call i32 @klee_get_false()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_full_filename__main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @93, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @94, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @95, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @96, i32 0, i32 0))
  %12 = call i8* @full_filename_(%struct.dirstack_state* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_euidaccess_stat_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @97, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @98, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %argno1 = alloca i32
  %8 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %8, i64 4, i8* getelementptr inbounds ([7 x i8]* @99, i32 0, i32 0))
  %9 = load i32* %argno1
  %10 = call i1 @euidaccess_stat(%struct.stat* %7, i32 %9)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_write_protected_non_symlink_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @100, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @101, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @102, i32 0, i32 0))
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @103, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 496
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @104, i32 0, i32 0))
  %13 = bitcast i8* %12 to %struct.dirstack_state*
  %14 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @105, i32 0, i32 0))
  %15 = call i64 @macke_fork_several_sizes(i32 %14)
  %16 = mul i64 %15, 144
  %17 = call i8* @malloc(i64 %16)
  call void @klee_make_symbolic(i8* %17, i64 %16, i8* getelementptr inbounds ([7 x i8]* @106, i32 0, i32 0))
  %18 = bitcast i8* %17 to %struct.stat*
  %19 = call i1 @write_protected_non_symlink(i32 %4, i8* %8, %struct.dirstack_state* %13, %struct.stat* %18)
  call void @free(i8* %8)
  call void @free(i8* %12)
  call void @free(i8* %17)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_readdir_ignoring_dot_and_dotdot_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @107, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @108, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.__dirstream*
  %8 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_is_empty_dir_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @109, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @110, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @111, i32 0, i32 0))
  %9 = call i1 @is_empty_dir(i32 %4, i8* %8)
  call void @free(i8* %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_file_type_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @112, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @113, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call i8* @file_type(%struct.stat* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_prompt_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @114, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @115, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 496
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @116, i32 0, i32 0))
  %9 = bitcast i8* %8 to %struct.dirstack_state*
  %10 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @117, i32 0, i32 0))
  %11 = call i64 @macke_fork_several_sizes(i32 %10)
  %12 = mul i64 %11, 1
  %13 = call i8* @malloc(i64 %12)
  call void @klee_make_symbolic(i8* %13, i64 %12, i8* getelementptr inbounds ([7 x i8]* @118, i32 0, i32 0))
  %14 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @119, i32 0, i32 0))
  %15 = call i64 @macke_fork_several_sizes(i32 %14)
  %16 = mul i64 %15, 144
  %17 = call i8* @malloc(i64 %16)
  call void @klee_make_symbolic(i8* %17, i64 %16, i8* getelementptr inbounds ([7 x i8]* @120, i32 0, i32 0))
  %18 = bitcast i8* %17 to %struct.stat*
  %19 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @121, i32 0, i32 0))
  %20 = call i64 @macke_fork_several_sizes(i32 %19)
  %21 = mul i64 %20, 32
  %22 = call i8* @malloc(i64 %21)
  call void @klee_make_symbolic(i8* %22, i64 %21, i8* getelementptr inbounds ([7 x i8]* @122, i32 0, i32 0))
  %23 = bitcast i8* %22 to %struct.rm_options*
  %argno5 = alloca i32
  %24 = bitcast i32* %argno5 to i8*
  call void @klee_make_symbolic(i8* %24, i64 4, i8* getelementptr inbounds ([7 x i8]* @123, i32 0, i32 0))
  %25 = load i32* %argno5
  %26 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @124, i32 0, i32 0))
  %27 = call i64 @macke_fork_several_sizes(i32 %26)
  %28 = mul i64 %27, 4
  %29 = call i8* @malloc(i64 %28)
  call void @klee_make_symbolic(i8* %29, i64 %28, i8* getelementptr inbounds ([7 x i8]* @125, i32 0, i32 0))
  %30 = bitcast i8* %29 to i32*
  %31 = call i32 @prompt(i32 %4, %struct.dirstack_state* %9, i8* %13, %struct.stat* %18, %struct.rm_options* %23, i32 %25, i32* %30)
  call void @free(i8* %8)
  call void @free(i8* %13)
  call void @free(i8* %17)
  call void @free(i8* %22)
  call void @free(i8* %29)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cache_stat_ok_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @126, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 144
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @127, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.stat*
  %8 = call i1 @cache_stat_ok(%struct.stat* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_is_dir_lstat_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @128, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @129, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @130, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 144
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @131, i32 0, i32 0))
  %11 = bitcast i8* %10 to %struct.stat*
  %12 = call i1 @is_dir_lstat(i8* %6, %struct.stat* %11)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_remove_entry_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @132, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @133, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 496
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @134, i32 0, i32 0))
  %9 = bitcast i8* %8 to %struct.dirstack_state*
  %10 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @135, i32 0, i32 0))
  %11 = call i64 @macke_fork_several_sizes(i32 %10)
  %12 = mul i64 %11, 1
  %13 = call i8* @malloc(i64 %12)
  call void @klee_make_symbolic(i8* %13, i64 %12, i8* getelementptr inbounds ([7 x i8]* @136, i32 0, i32 0))
  %14 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @137, i32 0, i32 0))
  %15 = call i64 @macke_fork_several_sizes(i32 %14)
  %16 = mul i64 %15, 144
  %17 = call i8* @malloc(i64 %16)
  call void @klee_make_symbolic(i8* %17, i64 %16, i8* getelementptr inbounds ([7 x i8]* @138, i32 0, i32 0))
  %18 = bitcast i8* %17 to %struct.stat*
  %19 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @139, i32 0, i32 0))
  %20 = call i64 @macke_fork_several_sizes(i32 %19)
  %21 = mul i64 %20, 32
  %22 = call i8* @malloc(i64 %21)
  call void @klee_make_symbolic(i8* %22, i64 %21, i8* getelementptr inbounds ([7 x i8]* @140, i32 0, i32 0))
  %23 = bitcast i8* %22 to %struct.rm_options*
  %24 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @141, i32 0, i32 0))
  %25 = call i64 @macke_fork_several_sizes(i32 %24)
  %26 = mul i64 %25, 280
  %27 = call i8* @malloc(i64 %26)
  call void @klee_make_symbolic(i8* %27, i64 %26, i8* getelementptr inbounds ([7 x i8]* @142, i32 0, i32 0))
  %28 = bitcast i8* %27 to %struct.dirent*
  %29 = call i32 @remove_entry(i32 %4, %struct.dirstack_state* %9, i8* %13, %struct.stat* %18, %struct.rm_options* %23, %struct.dirent* %28)
  call void @free(i8* %8)
  call void @free(i8* %13)
  call void @free(i8* %17)
  call void @free(i8* %22)
  call void @free(i8* %27)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_fd_to_subdirp_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @143, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @144, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @145, i32 0, i32 0))
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @146, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 32
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @147, i32 0, i32 0))
  %13 = bitcast i8* %12 to %struct.rm_options*
  %argno3 = alloca i32
  %14 = bitcast i32* %argno3 to i8*
  call void @klee_make_symbolic(i8* %14, i64 4, i8* getelementptr inbounds ([7 x i8]* @148, i32 0, i32 0))
  %15 = load i32* %argno3
  %16 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @149, i32 0, i32 0))
  %17 = call i64 @macke_fork_several_sizes(i32 %16)
  %18 = mul i64 %17, 144
  %19 = call i8* @malloc(i64 %18)
  call void @klee_make_symbolic(i8* %19, i64 %18, i8* getelementptr inbounds ([7 x i8]* @150, i32 0, i32 0))
  %20 = bitcast i8* %19 to %struct.stat*
  %21 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @151, i32 0, i32 0))
  %22 = call i64 @macke_fork_several_sizes(i32 %21)
  %23 = mul i64 %22, 4
  %24 = call i8* @malloc(i64 %23)
  call void @klee_make_symbolic(i8* %24, i64 %23, i8* getelementptr inbounds ([7 x i8]* @152, i32 0, i32 0))
  %25 = bitcast i8* %24 to i32*
  %26 = call %struct.__dirstream* @fd_to_subdirp(i32 %4, i8* %8, %struct.rm_options* %13, i32 %15, %struct.stat* %20, i32* %25)
  call void @free(i8* %8)
  call void @free(i8* %12)
  call void @free(i8* %19)
  call void @free(i8* %24)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_push_dir_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @153, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @154, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @155, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @156, i32 0, i32 0))
  call void @push_dir(%struct.dirstack_state* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_is_zero_or_power_of_two_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @157, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i1 @is_zero_or_power_of_two(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_cycle_check_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @158, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 32
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @159, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.cycle_check_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @160, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 144
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @161, i32 0, i32 0))
  %12 = bitcast i8* %11 to %struct.stat*
  %13 = call i1 @cycle_check(%struct.cycle_check_state* %7, %struct.stat* %12)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_stack_height_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @162, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @163, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i64 @AD_stack_height(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_push_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @164, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @165, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 496
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @166, i32 0, i32 0))
  %9 = bitcast i8* %8 to %struct.dirstack_state*
  %10 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @167, i32 0, i32 0))
  %11 = call i64 @macke_fork_several_sizes(i32 %10)
  %12 = mul i64 %11, 1
  %13 = call i8* @malloc(i64 %12)
  call void @klee_make_symbolic(i8* %13, i64 %12, i8* getelementptr inbounds ([7 x i8]* @168, i32 0, i32 0))
  %14 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @169, i32 0, i32 0))
  %15 = call i64 @macke_fork_several_sizes(i32 %14)
  %16 = mul i64 %15, 144
  %17 = call i8* @malloc(i64 %16)
  call void @klee_make_symbolic(i8* %17, i64 %16, i8* getelementptr inbounds ([7 x i8]* @170, i32 0, i32 0))
  %18 = bitcast i8* %17 to %struct.stat*
  call void @AD_push(i32 %4, %struct.dirstack_state* %9, i8* %13, %struct.stat* %18)
  call void @free(i8* %8)
  call void @free(i8* %13)
  call void @free(i8* %17)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_lookup_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @171, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @172, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @173, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @174, i32 0, i32 0))
  %12 = call i8* @hash_lookup(%struct.hash_table* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_is_removable_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @175, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @176, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @177, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @178, i32 0, i32 0))
  %12 = call i1 @AD_is_removable(%struct.dirstack_state* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xmemdup_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @179, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @180, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @181, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i8* @xmemdup(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xstrdup_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @182, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @183, i32 0, i32 0))
  %7 = call i8* @xstrdup(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_check_tuning_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @184, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @185, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i1 @check_tuning(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_is_prime_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @186, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i1 @is_prime(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_next_prime_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @187, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i64 @next_prime(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_free_entry_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @188, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @189, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @190, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 16
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @191, i32 0, i32 0))
  %12 = bitcast i8* %11 to %struct.hash_entry*
  call void @free_entry(%struct.hash_table* %7, %struct.hash_entry* %12)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_allocate_entry_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @192, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @193, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_rehash_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @194, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @195, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %argno1 = alloca i64
  %8 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %8, i64 8, i8* getelementptr inbounds ([7 x i8]* @196, i32 0, i32 0))
  %9 = load i64* %argno1
  %10 = call i1 @hash_rehash(%struct.hash_table* %7, i64 %9)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_insert_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @197, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @198, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @199, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @200, i32 0, i32 0))
  %12 = call i8* @hash_insert(%struct.hash_table* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_mark_as_unremovable_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @201, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @202, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @203, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @204, i32 0, i32 0))
  call void @AD_mark_as_unremovable(%struct.dirstack_state* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_top_dir_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @205, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @206, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i8* @top_dir(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_mark_current_as_unremovable_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @207, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @208, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @AD_mark_current_as_unremovable(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_free_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @209, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @210, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  call void @hash_free(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_stack_pop_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @211, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @212, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @AD_stack_pop(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_pop_dir_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @213, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @214, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @pop_dir(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_pop_and_chdir_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @215, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @216, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.__dirstream*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @217, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 4
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @218, i32 0, i32 0))
  %12 = bitcast i8* %11 to i32*
  %13 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @219, i32 0, i32 0))
  %14 = call i64 @macke_fork_several_sizes(i32 %13)
  %15 = mul i64 %14, 496
  %16 = call i8* @malloc(i64 %15)
  call void @klee_make_symbolic(i8* %16, i64 %15, i8* getelementptr inbounds ([7 x i8]* @220, i32 0, i32 0))
  %17 = bitcast i8* %16 to %struct.dirstack_state*
  %18 = call i8* @AD_pop_and_chdir(%struct.__dirstream* %7, i32* %12, %struct.dirstack_state* %17)
  call void @free(i8* %6)
  call void @free(i8* %11)
  call void @free(i8* %16)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_remove_dir_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @221, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @222, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 496
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @223, i32 0, i32 0))
  %9 = bitcast i8* %8 to %struct.dirstack_state*
  %10 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @224, i32 0, i32 0))
  %11 = call i64 @macke_fork_several_sizes(i32 %10)
  %12 = mul i64 %11, 1
  %13 = call i8* @malloc(i64 %12)
  call void @klee_make_symbolic(i8* %13, i64 %12, i8* getelementptr inbounds ([7 x i8]* @225, i32 0, i32 0))
  %14 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @226, i32 0, i32 0))
  %15 = call i64 @macke_fork_several_sizes(i32 %14)
  %16 = mul i64 %15, 144
  %17 = call i8* @malloc(i64 %16)
  call void @klee_make_symbolic(i8* %17, i64 %16, i8* getelementptr inbounds ([7 x i8]* @227, i32 0, i32 0))
  %18 = bitcast i8* %17 to %struct.stat*
  %19 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @228, i32 0, i32 0))
  %20 = call i64 @macke_fork_several_sizes(i32 %19)
  %21 = mul i64 %20, 32
  %22 = call i8* @malloc(i64 %21)
  call void @klee_make_symbolic(i8* %22, i64 %21, i8* getelementptr inbounds ([7 x i8]* @229, i32 0, i32 0))
  %23 = bitcast i8* %22 to %struct.rm_options*
  %24 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @230, i32 0, i32 0))
  %25 = call i64 @macke_fork_several_sizes(i32 %24)
  %26 = mul i64 %25, 4
  %27 = call i8* @malloc(i64 %26)
  call void @klee_make_symbolic(i8* %27, i64 %26, i8* getelementptr inbounds ([7 x i8]* @231, i32 0, i32 0))
  %28 = bitcast i8* %27 to i32*
  %29 = call i32 @remove_dir(i32 %4, %struct.dirstack_state* %9, i8* %13, %struct.stat* %18, %struct.rm_options* %23, i32* %28)
  call void @free(i8* %8)
  call void @free(i8* %13)
  call void @free(i8* %17)
  call void @free(i8* %22)
  call void @free(i8* %27)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_AD_stack_clear_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @232, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @233, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @AD_stack_clear(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_ds_clear_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @234, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @235, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @ds_clear(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_rm_1_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @236, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @237, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @238, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @239, i32 0, i32 0))
  %12 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @240, i32 0, i32 0))
  %13 = call i64 @macke_fork_several_sizes(i32 %12)
  %14 = mul i64 %13, 32
  %15 = call i8* @malloc(i64 %14)
  call void @klee_make_symbolic(i8* %15, i64 %14, i8* getelementptr inbounds ([7 x i8]* @241, i32 0, i32 0))
  %16 = bitcast i8* %15 to %struct.rm_options*
  %17 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @242, i32 0, i32 0))
  %18 = call i64 @macke_fork_several_sizes(i32 %17)
  %19 = mul i64 %18, 4
  %20 = call i8* @malloc(i64 %19)
  call void @klee_make_symbolic(i8* %20, i64 %19, i8* getelementptr inbounds ([7 x i8]* @243, i32 0, i32 0))
  %21 = bitcast i8* %20 to i32*
  %22 = call i32 @rm_1(%struct.dirstack_state* %7, i8* %11, %struct.rm_options* %16, i32* %21)
  call void @free(i8* %6)
  call void @free(i8* %11)
  call void @free(i8* %15)
  call void @free(i8* %20)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_ds_free_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @244, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 496
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @245, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.dirstack_state*
  call void @ds_free(%struct.dirstack_state* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_klee_get_true_main(i32, i8**) #13 {
  %3 = call i32 @klee_get_true()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_freer_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @246, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @247, i32 0, i32 0))
  call void @hash_freer(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_compare_strings_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @248, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @249, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @250, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @251, i32 0, i32 0))
  %11 = call i1 @hash_compare_strings(i8* %6, i8* %10)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_pjw_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @252, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @253, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @254, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i64 @hash_pjw(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke___argmatch_die_main(i32, i8**) #13 {
  call void @__argmatch_die()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_base_len_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @255, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @256, i32 0, i32 0))
  %7 = call i64 @base_len(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xstrndup_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @257, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @258, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @259, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i8* @xstrndup(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_base_name_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @260, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @261, i32 0, i32 0))
  %7 = call i8* @base_name(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_close_stdout_set_file_name_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @262, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @263, i32 0, i32 0))
  call void @close_stdout_set_file_name(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_close_stream_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @264, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 216
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @265, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct._IO_FILE*
  %8 = call i32 @close_stream(%struct._IO_FILE* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_set_char_quoting_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @266, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 36
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @267, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.quoting_options*
  %argno1 = alloca i8
  call void @klee_make_symbolic(i8* %argno1, i64 1, i8* getelementptr inbounds ([7 x i8]* @268, i32 0, i32 0))
  %8 = load i8* %argno1
  %argno2 = alloca i32
  %9 = bitcast i32* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 4, i8* getelementptr inbounds ([7 x i8]* @269, i32 0, i32 0))
  %10 = load i32* %argno2
  %11 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 %8, i32 %10)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_char_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @270, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @271, i32 0, i32 0))
  %argno1 = alloca i8
  call void @klee_make_symbolic(i8* %argno1, i64 1, i8* getelementptr inbounds ([7 x i8]* @272, i32 0, i32 0))
  %7 = load i8* %argno1
  %8 = call i8* @quotearg_char(i8* %6, i8 %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_colon_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @273, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @274, i32 0, i32 0))
  %7 = call i8* @quotearg_colon(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_close_stdout_main(i32, i8**) #13 {
  call void @close_stdout()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_n_buckets_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @275, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @276, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i64 @hash_get_n_buckets(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_n_buckets_used_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @277, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @278, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_n_entries_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @279, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @280, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i64 @hash_get_n_entries(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_max_bucket_length_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @281, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @282, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_table_ok_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @283, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @284, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i1 @hash_table_ok(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_print_statistics_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @285, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @286, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @287, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 216
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @288, i32 0, i32 0))
  %12 = bitcast i8* %11 to %struct._IO_FILE*
  call void @hash_print_statistics(%struct.hash_table* %7, %struct._IO_FILE* %12)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_first_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @289, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @290, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i8* @hash_get_first(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_get_next_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @291, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @292, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @293, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @294, i32 0, i32 0))
  %12 = call i8* @hash_get_next(%struct.hash_table* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_string_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @295, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @296, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @297, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i64 @hash_string(i8* %6, i64 %8)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_reset_tuning_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @298, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 20
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @299, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_tuning*
  call void @hash_reset_tuning(%struct.hash_tuning* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_clear_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @300, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @301, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  call void @hash_clear(%struct.hash_table* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_hash_delete_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @302, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 80
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @303, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.hash_table*
  %8 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @304, i32 0, i32 0))
  %9 = call i64 @macke_fork_several_sizes(i32 %8)
  %10 = mul i64 %9, 1
  %11 = call i8* @malloc(i64 %10)
  call void @klee_make_symbolic(i8* %11, i64 %10, i8* getelementptr inbounds ([7 x i8]* @305, i32 0, i32 0))
  %12 = call i8* @hash_delete(%struct.hash_table* %7, i8* %11)
  call void @free(i8* %6)
  call void @free(i8* %11)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_clone_quoting_options_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @306, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 36
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @307, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.quoting_options*
  %8 = call %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_get_quoting_style_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @308, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 36
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @309, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.quoting_options*
  %8 = call i32 @get_quoting_style(%struct.quoting_options* %7)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_set_quoting_style_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @310, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 36
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @311, i32 0, i32 0))
  %7 = bitcast i8* %6 to %struct.quoting_options*
  %argno1 = alloca i32
  %8 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %8, i64 4, i8* getelementptr inbounds ([7 x i8]* @312, i32 0, i32 0))
  %9 = load i32* %argno1
  call void @set_quoting_style(%struct.quoting_options* %7, i32 %9)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_alloc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @313, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @314, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @315, i32 0, i32 0))
  %8 = load i64* %argno1
  %9 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @316, i32 0, i32 0))
  %10 = call i64 @macke_fork_several_sizes(i32 %9)
  %11 = mul i64 %10, 36
  %12 = call i8* @malloc(i64 %11)
  call void @klee_make_symbolic(i8* %12, i64 %11, i8* getelementptr inbounds ([7 x i8]* @317, i32 0, i32 0))
  %13 = bitcast i8* %12 to %struct.quoting_options*
  %14 = call i8* @quotearg_alloc(i8* %6, i64 %8, %struct.quoting_options* %13)
  call void @free(i8* %6)
  call void @free(i8* %12)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_free_main(i32, i8**) #13 {
  call void @quotearg_free()
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_n_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @318, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @319, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @320, i32 0, i32 0))
  %9 = call i8* @quotearg_n(i32 %4, i8* %8)
  call void @free(i8* %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @321, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @322, i32 0, i32 0))
  %7 = call i8* @quotearg(i8* %6)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_n_style_mem_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @323, i32 0, i32 0))
  %4 = load i32* %argno0
  %argno1 = alloca i32
  %5 = bitcast i32* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 4, i8* getelementptr inbounds ([7 x i8]* @324, i32 0, i32 0))
  %6 = load i32* %argno1
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @325, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 1
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @326, i32 0, i32 0))
  %argno3 = alloca i64
  %11 = bitcast i64* %argno3 to i8*
  call void @klee_make_symbolic(i8* %11, i64 8, i8* getelementptr inbounds ([7 x i8]* @327, i32 0, i32 0))
  %12 = load i64* %argno3
  %13 = call i8* @quotearg_n_style_mem(i32 %4, i32 %6, i8* %10, i64 %12)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_quotearg_style_main(i32, i8**) #13 {
  %argno0 = alloca i32
  %3 = bitcast i32* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 4, i8* getelementptr inbounds ([7 x i8]* @328, i32 0, i32 0))
  %4 = load i32* %argno0
  %5 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @329, i32 0, i32 0))
  %6 = call i64 @macke_fork_several_sizes(i32 %5)
  %7 = mul i64 %6, 1
  %8 = call i8* @malloc(i64 %7)
  call void @klee_make_symbolic(i8* %8, i64 %7, i8* getelementptr inbounds ([7 x i8]* @330, i32 0, i32 0))
  %9 = call i8* @quotearg_style(i32 %4, i8* %8)
  call void @free(i8* %8)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xnmalloc_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @331, i32 0, i32 0))
  %4 = load i64* %argno0
  %argno1 = alloca i64
  %5 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([7 x i8]* @332, i32 0, i32 0))
  %6 = load i64* %argno1
  %7 = call i8* @xnmalloc(i64 %4, i64 %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xnrealloc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @333, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @334, i32 0, i32 0))
  %argno1 = alloca i64
  %7 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([7 x i8]* @335, i32 0, i32 0))
  %8 = load i64* %argno1
  %argno2 = alloca i64
  %9 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %9, i64 8, i8* getelementptr inbounds ([7 x i8]* @336, i32 0, i32 0))
  %10 = load i64* %argno2
  %11 = call i8* @xnrealloc(i8* %6, i64 %8, i64 %10)
  call void @free(i8* %6)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_x2nrealloc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @337, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @338, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @339, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 8
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @340, i32 0, i32 0))
  %11 = bitcast i8* %10 to i64*
  %argno2 = alloca i64
  %12 = bitcast i64* %argno2 to i8*
  call void @klee_make_symbolic(i8* %12, i64 8, i8* getelementptr inbounds ([7 x i8]* @341, i32 0, i32 0))
  %13 = load i64* %argno2
  %14 = call i8* @x2nrealloc(i8* %6, i64* %11, i64 %13)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_x2realloc_main(i32, i8**) #13 {
  %3 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @342, i32 0, i32 0))
  %4 = call i64 @macke_fork_several_sizes(i32 %3)
  %5 = mul i64 %4, 1
  %6 = call i8* @malloc(i64 %5)
  call void @klee_make_symbolic(i8* %6, i64 %5, i8* getelementptr inbounds ([7 x i8]* @343, i32 0, i32 0))
  %7 = call i32 @klee_range(i32 1, i32 1025, i8* getelementptr inbounds ([20 x i8]* @344, i32 0, i32 0))
  %8 = call i64 @macke_fork_several_sizes(i32 %7)
  %9 = mul i64 %8, 8
  %10 = call i8* @malloc(i64 %9)
  call void @klee_make_symbolic(i8* %10, i64 %9, i8* getelementptr inbounds ([7 x i8]* @345, i32 0, i32 0))
  %11 = bitcast i8* %10 to i64*
  %12 = call i8* @x2realloc(i8* %6, i64* %11)
  call void @free(i8* %6)
  call void @free(i8* %10)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xzalloc_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @346, i32 0, i32 0))
  %4 = load i64* %argno0
  %5 = call i8* @xzalloc(i64 %4)
  ret i32 0
}

; Function Attrs: noinline optnone
define i32 @macke_xcalloc_main(i32, i8**) #13 {
  %argno0 = alloca i64
  %3 = bitcast i64* %argno0 to i8*
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([7 x i8]* @347, i32 0, i32 0))
  %4 = load i64* %argno0
  %argno1 = alloca i64
  %5 = bitcast i64* %argno1 to i8*
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([7 x i8]* @348, i32 0, i32 0))
  %6 = load i64* %argno1
  %7 = call i8* @xcalloc(i64 %4, i64 %6)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define void @klee_div_zero_check(i64 %z) #14 {
  %1 = icmp eq i64 %z, 0, !dbg !3156
  br i1 %1, label %2, label %3, !dbg !3156

; <label>:2                                       ; preds = %0
  tail call void @klee_report_error(i8* getelementptr inbounds ([64 x i8]* @.str50, i64 0, i64 0), i32 14, i8* getelementptr inbounds ([15 x i8]* @.str151, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str252, i64 0, i64 0)) #21, !dbg !3158
  unreachable, !dbg !3158

; <label>:3                                       ; preds = %0
  ret void, !dbg !3159
}

; Function Attrs: noreturn
declare void @klee_report_error(i8*, i32, i8*, i8*) #15

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata) #1

; Function Attrs: nounwind uwtable
define i32 @klee_int(i8* %name) #14 {
  %x = alloca i32, align 4
  %1 = bitcast i32* %x to i8*, !dbg !3160
  call void @klee_make_symbolic(i8* %1, i64 4, i8* %name) #22, !dbg !3160
  %2 = load i32* %x, align 4, !dbg !3161, !tbaa !3162
  ret i32 %2, !dbg !3161
}

; Function Attrs: nounwind uwtable
define void @klee_mark_arg_symbolic(i32 %argc, i8** nocapture readonly %argv) #14 {
  %1 = icmp sgt i32 %argc, 1, !dbg !3166
  br i1 %1, label %.lr.ph5, label %._crit_edge6, !dbg !3166

.lr.ph5:                                          ; preds = %._crit_edge, %0
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %._crit_edge ], [ 1, %0 ]
  %2 = getelementptr inbounds i8** %argv, i64 %indvars.iv8, !dbg !3168
  %3 = load i8** %2, align 8, !dbg !3168, !tbaa !3170
  br label %4, !dbg !3172

; <label>:4                                       ; preds = %4, %.lr.ph5
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %4 ], [ 0, %.lr.ph5 ]
  %i.0.i = phi i32 [ %5, %4 ], [ 0, %.lr.ph5 ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !3172
  %5 = add nsw i32 %i.0.i, 1, !dbg !3172
  %6 = getelementptr inbounds i8* %3, i64 %indvars.iv.i, !dbg !3172
  %7 = load i8* %6, align 1, !dbg !3172, !tbaa !3173
  %8 = icmp eq i8 %7, 0, !dbg !3172
  br i1 %8, label %my_strlen.exit, label %4, !dbg !3172

my_strlen.exit:                                   ; preds = %4
  %9 = sext i32 %5 to i64, !dbg !3174
  tail call void @klee_make_symbolic(i8* %3, i64 %9, i8* getelementptr inbounds ([5 x i8]* @.str353, i64 0, i64 0)) #22, !dbg !3174
  %10 = sext i32 %i.0.i to i64, !dbg !3175
  %11 = load i8** %2, align 8, !dbg !3175, !tbaa !3170
  %12 = getelementptr inbounds i8* %11, i64 %10, !dbg !3175
  %13 = load i8* %12, align 1, !dbg !3175, !tbaa !3173
  %14 = icmp eq i8 %13, 0, !dbg !3175
  %15 = zext i1 %14 to i64, !dbg !3175
  tail call void @klee_assume(i64 %15) #22, !dbg !3175
  %16 = icmp sgt i32 %i.0.i, 0, !dbg !3176
  %17 = load i8** %2, align 8, !dbg !3178, !tbaa !3170
  br i1 %16, label %.lr.ph, label %._crit_edge, !dbg !3176

.lr.ph:                                           ; preds = %.lr.ph, %my_strlen.exit
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %my_strlen.exit ]
  %18 = phi i8* [ %24, %.lr.ph ], [ %17, %my_strlen.exit ]
  %19 = getelementptr inbounds i8* %18, i64 %indvars.iv, !dbg !3178
  %20 = load i8* %19, align 1, !dbg !3178, !tbaa !3173
  %21 = icmp sgt i8 %20, 31, !dbg !3180
  %22 = icmp ne i8 %20, 127, !dbg !3180
  %..i = and i1 %21, %22, !dbg !3180
  %23 = zext i1 %..i to i64, !dbg !3178
  tail call void @klee_prefer_cex(i8* %18, i64 %23) #22, !dbg !3178
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3176
  %24 = load i8** %2, align 8, !dbg !3178, !tbaa !3170
  %lftr.wideiv4 = trunc i64 %indvars.iv.next to i32, !dbg !3176
  %exitcond5 = icmp eq i32 %lftr.wideiv4, %i.0.i, !dbg !3176
  br i1 %exitcond5, label %._crit_edge, label %.lr.ph, !dbg !3176

._crit_edge:                                      ; preds = %.lr.ph, %my_strlen.exit
  %.lcssa1 = phi i8* [ %17, %my_strlen.exit ], [ %24, %.lr.ph ]
  %25 = getelementptr inbounds i8* %.lcssa1, i64 %10, !dbg !3181
  store i8 0, i8* %25, align 1, !dbg !3181, !tbaa !3173
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !3166
  %lftr.wideiv = trunc i64 %indvars.iv.next9 to i32, !dbg !3166
  %exitcond = icmp eq i32 %lftr.wideiv, %argc, !dbg !3166
  br i1 %exitcond, label %._crit_edge6, label %.lr.ph5, !dbg !3166

._crit_edge6:                                     ; preds = %._crit_edge, %0
  ret void, !dbg !3182
}

declare void @klee_assume(i64) #16

declare void @klee_prefer_cex(i8*, i64) #16

; Function Attrs: nounwind uwtable
define void @klee_overshift_check(i64 %bitWidth, i64 %shift) #14 {
  %1 = icmp ult i64 %shift, %bitWidth, !dbg !3183
  br i1 %1, label %3, label %2, !dbg !3183

; <label>:2                                       ; preds = %0
  tail call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str454, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1555, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2656, i64 0, i64 0)) #21, !dbg !3185
  unreachable, !dbg !3185

; <label>:3                                       ; preds = %0
  ret void, !dbg !3187
}

; Function Attrs: nounwind uwtable
define i32 @klee_range(i32 %start, i32 %end, i8* %name) #14 {
  %x = alloca i32, align 4
  %1 = icmp slt i32 %start, %end, !dbg !3188
  br i1 %1, label %3, label %2, !dbg !3188

; <label>:2                                       ; preds = %0
  call void @klee_report_error(i8* getelementptr inbounds ([55 x i8]* @.str757, i64 0, i64 0), i32 17, i8* getelementptr inbounds ([14 x i8]* @.str1858, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str2959, i64 0, i64 0)) #21, !dbg !3190
  unreachable, !dbg !3190

; <label>:3                                       ; preds = %0
  %4 = add nsw i32 %start, 1, !dbg !3191
  %5 = icmp eq i32 %4, %end, !dbg !3191
  br i1 %5, label %21, label %6, !dbg !3191

; <label>:6                                       ; preds = %3
  %7 = bitcast i32* %x to i8*, !dbg !3193
  call void @klee_make_symbolic(i8* %7, i64 4, i8* %name) #22, !dbg !3193
  %8 = icmp eq i32 %start, 0, !dbg !3195
  %9 = load i32* %x, align 4, !dbg !3197, !tbaa !3162
  br i1 %8, label %10, label %13, !dbg !3195

; <label>:10                                      ; preds = %6
  %11 = icmp ult i32 %9, %end, !dbg !3197
  %12 = zext i1 %11 to i64, !dbg !3197
  call void @klee_assume(i64 %12) #22, !dbg !3197
  br label %19, !dbg !3199

; <label>:13                                      ; preds = %6
  %14 = icmp sge i32 %9, %start, !dbg !3200
  %15 = zext i1 %14 to i64, !dbg !3200
  call void @klee_assume(i64 %15) #22, !dbg !3200
  %16 = load i32* %x, align 4, !dbg !3202, !tbaa !3162
  %17 = icmp slt i32 %16, %end, !dbg !3202
  %18 = zext i1 %17 to i64, !dbg !3202
  call void @klee_assume(i64 %18) #22, !dbg !3202
  br label %19

; <label>:19                                      ; preds = %13, %10
  %20 = load i32* %x, align 4, !dbg !3203, !tbaa !3162
  br label %21, !dbg !3203

; <label>:21                                      ; preds = %19, %3
  %.0 = phi i32 [ %20, %19 ], [ %start, %3 ]
  ret i32 %.0, !dbg !3204
}

; Function Attrs: nounwind uwtable
define weak i8* @memcpy(i8* %destaddr, i8* %srcaddr, i64 %len) #14 {
  %1 = icmp eq i64 %len, 0, !dbg !3205
  br i1 %1, label %._crit_edge, label %.lr.ph.preheader, !dbg !3205

.lr.ph.preheader:                                 ; preds = %0
  %n.vec = and i64 %len, -32
  %cmp.zero = icmp eq i64 %n.vec, 0
  %2 = add i64 %len, -1
  br i1 %cmp.zero, label %middle.block, label %vector.memcheck

vector.memcheck:                                  ; preds = %.lr.ph.preheader
  %scevgep4 = getelementptr i8* %srcaddr, i64 %2
  %scevgep = getelementptr i8* %destaddr, i64 %2
  %bound1 = icmp uge i8* %scevgep, %srcaddr
  %bound0 = icmp uge i8* %scevgep4, %destaddr
  %memcheck.conflict = and i1 %bound0, %bound1
  %ptr.ind.end = getelementptr i8* %srcaddr, i64 %n.vec
  %ptr.ind.end6 = getelementptr i8* %destaddr, i64 %n.vec
  %rev.ind.end = sub i64 %len, %n.vec
  br i1 %memcheck.conflict, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.memcheck
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.memcheck ]
  %next.gep = getelementptr i8* %srcaddr, i64 %index
  %next.gep103 = getelementptr i8* %destaddr, i64 %index
  %3 = bitcast i8* %next.gep to <16 x i8>*, !dbg !3206
  %wide.load = load <16 x i8>* %3, align 1, !dbg !3206
  %next.gep.sum279 = or i64 %index, 16, !dbg !3206
  %4 = getelementptr i8* %srcaddr, i64 %next.gep.sum279, !dbg !3206
  %5 = bitcast i8* %4 to <16 x i8>*, !dbg !3206
  %wide.load200 = load <16 x i8>* %5, align 1, !dbg !3206
  %6 = bitcast i8* %next.gep103 to <16 x i8>*, !dbg !3206
  store <16 x i8> %wide.load, <16 x i8>* %6, align 1, !dbg !3206
  %7 = getelementptr i8* %destaddr, i64 %next.gep.sum279, !dbg !3206
  %8 = bitcast i8* %7 to <16 x i8>*, !dbg !3206
  store <16 x i8> %wide.load200, <16 x i8>* %8, align 1, !dbg !3206
  %index.next = add i64 %index, 32
  %9 = icmp eq i64 %index.next, %n.vec
  br i1 %9, label %middle.block, label %vector.body, !llvm.loop !3207

middle.block:                                     ; preds = %vector.body, %vector.memcheck, %.lr.ph.preheader
  %resume.val = phi i8* [ %srcaddr, %.lr.ph.preheader ], [ %srcaddr, %vector.memcheck ], [ %ptr.ind.end, %vector.body ]
  %resume.val5 = phi i8* [ %destaddr, %.lr.ph.preheader ], [ %destaddr, %vector.memcheck ], [ %ptr.ind.end6, %vector.body ]
  %resume.val7 = phi i64 [ %len, %.lr.ph.preheader ], [ %len, %vector.memcheck ], [ %rev.ind.end, %vector.body ]
  %new.indc.resume.val = phi i64 [ 0, %.lr.ph.preheader ], [ 0, %vector.memcheck ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %new.indc.resume.val, %len
  br i1 %cmp.n, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %middle.block
  %src.03 = phi i8* [ %11, %.lr.ph ], [ %resume.val, %middle.block ]
  %dest.02 = phi i8* [ %13, %.lr.ph ], [ %resume.val5, %middle.block ]
  %.01 = phi i64 [ %10, %.lr.ph ], [ %resume.val7, %middle.block ]
  %10 = add i64 %.01, -1, !dbg !3205
  %11 = getelementptr inbounds i8* %src.03, i64 1, !dbg !3206
  %12 = load i8* %src.03, align 1, !dbg !3206, !tbaa !3173
  %13 = getelementptr inbounds i8* %dest.02, i64 1, !dbg !3206
  store i8 %12, i8* %dest.02, align 1, !dbg !3206, !tbaa !3173
  %14 = icmp eq i64 %10, 0, !dbg !3205
  br i1 %14, label %._crit_edge, label %.lr.ph, !dbg !3205, !llvm.loop !3210

._crit_edge:                                      ; preds = %.lr.ph, %middle.block, %0
  ret i8* %destaddr, !dbg !3211
}

; Function Attrs: nounwind uwtable
define weak i8* @memmove(i8* %dst, i8* %src, i64 %count) #14 {
  %1 = icmp eq i8* %src, %dst, !dbg !3212
  br i1 %1, label %.loopexit, label %2, !dbg !3212

; <label>:2                                       ; preds = %0
  %3 = icmp ugt i8* %src, %dst, !dbg !3214
  br i1 %3, label %.preheader, label %18, !dbg !3214

.preheader:                                       ; preds = %2
  %4 = icmp eq i64 %count, 0, !dbg !3216
  br i1 %4, label %.loopexit, label %.lr.ph.preheader, !dbg !3216

.lr.ph.preheader:                                 ; preds = %.preheader
  %n.vec = and i64 %count, -32
  %cmp.zero = icmp eq i64 %n.vec, 0
  %5 = add i64 %count, -1
  br i1 %cmp.zero, label %middle.block, label %vector.memcheck

vector.memcheck:                                  ; preds = %.lr.ph.preheader
  %scevgep11 = getelementptr i8* %src, i64 %5
  %scevgep = getelementptr i8* %dst, i64 %5
  %bound1 = icmp uge i8* %scevgep, %src
  %bound0 = icmp uge i8* %scevgep11, %dst
  %memcheck.conflict = and i1 %bound0, %bound1
  %ptr.ind.end = getelementptr i8* %src, i64 %n.vec
  %ptr.ind.end13 = getelementptr i8* %dst, i64 %n.vec
  %rev.ind.end = sub i64 %count, %n.vec
  br i1 %memcheck.conflict, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.memcheck
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.memcheck ]
  %next.gep = getelementptr i8* %src, i64 %index
  %next.gep110 = getelementptr i8* %dst, i64 %index
  %6 = bitcast i8* %next.gep to <16 x i8>*, !dbg !3216
  %wide.load = load <16 x i8>* %6, align 1, !dbg !3216
  %next.gep.sum586 = or i64 %index, 16, !dbg !3216
  %7 = getelementptr i8* %src, i64 %next.gep.sum586, !dbg !3216
  %8 = bitcast i8* %7 to <16 x i8>*, !dbg !3216
  %wide.load207 = load <16 x i8>* %8, align 1, !dbg !3216
  %9 = bitcast i8* %next.gep110 to <16 x i8>*, !dbg !3216
  store <16 x i8> %wide.load, <16 x i8>* %9, align 1, !dbg !3216
  %10 = getelementptr i8* %dst, i64 %next.gep.sum586, !dbg !3216
  %11 = bitcast i8* %10 to <16 x i8>*, !dbg !3216
  store <16 x i8> %wide.load207, <16 x i8>* %11, align 1, !dbg !3216
  %index.next = add i64 %index, 32
  %12 = icmp eq i64 %index.next, %n.vec
  br i1 %12, label %middle.block, label %vector.body, !llvm.loop !3218

middle.block:                                     ; preds = %vector.body, %vector.memcheck, %.lr.ph.preheader
  %resume.val = phi i8* [ %src, %.lr.ph.preheader ], [ %src, %vector.memcheck ], [ %ptr.ind.end, %vector.body ]
  %resume.val12 = phi i8* [ %dst, %.lr.ph.preheader ], [ %dst, %vector.memcheck ], [ %ptr.ind.end13, %vector.body ]
  %resume.val14 = phi i64 [ %count, %.lr.ph.preheader ], [ %count, %vector.memcheck ], [ %rev.ind.end, %vector.body ]
  %new.indc.resume.val = phi i64 [ 0, %.lr.ph.preheader ], [ 0, %vector.memcheck ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %new.indc.resume.val, %count
  br i1 %cmp.n, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %middle.block
  %b.04 = phi i8* [ %14, %.lr.ph ], [ %resume.val, %middle.block ]
  %a.03 = phi i8* [ %16, %.lr.ph ], [ %resume.val12, %middle.block ]
  %.02 = phi i64 [ %13, %.lr.ph ], [ %resume.val14, %middle.block ]
  %13 = add i64 %.02, -1, !dbg !3216
  %14 = getelementptr inbounds i8* %b.04, i64 1, !dbg !3216
  %15 = load i8* %b.04, align 1, !dbg !3216, !tbaa !3173
  %16 = getelementptr inbounds i8* %a.03, i64 1, !dbg !3216
  store i8 %15, i8* %a.03, align 1, !dbg !3216, !tbaa !3173
  %17 = icmp eq i64 %13, 0, !dbg !3216
  br i1 %17, label %.loopexit, label %.lr.ph, !dbg !3216, !llvm.loop !3219

; <label>:18                                      ; preds = %2
  %19 = add i64 %count, -1, !dbg !3220
  %20 = icmp eq i64 %count, 0, !dbg !3222
  br i1 %20, label %.loopexit, label %.lr.ph9, !dbg !3222

.lr.ph9:                                          ; preds = %18
  %21 = getelementptr inbounds i8* %src, i64 %19, !dbg !3223
  %22 = getelementptr inbounds i8* %dst, i64 %19, !dbg !3220
  %n.vec215 = and i64 %count, -32
  %cmp.zero217 = icmp eq i64 %n.vec215, 0
  br i1 %cmp.zero217, label %middle.block210, label %vector.memcheck224

vector.memcheck224:                               ; preds = %.lr.ph9
  %bound1221 = icmp ule i8* %21, %dst
  %bound0220 = icmp ule i8* %22, %src
  %memcheck.conflict223 = and i1 %bound0220, %bound1221
  %.sum = sub i64 %19, %n.vec215
  %rev.ptr.ind.end = getelementptr i8* %src, i64 %.sum
  %rev.ptr.ind.end229 = getelementptr i8* %dst, i64 %.sum
  %rev.ind.end231 = sub i64 %count, %n.vec215
  br i1 %memcheck.conflict223, label %middle.block210, label %vector.body209

vector.body209:                                   ; preds = %vector.body209, %vector.memcheck224
  %index212 = phi i64 [ %index.next234, %vector.body209 ], [ 0, %vector.memcheck224 ]
  %.sum440 = sub i64 %19, %index212
  %next.gep236.sum = add i64 %.sum440, -15, !dbg !3222
  %23 = getelementptr i8* %src, i64 %next.gep236.sum, !dbg !3222
  %24 = bitcast i8* %23 to <16 x i8>*, !dbg !3222
  %wide.load434 = load <16 x i8>* %24, align 1, !dbg !3222
  %reverse = shufflevector <16 x i8> %wide.load434, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>, !dbg !3222
  %.sum505 = add i64 %.sum440, -31, !dbg !3222
  %25 = getelementptr i8* %src, i64 %.sum505, !dbg !3222
  %26 = bitcast i8* %25 to <16 x i8>*, !dbg !3222
  %wide.load435 = load <16 x i8>* %26, align 1, !dbg !3222
  %reverse436 = shufflevector <16 x i8> %wide.load435, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>, !dbg !3222
  %reverse437 = shufflevector <16 x i8> %reverse, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>, !dbg !3222
  %27 = getelementptr i8* %dst, i64 %next.gep236.sum, !dbg !3222
  %28 = bitcast i8* %27 to <16 x i8>*, !dbg !3222
  store <16 x i8> %reverse437, <16 x i8>* %28, align 1, !dbg !3222
  %reverse438 = shufflevector <16 x i8> %reverse436, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>, !dbg !3222
  %29 = getelementptr i8* %dst, i64 %.sum505, !dbg !3222
  %30 = bitcast i8* %29 to <16 x i8>*, !dbg !3222
  store <16 x i8> %reverse438, <16 x i8>* %30, align 1, !dbg !3222
  %index.next234 = add i64 %index212, 32
  %31 = icmp eq i64 %index.next234, %n.vec215
  br i1 %31, label %middle.block210, label %vector.body209, !llvm.loop !3224

middle.block210:                                  ; preds = %vector.body209, %vector.memcheck224, %.lr.ph9
  %resume.val225 = phi i8* [ %21, %.lr.ph9 ], [ %21, %vector.memcheck224 ], [ %rev.ptr.ind.end, %vector.body209 ]
  %resume.val227 = phi i8* [ %22, %.lr.ph9 ], [ %22, %vector.memcheck224 ], [ %rev.ptr.ind.end229, %vector.body209 ]
  %resume.val230 = phi i64 [ %count, %.lr.ph9 ], [ %count, %vector.memcheck224 ], [ %rev.ind.end231, %vector.body209 ]
  %new.indc.resume.val232 = phi i64 [ 0, %.lr.ph9 ], [ 0, %vector.memcheck224 ], [ %n.vec215, %vector.body209 ]
  %cmp.n233 = icmp eq i64 %new.indc.resume.val232, %count
  br i1 %cmp.n233, label %.loopexit, label %scalar.ph211

scalar.ph211:                                     ; preds = %scalar.ph211, %middle.block210
  %b.18 = phi i8* [ %33, %scalar.ph211 ], [ %resume.val225, %middle.block210 ]
  %a.17 = phi i8* [ %35, %scalar.ph211 ], [ %resume.val227, %middle.block210 ]
  %.16 = phi i64 [ %32, %scalar.ph211 ], [ %resume.val230, %middle.block210 ]
  %32 = add i64 %.16, -1, !dbg !3222
  %33 = getelementptr inbounds i8* %b.18, i64 -1, !dbg !3222
  %34 = load i8* %b.18, align 1, !dbg !3222, !tbaa !3173
  %35 = getelementptr inbounds i8* %a.17, i64 -1, !dbg !3222
  store i8 %34, i8* %a.17, align 1, !dbg !3222, !tbaa !3173
  %36 = icmp eq i64 %32, 0, !dbg !3222
  br i1 %36, label %.loopexit, label %scalar.ph211, !dbg !3222, !llvm.loop !3225

.loopexit:                                        ; preds = %scalar.ph211, %middle.block210, %18, %.lr.ph, %middle.block, %.preheader, %0
  ret i8* %dst, !dbg !3226
}

; Function Attrs: nounwind uwtable
define weak i8* @mempcpy(i8* %destaddr, i8* %srcaddr, i64 %len) #14 {
  %1 = icmp eq i64 %len, 0, !dbg !3227
  br i1 %1, label %15, label %.lr.ph.preheader, !dbg !3227

.lr.ph.preheader:                                 ; preds = %0
  %n.vec = and i64 %len, -32
  %cmp.zero = icmp eq i64 %n.vec, 0
  %2 = add i64 %len, -1
  br i1 %cmp.zero, label %middle.block, label %vector.memcheck

vector.memcheck:                                  ; preds = %.lr.ph.preheader
  %scevgep5 = getelementptr i8* %srcaddr, i64 %2
  %scevgep4 = getelementptr i8* %destaddr, i64 %2
  %bound1 = icmp uge i8* %scevgep4, %srcaddr
  %bound0 = icmp uge i8* %scevgep5, %destaddr
  %memcheck.conflict = and i1 %bound0, %bound1
  %ptr.ind.end = getelementptr i8* %srcaddr, i64 %n.vec
  %ptr.ind.end7 = getelementptr i8* %destaddr, i64 %n.vec
  %rev.ind.end = sub i64 %len, %n.vec
  br i1 %memcheck.conflict, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.memcheck
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.memcheck ]
  %next.gep = getelementptr i8* %srcaddr, i64 %index
  %next.gep104 = getelementptr i8* %destaddr, i64 %index
  %3 = bitcast i8* %next.gep to <16 x i8>*, !dbg !3228
  %wide.load = load <16 x i8>* %3, align 1, !dbg !3228
  %next.gep.sum280 = or i64 %index, 16, !dbg !3228
  %4 = getelementptr i8* %srcaddr, i64 %next.gep.sum280, !dbg !3228
  %5 = bitcast i8* %4 to <16 x i8>*, !dbg !3228
  %wide.load201 = load <16 x i8>* %5, align 1, !dbg !3228
  %6 = bitcast i8* %next.gep104 to <16 x i8>*, !dbg !3228
  store <16 x i8> %wide.load, <16 x i8>* %6, align 1, !dbg !3228
  %7 = getelementptr i8* %destaddr, i64 %next.gep.sum280, !dbg !3228
  %8 = bitcast i8* %7 to <16 x i8>*, !dbg !3228
  store <16 x i8> %wide.load201, <16 x i8>* %8, align 1, !dbg !3228
  %index.next = add i64 %index, 32
  %9 = icmp eq i64 %index.next, %n.vec
  br i1 %9, label %middle.block, label %vector.body, !llvm.loop !3229

middle.block:                                     ; preds = %vector.body, %vector.memcheck, %.lr.ph.preheader
  %resume.val = phi i8* [ %srcaddr, %.lr.ph.preheader ], [ %srcaddr, %vector.memcheck ], [ %ptr.ind.end, %vector.body ]
  %resume.val6 = phi i8* [ %destaddr, %.lr.ph.preheader ], [ %destaddr, %vector.memcheck ], [ %ptr.ind.end7, %vector.body ]
  %resume.val8 = phi i64 [ %len, %.lr.ph.preheader ], [ %len, %vector.memcheck ], [ %rev.ind.end, %vector.body ]
  %new.indc.resume.val = phi i64 [ 0, %.lr.ph.preheader ], [ 0, %vector.memcheck ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %new.indc.resume.val, %len
  br i1 %cmp.n, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %middle.block
  %src.03 = phi i8* [ %11, %.lr.ph ], [ %resume.val, %middle.block ]
  %dest.02 = phi i8* [ %13, %.lr.ph ], [ %resume.val6, %middle.block ]
  %.01 = phi i64 [ %10, %.lr.ph ], [ %resume.val8, %middle.block ]
  %10 = add i64 %.01, -1, !dbg !3227
  %11 = getelementptr inbounds i8* %src.03, i64 1, !dbg !3228
  %12 = load i8* %src.03, align 1, !dbg !3228, !tbaa !3173
  %13 = getelementptr inbounds i8* %dest.02, i64 1, !dbg !3228
  store i8 %12, i8* %dest.02, align 1, !dbg !3228, !tbaa !3173
  %14 = icmp eq i64 %10, 0, !dbg !3227
  br i1 %14, label %._crit_edge, label %.lr.ph, !dbg !3227, !llvm.loop !3230

._crit_edge:                                      ; preds = %.lr.ph, %middle.block
  %scevgep = getelementptr i8* %destaddr, i64 %len
  br label %15, !dbg !3227

; <label>:15                                      ; preds = %._crit_edge, %0
  %dest.0.lcssa = phi i8* [ %scevgep, %._crit_edge ], [ %destaddr, %0 ]
  ret i8* %dest.0.lcssa, !dbg !3231
}

; Function Attrs: nounwind uwtable
define weak i8* @memset(i8* %dst, i32 %s, i64 %count) #14 {
  %1 = icmp eq i64 %count, 0, !dbg !3232
  br i1 %1, label %._crit_edge, label %.lr.ph, !dbg !3232

.lr.ph:                                           ; preds = %0
  %2 = trunc i32 %s to i8, !dbg !3233
  br label %3, !dbg !3232

; <label>:3                                       ; preds = %3, %.lr.ph
  %a.02 = phi i8* [ %dst, %.lr.ph ], [ %5, %3 ]
  %.01 = phi i64 [ %count, %.lr.ph ], [ %4, %3 ]
  %4 = add i64 %.01, -1, !dbg !3232
  %5 = getelementptr inbounds i8* %a.02, i64 1, !dbg !3233
  store volatile i8 %2, i8* %a.02, align 1, !dbg !3233, !tbaa !3173
  %6 = icmp eq i64 %4, 0, !dbg !3232
  br i1 %6, label %._crit_edge, label %3, !dbg !3232

._crit_edge:                                      ; preds = %3, %0
  ret i8* %dst, !dbg !3234
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float
attributes #1 = { nounwind readnone }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-floa
attributes #4 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false
attributes #5 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-floa
attributes #6 = { noinline nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-s
attributes #7 = { nounwind returns_twice "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft
attributes #8 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-floa
attributes #9 = { nounwind }
attributes #10 = { inlinehint nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "us
attributes #11 = { noreturn nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-
attributes #12 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="fals
attributes #13 = { noinline optnone }
attributes #14 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind returns_twice }
attributes #19 = { nounwind readonly }
attributes #20 = { noreturn }
attributes #21 = { nobuiltin noreturn nounwind }
attributes #22 = { nobuiltin nounwind }

!llvm.dbg.cu = !{!0, !102, !438, !446, !517, !525, !532, !561, !573, !583, !647, !653, !685, !845, !855, !948, !960, !999, !1006, !1036, !1044, !1091, !1101, !1111, !1133, !1144, !1156, !1170, !1184, !1198}
!llvm.module.flags = !{!1213, !1214}
!llvm.ident = !{!1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1215, !1216, !1216, !1216, !1216, !1216, !1216, !1216, !1216, !1216}

!0 = metadata !{i32 786449, metadata !1, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !2, metadata !32, metadata !33, metadata !74, metadata !32, metadata !""} ; [ DW_TAG_compile_unit ] [/h
!1 = metadata !{metadata !"rm.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!2 = metadata !{metadata !3, metadata !11, metadata !16, metadata !22}
!3 = metadata !{i32 786436, metadata !4, null, metadata !"rm_interactive", i32 25, i64 32, i64 32, i32 0, i32 0, null, metadata !5, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [rm_interactive] [line 25, size 32, align 32, offset 0] [def] [from
!4 = metadata !{metadata !"./remove.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!5 = metadata !{metadata !6, metadata !7, metadata !8, metadata !9, metadata !10}
!6 = metadata !{i32 786472, metadata !"RMI_OLD_FALSE", i64 0} ; [ DW_TAG_enumerator ] [RMI_OLD_FALSE :: 0]
!7 = metadata !{i32 786472, metadata !"RMI_OLD_TRUE", i64 1} ; [ DW_TAG_enumerator ] [RMI_OLD_TRUE :: 1]
!8 = metadata !{i32 786472, metadata !"RMI_ALWAYS", i64 3} ; [ DW_TAG_enumerator ] [RMI_ALWAYS :: 3]
!9 = metadata !{i32 786472, metadata !"RMI_SOMETIMES", i64 4} ; [ DW_TAG_enumerator ] [RMI_SOMETIMES :: 4]
!10 = metadata !{i32 786472, metadata !"RMI_NEVER", i64 5} ; [ DW_TAG_enumerator ] [RMI_NEVER :: 5]
!11 = metadata !{i32 786436, metadata !1, null, metadata !"interactive_type", i32 87, i64 32, i64 32, i32 0, i32 0, null, metadata !12, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [interactive_type] [line 87, size 32, align 32, offset 0] [def]
!12 = metadata !{metadata !13, metadata !14, metadata !15}
!13 = metadata !{i32 786472, metadata !"interactive_never", i64 0} ; [ DW_TAG_enumerator ] [interactive_never :: 0]
!14 = metadata !{i32 786472, metadata !"interactive_once", i64 1} ; [ DW_TAG_enumerator ] [interactive_once :: 1]
!15 = metadata !{i32 786472, metadata !"interactive_always", i64 2} ; [ DW_TAG_enumerator ] [interactive_always :: 2]
!16 = metadata !{i32 786436, metadata !4, null, metadata !"RM_status", i32 78, i64 32, i64 32, i32 0, i32 0, null, metadata !17, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [RM_status] [line 78, size 32, align 32, offset 0] [def] [from ]
!17 = metadata !{metadata !18, metadata !19, metadata !20, metadata !21}
!18 = metadata !{i32 786472, metadata !"RM_OK", i64 2} ; [ DW_TAG_enumerator ] [RM_OK :: 2]
!19 = metadata !{i32 786472, metadata !"RM_USER_DECLINED", i64 3} ; [ DW_TAG_enumerator ] [RM_USER_DECLINED :: 3]
!20 = metadata !{i32 786472, metadata !"RM_ERROR", i64 4} ; [ DW_TAG_enumerator ] [RM_ERROR :: 4]
!21 = metadata !{i32 786472, metadata !"RM_NONEMPTY_DIR", i64 5} ; [ DW_TAG_enumerator ] [RM_NONEMPTY_DIR :: 5]
!22 = metadata !{i32 786436, metadata !23, null, metadata !"quoting_style", i32 28, i64 32, i64 32, i32 0, i32 0, null, metadata !24, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [quoting_style] [line 28, size 32, align 32, offset 0] [def] [fro
!23 = metadata !{metadata !"../lib/quotearg.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!24 = metadata !{metadata !25, metadata !26, metadata !27, metadata !28, metadata !29, metadata !30, metadata !31}
!25 = metadata !{i32 786472, metadata !"literal_quoting_style", i64 0} ; [ DW_TAG_enumerator ] [literal_quoting_style :: 0]
!26 = metadata !{i32 786472, metadata !"shell_quoting_style", i64 1} ; [ DW_TAG_enumerator ] [shell_quoting_style :: 1]
!27 = metadata !{i32 786472, metadata !"shell_always_quoting_style", i64 2} ; [ DW_TAG_enumerator ] [shell_always_quoting_style :: 2]
!28 = metadata !{i32 786472, metadata !"c_quoting_style", i64 3} ; [ DW_TAG_enumerator ] [c_quoting_style :: 3]
!29 = metadata !{i32 786472, metadata !"escape_quoting_style", i64 4} ; [ DW_TAG_enumerator ] [escape_quoting_style :: 4]
!30 = metadata !{i32 786472, metadata !"locale_quoting_style", i64 5} ; [ DW_TAG_enumerator ] [locale_quoting_style :: 5]
!31 = metadata !{i32 786472, metadata !"clocale_quoting_style", i64 6} ; [ DW_TAG_enumerator ] [clocale_quoting_style :: 6]
!32 = metadata !{i32 0}
!33 = metadata !{metadata !34, metadata !39, metadata !45, metadata !48}
!34 = metadata !{i32 786478, metadata !1, metadata !35, metadata !"usage", metadata !"usage", metadata !"", i32 159, metadata !36, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32)* @usage, null, null, metadata !32, i32 160} ; [ DW_TAG
!35 = metadata !{i32 786473, metadata !1}         ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!36 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !37, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!37 = metadata !{null, metadata !38}
!38 = metadata !{i32 786468, null, null, metadata !"int", i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
!39 = metadata !{i32 786478, metadata !1, metadata !35, metadata !"main", metadata !"main", metadata !"", i32 236, metadata !40, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**)* @__main_old, null, null, metadata !32, i32 237} ; 
!40 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !41, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!41 = metadata !{metadata !38, metadata !38, metadata !42}
!42 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !43} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!43 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !44} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from char]
!44 = metadata !{i32 786468, null, null, metadata !"char", i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ] [char] [line 0, size 8, align 8, offset 0, enc DW_ATE_signed_char]
!45 = metadata !{i32 786478, metadata !1, metadata !35, metadata !"diagnose_leading_hyphen", metadata !"diagnose_leading_hyphen", metadata !"", i32 135, metadata !46, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i8**)* @diagnose_le
!46 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !47, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!47 = metadata !{null, metadata !38, metadata !42}
!48 = metadata !{i32 786478, metadata !1, metadata !35, metadata !"rm_option_init", metadata !"rm_option_init", metadata !"", i32 219, metadata !49, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.rm_options*)* @rm_option_init, nul
!49 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !50, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!50 = metadata !{null, metadata !51}
!51 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !52} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from rm_options]
!52 = metadata !{i32 786451, metadata !4, null, metadata !"rm_options", i32 40, i64 256, i64 64, i32 0, i32 0, null, metadata !53, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [rm_options] [line 40, size 256, align 64, offset 0] [def] [from ]
!53 = metadata !{metadata !54, metadata !56, metadata !57, metadata !58, metadata !59, metadata !71, metadata !72, metadata !73}
!54 = metadata !{i32 786445, metadata !4, metadata !52, metadata !"ignore_missing_files", i32 43, i64 8, i64 8, i64 0, i32 0, metadata !55} ; [ DW_TAG_member ] [ignore_missing_files] [line 43, size 8, align 8, offset 0] [from _Bool]
!55 = metadata !{i32 786468, null, null, metadata !"_Bool", i32 0, i64 8, i64 8, i64 0, i32 0, i32 2} ; [ DW_TAG_base_type ] [_Bool] [line 0, size 8, align 8, offset 0, enc DW_ATE_boolean]
!56 = metadata !{i32 786445, metadata !4, metadata !52, metadata !"interactive", i32 46, i64 32, i64 32, i64 32, i32 0, metadata !3} ; [ DW_TAG_member ] [interactive] [line 46, size 32, align 32, offset 32] [from rm_interactive]
!57 = metadata !{i32 786445, metadata !4, metadata !52, metadata !"one_file_system", i32 54, i64 8, i64 8, i64 64, i32 0, metadata !55} ; [ DW_TAG_member ] [one_file_system] [line 54, size 8, align 8, offset 64] [from _Bool]
!58 = metadata !{i32 786445, metadata !4, metadata !52, metadata !"recursive", i32 57, i64 8, i64 8, i64 72, i32 0, metadata !55} ; [ DW_TAG_member ] [recursive] [line 57, size 8, align 8, offset 72] [from _Bool]
!59 = metadata !{i32 786445, metadata !4, metadata !52, metadata !"root_dev_ino", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !60} ; [ DW_TAG_member ] [root_dev_ino] [line 61, size 64, align 64, offset 128] [from ]
!60 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !61} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from dev_ino]
!61 = metadata !{i32 786451, metadata !62, null, metadata !"dev_ino", i32 7, i64 128, i64 64, i32 0, i32 0, null, metadata !63, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dev_ino] [line 7, size 128, align 64, offset 0] [def] [from ]
!62 = metadata !{metadata !"../lib/dev-ino.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!63 = metadata !{metadata !64, metadata !68}
!64 = metadata !{i32 786445, metadata !62, metadata !61, metadata !"st_ino", i32 9, i64 64, i64 64, i64 0, i32 0, metadata !65} ; [ DW_TAG_member ] [st_ino] [line 9, size 64, align 64, offset 0] [from ino_t]
!65 = metadata !{i32 786454, metadata !62, null, metadata !"ino_t", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !66} ; [ DW_TAG_typedef ] [ino_t] [line 48, size 0, align 0, offset 0] [from __ino_t]
!66 = metadata !{i32 786454, metadata !62, null, metadata !"__ino_t", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [__ino_t] [line 127, size 0, align 0, offset 0] [from long unsigned int]
!67 = metadata !{i32 786468, null, null, metadata !"long unsigned int", i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ] [long unsigned int] [line 0, size 64, align 64, offset 0, enc DW_ATE_unsigned]
!68 = metadata !{i32 786445, metadata !62, metadata !61, metadata !"st_dev", i32 10, i64 64, i64 64, i64 64, i32 0, metadata !69} ; [ DW_TAG_member ] [st_dev] [line 10, size 64, align 64, offset 64] [from dev_t]
!69 = metadata !{i32 786454, metadata !62, null, metadata !"dev_t", i32 60, i64 0, i64 0, i64 0, i32 0, metadata !70} ; [ DW_TAG_typedef ] [dev_t] [line 60, size 0, align 0, offset 0] [from __dev_t]
!70 = metadata !{i32 786454, metadata !62, null, metadata !"__dev_t", i32 124, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [__dev_t] [line 124, size 0, align 0, offset 0] [from long unsigned int]
!71 = metadata !{i32 786445, metadata !4, metadata !52, metadata !"stdin_tty", i32 64, i64 8, i64 8, i64 192, i32 0, metadata !55} ; [ DW_TAG_member ] [stdin_tty] [line 64, size 8, align 8, offset 192] [from _Bool]
!72 = metadata !{i32 786445, metadata !4, metadata !52, metadata !"verbose", i32 67, i64 8, i64 8, i64 200, i32 0, metadata !55} ; [ DW_TAG_member ] [verbose] [line 67, size 8, align 8, offset 200] [from _Bool]
!73 = metadata !{i32 786445, metadata !4, metadata !52, metadata !"require_restore_cwd", i32 75, i64 8, i64 8, i64 208, i32 0, metadata !55} ; [ DW_TAG_member ] [require_restore_cwd] [line 75, size 8, align 8, offset 208] [from _Bool]
!74 = metadata !{metadata !75, metadata !76, metadata !77, metadata !82, metadata !89}
!75 = metadata !{i32 786484, i32 0, metadata !39, metadata !"dev_ino_buf", metadata !"dev_ino_buf", metadata !"", metadata !35, i32 362, metadata !61, i32 1, i32 1, %struct.dev_ino* @main.dev_ino_buf, null} ; [ DW_TAG_variable ] [dev_ino_buf] [line 362] 
!76 = metadata !{i32 786484, i32 0, null, metadata !"program_name", metadata !"program_name", metadata !"", metadata !35, i32 74, metadata !43, i32 0, i32 1, i8** @program_name, null} ; [ DW_TAG_variable ] [program_name] [line 74] [def]
!77 = metadata !{i32 786484, i32 0, null, metadata !"interactive_types", metadata !"interactive_types", metadata !"", metadata !35, i32 123, metadata !78, i32 1, i32 1, [6 x i32]* @interactive_types, null} ; [ DW_TAG_variable ] [interactive_types] [line 
!78 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 192, i64 32, i32 0, i32 0, metadata !79, metadata !80, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 192, align 32, offset 0] [from ]
!79 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !11} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from interactive_type]
!80 = metadata !{metadata !81}
!81 = metadata !{i32 786465, i64 0, i64 6}        ; [ DW_TAG_subrange_type ] [0, 5]
!82 = metadata !{i32 786484, i32 0, null, metadata !"interactive_args", metadata !"interactive_args", metadata !"", metadata !35, i32 117, metadata !83, i32 1, i32 1, [7 x i8*]* @interactive_args, null} ; [ DW_TAG_variable ] [interactive_args] [line 117]
!83 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 448, i64 64, i32 0, i32 0, metadata !84, metadata !87, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 448, align 64, offset 0] [from ]
!84 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !85} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from ]
!85 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !86} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!86 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !44} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from char]
!87 = metadata !{metadata !88}
!88 = metadata !{i32 786465, i64 0, i64 7}        ; [ DW_TAG_subrange_type ] [0, 6]
!89 = metadata !{i32 786484, i32 0, null, metadata !"long_opts", metadata !"long_opts", metadata !"", metadata !35, i32 94, metadata !90, i32 1, i32 1, <{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i
!90 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 3072, i64 64, i32 0, i32 0, metadata !91, metadata !100, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 3072, align 64, offset 0] [from ]
!91 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !92} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from option]
!92 = metadata !{i32 786451, metadata !93, null, metadata !"option", i32 104, i64 256, i64 64, i32 0, i32 0, null, metadata !94, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [option] [line 104, size 256, align 64, offset 0] [def] [from ]
!93 = metadata !{metadata !"/usr/include/getopt.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!94 = metadata !{metadata !95, metadata !96, metadata !97, metadata !99}
!95 = metadata !{i32 786445, metadata !93, metadata !92, metadata !"name", i32 106, i64 64, i64 64, i64 0, i32 0, metadata !85} ; [ DW_TAG_member ] [name] [line 106, size 64, align 64, offset 0] [from ]
!96 = metadata !{i32 786445, metadata !93, metadata !92, metadata !"has_arg", i32 109, i64 32, i64 32, i64 64, i32 0, metadata !38} ; [ DW_TAG_member ] [has_arg] [line 109, size 32, align 32, offset 64] [from int]
!97 = metadata !{i32 786445, metadata !93, metadata !92, metadata !"flag", i32 110, i64 64, i64 64, i64 128, i32 0, metadata !98} ; [ DW_TAG_member ] [flag] [line 110, size 64, align 64, offset 128] [from ]
!98 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !38} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from int]
!99 = metadata !{i32 786445, metadata !93, metadata !92, metadata !"val", i32 111, i64 32, i64 32, i64 192, i32 0, metadata !38} ; [ DW_TAG_member ] [val] [line 111, size 32, align 32, offset 192] [from int]
!100 = metadata !{metadata !101}
!101 = metadata !{i32 786465, i64 0, i64 12}      ; [ DW_TAG_subrange_type ] [0, 11]
!102 = metadata !{i32 786449, metadata !103, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !104, metadata !32, metadata !132, metadata !428, metadata !32, metadata !""} ; [ DW_TAG_compile_un
!103 = metadata !{metadata !"remove.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!104 = metadata !{metadata !16, metadata !3, metadata !105, metadata !110, metadata !114, metadata !117, metadata !120}
!105 = metadata !{i32 786436, metadata !103, null, metadata !"Ternary", i32 76, i64 32, i64 32, i32 0, i32 0, null, metadata !106, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [Ternary] [line 76, size 32, align 32, offset 0] [def] [from ]
!106 = metadata !{metadata !107, metadata !108, metadata !109}
!107 = metadata !{i32 786472, metadata !"T_UNKNOWN", i64 2} ; [ DW_TAG_enumerator ] [T_UNKNOWN :: 2]
!108 = metadata !{i32 786472, metadata !"T_NO", i64 3} ; [ DW_TAG_enumerator ] [T_NO :: 3]
!109 = metadata !{i32 786472, metadata !"T_YES", i64 4} ; [ DW_TAG_enumerator ] [T_YES :: 4]
!110 = metadata !{i32 786436, metadata !103, null, metadata !"Prompt_action", i32 87, i64 32, i64 32, i32 0, i32 0, null, metadata !111, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [Prompt_action] [line 87, size 32, align 32, offset 0] [def] [
!111 = metadata !{metadata !112, metadata !113}
!112 = metadata !{i32 786472, metadata !"PA_DESCEND_INTO_DIR", i64 2} ; [ DW_TAG_enumerator ] [PA_DESCEND_INTO_DIR :: 2]
!113 = metadata !{i32 786472, metadata !"PA_REMOVE_DIR", i64 3} ; [ DW_TAG_enumerator ] [PA_REMOVE_DIR :: 3]
!114 = metadata !{i32 786436, metadata !103, null, metadata !"", i32 95, i64 32, i64 32, i32 0, i32 0, null, metadata !115, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 95, size 32, align 32, offset 0] [def] [from ]
!115 = metadata !{metadata !116}
!116 = metadata !{i32 786472, metadata !"HT_UNREMOVABLE_INITIAL_CAPACITY", i64 13} ; [ DW_TAG_enumerator ] [HT_UNREMOVABLE_INITIAL_CAPACITY :: 13]
!117 = metadata !{i32 786436, metadata !103, null, metadata !"", i32 65, i64 32, i64 32, i32 0, i32 0, null, metadata !118, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 65, size 32, align 32, offset 0] [def] [from ]
!118 = metadata !{metadata !119}
!119 = metadata !{i32 786472, metadata !"CONSECUTIVE_READDIR_UNLINK_THRESHOLD", i64 10} ; [ DW_TAG_enumerator ] [CONSECUTIVE_READDIR_UNLINK_THRESHOLD :: 10]
!120 = metadata !{i32 786436, metadata !121, null, metadata !"", i32 97, i64 32, i64 32, i32 0, i32 0, null, metadata !122, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 97, size 32, align 32, offset 0] [def] [from ]
!121 = metadata !{metadata !"/usr/include/dirent.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!122 = metadata !{metadata !123, metadata !124, metadata !125, metadata !126, metadata !127, metadata !128, metadata !129, metadata !130, metadata !131}
!123 = metadata !{i32 786472, metadata !"DT_UNKNOWN", i64 0} ; [ DW_TAG_enumerator ] [DT_UNKNOWN :: 0]
!124 = metadata !{i32 786472, metadata !"DT_FIFO", i64 1} ; [ DW_TAG_enumerator ] [DT_FIFO :: 1]
!125 = metadata !{i32 786472, metadata !"DT_CHR", i64 2} ; [ DW_TAG_enumerator ] [DT_CHR :: 2]
!126 = metadata !{i32 786472, metadata !"DT_DIR", i64 4} ; [ DW_TAG_enumerator ] [DT_DIR :: 4]
!127 = metadata !{i32 786472, metadata !"DT_BLK", i64 6} ; [ DW_TAG_enumerator ] [DT_BLK :: 6]
!128 = metadata !{i32 786472, metadata !"DT_REG", i64 8} ; [ DW_TAG_enumerator ] [DT_REG :: 8]
!129 = metadata !{i32 786472, metadata !"DT_LNK", i64 10} ; [ DW_TAG_enumerator ] [DT_LNK :: 10]
!130 = metadata !{i32 786472, metadata !"DT_SOCK", i64 12} ; [ DW_TAG_enumerator ] [DT_SOCK :: 12]
!131 = metadata !{i32 786472, metadata !"DT_WHT", i64 14} ; [ DW_TAG_enumerator ] [DT_WHT :: 14]
!132 = metadata !{metadata !133, metadata !139, metadata !144, metadata !145, metadata !169, metadata !247, metadata !250, metadata !251, metadata !252, metadata !257, metadata !258, metadata !297, metadata !300, metadata !308, metadata !311, metadata !3
!133 = metadata !{i32 786478, metadata !134, metadata !135, metadata !"klee_change", metadata !"klee_change", metadata !"", i32 18, metadata !136, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i64, i64)* @klee_change, null, null, metadat
!134 = metadata !{metadata !"/home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!135 = metadata !{i32 786473, metadata !134}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!136 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !137, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!137 = metadata !{metadata !138, metadata !138, metadata !138}
!138 = metadata !{i32 786454, metadata !134, null, metadata !"uintptr_t", i32 247, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [uintptr_t] [line 247, size 0, align 0, offset 0] [from long unsigned int]
!139 = metadata !{i32 786478, metadata !140, metadata !141, metadata !"klee_get_true", metadata !"klee_get_true", metadata !"", i32 4, metadata !142, i1 false, i1 true, i32 0, i32 0, null, i32 0, i1 false, i32 ()* @klee_get_true, null, null, metadata !32
!140 = metadata !{metadata !"/home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_functions.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!141 = metadata !{i32 786473, metadata !140}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_functions.h]
!142 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !143, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!143 = metadata !{metadata !38}
!144 = metadata !{i32 786478, metadata !140, metadata !141, metadata !"klee_get_false", metadata !"klee_get_false", metadata !"", i32 5, metadata !142, i1 false, i1 true, i32 0, i32 0, null, i32 0, i1 false, i32 ()* @klee_get_false, null, null, metadata 
!145 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"rm", metadata !"rm", metadata !"", i32 1628, metadata !147, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i64, i8**, %struct.rm_options*)* @rm, null, null, metadata !
!146 = metadata !{i32 786473, metadata !103}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!147 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !148, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!148 = metadata !{metadata !16, metadata !149, metadata !151, metadata !152}
!149 = metadata !{i32 786454, metadata !150, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!150 = metadata !{metadata !"/usr/include/libio.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!151 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !84} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!152 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !153} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!153 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !154} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from rm_options]
!154 = metadata !{i32 786451, metadata !4, null, metadata !"rm_options", i32 40, i64 256, i64 64, i32 0, i32 0, null, metadata !155, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [rm_options] [line 40, size 256, align 64, offset 0] [def] [from ]
!155 = metadata !{metadata !156, metadata !157, metadata !158, metadata !159, metadata !160, metadata !166, metadata !167, metadata !168}
!156 = metadata !{i32 786445, metadata !4, metadata !154, metadata !"ignore_missing_files", i32 43, i64 8, i64 8, i64 0, i32 0, metadata !55} ; [ DW_TAG_member ] [ignore_missing_files] [line 43, size 8, align 8, offset 0] [from _Bool]
!157 = metadata !{i32 786445, metadata !4, metadata !154, metadata !"interactive", i32 46, i64 32, i64 32, i64 32, i32 0, metadata !3} ; [ DW_TAG_member ] [interactive] [line 46, size 32, align 32, offset 32] [from rm_interactive]
!158 = metadata !{i32 786445, metadata !4, metadata !154, metadata !"one_file_system", i32 54, i64 8, i64 8, i64 64, i32 0, metadata !55} ; [ DW_TAG_member ] [one_file_system] [line 54, size 8, align 8, offset 64] [from _Bool]
!159 = metadata !{i32 786445, metadata !4, metadata !154, metadata !"recursive", i32 57, i64 8, i64 8, i64 72, i32 0, metadata !55} ; [ DW_TAG_member ] [recursive] [line 57, size 8, align 8, offset 72] [from _Bool]
!160 = metadata !{i32 786445, metadata !4, metadata !154, metadata !"root_dev_ino", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !161} ; [ DW_TAG_member ] [root_dev_ino] [line 61, size 64, align 64, offset 128] [from ]
!161 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !162} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from dev_ino]
!162 = metadata !{i32 786451, metadata !62, null, metadata !"dev_ino", i32 7, i64 128, i64 64, i32 0, i32 0, null, metadata !163, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dev_ino] [line 7, size 128, align 64, offset 0] [def] [from ]
!163 = metadata !{metadata !164, metadata !165}
!164 = metadata !{i32 786445, metadata !62, metadata !162, metadata !"st_ino", i32 9, i64 64, i64 64, i64 0, i32 0, metadata !65} ; [ DW_TAG_member ] [st_ino] [line 9, size 64, align 64, offset 0] [from ino_t]
!165 = metadata !{i32 786445, metadata !62, metadata !162, metadata !"st_dev", i32 10, i64 64, i64 64, i64 64, i32 0, metadata !69} ; [ DW_TAG_member ] [st_dev] [line 10, size 64, align 64, offset 64] [from dev_t]
!166 = metadata !{i32 786445, metadata !4, metadata !154, metadata !"stdin_tty", i32 64, i64 8, i64 8, i64 192, i32 0, metadata !55} ; [ DW_TAG_member ] [stdin_tty] [line 64, size 8, align 8, offset 192] [from _Bool]
!167 = metadata !{i32 786445, metadata !4, metadata !154, metadata !"verbose", i32 67, i64 8, i64 8, i64 200, i32 0, metadata !55} ; [ DW_TAG_member ] [verbose] [line 67, size 8, align 8, offset 200] [from _Bool]
!168 = metadata !{i32 786445, metadata !4, metadata !154, metadata !"require_restore_cwd", i32 75, i64 8, i64 8, i64 208, i32 0, metadata !55} ; [ DW_TAG_member ] [require_restore_cwd] [line 75, size 8, align 8, offset 208] [from _Bool]
!169 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"ds_free", metadata !"ds_free", metadata !"", i32 428, metadata !170, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @ds_free, null, null, met
!170 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !171, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!171 = metadata !{null, metadata !172}
!172 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !173} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Dirstack_state]
!173 = metadata !{i32 786454, metadata !103, null, metadata !"Dirstack_state", i32 152, i64 0, i64 0, i64 0, i32 0, metadata !174} ; [ DW_TAG_typedef ] [Dirstack_state] [line 152, size 0, align 0, offset 0] [from dirstack_state]
!174 = metadata !{i32 786451, metadata !103, null, metadata !"dirstack_state", i32 120, i64 3968, i64 64, i32 0, i32 0, null, metadata !175, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dirstack_state] [line 120, size 3968, align 64, offset 0] [
!175 = metadata !{metadata !176, metadata !215, metadata !216, metadata !217, metadata !224}
!176 = metadata !{i32 786445, metadata !103, metadata !174, metadata !"dir_stack", i32 127, i64 704, i64 64, i64 0, i32 0, metadata !177} ; [ DW_TAG_member ] [dir_stack] [line 127, size 704, align 64, offset 0] [from obstack]
!177 = metadata !{i32 786451, metadata !178, null, metadata !"obstack", i32 150, i64 704, i64 64, i32 0, i32 0, null, metadata !179, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [obstack] [line 150, size 704, align 64, offset 0] [def] [from ]
!178 = metadata !{metadata !"../lib/obstack.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!179 = metadata !{metadata !180, metadata !182, metadata !192, metadata !193, metadata !194, metadata !195, metadata !201, metadata !202, metadata !206, metadata !210, metadata !211, metadata !213, metadata !214}
!180 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"chunk_size", i32 152, i64 64, i64 64, i64 0, i32 0, metadata !181} ; [ DW_TAG_member ] [chunk_size] [line 152, size 64, align 64, offset 0] [from long int]
!181 = metadata !{i32 786468, null, null, metadata !"long int", i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [long int] [line 0, size 64, align 64, offset 0, enc DW_ATE_signed]
!182 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"chunk", i32 153, i64 64, i64 64, i64 64, i32 0, metadata !183} ; [ DW_TAG_member ] [chunk] [line 153, size 64, align 64, offset 64] [from ]
!183 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !184} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _obstack_chunk]
!184 = metadata !{i32 786451, metadata !178, null, metadata !"_obstack_chunk", i32 143, i64 192, i64 64, i32 0, i32 0, null, metadata !185, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_obstack_chunk] [line 143, size 192, align 64, offset 0] [de
!185 = metadata !{metadata !186, metadata !187, metadata !188}
!186 = metadata !{i32 786445, metadata !178, metadata !184, metadata !"limit", i32 145, i64 64, i64 64, i64 0, i32 0, metadata !43} ; [ DW_TAG_member ] [limit] [line 145, size 64, align 64, offset 0] [from ]
!187 = metadata !{i32 786445, metadata !178, metadata !184, metadata !"prev", i32 146, i64 64, i64 64, i64 64, i32 0, metadata !183} ; [ DW_TAG_member ] [prev] [line 146, size 64, align 64, offset 64] [from ]
!188 = metadata !{i32 786445, metadata !178, metadata !184, metadata !"contents", i32 147, i64 32, i64 8, i64 128, i32 0, metadata !189} ; [ DW_TAG_member ] [contents] [line 147, size 32, align 8, offset 128] [from ]
!189 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 32, i64 8, i32 0, i32 0, metadata !44, metadata !190, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 32, align 8, offset 0] [from char]
!190 = metadata !{metadata !191}
!191 = metadata !{i32 786465, i64 0, i64 4}       ; [ DW_TAG_subrange_type ] [0, 3]
!192 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"object_base", i32 154, i64 64, i64 64, i64 128, i32 0, metadata !43} ; [ DW_TAG_member ] [object_base] [line 154, size 64, align 64, offset 128] [from ]
!193 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"next_free", i32 155, i64 64, i64 64, i64 192, i32 0, metadata !43} ; [ DW_TAG_member ] [next_free] [line 155, size 64, align 64, offset 192] [from ]
!194 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"chunk_limit", i32 156, i64 64, i64 64, i64 256, i32 0, metadata !43} ; [ DW_TAG_member ] [chunk_limit] [line 156, size 64, align 64, offset 256] [from ]
!195 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"temp", i32 161, i64 64, i64 64, i64 320, i32 0, metadata !196} ; [ DW_TAG_member ] [temp] [line 161, size 64, align 64, offset 320] [from ]
!196 = metadata !{i32 786455, metadata !178, metadata !177, metadata !"", i32 157, i64 64, i64 64, i64 0, i32 0, null, metadata !197, i32 0, null, null, null} ; [ DW_TAG_union_type ] [line 157, size 64, align 64, offset 0] [def] [from ]
!197 = metadata !{metadata !198, metadata !199}
!198 = metadata !{i32 786445, metadata !178, metadata !196, metadata !"tempint", i32 159, i64 64, i64 64, i64 0, i32 0, metadata !181} ; [ DW_TAG_member ] [tempint] [line 159, size 64, align 64, offset 0] [from long int]
!199 = metadata !{i32 786445, metadata !178, metadata !196, metadata !"tempptr", i32 160, i64 64, i64 64, i64 0, i32 0, metadata !200} ; [ DW_TAG_member ] [tempptr] [line 160, size 64, align 64, offset 0] [from ]
!200 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!201 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"alignment_mask", i32 162, i64 32, i64 32, i64 384, i32 0, metadata !38} ; [ DW_TAG_member ] [alignment_mask] [line 162, size 32, align 32, offset 384] [from int]
!202 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"chunkfun", i32 166, i64 64, i64 64, i64 448, i32 0, metadata !203} ; [ DW_TAG_member ] [chunkfun] [line 166, size 64, align 64, offset 448] [from ]
!203 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !204} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!204 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !205, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!205 = metadata !{metadata !183, metadata !200, metadata !181}
!206 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"freefun", i32 167, i64 64, i64 64, i64 512, i32 0, metadata !207} ; [ DW_TAG_member ] [freefun] [line 167, size 64, align 64, offset 512] [from ]
!207 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !208} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!208 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !209, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!209 = metadata !{null, metadata !200, metadata !183}
!210 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"extra_arg", i32 168, i64 64, i64 64, i64 576, i32 0, metadata !200} ; [ DW_TAG_member ] [extra_arg] [line 168, size 64, align 64, offset 576] [from ]
!211 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"use_extra_arg", i32 169, i64 1, i64 32, i64 640, i32 0, metadata !212} ; [ DW_TAG_member ] [use_extra_arg] [line 169, size 1, align 32, offset 640] [from unsigned int]
!212 = metadata !{i32 786468, null, null, metadata !"unsigned int", i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ] [unsigned int] [line 0, size 32, align 32, offset 0, enc DW_ATE_unsigned]
!213 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"maybe_empty_object", i32 170, i64 1, i64 32, i64 641, i32 0, metadata !212} ; [ DW_TAG_member ] [maybe_empty_object] [line 170, size 1, align 32, offset 641] [from unsigned int]
!214 = metadata !{i32 786445, metadata !178, metadata !177, metadata !"alloc_failed", i32 174, i64 1, i64 32, i64 642, i32 0, metadata !212} ; [ DW_TAG_member ] [alloc_failed] [line 174, size 1, align 32, offset 642] [from unsigned int]
!215 = metadata !{i32 786445, metadata !103, metadata !174, metadata !"len_stack", i32 133, i64 704, i64 64, i64 704, i32 0, metadata !177} ; [ DW_TAG_member ] [len_stack] [line 133, size 704, align 64, offset 704] [from obstack]
!216 = metadata !{i32 786445, metadata !103, metadata !174, metadata !"Active_dir", i32 140, i64 704, i64 64, i64 1408, i32 0, metadata !177} ; [ DW_TAG_member ] [Active_dir] [line 140, size 704, align 64, offset 1408] [from obstack]
!217 = metadata !{i32 786445, metadata !103, metadata !174, metadata !"cycle_check_state", i32 143, i64 256, i64 64, i64 2112, i32 0, metadata !218} ; [ DW_TAG_member ] [cycle_check_state] [line 143, size 256, align 64, offset 2112] [from cycle_check_sta
!218 = metadata !{i32 786451, metadata !219, null, metadata !"cycle_check_state", i32 30, i64 256, i64 64, i32 0, i32 0, null, metadata !220, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [cycle_check_state] [line 30, size 256, align 64, offset 0]
!219 = metadata !{metadata !"../lib/cycle-check.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!220 = metadata !{metadata !221, metadata !222, metadata !223}
!221 = metadata !{i32 786445, metadata !219, metadata !218, metadata !"dev_ino", i32 32, i64 128, i64 64, i64 0, i32 0, metadata !162} ; [ DW_TAG_member ] [dev_ino] [line 32, size 128, align 64, offset 0] [from dev_ino]
!222 = metadata !{i32 786445, metadata !219, metadata !218, metadata !"chdir_counter", i32 33, i64 64, i64 64, i64 128, i32 0, metadata !67} ; [ DW_TAG_member ] [chdir_counter] [line 33, size 64, align 64, offset 128] [from long unsigned int]
!223 = metadata !{i32 786445, metadata !219, metadata !218, metadata !"magic", i32 34, i64 32, i64 32, i64 192, i32 0, metadata !38} ; [ DW_TAG_member ] [magic] [line 34, size 32, align 32, offset 192] [from int]
!224 = metadata !{i32 786445, metadata !103, metadata !174, metadata !"current_arg_jumpbuf", i32 150, i64 1600, i64 64, i64 2368, i32 0, metadata !225} ; [ DW_TAG_member ] [current_arg_jumpbuf] [line 150, size 1600, align 64, offset 2368] [from jmp_buf]
!225 = metadata !{i32 786454, metadata !103, null, metadata !"jmp_buf", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !226} ; [ DW_TAG_typedef ] [jmp_buf] [line 48, size 0, align 0, offset 0] [from ]
!226 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 1600, i64 64, i32 0, i32 0, metadata !227, metadata !245, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 1600, align 64, offset 0] [from __jmp_buf_tag]
!227 = metadata !{i32 786451, metadata !228, null, metadata !"__jmp_buf_tag", i32 34, i64 1600, i64 64, i32 0, i32 0, null, metadata !229, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [__jmp_buf_tag] [line 34, size 1600, align 64, offset 0] [def]
!228 = metadata !{metadata !"/usr/include/setjmp.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!229 = metadata !{metadata !230, metadata !235, metadata !236}
!230 = metadata !{i32 786445, metadata !228, metadata !227, metadata !"__jmpbuf", i32 40, i64 512, i64 64, i64 0, i32 0, metadata !231} ; [ DW_TAG_member ] [__jmpbuf] [line 40, size 512, align 64, offset 0] [from __jmp_buf]
!231 = metadata !{i32 786454, metadata !228, null, metadata !"__jmp_buf", i32 31, i64 0, i64 0, i64 0, i32 0, metadata !232} ; [ DW_TAG_typedef ] [__jmp_buf] [line 31, size 0, align 0, offset 0] [from ]
!232 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 512, i64 64, i32 0, i32 0, metadata !181, metadata !233, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 512, align 64, offset 0] [from long int]
!233 = metadata !{metadata !234}
!234 = metadata !{i32 786465, i64 0, i64 8}       ; [ DW_TAG_subrange_type ] [0, 7]
!235 = metadata !{i32 786445, metadata !228, metadata !227, metadata !"__mask_was_saved", i32 41, i64 32, i64 32, i64 512, i32 0, metadata !38} ; [ DW_TAG_member ] [__mask_was_saved] [line 41, size 32, align 32, offset 512] [from int]
!236 = metadata !{i32 786445, metadata !228, metadata !227, metadata !"__saved_mask", i32 42, i64 1024, i64 64, i64 576, i32 0, metadata !237} ; [ DW_TAG_member ] [__saved_mask] [line 42, size 1024, align 64, offset 576] [from __sigset_t]
!237 = metadata !{i32 786454, metadata !228, null, metadata !"__sigset_t", i32 30, i64 0, i64 0, i64 0, i32 0, metadata !238} ; [ DW_TAG_typedef ] [__sigset_t] [line 30, size 0, align 0, offset 0] [from ]
!238 = metadata !{i32 786451, metadata !239, null, metadata !"", i32 27, i64 1024, i64 64, i32 0, i32 0, null, metadata !240, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [line 27, size 1024, align 64, offset 0] [def] [from ]
!239 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/sigset.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!240 = metadata !{metadata !241}
!241 = metadata !{i32 786445, metadata !239, metadata !238, metadata !"__val", i32 29, i64 1024, i64 64, i64 0, i32 0, metadata !242} ; [ DW_TAG_member ] [__val] [line 29, size 1024, align 64, offset 0] [from ]
!242 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 1024, i64 64, i32 0, i32 0, metadata !67, metadata !243, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 1024, align 64, offset 0] [from long unsigned int]
!243 = metadata !{metadata !244}
!244 = metadata !{i32 786465, i64 0, i64 16}      ; [ DW_TAG_subrange_type ] [0, 15]
!245 = metadata !{metadata !246}
!246 = metadata !{i32 786465, i64 0, i64 1}       ; [ DW_TAG_subrange_type ] [0, 0]
!247 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"rm_1", metadata !"rm_1", metadata !"", i32 1561, metadata !248, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.dirstack_state*, i8*, %struct.rm_options*, i32*)*
!248 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !249, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!249 = metadata !{metadata !16, metadata !172, metadata !85, metadata !152, metadata !98}
!250 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"ds_clear", metadata !"ds_clear", metadata !"", i32 418, metadata !170, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @ds_clear, null, null, 
!251 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_stack_pop", metadata !"AD_stack_pop", metadata !"", i32 387, metadata !170, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @AD_stack_pop, 
!252 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_stack_height", metadata !"AD_stack_height", metadata !"", i32 374, metadata !253, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.dirstack_state*)* @AD_stack_
!253 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !254, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!254 = metadata !{metadata !149, metadata !255}
!255 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !256} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!256 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !173} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from Dirstack_state]
!257 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_stack_clear", metadata !"AD_stack_clear", metadata !"", i32 399, metadata !170, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @AD_stack_c
!258 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"remove_dir", metadata !"remove_dir", metadata !"", i32 1373, metadata !259, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %struct.dirstack_state*, i8*, %struct.st
!259 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !260, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!260 = metadata !{metadata !16, metadata !38, metadata !172, metadata !85, metadata !261, metadata !152, metadata !98}
!261 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !262} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from stat]
!262 = metadata !{i32 786451, metadata !263, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !264, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!263 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/stat.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!264 = metadata !{metadata !265, metadata !266, metadata !267, metadata !269, metadata !271, metadata !273, metadata !275, metadata !276, metadata !277, metadata !279, metadata !281, metadata !283, metadata !291, metadata !292, metadata !293}
!265 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !70} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!266 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !66} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!267 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !268} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!268 = metadata !{i32 786454, metadata !263, null, metadata !"__nlink_t", i32 130, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [__nlink_t] [line 130, size 0, align 0, offset 0] [from long unsigned int]
!269 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !270} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!270 = metadata !{i32 786454, metadata !263, null, metadata !"__mode_t", i32 129, i64 0, i64 0, i64 0, i32 0, metadata !212} ; [ DW_TAG_typedef ] [__mode_t] [line 129, size 0, align 0, offset 0] [from unsigned int]
!271 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !272} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!272 = metadata !{i32 786454, metadata !263, null, metadata !"__uid_t", i32 125, i64 0, i64 0, i64 0, i32 0, metadata !212} ; [ DW_TAG_typedef ] [__uid_t] [line 125, size 0, align 0, offset 0] [from unsigned int]
!273 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !274} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!274 = metadata !{i32 786454, metadata !263, null, metadata !"__gid_t", i32 126, i64 0, i64 0, i64 0, i32 0, metadata !212} ; [ DW_TAG_typedef ] [__gid_t] [line 126, size 0, align 0, offset 0] [from unsigned int]
!275 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !38} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!276 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !70} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!277 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !278} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!278 = metadata !{i32 786454, metadata !150, null, metadata !"__off_t", i32 131, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__off_t] [line 131, size 0, align 0, offset 0] [from long int]
!279 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !280} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!280 = metadata !{i32 786454, metadata !263, null, metadata !"__blksize_t", i32 153, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__blksize_t] [line 153, size 0, align 0, offset 0] [from long int]
!281 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !282} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!282 = metadata !{i32 786454, metadata !263, null, metadata !"__blkcnt_t", i32 158, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__blkcnt_t] [line 158, size 0, align 0, offset 0] [from long int]
!283 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !284} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!284 = metadata !{i32 786451, metadata !285, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !286, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!285 = metadata !{metadata !"/usr/include/time.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!286 = metadata !{metadata !287, metadata !289}
!287 = metadata !{i32 786445, metadata !285, metadata !284, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !288} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!288 = metadata !{i32 786454, metadata !285, null, metadata !"__time_t", i32 139, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__time_t] [line 139, size 0, align 0, offset 0] [from long int]
!289 = metadata !{i32 786445, metadata !285, metadata !284, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !290} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!290 = metadata !{i32 786454, metadata !285, null, metadata !"__syscall_slong_t", i32 175, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__syscall_slong_t] [line 175, size 0, align 0, offset 0] [from long int]
!291 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !284} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!292 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !284} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!293 = metadata !{i32 786445, metadata !263, metadata !262, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !294} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!294 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 192, i64 64, i32 0, i32 0, metadata !290, metadata !295, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 192, align 64, offset 0] [from __syscall_slong_t]
!295 = metadata !{metadata !296}
!296 = metadata !{i32 786465, i64 0, i64 3}       ; [ DW_TAG_subrange_type ] [0, 2]
!297 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_mark_as_unremovable", metadata !"AD_mark_as_unremovable", metadata !"", i32 598, metadata !298, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_stat
!298 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !299, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!299 = metadata !{null, metadata !172, metadata !85}
!300 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_mark_helper", metadata !"AD_mark_helper", metadata !"", i32 584, metadata !301, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_table**, i8*)* @AD_mark_
!301 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !302, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!302 = metadata !{null, metadata !303, metadata !43}
!303 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !304} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!304 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !305} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Hash_table]
!305 = metadata !{i32 786454, metadata !103, null, metadata !"Hash_table", i32 57, i64 0, i64 0, i64 0, i32 0, metadata !306} ; [ DW_TAG_typedef ] [Hash_table] [line 57, size 0, align 0, offset 0] [from hash_table]
!306 = metadata !{i32 786451, metadata !307, null, metadata !"hash_table", i32 55, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [hash_table] [line 55, size 0, align 0, offset 0] [decl] [from ]
!307 = metadata !{metadata !"../lib/hash.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!308 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_ensure_initialized", metadata !"AD_ensure_initialized", metadata !"", i32 568, metadata !309, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.hash_table* (%struct.
!309 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !310, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!310 = metadata !{metadata !304, metadata !303}
!311 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"hash_freer", metadata !"hash_freer", metadata !"", i32 206, metadata !312, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*)* @hash_freer, null, null, metadata !32, 
!312 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !313, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!313 = metadata !{null, metadata !200}
!314 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"hash_compare_strings", metadata !"hash_compare_strings", metadata !"", i32 212, metadata !315, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, i8*)* @hash_compare_st
!315 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !316, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!316 = metadata !{metadata !55, metadata !317, metadata !317}
!317 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !318} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!318 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from ]
!319 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"prompt", metadata !"prompt", metadata !"", i32 837, metadata !320, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %struct.dirstack_state*, i8*, %struct.stat*, %str
!320 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !321, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!321 = metadata !{metadata !16, metadata !38, metadata !255, metadata !85, metadata !261, metadata !152, metadata !110, metadata !322}
!322 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !323} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Ternary]
!323 = metadata !{i32 786454, metadata !103, null, metadata !"Ternary", i32 82, i64 0, i64 0, i64 0, i32 0, metadata !105} ; [ DW_TAG_typedef ] [Ternary] [line 82, size 0, align 0, offset 0] [from Ternary]
!324 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"is_empty_dir", metadata !"is_empty_dir", metadata !"", i32 724, metadata !325, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i32, i8*)* @is_empty_dir, null, null, metad
!325 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !326, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!326 = metadata !{metadata !55, metadata !38, metadata !85}
!327 = metadata !{i32 786478, metadata !328, metadata !329, metadata !"readdir_ignoring_dot_and_dotdot", metadata !"readdir_ignoring_dot_and_dotdot", metadata !"", i32 382, metadata !330, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.d
!328 = metadata !{metadata !"./system.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!329 = metadata !{i32 786473, metadata !328}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!330 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !331, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!331 = metadata !{metadata !332, metadata !347}
!332 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !333} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!333 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !334} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from dirent]
!334 = metadata !{i32 786451, metadata !335, null, metadata !"dirent", i32 22, i64 2240, i64 64, i32 0, i32 0, null, metadata !336, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dirent] [line 22, size 2240, align 64, offset 0] [def] [from ]
!335 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/dirent.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src"}
!336 = metadata !{metadata !337, metadata !338, metadata !339, metadata !341, metadata !343}
!337 = metadata !{i32 786445, metadata !335, metadata !334, metadata !"d_ino", i32 25, i64 64, i64 64, i64 0, i32 0, metadata !66} ; [ DW_TAG_member ] [d_ino] [line 25, size 64, align 64, offset 0] [from __ino_t]
!338 = metadata !{i32 786445, metadata !335, metadata !334, metadata !"d_off", i32 26, i64 64, i64 64, i64 64, i32 0, metadata !278} ; [ DW_TAG_member ] [d_off] [line 26, size 64, align 64, offset 64] [from __off_t]
!339 = metadata !{i32 786445, metadata !335, metadata !334, metadata !"d_reclen", i32 31, i64 16, i64 16, i64 128, i32 0, metadata !340} ; [ DW_TAG_member ] [d_reclen] [line 31, size 16, align 16, offset 128] [from unsigned short]
!340 = metadata !{i32 786468, null, null, metadata !"unsigned short", i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ] [unsigned short] [line 0, size 16, align 16, offset 0, enc DW_ATE_unsigned]
!341 = metadata !{i32 786445, metadata !335, metadata !334, metadata !"d_type", i32 32, i64 8, i64 8, i64 144, i32 0, metadata !342} ; [ DW_TAG_member ] [d_type] [line 32, size 8, align 8, offset 144] [from unsigned char]
!342 = metadata !{i32 786468, null, null, metadata !"unsigned char", i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ] [unsigned char] [line 0, size 8, align 8, offset 0, enc DW_ATE_unsigned_char]
!343 = metadata !{i32 786445, metadata !335, metadata !334, metadata !"d_name", i32 33, i64 2048, i64 8, i64 152, i32 0, metadata !344} ; [ DW_TAG_member ] [d_name] [line 33, size 2048, align 8, offset 152] [from ]
!344 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 2048, i64 8, i32 0, i32 0, metadata !44, metadata !345, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 2048, align 8, offset 0] [from char]
!345 = metadata !{metadata !346}
!346 = metadata !{i32 786465, i64 0, i64 256}     ; [ DW_TAG_subrange_type ] [0, 255]
!347 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !348} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from DIR]
!348 = metadata !{i32 786454, metadata !103, null, metadata !"DIR", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !349} ; [ DW_TAG_typedef ] [DIR] [line 127, size 0, align 0, offset 0] [from __dirstream]
!349 = metadata !{i32 786451, metadata !121, null, metadata !"__dirstream", i32 127, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [__dirstream] [line 127, size 0, align 0, offset 0] [decl] [from ]
!350 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"write_protected_non_symlink", metadata !"write_protected_non_symlink", metadata !"", i32 757, metadata !351, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i32, i8*, %st
!351 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !352, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!352 = metadata !{metadata !55, metadata !38, metadata !85, metadata !255, metadata !261}
!353 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_pop_and_chdir", metadata !"AD_pop_and_chdir", metadata !"", i32 461, metadata !354, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.__dirstream*, i32*, %struc
!354 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !355, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!355 = metadata !{metadata !43, metadata !347, metadata !98, metadata !172}
!356 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"pop_dir", metadata !"pop_dir", metadata !"", i32 251, metadata !170, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @pop_dir, null, null, met
!357 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"top_dir", metadata !"top_dir", metadata !"", i32 238, metadata !358, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.dirstack_state*)* @top_dir, null, null, meta
!358 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !359, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!359 = metadata !{metadata !43, metadata !255}
!360 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_mark_current_as_unremovable", metadata !"AD_mark_current_as_unremovable", metadata !"", i32 608, metadata !170, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%stru
!361 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"remove_cwd_entries", metadata !"remove_cwd_entries", metadata !"", i32 1223, metadata !362, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__dirstream**, %struc
!362 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !363, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!363 = metadata !{metadata !16, metadata !364, metadata !172, metadata !42, metadata !261, metadata !152}
!364 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !347} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!365 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_is_removable", metadata !"AD_is_removable", metadata !"", i32 716, metadata !366, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.dirstack_state*, i8*)* @AD_is
!366 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !367, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!367 = metadata !{metadata !55, metadata !255, metadata !85}
!368 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_push", metadata !"AD_push", metadata !"", i32 648, metadata !369, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, %struct.dirstack_state*, i8*, %struct.stat*)* 
!369 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !370, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!370 = metadata !{null, metadata !38, metadata !172, metadata !85, metadata !371}
!371 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !372} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!372 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !262} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from stat]
!373 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"push_dir", metadata !"push_dir", metadata !"", i32 218, metadata !298, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*, i8*)* @push_dir, null, n
!374 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"full_filename_", metadata !"full_filename_", metadata !"", i32 307, metadata !375, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.dirstack_state*, i8*)* @full_f
!375 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !376, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!376 = metadata !{metadata !43, metadata !255, metadata !85}
!377 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"right_justify", metadata !"right_justify", metadata !"", i32 276, metadata !378, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, i8*, i64, i8**, i8*)* @right_j
!378 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !379, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!379 = metadata !{metadata !149, metadata !43, metadata !149, metadata !85, metadata !149, metadata !42, metadata !380}
!380 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !55} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _Bool]
!381 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"fd_to_subdirp", metadata !"fd_to_subdirp", metadata !"", i32 1181, metadata !382, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.__dirstream* (i32, i8*, %struct.rm_o
!382 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !383, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!383 = metadata !{metadata !347, metadata !38, metadata !85, metadata !152, metadata !38, metadata !261, metadata !98}
!384 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"remove_entry", metadata !"remove_entry", metadata !"", i32 1018, metadata !385, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %struct.dirstack_state*, i8*, %struc
!385 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !386, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!386 = metadata !{metadata !16, metadata !38, metadata !255, metadata !85, metadata !261, metadata !152, metadata !332}
!387 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"is_dir_lstat", metadata !"is_dir_lstat", metadata !"", i32 927, metadata !388, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*, %struct.stat*)* @is_dir_lstat, null, n
!388 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !389, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!389 = metadata !{metadata !55, metadata !85, metadata !261}
!390 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"cache_stat_ok", metadata !"cache_stat_ok", metadata !"", i32 199, metadata !391, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.stat*)* @cache_stat_ok, null, nul
!391 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !392, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!392 = metadata !{metadata !55, metadata !261}
!393 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_stack_top", metadata !"AD_stack_top", metadata !"", i32 380, metadata !394, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.AD_ent* (%struct.dirstack_state*)* @AD_
!394 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !395, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!395 = metadata !{metadata !396, metadata !255}
!396 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !397} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from AD_ent]
!397 = metadata !{i32 786451, metadata !103, null, metadata !"AD_ent", i32 99, i64 256, i64 64, i32 0, i32 0, null, metadata !398, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [AD_ent] [line 99, size 256, align 64, offset 0] [def] [from ]
!398 = metadata !{metadata !399, metadata !400, metadata !401}
!399 = metadata !{i32 786445, metadata !103, metadata !397, metadata !"unremovable", i32 105, i64 64, i64 64, i64 0, i32 0, metadata !304} ; [ DW_TAG_member ] [unremovable] [line 105, size 64, align 64, offset 0] [from ]
!400 = metadata !{i32 786445, metadata !103, metadata !397, metadata !"status", i32 110, i64 32, i64 32, i64 64, i32 0, metadata !16} ; [ DW_TAG_member ] [status] [line 110, size 32, align 32, offset 64] [from RM_status]
!401 = metadata !{i32 786445, metadata !103, metadata !397, metadata !"dev_ino", i32 115, i64 128, i64 64, i64 128, i32 0, metadata !162} ; [ DW_TAG_member ] [dev_ino] [line 115, size 128, align 64, offset 128] [from dev_ino]
!402 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"AD_push_initial", metadata !"AD_push_initial", metadata !"", i32 622, metadata !170, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.dirstack_state*)* @AD_push_
!403 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"ignorable_missing", metadata !"ignorable_missing", metadata !"", i32 1008, metadata !404, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.rm_options*, i32)* @igno
!404 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !405, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!405 = metadata !{metadata !55, metadata !152, metadata !38}
!406 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"nonexistent_file_errno", metadata !"nonexistent_file_errno", metadata !"", i32 988, metadata !407, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i32)* @nonexistent_file
!407 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !408, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!408 = metadata !{metadata !55, metadata !38}
!409 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"cache_fstatat", metadata !"cache_fstatat", metadata !"", i32 172, metadata !410, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8*, %struct.stat*, i32)* @cache_fs
!410 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !411, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!411 = metadata !{metadata !38, metadata !38, metadata !85, metadata !261, metadata !38}
!412 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"cache_stat_init", metadata !"cache_stat_init", metadata !"", i32 184, metadata !413, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.stat* (%struct.stat*)* @cache_sta
!413 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !414, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!414 = metadata !{metadata !261, metadata !261}
!415 = metadata !{i32 786478, metadata !328, metadata !329, metadata !"dot_or_dotdot", metadata !"dot_or_dotdot", metadata !"", i32 369, metadata !416, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i8*)* @dot_or_dotdot, null, null, metadat
!416 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !417, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!417 = metadata !{metadata !55, metadata !85}
!418 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"klee_compatible_error", metadata !"klee_compatible_error", metadata !"", i32 155, metadata !419, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32* (...)*, i8*, 
!419 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !420, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!420 = metadata !{null, metadata !38, metadata !421, metadata !85}
!421 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !422} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!422 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !423, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!423 = metadata !{metadata !98, metadata !424}
!424 = metadata !{i32 786456}
!425 = metadata !{i32 786478, metadata !103, metadata !146, metadata !"ds_init", metadata !"ds_init", metadata !"", i32 408, metadata !426, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.dirstack_state* ()* @ds_init, null, null, metadat
!426 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !427, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!427 = metadata !{metadata !172}
!428 = metadata !{metadata !429, metadata !430, metadata !431, metadata !432, metadata !433, metadata !434}
!429 = metadata !{i32 786484, i32 0, null, metadata !"after_divergence", metadata !"after_divergence", metadata !"", metadata !135, i32 14, metadata !38, i32 0, i32 1, i32* @after_divergence, null} ; [ DW_TAG_variable ] [after_divergence] [line 14] [def]
!430 = metadata !{i32 786484, i32 0, null, metadata !"klee_div_file_env", metadata !"klee_div_file_env", metadata !"", metadata !135, i32 15, metadata !85, i32 0, i32 1, i8** @klee_div_file_env, null} ; [ DW_TAG_variable ] [klee_div_file_env] [line 15] [
!431 = metadata !{i32 786484, i32 0, null, metadata !"klee_div_marker_file_env", metadata !"klee_div_marker_file_env", metadata !"", metadata !135, i32 16, metadata !85, i32 0, i32 1, i8** @klee_div_marker_file_env, null} ; [ DW_TAG_variable ] [klee_div_
!432 = metadata !{i32 786484, i32 0, metadata !374, metadata !"buf", metadata !"buf", metadata !"", metadata !146, i32 309, metadata !43, i32 1, i32 1, i8** @full_filename_.buf, null} ; [ DW_TAG_variable ] [buf] [line 309] [local] [def]
!433 = metadata !{i32 786484, i32 0, metadata !374, metadata !"n_allocated", metadata !"n_allocated", metadata !"", metadata !146, i32 310, metadata !149, i32 1, i32 1, i64* @full_filename_.n_allocated, null} ; [ DW_TAG_variable ] [n_allocated] [line 310
!434 = metadata !{i32 786484, i32 0, metadata !374, metadata !"static_buf", metadata !"static_buf", metadata !"", metadata !146, i32 334, metadata !435, i32 1, i32 1, [512 x i8]* @full_filename_.static_buf, null} ; [ DW_TAG_variable ] [static_buf] [line 
!435 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 4096, i64 8, i32 0, i32 0, metadata !44, metadata !436, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 4096, align 8, offset 0] [from char]
!436 = metadata !{metadata !437}
!437 = metadata !{i32 786465, i64 0, i64 512}     ; [ DW_TAG_subrange_type ] [0, 511]
!438 = metadata !{i32 786449, metadata !439, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !440, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit
!439 = metadata !{metadata !"hash-pjw.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!440 = metadata !{metadata !441}
!441 = metadata !{i32 786478, metadata !439, metadata !442, metadata !"hash_pjw", metadata !"hash_pjw", metadata !"", i32 32, metadata !443, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64)* @hash_pjw, null, null, metadata !32, i3
!442 = metadata !{i32 786473, metadata !439}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash-pjw.c]
!443 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !444, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!444 = metadata !{metadata !445, metadata !317, metadata !445}
!445 = metadata !{i32 786454, metadata !439, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!446 = metadata !{i32 786449, metadata !447, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !448, metadata !32, metadata !452, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_uni
!447 = metadata !{metadata !"version-etc.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!448 = metadata !{metadata !449}
!449 = metadata !{i32 786436, metadata !447, null, metadata !"", i32 36, i64 32, i64 32, i32 0, i32 0, null, metadata !450, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 36, size 32, align 32, offset 0] [def] [from ]
!450 = metadata !{metadata !451}
!451 = metadata !{i32 786472, metadata !"COPYRIGHT_YEAR", i64 2006} ; [ DW_TAG_enumerator ] [COPYRIGHT_YEAR :: 2006]
!452 = metadata !{metadata !453, metadata !514}
!453 = metadata !{i32 786478, metadata !447, metadata !454, metadata !"version_etc_va", metadata !"version_etc_va", metadata !"", i32 41, metadata !455, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct._IO_FILE*, i8*, i8*, i8*, %st
!454 = metadata !{i32 786473, metadata !447}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/version-etc.c]
!455 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !456, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!456 = metadata !{null, metadata !457, metadata !85, metadata !85, metadata !85, metadata !506}
!457 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !458} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from FILE]
!458 = metadata !{i32 786454, metadata !447, null, metadata !"FILE", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !459} ; [ DW_TAG_typedef ] [FILE] [line 48, size 0, align 0, offset 0] [from _IO_FILE]
!459 = metadata !{i32 786451, metadata !460, null, metadata !"_IO_FILE", i32 245, i64 1728, i64 64, i32 0, i32 0, null, metadata !461, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_FILE] [line 245, size 1728, align 64, offset 0] [def] [from ]
!460 = metadata !{metadata !"/usr/include/libio.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!461 = metadata !{metadata !462, metadata !463, metadata !464, metadata !465, metadata !466, metadata !467, metadata !468, metadata !469, metadata !470, metadata !471, metadata !472, metadata !473, metadata !474, metadata !482, metadata !483, metadata !4
!462 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_flags", i32 246, i64 32, i64 32, i64 0, i32 0, metadata !38} ; [ DW_TAG_member ] [_flags] [line 246, size 32, align 32, offset 0] [from int]
!463 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_IO_read_ptr", i32 251, i64 64, i64 64, i64 64, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_read_ptr] [line 251, size 64, align 64, offset 64] [from ]
!464 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_IO_read_end", i32 252, i64 64, i64 64, i64 128, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_read_end] [line 252, size 64, align 64, offset 128] [from ]
!465 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_IO_read_base", i32 253, i64 64, i64 64, i64 192, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_read_base] [line 253, size 64, align 64, offset 192] [from ]
!466 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_IO_write_base", i32 254, i64 64, i64 64, i64 256, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_write_base] [line 254, size 64, align 64, offset 256] [from ]
!467 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_IO_write_ptr", i32 255, i64 64, i64 64, i64 320, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_write_ptr] [line 255, size 64, align 64, offset 320] [from ]
!468 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_IO_write_end", i32 256, i64 64, i64 64, i64 384, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_write_end] [line 256, size 64, align 64, offset 384] [from ]
!469 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_IO_buf_base", i32 257, i64 64, i64 64, i64 448, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_buf_base] [line 257, size 64, align 64, offset 448] [from ]
!470 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_IO_buf_end", i32 258, i64 64, i64 64, i64 512, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_buf_end] [line 258, size 64, align 64, offset 512] [from ]
!471 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_IO_save_base", i32 260, i64 64, i64 64, i64 576, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_save_base] [line 260, size 64, align 64, offset 576] [from ]
!472 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_IO_backup_base", i32 261, i64 64, i64 64, i64 640, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_backup_base] [line 261, size 64, align 64, offset 640] [from ]
!473 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_IO_save_end", i32 262, i64 64, i64 64, i64 704, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_save_end] [line 262, size 64, align 64, offset 704] [from ]
!474 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_markers", i32 264, i64 64, i64 64, i64 768, i32 0, metadata !475} ; [ DW_TAG_member ] [_markers] [line 264, size 64, align 64, offset 768] [from ]
!475 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !476} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_marker]
!476 = metadata !{i32 786451, metadata !460, null, metadata !"_IO_marker", i32 160, i64 192, i64 64, i32 0, i32 0, null, metadata !477, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_marker] [line 160, size 192, align 64, offset 0] [def] [from
!477 = metadata !{metadata !478, metadata !479, metadata !481}
!478 = metadata !{i32 786445, metadata !460, metadata !476, metadata !"_next", i32 161, i64 64, i64 64, i64 0, i32 0, metadata !475} ; [ DW_TAG_member ] [_next] [line 161, size 64, align 64, offset 0] [from ]
!479 = metadata !{i32 786445, metadata !460, metadata !476, metadata !"_sbuf", i32 162, i64 64, i64 64, i64 64, i32 0, metadata !480} ; [ DW_TAG_member ] [_sbuf] [line 162, size 64, align 64, offset 64] [from ]
!480 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !459} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_FILE]
!481 = metadata !{i32 786445, metadata !460, metadata !476, metadata !"_pos", i32 166, i64 32, i64 32, i64 128, i32 0, metadata !38} ; [ DW_TAG_member ] [_pos] [line 166, size 32, align 32, offset 128] [from int]
!482 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_chain", i32 266, i64 64, i64 64, i64 832, i32 0, metadata !480} ; [ DW_TAG_member ] [_chain] [line 266, size 64, align 64, offset 832] [from ]
!483 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_fileno", i32 268, i64 32, i64 32, i64 896, i32 0, metadata !38} ; [ DW_TAG_member ] [_fileno] [line 268, size 32, align 32, offset 896] [from int]
!484 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_flags2", i32 272, i64 32, i64 32, i64 928, i32 0, metadata !38} ; [ DW_TAG_member ] [_flags2] [line 272, size 32, align 32, offset 928] [from int]
!485 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_old_offset", i32 274, i64 64, i64 64, i64 960, i32 0, metadata !486} ; [ DW_TAG_member ] [_old_offset] [line 274, size 64, align 64, offset 960] [from __off_t]
!486 = metadata !{i32 786454, metadata !460, null, metadata !"__off_t", i32 131, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__off_t] [line 131, size 0, align 0, offset 0] [from long int]
!487 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_cur_column", i32 278, i64 16, i64 16, i64 1024, i32 0, metadata !340} ; [ DW_TAG_member ] [_cur_column] [line 278, size 16, align 16, offset 1024] [from unsigned short]
!488 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_vtable_offset", i32 279, i64 8, i64 8, i64 1040, i32 0, metadata !489} ; [ DW_TAG_member ] [_vtable_offset] [line 279, size 8, align 8, offset 1040] [from signed char]
!489 = metadata !{i32 786468, null, null, metadata !"signed char", i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ] [signed char] [line 0, size 8, align 8, offset 0, enc DW_ATE_signed_char]
!490 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_shortbuf", i32 280, i64 8, i64 8, i64 1048, i32 0, metadata !491} ; [ DW_TAG_member ] [_shortbuf] [line 280, size 8, align 8, offset 1048] [from ]
!491 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 8, i64 8, i32 0, i32 0, metadata !44, metadata !245, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 8, align 8, offset 0] [from char]
!492 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_lock", i32 284, i64 64, i64 64, i64 1088, i32 0, metadata !200} ; [ DW_TAG_member ] [_lock] [line 284, size 64, align 64, offset 1088] [from ]
!493 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_offset", i32 293, i64 64, i64 64, i64 1152, i32 0, metadata !494} ; [ DW_TAG_member ] [_offset] [line 293, size 64, align 64, offset 1152] [from __off64_t]
!494 = metadata !{i32 786454, metadata !460, null, metadata !"__off64_t", i32 132, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__off64_t] [line 132, size 0, align 0, offset 0] [from long int]
!495 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"__pad1", i32 302, i64 64, i64 64, i64 1216, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad1] [line 302, size 64, align 64, offset 1216] [from ]
!496 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"__pad2", i32 303, i64 64, i64 64, i64 1280, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad2] [line 303, size 64, align 64, offset 1280] [from ]
!497 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"__pad3", i32 304, i64 64, i64 64, i64 1344, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad3] [line 304, size 64, align 64, offset 1344] [from ]
!498 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"__pad4", i32 305, i64 64, i64 64, i64 1408, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad4] [line 305, size 64, align 64, offset 1408] [from ]
!499 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"__pad5", i32 306, i64 64, i64 64, i64 1472, i32 0, metadata !500} ; [ DW_TAG_member ] [__pad5] [line 306, size 64, align 64, offset 1472] [from size_t]
!500 = metadata !{i32 786454, metadata !460, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!501 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_mode", i32 308, i64 32, i64 32, i64 1536, i32 0, metadata !38} ; [ DW_TAG_member ] [_mode] [line 308, size 32, align 32, offset 1536] [from int]
!502 = metadata !{i32 786445, metadata !460, metadata !459, metadata !"_unused2", i32 310, i64 160, i64 8, i64 1568, i32 0, metadata !503} ; [ DW_TAG_member ] [_unused2] [line 310, size 160, align 8, offset 1568] [from ]
!503 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 160, i64 8, i32 0, i32 0, metadata !44, metadata !504, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 160, align 8, offset 0] [from char]
!504 = metadata !{metadata !505}
!505 = metadata !{i32 786465, i64 0, i64 20}      ; [ DW_TAG_subrange_type ] [0, 19]
!506 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !507} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from __va_list_tag]
!507 = metadata !{i32 786454, metadata !447, null, metadata !"__va_list_tag", i32 44, i64 0, i64 0, i64 0, i32 0, metadata !508} ; [ DW_TAG_typedef ] [__va_list_tag] [line 44, size 0, align 0, offset 0] [from __va_list_tag]
!508 = metadata !{i32 786451, metadata !447, null, metadata !"__va_list_tag", i32 44, i64 192, i64 64, i32 0, i32 0, null, metadata !509, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [__va_list_tag] [line 44, size 192, align 64, offset 0] [def] [
!509 = metadata !{metadata !510, metadata !511, metadata !512, metadata !513}
!510 = metadata !{i32 786445, metadata !447, metadata !508, metadata !"gp_offset", i32 44, i64 32, i64 32, i64 0, i32 0, metadata !212} ; [ DW_TAG_member ] [gp_offset] [line 44, size 32, align 32, offset 0] [from unsigned int]
!511 = metadata !{i32 786445, metadata !447, metadata !508, metadata !"fp_offset", i32 44, i64 32, i64 32, i64 32, i32 0, metadata !212} ; [ DW_TAG_member ] [fp_offset] [line 44, size 32, align 32, offset 32] [from unsigned int]
!512 = metadata !{i32 786445, metadata !447, metadata !508, metadata !"overflow_arg_area", i32 44, i64 64, i64 64, i64 64, i32 0, metadata !200} ; [ DW_TAG_member ] [overflow_arg_area] [line 44, size 64, align 64, offset 64] [from ]
!513 = metadata !{i32 786445, metadata !447, metadata !508, metadata !"reg_save_area", i32 44, i64 64, i64 64, i64 128, i32 0, metadata !200} ; [ DW_TAG_member ] [reg_save_area] [line 44, size 64, align 64, offset 128] [from ]
!514 = metadata !{i32 786478, metadata !447, metadata !454, metadata !"version_etc", metadata !"version_etc", metadata !"", i32 165, metadata !515, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct._IO_FILE*, i8*, i8*, i8*, ...)* @v
!515 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !516, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!516 = metadata !{null, metadata !457, metadata !85, metadata !85, metadata !85}
!517 = metadata !{i32 786449, metadata !518, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !32, metadata !519, metadata !32, metadata !""} ; [ DW_TAG_compile_unit
!518 = metadata !{metadata !"version-etc-fsf.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!519 = metadata !{metadata !520}
!520 = metadata !{i32 786484, i32 0, null, metadata !"version_etc_copyright", metadata !"version_etc_copyright", metadata !"", metadata !521, i32 27, metadata !522, i32 0, i32 1, [47 x i8]* @version_etc_copyright, null} ; [ DW_TAG_variable ] [version_etc
!521 = metadata !{i32 786473, metadata !518}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/version-etc-fsf.c]
!522 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 376, i64 8, i32 0, i32 0, metadata !86, metadata !523, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 376, align 8, offset 0] [from ]
!523 = metadata !{metadata !524}
!524 = metadata !{i32 786465, i64 0, i64 47}      ; [ DW_TAG_subrange_type ] [0, 46]
!525 = metadata !{i32 786449, metadata !526, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !527, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit
!526 = metadata !{metadata !"xalloc-die.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!527 = metadata !{metadata !528}
!528 = metadata !{i32 786478, metadata !526, metadata !529, metadata !"xalloc_die", metadata !"xalloc_die", metadata !"", i32 33, metadata !530, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @xalloc_die, null, null, metadata !32, i32
!529 = metadata !{i32 786473, metadata !526}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xalloc-die.c]
!530 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !531, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!531 = metadata !{null}
!532 = metadata !{i32 786449, metadata !533, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !534, metadata !32, metadata !537, metadata !559, metadata !32, metadata !""} ; [ DW_TAG_compile_un
!533 = metadata !{metadata !"argmatch.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!534 = metadata !{metadata !535}
!535 = metadata !{i32 786436, metadata !536, null, metadata !"quoting_style", i32 28, i64 32, i64 32, i32 0, i32 0, null, metadata !24, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [quoting_style] [line 28, size 32, align 32, offset 0] [def] [f
!536 = metadata !{metadata !"./quotearg.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!537 = metadata !{metadata !538, metadata !544, metadata !547, metadata !550, metadata !555, metadata !558}
!538 = metadata !{i32 786478, metadata !533, metadata !539, metadata !"argmatch", metadata !"argmatch", metadata !"", i32 85, metadata !540, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8**, i8*, i64)* @argmatch, null, null, metad
!539 = metadata !{i32 786473, metadata !533}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!540 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !541, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!541 = metadata !{metadata !542, metadata !85, metadata !151, metadata !85, metadata !543}
!542 = metadata !{i32 786454, metadata !533, null, metadata !"ptrdiff_t", i32 34, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [ptrdiff_t] [line 34, size 0, align 0, offset 0] [from long int]
!543 = metadata !{i32 786454, metadata !533, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!544 = metadata !{i32 786478, metadata !533, metadata !539, metadata !"argmatch_invalid", metadata !"argmatch_invalid", metadata !"", i32 132, metadata !545, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i8*, i64)* @argmatch_invali
!545 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !546, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!546 = metadata !{null, metadata !85, metadata !85, metadata !542}
!547 = metadata !{i32 786478, metadata !533, metadata !539, metadata !"argmatch_valid", metadata !"argmatch_valid", metadata !"", i32 147, metadata !548, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8**, i8*, i64)* @argmatch_valid, nu
!548 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !549, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!549 = metadata !{null, metadata !151, metadata !85, metadata !543}
!550 = metadata !{i32 786478, metadata !533, metadata !539, metadata !"__xargmatch_internal", metadata !"__xargmatch_internal", metadata !"", i32 177, metadata !551, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8*, i8**, i8*, i64,
!551 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !552, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!552 = metadata !{metadata !542, metadata !85, metadata !85, metadata !151, metadata !85, metadata !543, metadata !553}
!553 = metadata !{i32 786454, metadata !533, null, metadata !"argmatch_exit_fn", i32 52, i64 0, i64 0, i64 0, i32 0, metadata !554} ; [ DW_TAG_typedef ] [argmatch_exit_fn] [line 52, size 0, align 0, offset 0] [from ]
!554 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !530} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!555 = metadata !{i32 786478, metadata !533, metadata !539, metadata !"argmatch_to_argument", metadata !"argmatch_to_argument", metadata !"", i32 198, metadata !556, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8**, i8*, i64)* @ar
!556 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !557, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!557 = metadata !{metadata !85, metadata !85, metadata !151, metadata !85, metadata !543}
!558 = metadata !{i32 786478, metadata !533, metadata !539, metadata !"__argmatch_die", metadata !"__argmatch_die", metadata !"", i32 63, metadata !530, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @__argmatch_die, null, null, metada
!559 = metadata !{metadata !560}
!560 = metadata !{i32 786484, i32 0, null, metadata !"argmatch_die", metadata !"argmatch_die", metadata !"", metadata !539, i32 70, metadata !553, i32 0, i32 1, void ()** @argmatch_die, null} ; [ DW_TAG_variable ] [argmatch_die] [line 70] [def]
!561 = metadata !{i32 786449, metadata !562, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !563, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit
!562 = metadata !{metadata !"basename.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!563 = metadata !{metadata !564, metadata !568, metadata !569}
!564 = metadata !{i32 786478, metadata !562, metadata !565, metadata !"last_component", metadata !"last_component", metadata !"", i32 33, metadata !566, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @last_component, null, null, met
!565 = metadata !{i32 786473, metadata !562}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!566 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !567, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!567 = metadata !{metadata !43, metadata !85}
!568 = metadata !{i32 786478, metadata !562, metadata !565, metadata !"base_name", metadata !"base_name", metadata !"", i32 75, metadata !566, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @base_name, null, null, metadata !32, i32 
!569 = metadata !{i32 786478, metadata !562, metadata !565, metadata !"base_len", metadata !"base_len", metadata !"", i32 112, metadata !570, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*)* @base_len, null, null, metadata !32, i32 11
!570 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !571, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!571 = metadata !{metadata !572, metadata !85}
!572 = metadata !{i32 786454, metadata !562, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!573 = metadata !{i32 786449, metadata !574, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !575, metadata !581, metadata !32, metadata !""} ; [ DW_TAG_compile_uni
!574 = metadata !{metadata !"closeout.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!575 = metadata !{metadata !576, metadata !580}
!576 = metadata !{i32 786478, metadata !574, metadata !577, metadata !"close_stdout_set_file_name", metadata !"close_stdout_set_file_name", metadata !"", i32 41, metadata !578, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*)* @close_
!577 = metadata !{i32 786473, metadata !574}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/closeout.c]
!578 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !579, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!579 = metadata !{null, metadata !85}
!580 = metadata !{i32 786478, metadata !574, metadata !577, metadata !"close_stdout", metadata !"close_stdout", metadata !"", i32 70, metadata !530, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @close_stdout, null, null, metadata !3
!581 = metadata !{metadata !582}
!582 = metadata !{i32 786484, i32 0, null, metadata !"file_name", metadata !"file_name", metadata !"", metadata !577, i32 36, metadata !85, i32 1, i32 1, i8** @file_name, null} ; [ DW_TAG_variable ] [file_name] [line 36] [local] [def]
!583 = metadata !{i32 786449, metadata !584, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !585, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit
!584 = metadata !{metadata !"cycle-check.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!585 = metadata !{metadata !586, metadata !606, metadata !644}
!586 = metadata !{i32 786478, metadata !584, metadata !587, metadata !"cycle_check_init", metadata !"cycle_check_init", metadata !"", i32 45, metadata !588, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.cycle_check_state*)* @cyc
!587 = metadata !{i32 786473, metadata !584}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/cycle-check.c]
!588 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !589, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!589 = metadata !{null, metadata !590}
!590 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !591} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from cycle_check_state]
!591 = metadata !{i32 786451, metadata !592, null, metadata !"cycle_check_state", i32 30, i64 256, i64 64, i32 0, i32 0, null, metadata !593, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [cycle_check_state] [line 30, size 256, align 64, offset 0]
!592 = metadata !{metadata !"./cycle-check.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!593 = metadata !{metadata !594, metadata !604, metadata !605}
!594 = metadata !{i32 786445, metadata !592, metadata !591, metadata !"dev_ino", i32 32, i64 128, i64 64, i64 0, i32 0, metadata !595} ; [ DW_TAG_member ] [dev_ino] [line 32, size 128, align 64, offset 0] [from dev_ino]
!595 = metadata !{i32 786451, metadata !596, null, metadata !"dev_ino", i32 7, i64 128, i64 64, i32 0, i32 0, null, metadata !597, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dev_ino] [line 7, size 128, align 64, offset 0] [def] [from ]
!596 = metadata !{metadata !"./dev-ino.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!597 = metadata !{metadata !598, metadata !601}
!598 = metadata !{i32 786445, metadata !596, metadata !595, metadata !"st_ino", i32 9, i64 64, i64 64, i64 0, i32 0, metadata !599} ; [ DW_TAG_member ] [st_ino] [line 9, size 64, align 64, offset 0] [from ino_t]
!599 = metadata !{i32 786454, metadata !596, null, metadata !"ino_t", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !600} ; [ DW_TAG_typedef ] [ino_t] [line 48, size 0, align 0, offset 0] [from __ino_t]
!600 = metadata !{i32 786454, metadata !596, null, metadata !"__ino_t", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [__ino_t] [line 127, size 0, align 0, offset 0] [from long unsigned int]
!601 = metadata !{i32 786445, metadata !596, metadata !595, metadata !"st_dev", i32 10, i64 64, i64 64, i64 64, i32 0, metadata !602} ; [ DW_TAG_member ] [st_dev] [line 10, size 64, align 64, offset 64] [from dev_t]
!602 = metadata !{i32 786454, metadata !596, null, metadata !"dev_t", i32 60, i64 0, i64 0, i64 0, i32 0, metadata !603} ; [ DW_TAG_typedef ] [dev_t] [line 60, size 0, align 0, offset 0] [from __dev_t]
!603 = metadata !{i32 786454, metadata !596, null, metadata !"__dev_t", i32 124, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [__dev_t] [line 124, size 0, align 0, offset 0] [from long unsigned int]
!604 = metadata !{i32 786445, metadata !592, metadata !591, metadata !"chdir_counter", i32 33, i64 64, i64 64, i64 128, i32 0, metadata !67} ; [ DW_TAG_member ] [chdir_counter] [line 33, size 64, align 64, offset 128] [from long unsigned int]
!605 = metadata !{i32 786445, metadata !592, metadata !591, metadata !"magic", i32 34, i64 32, i64 32, i64 192, i32 0, metadata !38} ; [ DW_TAG_member ] [magic] [line 34, size 32, align 32, offset 192] [from int]
!606 = metadata !{i32 786478, metadata !584, metadata !587, metadata !"cycle_check", metadata !"cycle_check", metadata !"", i32 60, metadata !607, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.cycle_check_state*, %struct.stat*)* @
!607 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !608, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!608 = metadata !{metadata !55, metadata !590, metadata !609}
!609 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !610} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!610 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !611} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from stat]
!611 = metadata !{i32 786451, metadata !612, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !613, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!612 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/stat.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!613 = metadata !{metadata !614, metadata !615, metadata !616, metadata !618, metadata !620, metadata !622, metadata !624, metadata !625, metadata !626, metadata !628, metadata !630, metadata !632, metadata !640, metadata !641, metadata !642}
!614 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !603} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!615 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !600} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!616 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !617} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!617 = metadata !{i32 786454, metadata !612, null, metadata !"__nlink_t", i32 130, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [__nlink_t] [line 130, size 0, align 0, offset 0] [from long unsigned int]
!618 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !619} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!619 = metadata !{i32 786454, metadata !612, null, metadata !"__mode_t", i32 129, i64 0, i64 0, i64 0, i32 0, metadata !212} ; [ DW_TAG_typedef ] [__mode_t] [line 129, size 0, align 0, offset 0] [from unsigned int]
!620 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !621} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!621 = metadata !{i32 786454, metadata !612, null, metadata !"__uid_t", i32 125, i64 0, i64 0, i64 0, i32 0, metadata !212} ; [ DW_TAG_typedef ] [__uid_t] [line 125, size 0, align 0, offset 0] [from unsigned int]
!622 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !623} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!623 = metadata !{i32 786454, metadata !612, null, metadata !"__gid_t", i32 126, i64 0, i64 0, i64 0, i32 0, metadata !212} ; [ DW_TAG_typedef ] [__gid_t] [line 126, size 0, align 0, offset 0] [from unsigned int]
!624 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !38} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!625 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !603} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!626 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !627} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!627 = metadata !{i32 786454, metadata !612, null, metadata !"__off_t", i32 131, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__off_t] [line 131, size 0, align 0, offset 0] [from long int]
!628 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !629} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!629 = metadata !{i32 786454, metadata !612, null, metadata !"__blksize_t", i32 153, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__blksize_t] [line 153, size 0, align 0, offset 0] [from long int]
!630 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !631} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!631 = metadata !{i32 786454, metadata !612, null, metadata !"__blkcnt_t", i32 158, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__blkcnt_t] [line 158, size 0, align 0, offset 0] [from long int]
!632 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !633} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!633 = metadata !{i32 786451, metadata !634, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !635, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!634 = metadata !{metadata !"/usr/include/time.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!635 = metadata !{metadata !636, metadata !638}
!636 = metadata !{i32 786445, metadata !634, metadata !633, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !637} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!637 = metadata !{i32 786454, metadata !634, null, metadata !"__time_t", i32 139, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__time_t] [line 139, size 0, align 0, offset 0] [from long int]
!638 = metadata !{i32 786445, metadata !634, metadata !633, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !639} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!639 = metadata !{i32 786454, metadata !634, null, metadata !"__syscall_slong_t", i32 175, i64 0, i64 0, i64 0, i32 0, metadata !181} ; [ DW_TAG_typedef ] [__syscall_slong_t] [line 175, size 0, align 0, offset 0] [from long int]
!640 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !633} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!641 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !633} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!642 = metadata !{i32 786445, metadata !612, metadata !611, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !643} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!643 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 192, i64 64, i32 0, i32 0, metadata !639, metadata !295, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 192, align 64, offset 0] [from __syscall_slong_t]
!644 = metadata !{i32 786478, metadata !584, metadata !587, metadata !"is_zero_or_power_of_two", metadata !"is_zero_or_power_of_two", metadata !"", i32 39, metadata !645, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i64)* @is_zero_or_powe
!645 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !646, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!646 = metadata !{metadata !55, metadata !67}
!647 = metadata !{i32 786449, metadata !648, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !32, metadata !649, metadata !32, metadata !""} ; [ DW_TAG_compile_unit
!648 = metadata !{metadata !"exitfail.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!649 = metadata !{metadata !650}
!650 = metadata !{i32 786484, i32 0, null, metadata !"exit_failure", metadata !"exit_failure", metadata !"", metadata !651, i32 25, metadata !652, i32 0, i32 1, i32* @exit_failure, null} ; [ DW_TAG_variable ] [exit_failure] [line 25] [def]
!651 = metadata !{i32 786473, metadata !648}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/exitfail.c]
!652 = metadata !{i32 786485, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !38} ; [ DW_TAG_volatile_type ] [line 0, size 0, align 0, offset 0] [from int]
!653 = metadata !{i32 786449, metadata !654, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !655, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit
!654 = metadata !{metadata !"file-type.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!655 = metadata !{metadata !656}
!656 = metadata !{i32 786478, metadata !654, metadata !657, metadata !"file_type", metadata !"file_type", metadata !"", i32 30, metadata !658, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.stat*)* @file_type, null, null, metadata
!657 = metadata !{i32 786473, metadata !654}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!658 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !659, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!659 = metadata !{metadata !85, metadata !660}
!660 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !661} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!661 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !662} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from stat]
!662 = metadata !{i32 786451, metadata !612, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !663, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!663 = metadata !{metadata !664, metadata !666, metadata !668, metadata !669, metadata !670, metadata !671, metadata !672, metadata !673, metadata !674, metadata !675, metadata !676, metadata !677, metadata !682, metadata !683, metadata !684}
!664 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !665} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!665 = metadata !{i32 786454, metadata !612, null, metadata !"__dev_t", i32 124, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [__dev_t] [line 124, size 0, align 0, offset 0] [from long unsigned int]
!666 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !667} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!667 = metadata !{i32 786454, metadata !612, null, metadata !"__ino_t", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [__ino_t] [line 127, size 0, align 0, offset 0] [from long unsigned int]
!668 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !617} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!669 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !619} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!670 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !621} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!671 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !623} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!672 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !38} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!673 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !665} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!674 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !627} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!675 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !629} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!676 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !631} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!677 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !678} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!678 = metadata !{i32 786451, metadata !634, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !679, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!679 = metadata !{metadata !680, metadata !681}
!680 = metadata !{i32 786445, metadata !634, metadata !678, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !637} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!681 = metadata !{i32 786445, metadata !634, metadata !678, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !639} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!682 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !678} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!683 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !678} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!684 = metadata !{i32 786445, metadata !612, metadata !662, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !643} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!685 = metadata !{i32 786449, metadata !686, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !687, metadata !843, metadata !32, metadata !""} ; [ DW_TAG_compile_uni
!686 = metadata !{metadata !"hash.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!687 = metadata !{metadata !688, metadata !735, metadata !736, metadata !737, metadata !738, metadata !741, metadata !784, metadata !787, metadata !790, metadata !791, metadata !795, metadata !802, metadata !805, metadata !809, metadata !813, metadata !8
!688 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_get_n_buckets", metadata !"hash_get_n_buckets", metadata !"", i32 148, metadata !690, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.hash_table*)* @hash_g
!689 = metadata !{i32 786473, metadata !686}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!690 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !691, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!691 = metadata !{metadata !692, metadata !693}
!692 = metadata !{i32 786454, metadata !686, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!693 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !694} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!694 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !695} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from Hash_table]
!695 = metadata !{i32 786454, metadata !686, null, metadata !"Hash_table", i32 57, i64 0, i64 0, i64 0, i32 0, metadata !696} ; [ DW_TAG_typedef ] [Hash_table] [line 57, size 0, align 0, offset 0] [from hash_table]
!696 = metadata !{i32 786451, metadata !686, null, metadata !"hash_table", i32 50, i64 640, i64 64, i32 0, i32 0, null, metadata !697, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [hash_table] [line 50, size 640, align 64, offset 0] [def] [from ]
!697 = metadata !{metadata !698, metadata !705, metadata !708, metadata !709, metadata !710, metadata !711, metadata !723, metadata !728, metadata !731, metadata !734}
!698 = metadata !{i32 786445, metadata !686, metadata !696, metadata !"bucket", i32 55, i64 64, i64 64, i64 0, i32 0, metadata !699} ; [ DW_TAG_member ] [bucket] [line 55, size 64, align 64, offset 0] [from ]
!699 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !700} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from hash_entry]
!700 = metadata !{i32 786451, metadata !701, null, metadata !"hash_entry", i32 35, i64 128, i64 64, i32 0, i32 0, null, metadata !702, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [hash_entry] [line 35, size 128, align 64, offset 0] [def] [from ]
!701 = metadata !{metadata !"./hash.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!702 = metadata !{metadata !703, metadata !704}
!703 = metadata !{i32 786445, metadata !701, metadata !700, metadata !"data", i32 37, i64 64, i64 64, i64 0, i32 0, metadata !200} ; [ DW_TAG_member ] [data] [line 37, size 64, align 64, offset 0] [from ]
!704 = metadata !{i32 786445, metadata !701, metadata !700, metadata !"next", i32 38, i64 64, i64 64, i64 64, i32 0, metadata !699} ; [ DW_TAG_member ] [next] [line 38, size 64, align 64, offset 64] [from ]
!705 = metadata !{i32 786445, metadata !686, metadata !696, metadata !"bucket_limit", i32 56, i64 64, i64 64, i64 64, i32 0, metadata !706} ; [ DW_TAG_member ] [bucket_limit] [line 56, size 64, align 64, offset 64] [from ]
!706 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !707} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!707 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !700} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from hash_entry]
!708 = metadata !{i32 786445, metadata !686, metadata !696, metadata !"n_buckets", i32 57, i64 64, i64 64, i64 128, i32 0, metadata !692} ; [ DW_TAG_member ] [n_buckets] [line 57, size 64, align 64, offset 128] [from size_t]
!709 = metadata !{i32 786445, metadata !686, metadata !696, metadata !"n_buckets_used", i32 58, i64 64, i64 64, i64 192, i32 0, metadata !692} ; [ DW_TAG_member ] [n_buckets_used] [line 58, size 64, align 64, offset 192] [from size_t]
!710 = metadata !{i32 786445, metadata !686, metadata !696, metadata !"n_entries", i32 59, i64 64, i64 64, i64 256, i32 0, metadata !692} ; [ DW_TAG_member ] [n_entries] [line 59, size 64, align 64, offset 256] [from size_t]
!711 = metadata !{i32 786445, metadata !686, metadata !696, metadata !"tuning", i32 62, i64 64, i64 64, i64 320, i32 0, metadata !712} ; [ DW_TAG_member ] [tuning] [line 62, size 64, align 64, offset 320] [from ]
!712 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !713} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!713 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !714} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from Hash_tuning]
!714 = metadata !{i32 786454, metadata !686, null, metadata !"Hash_tuning", i32 53, i64 0, i64 0, i64 0, i32 0, metadata !715} ; [ DW_TAG_typedef ] [Hash_tuning] [line 53, size 0, align 0, offset 0] [from hash_tuning]
!715 = metadata !{i32 786451, metadata !701, null, metadata !"hash_tuning", i32 41, i64 160, i64 32, i32 0, i32 0, null, metadata !716, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [hash_tuning] [line 41, size 160, align 32, offset 0] [def] [from
!716 = metadata !{metadata !717, metadata !719, metadata !720, metadata !721, metadata !722}
!717 = metadata !{i32 786445, metadata !701, metadata !715, metadata !"shrink_threshold", i32 46, i64 32, i64 32, i64 0, i32 0, metadata !718} ; [ DW_TAG_member ] [shrink_threshold] [line 46, size 32, align 32, offset 0] [from float]
!718 = metadata !{i32 786468, null, null, metadata !"float", i32 0, i64 32, i64 32, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ] [float] [line 0, size 32, align 32, offset 0, enc DW_ATE_float]
!719 = metadata !{i32 786445, metadata !701, metadata !715, metadata !"shrink_factor", i32 47, i64 32, i64 32, i64 32, i32 0, metadata !718} ; [ DW_TAG_member ] [shrink_factor] [line 47, size 32, align 32, offset 32] [from float]
!720 = metadata !{i32 786445, metadata !701, metadata !715, metadata !"growth_threshold", i32 48, i64 32, i64 32, i64 64, i32 0, metadata !718} ; [ DW_TAG_member ] [growth_threshold] [line 48, size 32, align 32, offset 64] [from float]
!721 = metadata !{i32 786445, metadata !701, metadata !715, metadata !"growth_factor", i32 49, i64 32, i64 32, i64 96, i32 0, metadata !718} ; [ DW_TAG_member ] [growth_factor] [line 49, size 32, align 32, offset 96] [from float]
!722 = metadata !{i32 786445, metadata !701, metadata !715, metadata !"is_n_buckets", i32 50, i64 8, i64 8, i64 128, i32 0, metadata !55} ; [ DW_TAG_member ] [is_n_buckets] [line 50, size 8, align 8, offset 128] [from _Bool]
!723 = metadata !{i32 786445, metadata !686, metadata !696, metadata !"hasher", i32 69, i64 64, i64 64, i64 384, i32 0, metadata !724} ; [ DW_TAG_member ] [hasher] [line 69, size 64, align 64, offset 384] [from Hash_hasher]
!724 = metadata !{i32 786454, metadata !686, null, metadata !"Hash_hasher", i32 30, i64 0, i64 0, i64 0, i32 0, metadata !725} ; [ DW_TAG_typedef ] [Hash_hasher] [line 30, size 0, align 0, offset 0] [from ]
!725 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !726} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!726 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !727, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!727 = metadata !{metadata !692, metadata !317, metadata !692}
!728 = metadata !{i32 786445, metadata !686, metadata !696, metadata !"comparator", i32 70, i64 64, i64 64, i64 448, i32 0, metadata !729} ; [ DW_TAG_member ] [comparator] [line 70, size 64, align 64, offset 448] [from Hash_comparator]
!729 = metadata !{i32 786454, metadata !686, null, metadata !"Hash_comparator", i32 31, i64 0, i64 0, i64 0, i32 0, metadata !730} ; [ DW_TAG_typedef ] [Hash_comparator] [line 31, size 0, align 0, offset 0] [from ]
!730 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !315} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!731 = metadata !{i32 786445, metadata !686, metadata !696, metadata !"data_freer", i32 71, i64 64, i64 64, i64 512, i32 0, metadata !732} ; [ DW_TAG_member ] [data_freer] [line 71, size 64, align 64, offset 512] [from Hash_data_freer]
!732 = metadata !{i32 786454, metadata !686, null, metadata !"Hash_data_freer", i32 32, i64 0, i64 0, i64 0, i32 0, metadata !733} ; [ DW_TAG_typedef ] [Hash_data_freer] [line 32, size 0, align 0, offset 0] [from ]
!733 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !312} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!734 = metadata !{i32 786445, metadata !686, metadata !696, metadata !"free_entry_list", i32 74, i64 64, i64 64, i64 576, i32 0, metadata !699} ; [ DW_TAG_member ] [free_entry_list] [line 74, size 64, align 64, offset 576] [from ]
!735 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_get_n_buckets_used", metadata !"hash_get_n_buckets_used", metadata !"", i32 156, metadata !690, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.hash_table*
!736 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_get_n_entries", metadata !"hash_get_n_entries", metadata !"", i32 164, metadata !690, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.hash_table*)* @hash_g
!737 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_get_max_bucket_length", metadata !"hash_get_max_bucket_length", metadata !"", i32 172, metadata !690, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.hash_
!738 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_table_ok", metadata !"hash_table_ok", metadata !"", i32 199, metadata !739, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.hash_table*)* @hash_table_ok, nu
!739 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !740, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!740 = metadata !{metadata !55, metadata !693}
!741 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_print_statistics", metadata !"hash_print_statistics", metadata !"", i32 228, metadata !742, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_table*, %
!742 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !743, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!743 = metadata !{null, metadata !693, metadata !744}
!744 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !745} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from FILE]
!745 = metadata !{i32 786454, metadata !686, null, metadata !"FILE", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !746} ; [ DW_TAG_typedef ] [FILE] [line 48, size 0, align 0, offset 0] [from _IO_FILE]
!746 = metadata !{i32 786451, metadata !460, null, metadata !"_IO_FILE", i32 245, i64 1728, i64 64, i32 0, i32 0, null, metadata !747, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_FILE] [line 245, size 1728, align 64, offset 0] [def] [from ]
!747 = metadata !{metadata !748, metadata !749, metadata !750, metadata !751, metadata !752, metadata !753, metadata !754, metadata !755, metadata !756, metadata !757, metadata !758, metadata !759, metadata !760, metadata !768, metadata !769, metadata !7
!748 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_flags", i32 246, i64 32, i64 32, i64 0, i32 0, metadata !38} ; [ DW_TAG_member ] [_flags] [line 246, size 32, align 32, offset 0] [from int]
!749 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_IO_read_ptr", i32 251, i64 64, i64 64, i64 64, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_read_ptr] [line 251, size 64, align 64, offset 64] [from ]
!750 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_IO_read_end", i32 252, i64 64, i64 64, i64 128, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_read_end] [line 252, size 64, align 64, offset 128] [from ]
!751 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_IO_read_base", i32 253, i64 64, i64 64, i64 192, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_read_base] [line 253, size 64, align 64, offset 192] [from ]
!752 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_IO_write_base", i32 254, i64 64, i64 64, i64 256, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_write_base] [line 254, size 64, align 64, offset 256] [from ]
!753 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_IO_write_ptr", i32 255, i64 64, i64 64, i64 320, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_write_ptr] [line 255, size 64, align 64, offset 320] [from ]
!754 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_IO_write_end", i32 256, i64 64, i64 64, i64 384, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_write_end] [line 256, size 64, align 64, offset 384] [from ]
!755 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_IO_buf_base", i32 257, i64 64, i64 64, i64 448, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_buf_base] [line 257, size 64, align 64, offset 448] [from ]
!756 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_IO_buf_end", i32 258, i64 64, i64 64, i64 512, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_buf_end] [line 258, size 64, align 64, offset 512] [from ]
!757 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_IO_save_base", i32 260, i64 64, i64 64, i64 576, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_save_base] [line 260, size 64, align 64, offset 576] [from ]
!758 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_IO_backup_base", i32 261, i64 64, i64 64, i64 640, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_backup_base] [line 261, size 64, align 64, offset 640] [from ]
!759 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_IO_save_end", i32 262, i64 64, i64 64, i64 704, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_save_end] [line 262, size 64, align 64, offset 704] [from ]
!760 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_markers", i32 264, i64 64, i64 64, i64 768, i32 0, metadata !761} ; [ DW_TAG_member ] [_markers] [line 264, size 64, align 64, offset 768] [from ]
!761 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !762} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_marker]
!762 = metadata !{i32 786451, metadata !460, null, metadata !"_IO_marker", i32 160, i64 192, i64 64, i32 0, i32 0, null, metadata !763, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_marker] [line 160, size 192, align 64, offset 0] [def] [from
!763 = metadata !{metadata !764, metadata !765, metadata !767}
!764 = metadata !{i32 786445, metadata !460, metadata !762, metadata !"_next", i32 161, i64 64, i64 64, i64 0, i32 0, metadata !761} ; [ DW_TAG_member ] [_next] [line 161, size 64, align 64, offset 0] [from ]
!765 = metadata !{i32 786445, metadata !460, metadata !762, metadata !"_sbuf", i32 162, i64 64, i64 64, i64 64, i32 0, metadata !766} ; [ DW_TAG_member ] [_sbuf] [line 162, size 64, align 64, offset 64] [from ]
!766 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !746} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_FILE]
!767 = metadata !{i32 786445, metadata !460, metadata !762, metadata !"_pos", i32 166, i64 32, i64 32, i64 128, i32 0, metadata !38} ; [ DW_TAG_member ] [_pos] [line 166, size 32, align 32, offset 128] [from int]
!768 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_chain", i32 266, i64 64, i64 64, i64 832, i32 0, metadata !766} ; [ DW_TAG_member ] [_chain] [line 266, size 64, align 64, offset 832] [from ]
!769 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_fileno", i32 268, i64 32, i64 32, i64 896, i32 0, metadata !38} ; [ DW_TAG_member ] [_fileno] [line 268, size 32, align 32, offset 896] [from int]
!770 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_flags2", i32 272, i64 32, i64 32, i64 928, i32 0, metadata !38} ; [ DW_TAG_member ] [_flags2] [line 272, size 32, align 32, offset 928] [from int]
!771 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_old_offset", i32 274, i64 64, i64 64, i64 960, i32 0, metadata !486} ; [ DW_TAG_member ] [_old_offset] [line 274, size 64, align 64, offset 960] [from __off_t]
!772 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_cur_column", i32 278, i64 16, i64 16, i64 1024, i32 0, metadata !340} ; [ DW_TAG_member ] [_cur_column] [line 278, size 16, align 16, offset 1024] [from unsigned short]
!773 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_vtable_offset", i32 279, i64 8, i64 8, i64 1040, i32 0, metadata !489} ; [ DW_TAG_member ] [_vtable_offset] [line 279, size 8, align 8, offset 1040] [from signed char]
!774 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_shortbuf", i32 280, i64 8, i64 8, i64 1048, i32 0, metadata !491} ; [ DW_TAG_member ] [_shortbuf] [line 280, size 8, align 8, offset 1048] [from ]
!775 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_lock", i32 284, i64 64, i64 64, i64 1088, i32 0, metadata !200} ; [ DW_TAG_member ] [_lock] [line 284, size 64, align 64, offset 1088] [from ]
!776 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_offset", i32 293, i64 64, i64 64, i64 1152, i32 0, metadata !494} ; [ DW_TAG_member ] [_offset] [line 293, size 64, align 64, offset 1152] [from __off64_t]
!777 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"__pad1", i32 302, i64 64, i64 64, i64 1216, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad1] [line 302, size 64, align 64, offset 1216] [from ]
!778 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"__pad2", i32 303, i64 64, i64 64, i64 1280, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad2] [line 303, size 64, align 64, offset 1280] [from ]
!779 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"__pad3", i32 304, i64 64, i64 64, i64 1344, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad3] [line 304, size 64, align 64, offset 1344] [from ]
!780 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"__pad4", i32 305, i64 64, i64 64, i64 1408, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad4] [line 305, size 64, align 64, offset 1408] [from ]
!781 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"__pad5", i32 306, i64 64, i64 64, i64 1472, i32 0, metadata !692} ; [ DW_TAG_member ] [__pad5] [line 306, size 64, align 64, offset 1472] [from size_t]
!782 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_mode", i32 308, i64 32, i64 32, i64 1536, i32 0, metadata !38} ; [ DW_TAG_member ] [_mode] [line 308, size 32, align 32, offset 1536] [from int]
!783 = metadata !{i32 786445, metadata !460, metadata !746, metadata !"_unused2", i32 310, i64 160, i64 8, i64 1568, i32 0, metadata !503} ; [ DW_TAG_member ] [_unused2] [line 310, size 160, align 8, offset 1568] [from ]
!784 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_lookup", metadata !"hash_lookup", metadata !"", i32 248, metadata !785, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*, i8*)* @hash_lookup, nu
!785 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !786, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!786 = metadata !{metadata !200, metadata !693, metadata !317}
!787 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_get_first", metadata !"hash_get_first", metadata !"", i32 277, metadata !788, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*)* @hash_get_first
!788 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !789, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!789 = metadata !{metadata !200, metadata !693}
!790 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_get_next", metadata !"hash_get_next", metadata !"", i32 296, metadata !785, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*, i8*)* @hash_get_ne
!791 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_get_entries", metadata !"hash_get_entries", metadata !"", i32 324, metadata !792, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.hash_table*, i8**, i64)* 
!792 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !793, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!793 = metadata !{metadata !692, metadata !693, metadata !794, metadata !692}
!794 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !200} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!795 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_do_for_each", metadata !"hash_do_for_each", metadata !"", i32 356, metadata !796, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%struct.hash_table*, i1 (i8*, i8*
!796 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !797, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!797 = metadata !{metadata !692, metadata !693, metadata !798, metadata !200}
!798 = metadata !{i32 786454, metadata !686, null, metadata !"Hash_processor", i32 33, i64 0, i64 0, i64 0, i32 0, metadata !799} ; [ DW_TAG_typedef ] [Hash_processor] [line 33, size 0, align 0, offset 0] [from ]
!799 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !800} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!800 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !801, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!801 = metadata !{metadata !55, metadata !200, metadata !200}
!802 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_string", metadata !"hash_string", metadata !"", i32 419, metadata !803, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64)* @hash_string, null, null, metada
!803 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !804, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!804 = metadata !{metadata !692, metadata !85, metadata !692}
!805 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_reset_tuning", metadata !"hash_reset_tuning", metadata !"", i32 470, metadata !806, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_tuning*)* @hash_r
!806 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !807, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!807 = metadata !{null, metadata !808}
!808 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !714} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Hash_tuning]
!809 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_initialize", metadata !"hash_initialize", metadata !"", i32 538, metadata !810, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.hash_table* (i64, %struct.hash_t
!810 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !811, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!811 = metadata !{metadata !812, metadata !692, metadata !712, metadata !724, metadata !729, metadata !732}
!812 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !695} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Hash_table]
!813 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_clear", metadata !"hash_clear", metadata !"", i32 603, metadata !814, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_table*)* @hash_clear, null, nul
!814 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !815, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!815 = metadata !{null, metadata !812}
!816 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_free", metadata !"hash_free", metadata !"", i32 646, metadata !814, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_table*)* @hash_free, null, null, 
!817 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_rehash", metadata !"hash_rehash", metadata !"", i32 817, metadata !818, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.hash_table*, i64)* @hash_rehash, nul
!818 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !819, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!819 = metadata !{metadata !55, metadata !812, metadata !692}
!820 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_insert", metadata !"hash_insert", metadata !"", i32 906, metadata !821, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*, i8*)* @hash_insert, nu
!821 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !822, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!822 = metadata !{metadata !200, metadata !812, metadata !317}
!823 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_delete", metadata !"hash_delete", metadata !"", i32 981, metadata !821, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*, i8*)* @hash_delete, nu
!824 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"hash_find_entry", metadata !"hash_find_entry", metadata !"", i32 742, metadata !825, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.hash_table*, i8*, %struct.ha
!825 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !826, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!826 = metadata !{metadata !200, metadata !812, metadata !317, metadata !827, metadata !55}
!827 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !699} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!828 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"free_entry", metadata !"free_entry", metadata !"", i32 728, metadata !829, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.hash_table*, %struct.hash_entry*)* @f
!829 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !830, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!830 = metadata !{null, metadata !812, metadata !699}
!831 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"allocate_entry", metadata !"allocate_entry", metadata !"", i32 703, metadata !832, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.hash_entry* (%struct.hash_table*)* 
!832 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !833, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!833 = metadata !{metadata !699, metadata !812}
!834 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"next_prime", metadata !"next_prime", metadata !"", i32 454, metadata !835, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i64)* @next_prime, null, null, metadata !32, i
!835 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !836, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!836 = metadata !{metadata !692, metadata !692}
!837 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"is_prime", metadata !"is_prime", metadata !"", i32 435, metadata !838, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (i64)* @is_prime, null, null, metadata !32, i32 436}
!838 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !839, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!839 = metadata !{metadata !55, metadata !692}
!840 = metadata !{i32 786478, metadata !686, metadata !689, metadata !"check_tuning", metadata !"check_tuning", metadata !"", i32 482, metadata !841, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.hash_table*)* @check_tuning, null, 
!841 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !842, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!842 = metadata !{metadata !55, metadata !812}
!843 = metadata !{metadata !844}
!844 = metadata !{i32 786484, i32 0, null, metadata !"default_tuning", metadata !"default_tuning", metadata !"", metadata !689, i32 128, metadata !713, i32 1, i32 1, { float, float, float, float, i8, [3 x i8] }* @default_tuning, null} ; [ DW_TAG_variable
!845 = metadata !{i32 786449, metadata !846, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !534, metadata !32, metadata !847, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_uni
!846 = metadata !{metadata !"quote.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!847 = metadata !{metadata !848, metadata !852}
!848 = metadata !{i32 786478, metadata !846, metadata !849, metadata !"quote_n", metadata !"quote_n", metadata !"", i32 30, metadata !850, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8*)* @quote_n, null, null, metadata !32, i32 3
!849 = metadata !{i32 786473, metadata !846}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quote.c]
!850 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !851, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!851 = metadata !{metadata !85, metadata !38, metadata !85}
!852 = metadata !{i32 786478, metadata !846, metadata !849, metadata !"quote", metadata !"quote", metadata !"", i32 38, metadata !853, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @quote, null, null, metadata !32, i32 39} ; [ DW_T
!853 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !854, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!854 = metadata !{metadata !85, metadata !85}
!855 = metadata !{i32 786449, metadata !856, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !857, metadata !32, metadata !873, metadata !932, metadata !32, metadata !""} ; [ DW_TAG_compile_un
!856 = metadata !{metadata !"quotearg.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!857 = metadata !{metadata !535, metadata !858}
!858 = metadata !{i32 786436, metadata !859, null, metadata !"", i32 46, i64 32, i64 32, i32 0, i32 0, null, metadata !860, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 46, size 32, align 32, offset 0] [def] [from ]
!859 = metadata !{metadata !"/usr/include/ctype.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!860 = metadata !{metadata !861, metadata !862, metadata !863, metadata !864, metadata !865, metadata !866, metadata !867, metadata !868, metadata !869, metadata !870, metadata !871, metadata !872}
!861 = metadata !{i32 786472, metadata !"_ISupper", i64 256} ; [ DW_TAG_enumerator ] [_ISupper :: 256]
!862 = metadata !{i32 786472, metadata !"_ISlower", i64 512} ; [ DW_TAG_enumerator ] [_ISlower :: 512]
!863 = metadata !{i32 786472, metadata !"_ISalpha", i64 1024} ; [ DW_TAG_enumerator ] [_ISalpha :: 1024]
!864 = metadata !{i32 786472, metadata !"_ISdigit", i64 2048} ; [ DW_TAG_enumerator ] [_ISdigit :: 2048]
!865 = metadata !{i32 786472, metadata !"_ISxdigit", i64 4096} ; [ DW_TAG_enumerator ] [_ISxdigit :: 4096]
!866 = metadata !{i32 786472, metadata !"_ISspace", i64 8192} ; [ DW_TAG_enumerator ] [_ISspace :: 8192]
!867 = metadata !{i32 786472, metadata !"_ISprint", i64 16384} ; [ DW_TAG_enumerator ] [_ISprint :: 16384]
!868 = metadata !{i32 786472, metadata !"_ISgraph", i64 32768} ; [ DW_TAG_enumerator ] [_ISgraph :: 32768]
!869 = metadata !{i32 786472, metadata !"_ISblank", i64 1} ; [ DW_TAG_enumerator ] [_ISblank :: 1]
!870 = metadata !{i32 786472, metadata !"_IScntrl", i64 2} ; [ DW_TAG_enumerator ] [_IScntrl :: 2]
!871 = metadata !{i32 786472, metadata !"_ISpunct", i64 4} ; [ DW_TAG_enumerator ] [_ISpunct :: 4]
!872 = metadata !{i32 786472, metadata !"_ISalnum", i64 8} ; [ DW_TAG_enumerator ] [_ISalnum :: 8]
!873 = metadata !{metadata !874, metadata !884, metadata !887, metadata !890, metadata !893, metadata !899, metadata !902, metadata !903, metadata !906, metadata !907, metadata !910, metadata !913, metadata !916, metadata !919, metadata !920, metadata !9
!874 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"clone_quoting_options", metadata !"clone_quoting_options", metadata !"", i32 115, metadata !876, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.quoting_options* (%s
!875 = metadata !{i32 786473, metadata !856}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!876 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !877, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!877 = metadata !{metadata !878, metadata !878}
!878 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !879} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from quoting_options]
!879 = metadata !{i32 786451, metadata !856, null, metadata !"quoting_options", i32 73, i64 288, i64 32, i32 0, i32 0, null, metadata !880, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [quoting_options] [line 73, size 288, align 32, offset 0] [de
!880 = metadata !{metadata !881, metadata !882}
!881 = metadata !{i32 786445, metadata !856, metadata !879, metadata !"style", i32 76, i64 32, i64 32, i64 0, i32 0, metadata !535} ; [ DW_TAG_member ] [style] [line 76, size 32, align 32, offset 0] [from quoting_style]
!882 = metadata !{i32 786445, metadata !856, metadata !879, metadata !"quote_these_too", i32 80, i64 256, i64 32, i64 32, i32 0, metadata !883} ; [ DW_TAG_member ] [quote_these_too] [line 80, size 256, align 32, offset 32] [from ]
!883 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 256, i64 32, i32 0, i32 0, metadata !212, metadata !233, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 256, align 32, offset 0] [from unsigned int]
!884 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"get_quoting_style", metadata !"get_quoting_style", metadata !"", i32 126, metadata !885, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.quoting_options*)* @get
!885 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !886, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!886 = metadata !{metadata !535, metadata !878}
!887 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"set_quoting_style", metadata !"set_quoting_style", metadata !"", i32 134, metadata !888, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.quoting_options*, i32)
!888 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !889, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!889 = metadata !{null, metadata !878, metadata !535}
!890 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"set_char_quoting", metadata !"set_char_quoting", metadata !"", i32 145, metadata !891, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.quoting_options*, i8, i32
!891 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !892, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!892 = metadata !{metadata !38, metadata !878, metadata !44, metadata !38}
!893 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg_buffer", metadata !"quotearg_buffer", metadata !"", i32 530, metadata !894, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, i8*, i64, %struct.quoting
!894 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !895, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!895 = metadata !{metadata !896, metadata !43, metadata !896, metadata !85, metadata !896, metadata !897}
!896 = metadata !{i32 786454, metadata !856, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!897 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !898} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!898 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !879} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from quoting_options]
!899 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg_alloc", metadata !"quotearg_alloc", metadata !"", i32 545, metadata !900, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64, %struct.quoting_options*)* 
!900 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !901, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!901 = metadata !{metadata !43, metadata !85, metadata !896, metadata !897}
!902 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg_free", metadata !"quotearg_free", metadata !"", i32 571, metadata !530, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @quotearg_free, null, null, metadat
!903 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg_n", metadata !"quotearg_n", metadata !"", i32 651, metadata !904, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8*)* @quotearg_n, null, null, metadata 
!904 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !905, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!905 = metadata !{metadata !43, metadata !38, metadata !85}
!906 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg", metadata !"quotearg", metadata !"", i32 657, metadata !566, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @quotearg, null, null, metadata !32, i32 65
!907 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg_n_style", metadata !"quotearg_n_style", metadata !"", i32 673, metadata !908, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i32, i8*)* @quotearg_n_style
!908 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !909, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!909 = metadata !{metadata !43, metadata !38, metadata !535, metadata !85}
!910 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg_n_style_mem", metadata !"quotearg_n_style_mem", metadata !"", i32 680, metadata !911, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i32, i8*, i64)* @quo
!911 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !912, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!912 = metadata !{metadata !43, metadata !38, metadata !535, metadata !85, metadata !896}
!913 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg_style", metadata !"quotearg_style", metadata !"", i32 688, metadata !914, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8*)* @quotearg_style, null, nul
!914 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !915, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!915 = metadata !{metadata !43, metadata !535, metadata !85}
!916 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg_char", metadata !"quotearg_char", metadata !"", i32 694, metadata !917, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8)* @quotearg_char, null, null, m
!917 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !918, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!918 = metadata !{metadata !43, metadata !85, metadata !44}
!919 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg_colon", metadata !"quotearg_colon", metadata !"", i32 703, metadata !566, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @quotearg_colon, null, null, me
!920 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quoting_options_from_style", metadata !"quoting_options_from_style", metadata !"", i32 664, metadata !921, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.quoti
!921 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !922, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!922 = metadata !{metadata !879, metadata !535}
!923 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg_n_options", metadata !"quotearg_n_options", metadata !"", i32 600, metadata !924, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8*, i64, %struct.quoting
!924 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !925, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!925 = metadata !{metadata !43, metadata !38, metadata !85, metadata !896, metadata !897}
!926 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"quotearg_buffer_restyled", metadata !"quotearg_buffer_restyled", metadata !"", i32 181, metadata !927, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, i8*, i64
!927 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !928, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!928 = metadata !{metadata !896, metadata !43, metadata !896, metadata !85, metadata !896, metadata !535, metadata !897}
!929 = metadata !{i32 786478, metadata !856, metadata !875, metadata !"gettext_quote", metadata !"gettext_quote", metadata !"", i32 159, metadata !930, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32)* @gettext_quote, null, null, m
!930 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !931, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!931 = metadata !{metadata !85, metadata !85, metadata !535}
!932 = metadata !{metadata !933, metadata !935, metadata !938, metadata !939, metadata !940, metadata !945, metadata !946}
!933 = metadata !{i32 786484, i32 0, null, metadata !"quoting_style_args", metadata !"quoting_style_args", metadata !"", metadata !875, i32 84, metadata !934, i32 0, i32 1, [8 x i8*]* @quoting_style_args, null} ; [ DW_TAG_variable ] [quoting_style_args] 
!934 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 512, i64 64, i32 0, i32 0, metadata !84, metadata !233, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 512, align 64, offset 0] [from ]
!935 = metadata !{i32 786484, i32 0, null, metadata !"quoting_style_vals", metadata !"quoting_style_vals", metadata !"", metadata !875, i32 97, metadata !936, i32 0, i32 1, [7 x i32]* @quoting_style_vals, null} ; [ DW_TAG_variable ] [quoting_style_vals] 
!936 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 224, i64 32, i32 0, i32 0, metadata !937, metadata !87, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 224, align 32, offset 0] [from ]
!937 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !535} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from quoting_style]
!938 = metadata !{i32 786484, i32 0, null, metadata !"default_quoting_options", metadata !"default_quoting_options", metadata !"", metadata !875, i32 109, metadata !879, i32 1, i32 1, %struct.quoting_options* @default_quoting_options, null} ; [ DW_TAG_va
!939 = metadata !{i32 786484, i32 0, null, metadata !"slot0", metadata !"slot0", metadata !"", metadata !875, i32 565, metadata !344, i32 1, i32 1, [256 x i8]* @slot0, null} ; [ DW_TAG_variable ] [slot0] [line 565] [local] [def]
!940 = metadata !{i32 786484, i32 0, null, metadata !"slotvec0", metadata !"slotvec0", metadata !"", metadata !875, i32 567, metadata !941, i32 1, i32 1, %struct.slotvec* @slotvec0, null} ; [ DW_TAG_variable ] [slotvec0] [line 567] [local] [def]
!941 = metadata !{i32 786451, metadata !856, null, metadata !"slotvec", i32 557, i64 128, i64 64, i32 0, i32 0, null, metadata !942, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [slotvec] [line 557, size 128, align 64, offset 0] [def] [from ]
!942 = metadata !{metadata !943, metadata !944}
!943 = metadata !{i32 786445, metadata !856, metadata !941, metadata !"size", i32 559, i64 64, i64 64, i64 0, i32 0, metadata !896} ; [ DW_TAG_member ] [size] [line 559, size 64, align 64, offset 0] [from size_t]
!944 = metadata !{i32 786445, metadata !856, metadata !941, metadata !"val", i32 560, i64 64, i64 64, i64 64, i32 0, metadata !43} ; [ DW_TAG_member ] [val] [line 560, size 64, align 64, offset 64] [from ]
!945 = metadata !{i32 786484, i32 0, null, metadata !"nslots", metadata !"nslots", metadata !"", metadata !875, i32 566, metadata !212, i32 1, i32 1, i32* @nslots, null} ; [ DW_TAG_variable ] [nslots] [line 566] [local] [def]
!946 = metadata !{i32 786484, i32 0, null, metadata !"slotvec", metadata !"slotvec", metadata !"", metadata !875, i32 568, metadata !947, i32 1, i32 1, %struct.slotvec** @slotvec, null} ; [ DW_TAG_variable ] [slotvec] [line 568] [local] [def]
!947 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !941} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from slotvec]
!948 = metadata !{i32 786449, metadata !949, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !950, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit
!949 = metadata !{metadata !"root-dev-ino.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!950 = metadata !{metadata !951}
!951 = metadata !{i32 786478, metadata !949, metadata !952, metadata !"get_root_dev_ino", metadata !"get_root_dev_ino", metadata !"", i32 32, metadata !953, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.dev_ino* (%struct.dev_ino*)* @g
!952 = metadata !{i32 786473, metadata !949}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/root-dev-ino.c]
!953 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !954, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!954 = metadata !{metadata !955, metadata !955}
!955 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !956} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from dev_ino]
!956 = metadata !{i32 786451, metadata !596, null, metadata !"dev_ino", i32 7, i64 128, i64 64, i32 0, i32 0, null, metadata !957, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dev_ino] [line 7, size 128, align 64, offset 0] [def] [from ]
!957 = metadata !{metadata !958, metadata !959}
!958 = metadata !{i32 786445, metadata !596, metadata !956, metadata !"st_ino", i32 9, i64 64, i64 64, i64 0, i32 0, metadata !599} ; [ DW_TAG_member ] [st_ino] [line 9, size 64, align 64, offset 0] [from ino_t]
!959 = metadata !{i32 786445, metadata !596, metadata !956, metadata !"st_dev", i32 10, i64 64, i64 64, i64 64, i32 0, metadata !602} ; [ DW_TAG_member ] [st_dev] [line 10, size 64, align 64, offset 64] [from dev_t]
!960 = metadata !{i32 786449, metadata !961, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !962, metadata !32, metadata !973, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_uni
!961 = metadata !{metadata !"xmalloc.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!962 = metadata !{metadata !963}
!963 = metadata !{i32 786436, metadata !964, metadata !965, metadata !"", i32 199, i64 32, i64 32, i32 0, i32 0, null, metadata !971, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 199, size 32, align 32, offset 0] [def] [from ]
!964 = metadata !{metadata !"./xalloc.h", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!965 = metadata !{i32 786478, metadata !964, metadata !966, metadata !"x2nrealloc", metadata !"x2nrealloc", metadata !"", i32 187, metadata !967, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64*, i64)* @x2nrealloc, null, null, met
!966 = metadata !{i32 786473, metadata !964}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!967 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !968, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!968 = metadata !{metadata !200, metadata !200, metadata !969, metadata !970}
!969 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !970} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from size_t]
!970 = metadata !{i32 786454, metadata !964, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!971 = metadata !{metadata !972}
!972 = metadata !{i32 786472, metadata !"DEFAULT_MXFAST", i64 64} ; [ DW_TAG_enumerator ] [DEFAULT_MXFAST :: 64]
!973 = metadata !{metadata !974, metadata !977, metadata !965, metadata !980, metadata !983, metadata !987, metadata !990, metadata !993, metadata !994, metadata !995, metadata !998}
!974 = metadata !{i32 786478, metadata !964, metadata !966, metadata !"xnmalloc", metadata !"xnmalloc", metadata !"", i32 113, metadata !975, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i64, i64)* @xnmalloc, null, null, metadata !32, i
!975 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !976, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!976 = metadata !{metadata !200, metadata !970, metadata !970}
!977 = metadata !{i32 786478, metadata !964, metadata !966, metadata !"xnrealloc", metadata !"xnrealloc", metadata !"", i32 124, metadata !978, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64, i64)* @xnrealloc, null, null, metadat
!978 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !979, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!979 = metadata !{metadata !200, metadata !200, metadata !970, metadata !970}
!980 = metadata !{i32 786478, metadata !964, metadata !966, metadata !"xcharalloc", metadata !"xcharalloc", metadata !"", i32 220, metadata !981, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i64)* @xcharalloc, null, null, metadata !32, 
!981 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !982, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!982 = metadata !{metadata !43, metadata !970}
!983 = metadata !{i32 786478, metadata !961, metadata !984, metadata !"xmalloc", metadata !"xmalloc", metadata !"", i32 48, metadata !985, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i64)* @xmalloc, null, null, metadata !32, i32 49} ; 
!984 = metadata !{i32 786473, metadata !961}      ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xmalloc.c]
!985 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !986, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!986 = metadata !{metadata !200, metadata !970}
!987 = metadata !{i32 786478, metadata !961, metadata !984, metadata !"xrealloc", metadata !"xrealloc", metadata !"", i32 60, metadata !988, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64)* @xrealloc, null, null, metadata !32, i3
!988 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !989, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!989 = metadata !{metadata !200, metadata !200, metadata !970}
!990 = metadata !{i32 786478, metadata !961, metadata !984, metadata !"x2realloc", metadata !"x2realloc", metadata !"", i32 75, metadata !991, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64*)* @x2realloc, null, null, metadata !32
!991 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !992, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!992 = metadata !{metadata !200, metadata !200, metadata !969}
!993 = metadata !{i32 786478, metadata !961, metadata !984, metadata !"xzalloc", metadata !"xzalloc", metadata !"", i32 85, metadata !985, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i64)* @xzalloc, null, null, metadata !32, i32 86} ; 
!994 = metadata !{i32 786478, metadata !961, metadata !984, metadata !"xcalloc", metadata !"xcalloc", metadata !"", i32 94, metadata !975, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i64, i64)* @xcalloc, null, null, metadata !32, i32 9
!995 = metadata !{i32 786478, metadata !961, metadata !984, metadata !"xmemdup", metadata !"xmemdup", metadata !"", i32 112, metadata !996, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64)* @xmemdup, null, null, metadata !32, i32 
!996 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !997, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!997 = metadata !{metadata !200, metadata !317, metadata !970}
!998 = metadata !{i32 786478, metadata !961, metadata !984, metadata !"xstrdup", metadata !"xstrdup", metadata !"", i32 120, metadata !566, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @xstrdup, null, null, metadata !32, i32 121} 
!999 = metadata !{i32 786449, metadata !1000, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !1001, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_un
!1000 = metadata !{metadata !"yesno.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1001 = metadata !{metadata !1002}
!1002 = metadata !{i32 786478, metadata !1000, metadata !1003, metadata !"yesno", metadata !"yesno", metadata !"", i32 36, metadata !1004, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 ()* @yesno, null, null, metadata !32, i32 37} ; [ DW_T
!1003 = metadata !{i32 786473, metadata !1000}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/yesno.c]
!1004 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1005, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1005 = metadata !{metadata !55}
!1006 = metadata !{i32 786449, metadata !1007, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !1008, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_u
!1007 = metadata !{metadata !"euidaccess-stat.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1008 = metadata !{metadata !1009}
!1009 = metadata !{i32 786478, metadata !1007, metadata !1010, metadata !"euidaccess_stat", metadata !"euidaccess_stat", metadata !"", i32 51, metadata !1011, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i1 (%struct.stat*, i32)* @euidaccess_
!1010 = metadata !{i32 786473, metadata !1007}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!1011 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1012, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1012 = metadata !{metadata !55, metadata !1013, metadata !38}
!1013 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1014} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1014 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1015} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from stat]
!1015 = metadata !{i32 786451, metadata !612, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !1016, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!1016 = metadata !{metadata !1017, metadata !1018, metadata !1019, metadata !1020, metadata !1021, metadata !1022, metadata !1023, metadata !1024, metadata !1025, metadata !1026, metadata !1027, metadata !1028, metadata !1033, metadata !1034, metadata !1
!1017 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !665} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!1018 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !667} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!1019 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !617} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!1020 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !619} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!1021 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !621} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!1022 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !623} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!1023 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !38} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!1024 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !665} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!1025 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !627} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!1026 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !629} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!1027 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !631} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!1028 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !1029} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!1029 = metadata !{i32 786451, metadata !634, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !1030, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!1030 = metadata !{metadata !1031, metadata !1032}
!1031 = metadata !{i32 786445, metadata !634, metadata !1029, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !637} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!1032 = metadata !{i32 786445, metadata !634, metadata !1029, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !639} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!1033 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !1029} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!1034 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !1029} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!1035 = metadata !{i32 786445, metadata !612, metadata !1015, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !643} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!1036 = metadata !{i32 786449, metadata !1037, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !1038, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_u
!1037 = metadata !{metadata !"xstrndup.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1038 = metadata !{metadata !1039}
!1039 = metadata !{i32 786478, metadata !1037, metadata !1040, metadata !"xstrndup", metadata !"xstrndup", metadata !"", i32 31, metadata !1041, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64)* @xstrndup, null, null, metadata !32
!1040 = metadata !{i32 786473, metadata !1037}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xstrndup.c]
!1041 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1042, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1042 = metadata !{metadata !43, metadata !85, metadata !1043}
!1043 = metadata !{i32 786454, metadata !1037, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1044 = metadata !{i32 786449, metadata !1045, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 false, metadata !"", i32 0, metadata !32, metadata !32, metadata !1046, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_u
!1045 = metadata !{metadata !"close-stream.c", metadata !"/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib"}
!1046 = metadata !{metadata !1047}
!1047 = metadata !{i32 786478, metadata !1045, metadata !1048, metadata !"close_stream", metadata !"close_stream", metadata !"", i32 54, metadata !1049, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct._IO_FILE*)* @close_stream, nul
!1048 = metadata !{i32 786473, metadata !1045}    ; [ DW_TAG_file_type ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/close-stream.c]
!1049 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1050, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1050 = metadata !{metadata !38, metadata !1051}
!1051 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1052} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from FILE]
!1052 = metadata !{i32 786454, metadata !1045, null, metadata !"FILE", i32 48, i64 0, i64 0, i64 0, i32 0, metadata !1053} ; [ DW_TAG_typedef ] [FILE] [line 48, size 0, align 0, offset 0] [from _IO_FILE]
!1053 = metadata !{i32 786451, metadata !460, null, metadata !"_IO_FILE", i32 245, i64 1728, i64 64, i32 0, i32 0, null, metadata !1054, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_FILE] [line 245, size 1728, align 64, offset 0] [def] [from
!1054 = metadata !{metadata !1055, metadata !1056, metadata !1057, metadata !1058, metadata !1059, metadata !1060, metadata !1061, metadata !1062, metadata !1063, metadata !1064, metadata !1065, metadata !1066, metadata !1067, metadata !1075, metadata !1
!1055 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_flags", i32 246, i64 32, i64 32, i64 0, i32 0, metadata !38} ; [ DW_TAG_member ] [_flags] [line 246, size 32, align 32, offset 0] [from int]
!1056 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_IO_read_ptr", i32 251, i64 64, i64 64, i64 64, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_read_ptr] [line 251, size 64, align 64, offset 64] [from ]
!1057 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_IO_read_end", i32 252, i64 64, i64 64, i64 128, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_read_end] [line 252, size 64, align 64, offset 128] [from ]
!1058 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_IO_read_base", i32 253, i64 64, i64 64, i64 192, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_read_base] [line 253, size 64, align 64, offset 192] [from ]
!1059 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_IO_write_base", i32 254, i64 64, i64 64, i64 256, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_write_base] [line 254, size 64, align 64, offset 256] [from ]
!1060 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_IO_write_ptr", i32 255, i64 64, i64 64, i64 320, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_write_ptr] [line 255, size 64, align 64, offset 320] [from ]
!1061 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_IO_write_end", i32 256, i64 64, i64 64, i64 384, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_write_end] [line 256, size 64, align 64, offset 384] [from ]
!1062 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_IO_buf_base", i32 257, i64 64, i64 64, i64 448, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_buf_base] [line 257, size 64, align 64, offset 448] [from ]
!1063 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_IO_buf_end", i32 258, i64 64, i64 64, i64 512, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_buf_end] [line 258, size 64, align 64, offset 512] [from ]
!1064 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_IO_save_base", i32 260, i64 64, i64 64, i64 576, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_save_base] [line 260, size 64, align 64, offset 576] [from ]
!1065 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_IO_backup_base", i32 261, i64 64, i64 64, i64 640, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_backup_base] [line 261, size 64, align 64, offset 640] [from ]
!1066 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_IO_save_end", i32 262, i64 64, i64 64, i64 704, i32 0, metadata !43} ; [ DW_TAG_member ] [_IO_save_end] [line 262, size 64, align 64, offset 704] [from ]
!1067 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_markers", i32 264, i64 64, i64 64, i64 768, i32 0, metadata !1068} ; [ DW_TAG_member ] [_markers] [line 264, size 64, align 64, offset 768] [from ]
!1068 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1069} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_marker]
!1069 = metadata !{i32 786451, metadata !460, null, metadata !"_IO_marker", i32 160, i64 192, i64 64, i32 0, i32 0, null, metadata !1070, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [_IO_marker] [line 160, size 192, align 64, offset 0] [def] [fr
!1070 = metadata !{metadata !1071, metadata !1072, metadata !1074}
!1071 = metadata !{i32 786445, metadata !460, metadata !1069, metadata !"_next", i32 161, i64 64, i64 64, i64 0, i32 0, metadata !1068} ; [ DW_TAG_member ] [_next] [line 161, size 64, align 64, offset 0] [from ]
!1072 = metadata !{i32 786445, metadata !460, metadata !1069, metadata !"_sbuf", i32 162, i64 64, i64 64, i64 64, i32 0, metadata !1073} ; [ DW_TAG_member ] [_sbuf] [line 162, size 64, align 64, offset 64] [from ]
!1073 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1053} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _IO_FILE]
!1074 = metadata !{i32 786445, metadata !460, metadata !1069, metadata !"_pos", i32 166, i64 32, i64 32, i64 128, i32 0, metadata !38} ; [ DW_TAG_member ] [_pos] [line 166, size 32, align 32, offset 128] [from int]
!1075 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_chain", i32 266, i64 64, i64 64, i64 832, i32 0, metadata !1073} ; [ DW_TAG_member ] [_chain] [line 266, size 64, align 64, offset 832] [from ]
!1076 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_fileno", i32 268, i64 32, i64 32, i64 896, i32 0, metadata !38} ; [ DW_TAG_member ] [_fileno] [line 268, size 32, align 32, offset 896] [from int]
!1077 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_flags2", i32 272, i64 32, i64 32, i64 928, i32 0, metadata !38} ; [ DW_TAG_member ] [_flags2] [line 272, size 32, align 32, offset 928] [from int]
!1078 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_old_offset", i32 274, i64 64, i64 64, i64 960, i32 0, metadata !486} ; [ DW_TAG_member ] [_old_offset] [line 274, size 64, align 64, offset 960] [from __off_t]
!1079 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_cur_column", i32 278, i64 16, i64 16, i64 1024, i32 0, metadata !340} ; [ DW_TAG_member ] [_cur_column] [line 278, size 16, align 16, offset 1024] [from unsigned short]
!1080 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_vtable_offset", i32 279, i64 8, i64 8, i64 1040, i32 0, metadata !489} ; [ DW_TAG_member ] [_vtable_offset] [line 279, size 8, align 8, offset 1040] [from signed char]
!1081 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_shortbuf", i32 280, i64 8, i64 8, i64 1048, i32 0, metadata !491} ; [ DW_TAG_member ] [_shortbuf] [line 280, size 8, align 8, offset 1048] [from ]
!1082 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_lock", i32 284, i64 64, i64 64, i64 1088, i32 0, metadata !200} ; [ DW_TAG_member ] [_lock] [line 284, size 64, align 64, offset 1088] [from ]
!1083 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_offset", i32 293, i64 64, i64 64, i64 1152, i32 0, metadata !494} ; [ DW_TAG_member ] [_offset] [line 293, size 64, align 64, offset 1152] [from __off64_t]
!1084 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"__pad1", i32 302, i64 64, i64 64, i64 1216, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad1] [line 302, size 64, align 64, offset 1216] [from ]
!1085 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"__pad2", i32 303, i64 64, i64 64, i64 1280, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad2] [line 303, size 64, align 64, offset 1280] [from ]
!1086 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"__pad3", i32 304, i64 64, i64 64, i64 1344, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad3] [line 304, size 64, align 64, offset 1344] [from ]
!1087 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"__pad4", i32 305, i64 64, i64 64, i64 1408, i32 0, metadata !200} ; [ DW_TAG_member ] [__pad4] [line 305, size 64, align 64, offset 1408] [from ]
!1088 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"__pad5", i32 306, i64 64, i64 64, i64 1472, i32 0, metadata !500} ; [ DW_TAG_member ] [__pad5] [line 306, size 64, align 64, offset 1472] [from size_t]
!1089 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_mode", i32 308, i64 32, i64 32, i64 1536, i32 0, metadata !38} ; [ DW_TAG_member ] [_mode] [line 308, size 32, align 32, offset 1536] [from int]
!1090 = metadata !{i32 786445, metadata !460, metadata !1053, metadata !"_unused2", i32 310, i64 160, i64 8, i64 1568, i32 0, metadata !503} ; [ DW_TAG_member ] [_unused2] [line 310, size 160, align 8, offset 1568] [from ]
!1091 = metadata !{i32 786449, metadata !1092, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !32, metadata !32, metadata !1093, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit ] 
!1092 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/klee_div_zero_check.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1093 = metadata !{metadata !1094}
!1094 = metadata !{i32 786478, metadata !1092, metadata !1095, metadata !"klee_div_zero_check", metadata !"klee_div_zero_check", metadata !"", i32 12, metadata !1096, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i64)* @klee_div_zero_che
!1095 = metadata !{i32 786473, metadata !1092}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_div_zero_check.c]
!1096 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1097, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1097 = metadata !{null, metadata !1098}
!1098 = metadata !{i32 786468, null, null, metadata !"long long int", i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [long long int] [line 0, size 64, align 64, offset 0, enc DW_ATE_signed]
!1099 = metadata !{metadata !1100}
!1100 = metadata !{i32 786689, metadata !1094, metadata !"z", metadata !1095, i32 16777228, metadata !1098, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [z] [line 12]
!1101 = metadata !{i32 786449, metadata !1102, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !32, metadata !32, metadata !1103, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit ] 
!1102 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/klee_int.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1103 = metadata !{metadata !1104}
!1104 = metadata !{i32 786478, metadata !1102, metadata !1105, metadata !"klee_int", metadata !"klee_int", metadata !"", i32 13, metadata !1106, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @klee_int, null, null, metadata !1108, i3
!1105 = metadata !{i32 786473, metadata !1102}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_int.c]
!1106 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1107, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1107 = metadata !{metadata !38, metadata !85}
!1108 = metadata !{metadata !1109, metadata !1110}
!1109 = metadata !{i32 786689, metadata !1104, metadata !"name", metadata !1105, i32 16777229, metadata !85, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [name] [line 13]
!1110 = metadata !{i32 786688, metadata !1104, metadata !"x", metadata !1105, i32 14, metadata !38, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [x] [line 14]
!1111 = metadata !{i32 786449, metadata !1112, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !32, metadata !32, metadata !1113, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit ] 
!1112 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1113 = metadata !{metadata !1114, metadata !1122, metadata !1127}
!1114 = metadata !{i32 786478, metadata !1112, metadata !1115, metadata !"klee_mark_arg_symbolic", metadata !"klee_mark_arg_symbolic", metadata !"", i32 23, metadata !46, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i32, i8**)* @klee_ma
!1115 = metadata !{i32 786473, metadata !1112}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c]
!1116 = metadata !{metadata !1117, metadata !1118, metadata !1119, metadata !1120, metadata !1121}
!1117 = metadata !{i32 786689, metadata !1114, metadata !"argc", metadata !1115, i32 16777239, metadata !38, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [argc] [line 23]
!1118 = metadata !{i32 786689, metadata !1114, metadata !"argv", metadata !1115, i32 33554455, metadata !42, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [argv] [line 23]
!1119 = metadata !{i32 786688, metadata !1114, metadata !"i", metadata !1115, i32 24, metadata !38, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 24]
!1120 = metadata !{i32 786688, metadata !1114, metadata !"j", metadata !1115, i32 24, metadata !38, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [j] [line 24]
!1121 = metadata !{i32 786688, metadata !1114, metadata !"len", metadata !1115, i32 24, metadata !38, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [len] [line 24]
!1122 = metadata !{i32 786478, metadata !1112, metadata !1115, metadata !"__isprint", metadata !"__isprint", metadata !"", i32 19, metadata !1123, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null, null, null, metadata !1125, i32 19} ; [ DW_TA
!1123 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1124, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1124 = metadata !{metadata !38, metadata !86}
!1125 = metadata !{metadata !1126}
!1126 = metadata !{i32 786689, metadata !1122, metadata !"c", metadata !1115, i32 16777235, metadata !86, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [c] [line 19]
!1127 = metadata !{i32 786478, metadata !1112, metadata !1115, metadata !"my_strlen", metadata !"my_strlen", metadata !"", i32 13, metadata !1128, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null, null, null, metadata !1130, i32 13} ; [ DW_TA
!1128 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1129, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1129 = metadata !{metadata !38, metadata !43}
!1130 = metadata !{metadata !1131, metadata !1132}
!1131 = metadata !{i32 786689, metadata !1127, metadata !"s", metadata !1115, i32 16777229, metadata !43, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [s] [line 13]
!1132 = metadata !{i32 786688, metadata !1127, metadata !"i", metadata !1115, i32 14, metadata !38, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 14]
!1133 = metadata !{i32 786449, metadata !1134, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !32, metadata !32, metadata !1135, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit ] 
!1134 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/klee_overshift_check.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1135 = metadata !{metadata !1136}
!1136 = metadata !{i32 786478, metadata !1134, metadata !1137, metadata !"klee_overshift_check", metadata !"klee_overshift_check", metadata !"", i32 20, metadata !1138, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i64, i64)* @klee_overs
!1137 = metadata !{i32 786473, metadata !1134}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_overshift_check.c]
!1138 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1139, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1139 = metadata !{null, metadata !1140, metadata !1140}
!1140 = metadata !{i32 786468, null, null, metadata !"long long unsigned int", i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ] [long long unsigned int] [line 0, size 64, align 64, offset 0, enc DW_ATE_unsigned]
!1141 = metadata !{metadata !1142, metadata !1143}
!1142 = metadata !{i32 786689, metadata !1136, metadata !"bitWidth", metadata !1137, i32 16777236, metadata !1140, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [bitWidth] [line 20]
!1143 = metadata !{i32 786689, metadata !1136, metadata !"shift", metadata !1137, i32 33554452, metadata !1140, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [shift] [line 20]
!1144 = metadata !{i32 786449, metadata !1145, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !32, metadata !32, metadata !1146, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit ] 
!1145 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1146 = metadata !{metadata !1147}
!1147 = metadata !{i32 786478, metadata !1145, metadata !1148, metadata !"klee_range", metadata !"klee_range", metadata !"", i32 13, metadata !1149, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i8*)* @klee_range, null, null, me
!1148 = metadata !{i32 786473, metadata !1145}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!1149 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1150, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1150 = metadata !{metadata !38, metadata !38, metadata !38, metadata !85}
!1151 = metadata !{metadata !1152, metadata !1153, metadata !1154, metadata !1155}
!1152 = metadata !{i32 786689, metadata !1147, metadata !"start", metadata !1148, i32 16777229, metadata !38, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [start] [line 13]
!1153 = metadata !{i32 786689, metadata !1147, metadata !"end", metadata !1148, i32 33554445, metadata !38, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [end] [line 13]
!1154 = metadata !{i32 786689, metadata !1147, metadata !"name", metadata !1148, i32 50331661, metadata !85, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [name] [line 13]
!1155 = metadata !{i32 786688, metadata !1147, metadata !"x", metadata !1148, i32 14, metadata !38, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [x] [line 14]
!1156 = metadata !{i32 786449, metadata !1157, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !32, metadata !32, metadata !1158, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit ] 
!1157 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/memcpy.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1158 = metadata !{metadata !1159}
!1159 = metadata !{i32 786478, metadata !1157, metadata !1160, metadata !"memcpy", metadata !"memcpy", metadata !"", i32 12, metadata !1161, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i8*, i64)* @memcpy, null, null, metadata !1164
!1160 = metadata !{i32 786473, metadata !1157}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memcpy.c]
!1161 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1162, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1162 = metadata !{metadata !200, metadata !200, metadata !317, metadata !1163}
!1163 = metadata !{i32 786454, metadata !1157, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1164 = metadata !{metadata !1165, metadata !1166, metadata !1167, metadata !1168, metadata !1169}
!1165 = metadata !{i32 786689, metadata !1159, metadata !"destaddr", metadata !1160, i32 16777228, metadata !200, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [destaddr] [line 12]
!1166 = metadata !{i32 786689, metadata !1159, metadata !"srcaddr", metadata !1160, i32 33554444, metadata !317, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [srcaddr] [line 12]
!1167 = metadata !{i32 786689, metadata !1159, metadata !"len", metadata !1160, i32 50331660, metadata !1163, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [len] [line 12]
!1168 = metadata !{i32 786688, metadata !1159, metadata !"dest", metadata !1160, i32 13, metadata !43, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [dest] [line 13]
!1169 = metadata !{i32 786688, metadata !1159, metadata !"src", metadata !1160, i32 14, metadata !85, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [src] [line 14]
!1170 = metadata !{i32 786449, metadata !1171, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !32, metadata !32, metadata !1172, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit ] 
!1171 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/memmove.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1172 = metadata !{metadata !1173}
!1173 = metadata !{i32 786478, metadata !1171, metadata !1174, metadata !"memmove", metadata !"memmove", metadata !"", i32 12, metadata !1175, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i8*, i64)* @memmove, null, null, metadata !1
!1174 = metadata !{i32 786473, metadata !1171}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memmove.c]
!1175 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1176, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1176 = metadata !{metadata !200, metadata !200, metadata !317, metadata !1177}
!1177 = metadata !{i32 786454, metadata !1171, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1178 = metadata !{metadata !1179, metadata !1180, metadata !1181, metadata !1182, metadata !1183}
!1179 = metadata !{i32 786689, metadata !1173, metadata !"dst", metadata !1174, i32 16777228, metadata !200, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [dst] [line 12]
!1180 = metadata !{i32 786689, metadata !1173, metadata !"src", metadata !1174, i32 33554444, metadata !317, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [src] [line 12]
!1181 = metadata !{i32 786689, metadata !1173, metadata !"count", metadata !1174, i32 50331660, metadata !1177, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [count] [line 12]
!1182 = metadata !{i32 786688, metadata !1173, metadata !"a", metadata !1174, i32 13, metadata !43, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [a] [line 13]
!1183 = metadata !{i32 786688, metadata !1173, metadata !"b", metadata !1174, i32 14, metadata !85, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [b] [line 14]
!1184 = metadata !{i32 786449, metadata !1185, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !32, metadata !32, metadata !1186, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit ] 
!1185 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/mempcpy.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1186 = metadata !{metadata !1187}
!1187 = metadata !{i32 786478, metadata !1185, metadata !1188, metadata !"mempcpy", metadata !"mempcpy", metadata !"", i32 11, metadata !1189, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i8*, i64)* @mempcpy, null, null, metadata !1
!1188 = metadata !{i32 786473, metadata !1185}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/mempcpy.c]
!1189 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1190, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1190 = metadata !{metadata !200, metadata !200, metadata !317, metadata !1191}
!1191 = metadata !{i32 786454, metadata !1185, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1192 = metadata !{metadata !1193, metadata !1194, metadata !1195, metadata !1196, metadata !1197}
!1193 = metadata !{i32 786689, metadata !1187, metadata !"destaddr", metadata !1188, i32 16777227, metadata !200, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [destaddr] [line 11]
!1194 = metadata !{i32 786689, metadata !1187, metadata !"srcaddr", metadata !1188, i32 33554443, metadata !317, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [srcaddr] [line 11]
!1195 = metadata !{i32 786689, metadata !1187, metadata !"len", metadata !1188, i32 50331659, metadata !1191, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [len] [line 11]
!1196 = metadata !{i32 786688, metadata !1187, metadata !"dest", metadata !1188, i32 12, metadata !43, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [dest] [line 12]
!1197 = metadata !{i32 786688, metadata !1187, metadata !"src", metadata !1188, i32 13, metadata !85, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [src] [line 13]
!1198 = metadata !{i32 786449, metadata !1199, i32 1, metadata !"clang version 3.4.2 (tags/RELEASE_342/final)", i1 true, metadata !"", i32 0, metadata !32, metadata !32, metadata !1200, metadata !32, metadata !32, metadata !""} ; [ DW_TAG_compile_unit ] 
!1199 = metadata !{metadata !"/home/jl/deploy/use/src/runtime/Intrinsic/memset.c", metadata !"/home/jl/deploy/use/build/runtime/Intrinsic"}
!1200 = metadata !{metadata !1201}
!1201 = metadata !{i32 786478, metadata !1199, metadata !1202, metadata !"memset", metadata !"memset", metadata !"", i32 11, metadata !1203, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i32, i64)* @memset, null, null, metadata !1206
!1202 = metadata !{i32 786473, metadata !1199}    ; [ DW_TAG_file_type ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memset.c]
!1203 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1204, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1204 = metadata !{metadata !200, metadata !200, metadata !38, metadata !1205}
!1205 = metadata !{i32 786454, metadata !1199, null, metadata !"size_t", i32 42, i64 0, i64 0, i64 0, i32 0, metadata !67} ; [ DW_TAG_typedef ] [size_t] [line 42, size 0, align 0, offset 0] [from long unsigned int]
!1206 = metadata !{metadata !1207, metadata !1208, metadata !1209, metadata !1210}
!1207 = metadata !{i32 786689, metadata !1201, metadata !"dst", metadata !1202, i32 16777227, metadata !200, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [dst] [line 11]
!1208 = metadata !{i32 786689, metadata !1201, metadata !"s", metadata !1202, i32 33554443, metadata !38, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [s] [line 11]
!1209 = metadata !{i32 786689, metadata !1201, metadata !"count", metadata !1202, i32 50331659, metadata !1205, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [count] [line 11]
!1210 = metadata !{i32 786688, metadata !1201, metadata !"a", metadata !1202, i32 12, metadata !1211, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [a] [line 12]
!1211 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1212} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1212 = metadata !{i32 786485, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !44} ; [ DW_TAG_volatile_type ] [line 0, size 0, align 0, offset 0] [from char]
!1213 = metadata !{i32 2, metadata !"Dwarf Version", i32 4}
!1214 = metadata !{i32 1, metadata !"Debug Info Version", i32 1}
!1215 = metadata !{metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"}
!1216 = metadata !{metadata !"clang version 3.4.2 (tags/RELEASE_342/final)"}
!1217 = metadata !{i32 161, i32 0, metadata !1218, null}
!1218 = metadata !{i32 786443, metadata !1, metadata !34, i32 161, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1219 = metadata !{i32 162, i32 0, metadata !1218, null}
!1220 = metadata !{i32 166, i32 0, metadata !1221, null}
!1221 = metadata !{i32 786443, metadata !1, metadata !1218, i32 165, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1222 = metadata !{i32 167, i32 0, metadata !1221, null}
!1223 = metadata !{i32 173, i32 0, metadata !1221, null}
!1224 = metadata !{i32 180, i32 0, metadata !1221, null}
!1225 = metadata !{i32 185, i32 0, metadata !1221, null}
!1226 = metadata !{i32 191, i32 0, metadata !1221, null}
!1227 = metadata !{i32 192, i32 0, metadata !1221, null}
!1228 = metadata !{i32 193, i32 0, metadata !1221, null}
!1229 = metadata !{i32 198, i32 0, metadata !1221, null}
!1230 = metadata !{i32 207, i32 0, metadata !1221, null}
!1231 = metadata !{i32 213, i32 0, metadata !1221, null}
!1232 = metadata !{i32 215, i32 0, metadata !34, null}
!1233 = metadata !{i32 238, i32 0, metadata !39, null}
!1234 = metadata !{i32 240, i32 0, metadata !39, null}
!1235 = metadata !{i32 244, i32 0, metadata !39, null}
!1236 = metadata !{i32 245, i32 0, metadata !39, null}
!1237 = metadata !{i32 249, i32 0, metadata !39, null}
!1238 = metadata !{i32 251, i32 0, metadata !39, null}
!1239 = metadata !{i32 253, i32 0, metadata !39, null}
!1240 = metadata !{i32 255, i32 0, metadata !1241, null}
!1241 = metadata !{i32 786443, metadata !1, metadata !39, i32 254, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1242 = metadata !{i32 266, i32 0, metadata !1243, null}
!1243 = metadata !{i32 786443, metadata !1, metadata !1241, i32 256, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1244 = metadata !{i32 267, i32 0, metadata !1243, null}
!1245 = metadata !{i32 268, i32 0, metadata !1243, null}
!1246 = metadata !{i32 269, i32 0, metadata !1243, null}
!1247 = metadata !{i32 273, i32 0, metadata !1243, null}
!1248 = metadata !{i32 274, i32 0, metadata !1243, null}
!1249 = metadata !{i32 275, i32 0, metadata !1243, null}
!1250 = metadata !{i32 276, i32 0, metadata !1243, null}
!1251 = metadata !{i32 281, i32 0, metadata !1243, null}
!1252 = metadata !{i32 282, i32 0, metadata !1243, null}
!1253 = metadata !{i32 283, i32 0, metadata !1243, null}
!1254 = metadata !{i32 284, i32 0, metadata !1243, null}
!1255 = metadata !{i32 288, i32 0, metadata !1243, null}
!1256 = metadata !{i32 289, i32 0, metadata !1243, null}
!1257 = metadata !{i32 294, i32 0, metadata !1258, null}
!1258 = metadata !{i32 786443, metadata !1, metadata !1259, i32 294, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1259 = metadata !{i32 786443, metadata !1, metadata !1243, i32 292, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1260 = metadata !{i32 295, i32 0, metadata !1258, null}
!1261 = metadata !{i32 298, i32 0, metadata !1258, null}
!1262 = metadata !{i32 299, i32 0, metadata !1259, null}
!1263 = metadata !{i32 302, i32 0, metadata !1264, null}
!1264 = metadata !{i32 786443, metadata !1, metadata !1259, i32 300, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1265 = metadata !{i32 303, i32 0, metadata !1264, null}
!1266 = metadata !{i32 304, i32 0, metadata !1264, null}
!1267 = metadata !{i32 307, i32 0, metadata !1264, null}
!1268 = metadata !{i32 308, i32 0, metadata !1264, null}
!1269 = metadata !{i32 309, i32 0, metadata !1264, null}
!1270 = metadata !{i32 310, i32 0, metadata !1264, null}
!1271 = metadata !{i32 313, i32 0, metadata !1264, null}
!1272 = metadata !{i32 314, i32 0, metadata !1264, null}
!1273 = metadata !{i32 315, i32 0, metadata !1264, null}
!1274 = metadata !{i32 316, i32 0, metadata !1264, null}
!1275 = metadata !{i32 322, i32 0, metadata !1243, null}
!1276 = metadata !{i32 323, i32 0, metadata !1243, null}
!1277 = metadata !{i32 326, i32 0, metadata !1243, null}
!1278 = metadata !{i32 327, i32 0, metadata !1243, null}
!1279 = metadata !{i32 330, i32 0, metadata !1243, null}
!1280 = metadata !{i32 331, i32 0, metadata !1243, null}
!1281 = metadata !{i32 334, i32 0, metadata !1243, null}
!1282 = metadata !{i32 335, i32 0, metadata !1243, null}
!1283 = metadata !{i32 338, i32 0, metadata !1243, null}
!1284 = metadata !{i32 339, i32 0, metadata !1243, null}
!1285 = metadata !{i32 341, i32 0, metadata !1243, null}
!1286 = metadata !{i32 342, i32 0, metadata !1243, null}
!1287 = metadata !{i32 344, i32 0, metadata !1243, null}
!1288 = metadata !{i32 345, i32 0, metadata !1243, null}
!1289 = metadata !{i32 346, i32 0, metadata !1243, null}
!1290 = metadata !{i32 349, i32 0, metadata !1291, null}
!1291 = metadata !{i32 786443, metadata !1, metadata !39, i32 349, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1292 = metadata !{i32 351, i32 0, metadata !1293, null}
!1293 = metadata !{i32 786443, metadata !1, metadata !1294, i32 351, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1294 = metadata !{i32 786443, metadata !1, metadata !1291, i32 350, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1295 = metadata !{i32 352, i32 0, metadata !1293, null}
!1296 = metadata !{i32 355, i32 0, metadata !1297, null}
!1297 = metadata !{i32 786443, metadata !1, metadata !1293, i32 354, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1298 = metadata !{i32 356, i32 0, metadata !1297, null}
!1299 = metadata !{i32 358, i32 0, metadata !1294, null}
!1300 = metadata !{i32 360, i32 0, metadata !1301, null}
!1301 = metadata !{i32 786443, metadata !1, metadata !39, i32 360, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1302 = metadata !{i32 363, i32 0, metadata !1303, null}
!1303 = metadata !{i32 786443, metadata !1, metadata !1301, i32 361, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1304 = metadata !{i32 364, i32 0, metadata !1305, null}
!1305 = metadata !{i32 786443, metadata !1, metadata !1303, i32 364, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1306 = metadata !{i32 365, i32 0, metadata !1305, null}
!1307 = metadata !{i32 366, i32 0, metadata !1305, null}
!1308 = metadata !{i32 369, i32 0, metadata !39, null}
!1309 = metadata !{i32 370, i32 0, metadata !39, null}
!1310 = metadata !{i32 372, i32 0, metadata !1311, null}
!1311 = metadata !{i32 786443, metadata !1, metadata !39, i32 372, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1312 = metadata !{i32 374, i32 0, metadata !1313, null}
!1313 = metadata !{i32 786443, metadata !1, metadata !1311, i32 373, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1314 = metadata !{i32 379, i32 0, metadata !1315, null}
!1315 = metadata !{i32 786443, metadata !1, metadata !1313, i32 379, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1316 = metadata !{i32 380, i32 0, metadata !1315, null}
!1317 = metadata !{i32 382, i32 0, metadata !39, null}
!1318 = metadata !{i32 383, i32 0, metadata !39, null}
!1319 = metadata !{i32 384, i32 0, metadata !39, null}
!1320 = metadata !{i32 221, i32 0, metadata !48, null}
!1321 = metadata !{i32 223, i32 0, metadata !48, null}
!1322 = metadata !{i32 224, i32 0, metadata !48, null}
!1323 = metadata !{i32 225, i32 0, metadata !48, null}
!1324 = metadata !{i32 226, i32 0, metadata !48, null}
!1325 = metadata !{i32 227, i32 0, metadata !48, null}
!1326 = metadata !{i32 228, i32 0, metadata !48, null}
!1327 = metadata !{i32 232, i32 0, metadata !48, null}
!1328 = metadata !{i32 233, i32 0, metadata !48, null}
!1329 = metadata !{i32 141, i32 0, metadata !1330, null}
!1330 = metadata !{i32 786443, metadata !1, metadata !45, i32 141, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1331 = metadata !{i32 143, i32 0, metadata !1332, null}
!1332 = metadata !{i32 786443, metadata !1, metadata !1330, i32 142, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1333 = metadata !{i32 146, i32 0, metadata !1334, null}
!1334 = metadata !{i32 786443, metadata !1, metadata !1332, i32 146, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1335 = metadata !{i32 148, i32 0, metadata !1336, null}
!1336 = metadata !{i32 786443, metadata !1, metadata !1334, i32 147, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/rm.c]
!1337 = metadata !{i32 151, i32 0, metadata !1336, null}
!1338 = metadata !{i32 152, i32 0, metadata !1336, null}
!1339 = metadata !{i32 153, i32 0, metadata !1336, null}
!1340 = metadata !{i32 156, i32 0, metadata !45, null}
!1341 = metadata !{i32 19, i32 0, metadata !1342, null}
!1342 = metadata !{i32 786443, metadata !134, metadata !133, i32 19, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1343 = metadata !{i32 20, i32 0, metadata !1342, null}
!1344 = metadata !{i32 22, i32 0, metadata !1345, null}
!1345 = metadata !{i32 786443, metadata !134, metadata !1346, i32 22, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1346 = metadata !{i32 786443, metadata !134, metadata !1342, i32 21, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1347 = metadata !{i32 25, i32 0, metadata !1348, null}
!1348 = metadata !{i32 786443, metadata !134, metadata !1345, i32 22, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1349 = metadata !{i32 26, i32 0, metadata !1348, null}
!1350 = metadata !{i32 28, i32 0, metadata !1351, null}
!1351 = metadata !{i32 786443, metadata !134, metadata !1348, i32 28, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1352 = metadata !{i32 31, i32 0, metadata !1353, null}
!1353 = metadata !{i32 786443, metadata !134, metadata !1351, i32 28, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1354 = metadata !{i32 32, i32 0, metadata !1355, null}
!1355 = metadata !{i32 786443, metadata !134, metadata !1353, i32 32, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1356 = metadata !{i32 33, i32 0, metadata !1357, null}
!1357 = metadata !{i32 786443, metadata !134, metadata !1355, i32 32, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1358 = metadata !{i32 34, i32 0, metadata !1357, null}
!1359 = metadata !{i32 35, i32 0, metadata !1357, null}
!1360 = metadata !{i32 36, i32 0, metadata !1357, null}
!1361 = metadata !{i32 38, i32 0, metadata !1362, null}
!1362 = metadata !{i32 786443, metadata !134, metadata !1355, i32 37, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1363 = metadata !{i32 40, i32 0, metadata !1364, null}
!1364 = metadata !{i32 786443, metadata !134, metadata !1353, i32 40, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1365 = metadata !{i32 41, i32 0, metadata !1366, null}
!1366 = metadata !{i32 786443, metadata !134, metadata !1364, i32 40, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1367 = metadata !{i32 42, i32 0, metadata !1368, null}
!1368 = metadata !{i32 786443, metadata !134, metadata !1366, i32 42, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1369 = metadata !{i32 43, i32 0, metadata !1370, null}
!1370 = metadata !{i32 786443, metadata !134, metadata !1368, i32 42, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1371 = metadata !{i32 44, i32 0, metadata !1370, null}
!1372 = metadata !{i32 45, i32 0, metadata !1370, null}
!1373 = metadata !{i32 47, i32 0, metadata !1374, null}
!1374 = metadata !{i32 786443, metadata !134, metadata !1368, i32 46, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1375 = metadata !{i32 51, i32 0, metadata !1376, null}
!1376 = metadata !{i32 786443, metadata !134, metadata !1364, i32 50, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1377 = metadata !{i32 56, i32 0, metadata !1378, null}
!1378 = metadata !{i32 786443, metadata !134, metadata !1351, i32 55, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_macros.h]
!1379 = metadata !{i32 59, i32 0, metadata !1348, null}
!1380 = metadata !{i32 60, i32 0, metadata !1348, null}
!1381 = metadata !{i32 61, i32 0, metadata !1346, null}
!1382 = metadata !{i32 64, i32 0, metadata !133, null}
!1383 = metadata !{i32 4, i32 0, metadata !1384, null}
!1384 = metadata !{i32 786443, metadata !140, metadata !139} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src//home/shadowvm/shadow/shadow-llvm-tools/include/klee_change_functions.h]
!1385 = metadata !{i32 5, i32 0, metadata !144, null}
!1386 = metadata !{i32 1630, i32 0, metadata !1387, null}
!1387 = metadata !{i32 786443, metadata !103, metadata !145} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1388 = metadata !{i32 1631, i32 0, metadata !1387, null}
!1389 = metadata !{i32 1632, i32 0, metadata !1387, null}
!1390 = metadata !{i32 1635, i32 0, metadata !1391, null}
!1391 = metadata !{i32 786443, metadata !103, metadata !1387, i32 1635, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1392 = metadata !{i32 1637, i32 0, metadata !1393, null}
!1393 = metadata !{i32 786443, metadata !103, metadata !1394, i32 1637, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1394 = metadata !{i32 786443, metadata !103, metadata !1391, i32 1636, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1395 = metadata !{i32 1639, i32 0, metadata !1396, null}
!1396 = metadata !{i32 786443, metadata !103, metadata !1393, i32 1638, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1397 = metadata !{i32 1643, i32 0, metadata !1396, null}
!1398 = metadata !{i32 1644, i32 0, metadata !1396, null}
!1399 = metadata !{i32 1647, i32 0, metadata !1400, null}
!1400 = metadata !{i32 786443, metadata !103, metadata !1393, i32 1646, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1401 = metadata !{i32 1648, i32 0, metadata !1400, null}
!1402 = metadata !{i32 1649, i32 0, metadata !1403, null}
!1403 = metadata !{i32 786443, metadata !103, metadata !1404, i32 1649, i32 0, i32 22} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1404 = metadata !{i32 786443, metadata !103, metadata !1400, i32 1649, i32 0, i32 21} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1405 = metadata !{i32 1653, i32 0, metadata !1406, null}
!1406 = metadata !{i32 786443, metadata !103, metadata !1387, i32 1653, i32 0, i32 23} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1407 = metadata !{i32 1655, i32 0, metadata !1408, null}
!1408 = metadata !{i32 786443, metadata !103, metadata !1406, i32 1654, i32 0, i32 24} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1409 = metadata !{i32 1660, i32 0, metadata !1408, null}
!1410 = metadata !{i32 1661, i32 0, metadata !1408, null}
!1411 = metadata !{i32 1663, i32 0, metadata !1387, null}
!1412 = metadata !{i32 1665, i32 0, metadata !1387, null}
!1413 = metadata !{i32 410, i32 0, metadata !425, null}
!1414 = metadata !{i32 411, i32 0, metadata !425, null}
!1415 = metadata !{i32 412, i32 0, metadata !425, null}
!1416 = metadata !{i32 413, i32 0, metadata !425, null}
!1417 = metadata !{i32 414, i32 0, metadata !425, null}
!1418 = metadata !{i32 157, i32 0, metadata !1419, null}
!1419 = metadata !{i32 786443, metadata !103, metadata !418} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1420 = metadata !{i32 158, i32 0, metadata !1419, null}
!1421 = metadata !{i32 159, i32 0, metadata !1419, null}
!1422 = metadata !{i32 160, i32 0, metadata !1419, null}
!1423 = metadata !{i32 161, i32 0, metadata !1419, null}
!1424 = metadata !{i32 162, i32 0, metadata !1425, null}
!1425 = metadata !{i32 786443, metadata !103, metadata !1419, i32 162, i32 0, i32 246} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1426 = metadata !{i32 163, i32 0, metadata !1427, null}
!1427 = metadata !{i32 786443, metadata !103, metadata !1425, i32 162, i32 0, i32 247} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1428 = metadata !{i32 165, i32 0, metadata !1419, null}
!1429 = metadata !{i32 1564, i32 0, metadata !247, null}
!1430 = metadata !{i32 1565, i32 7, metadata !1431, null}
!1431 = metadata !{i32 786443, metadata !103, metadata !247, i32 1565, i32 0, i32 31} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1432 = metadata !{i32 1567, i32 0, metadata !1433, null}
!1433 = metadata !{i32 786443, metadata !103, metadata !1431, i32 1566, i32 0, i32 32} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1434 = metadata !{i32 1568, i32 0, metadata !1433, null}
!1435 = metadata !{i32 1576, i32 0, metadata !1433, null}
!1436 = metadata !{i32 1580, i32 0, metadata !247, null}
!1437 = metadata !{i32 1581, i32 0, metadata !247, null}
!1438 = metadata !{i32 1582, i32 0, metadata !1439, null}
!1439 = metadata !{i32 786443, metadata !103, metadata !247, i32 1582, i32 0, i32 33} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1440 = metadata !{i32 1584, i32 0, metadata !1441, null}
!1441 = metadata !{i32 786443, metadata !103, metadata !1442, i32 1584, i32 0, i32 35} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1442 = metadata !{i32 786443, metadata !103, metadata !1439, i32 1583, i32 0, i32 34} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1443 = metadata !{i32 1586, i32 8, metadata !1444, null}
!1444 = metadata !{i32 786443, metadata !103, metadata !1445, i32 1586, i32 0, i32 37} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1445 = metadata !{i32 786443, metadata !103, metadata !1441, i32 1585, i32 0, i32 36} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1446 = metadata !{i32 1586, i32 0, metadata !1444, null}
!1447 = metadata !{i32 1587, i32 0, metadata !1444, null}
!1448 = metadata !{i32 1588, i32 0, metadata !1445, null}
!1449 = metadata !{i32 1592, i32 0, metadata !1445, null}
!1450 = metadata !{i32 1594, i32 0, metadata !1451, null}
!1451 = metadata !{i32 786443, metadata !103, metadata !1442, i32 1594, i32 0, i32 38} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1452 = metadata !{i32 1596, i32 0, metadata !1453, null}
!1453 = metadata !{i32 786443, metadata !103, metadata !1451, i32 1595, i32 0, i32 39} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1454 = metadata !{i32 1600, i32 0, metadata !1453, null}
!1455 = metadata !{i32 1604, i32 0, metadata !247, null}
!1456 = metadata !{i32 1605, i32 0, metadata !1457, null}
!1457 = metadata !{i32 786443, metadata !103, metadata !247, i32 1605, i32 0, i32 40} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1458 = metadata !{i32 1607, i32 0, metadata !247, null}
!1459 = metadata !{i32 1608, i32 0, metadata !1460, null}
!1460 = metadata !{i32 786443, metadata !103, metadata !247, i32 1608, i32 0, i32 41} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1461 = metadata !{i32 1613, i32 0, metadata !1462, null}
!1462 = metadata !{i32 786443, metadata !103, metadata !1463, i32 1613, i32 0, i32 43} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1463 = metadata !{i32 786443, metadata !103, metadata !1460, i32 1609, i32 0, i32 42} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1464 = metadata !{i32 1614, i32 0, metadata !1462, null}
!1465 = metadata !{i32 1616, i32 0, metadata !1462, null}
!1466 = metadata !{i32 1618, i32 0, metadata !1463, null}
!1467 = metadata !{i32 1619, i32 0, metadata !1463, null}
!1468 = metadata !{i32 1621, i32 0, metadata !247, null}
!1469 = metadata !{i32 1622, i32 0, metadata !247, null}
!1470 = metadata !{i32 1623, i32 0, metadata !247, null}
!1471 = metadata !{i32 430, i32 0, metadata !1472, null}
!1472 = metadata !{i32 786443, metadata !103, metadata !169, i32 430, i32 0, i32 25} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1473 = metadata !{i32 430, i32 0, metadata !1474, null}
!1474 = metadata !{i32 786443, metadata !103, metadata !1472, i32 430, i32 0, i32 26} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1475 = metadata !{i32 431, i32 0, metadata !1476, null}
!1476 = metadata !{i32 786443, metadata !103, metadata !169, i32 431, i32 0, i32 27} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1477 = metadata !{i32 431, i32 0, metadata !1478, null}
!1478 = metadata !{i32 786443, metadata !103, metadata !1476, i32 431, i32 0, i32 28} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1479 = metadata !{i32 432, i32 0, metadata !1480, null}
!1480 = metadata !{i32 786443, metadata !103, metadata !169, i32 432, i32 0, i32 29} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1481 = metadata !{i32 432, i32 0, metadata !1482, null}
!1482 = metadata !{i32 786443, metadata !103, metadata !1480, i32 432, i32 0, i32 30} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1483 = metadata !{i32 433, i32 0, metadata !169, null}
!1484 = metadata !{i32 434, i32 0, metadata !169, null}
!1485 = metadata !{i32 420, i32 0, metadata !1486, null}
!1486 = metadata !{i32 786443, metadata !103, metadata !250, i32 420, i32 0, i32 44} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1487 = metadata !{i32 420, i32 0, metadata !1488, null}
!1488 = metadata !{i32 786443, metadata !103, metadata !1486, i32 420, i32 0, i32 45} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1489 = metadata !{i32 420, i32 0, metadata !1490, null}
!1490 = metadata !{i32 786443, metadata !103, metadata !1488, i32 420, i32 0, i32 46} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1491 = metadata !{i32 420, i32 0, metadata !1492, null}
!1492 = metadata !{i32 786443, metadata !103, metadata !1488, i32 420, i32 0, i32 47} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1493 = metadata !{i32 420, i32 0, metadata !1494, null}
!1494 = metadata !{i32 786443, metadata !103, metadata !1486, i32 420, i32 0, i32 48} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1495 = metadata !{i32 421, i32 0, metadata !1496, null}
!1496 = metadata !{i32 786443, metadata !103, metadata !250, i32 421, i32 0, i32 49} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1497 = metadata !{i32 421, i32 0, metadata !1498, null}
!1498 = metadata !{i32 786443, metadata !103, metadata !1496, i32 421, i32 0, i32 50} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1499 = metadata !{i32 421, i32 0, metadata !1500, null}
!1500 = metadata !{i32 786443, metadata !103, metadata !1498, i32 421, i32 0, i32 51} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1501 = metadata !{i32 421, i32 0, metadata !1502, null}
!1502 = metadata !{i32 786443, metadata !103, metadata !1498, i32 421, i32 0, i32 52} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1503 = metadata !{i32 421, i32 0, metadata !1504, null}
!1504 = metadata !{i32 786443, metadata !103, metadata !1496, i32 421, i32 0, i32 53} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1505 = metadata !{i32 422, i32 14, metadata !250, null}
!1506 = metadata !{i32 423, i32 0, metadata !250, null}
!1507 = metadata !{i32 424, i32 0, metadata !1508, null}
!1508 = metadata !{i32 786443, metadata !103, metadata !250, i32 424, i32 0, i32 54} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1509 = metadata !{i32 424, i32 0, metadata !1510, null}
!1510 = metadata !{i32 786443, metadata !103, metadata !1508, i32 424, i32 0, i32 55} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1511 = metadata !{i32 424, i32 0, metadata !1512, null}
!1512 = metadata !{i32 786443, metadata !103, metadata !1510, i32 424, i32 0, i32 56} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1513 = metadata !{i32 424, i32 0, metadata !1514, null}
!1514 = metadata !{i32 786443, metadata !103, metadata !1510, i32 424, i32 0, i32 57} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1515 = metadata !{i32 424, i32 0, metadata !1516, null}
!1516 = metadata !{i32 786443, metadata !103, metadata !1508, i32 424, i32 0, i32 58} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1517 = metadata !{i32 425, i32 0, metadata !250, null}
!1518 = metadata !{i32 389, i32 0, metadata !251, null}
!1519 = metadata !{i32 392, i32 24, metadata !251, null}
!1520 = metadata !{i32 393, i32 0, metadata !1521, null}
!1521 = metadata !{i32 786443, metadata !103, metadata !251, i32 393, i32 0, i32 59} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1522 = metadata !{i32 394, i32 0, metadata !1521, null}
!1523 = metadata !{i32 395, i32 0, metadata !1524, null}
!1524 = metadata !{i32 786443, metadata !103, metadata !251, i32 395, i32 0, i32 60} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1525 = metadata !{i32 395, i32 0, metadata !1526, null}
!1526 = metadata !{i32 786443, metadata !103, metadata !1524, i32 395, i32 0, i32 61} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1527 = metadata !{i32 396, i32 0, metadata !251, null}
!1528 = metadata !{i32 376, i32 0, metadata !1529, null}
!1529 = metadata !{i32 786443, metadata !103, metadata !252, i32 376, i32 0, i32 62} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1530 = metadata !{i32 401, i32 0, metadata !257, null}
!1531 = metadata !{i32 401, i32 14, metadata !257, null}
!1532 = metadata !{i32 403, i32 0, metadata !1533, null}
!1533 = metadata !{i32 786443, metadata !103, metadata !257, i32 402, i32 0, i32 63} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1534 = metadata !{i32 404, i32 0, metadata !1533, null}
!1535 = metadata !{i32 405, i32 0, metadata !257, null}
!1536 = metadata !{i32 1378, i32 0, metadata !258, null}
!1537 = metadata !{i32 1388, i32 0, metadata !258, null}
!1538 = metadata !{i32 1390, i32 0, metadata !1539, null}
!1539 = metadata !{i32 786443, metadata !103, metadata !258, i32 1390, i32 0, i32 64} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1540 = metadata !{i32 1394, i32 11, metadata !1541, null}
!1541 = metadata !{i32 786443, metadata !103, metadata !1542, i32 1394, i32 0, i32 66} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1542 = metadata !{i32 786443, metadata !103, metadata !1539, i32 1391, i32 0, i32 65} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1543 = metadata !{i32 1394, i32 0, metadata !1541, null}
!1544 = metadata !{i32 1402, i32 0, metadata !1545, null}
!1545 = metadata !{i32 786443, metadata !103, metadata !1541, i32 1399, i32 0, i32 68} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1546 = metadata !{i32 1403, i32 0, metadata !1547, null}
!1547 = metadata !{i32 786443, metadata !103, metadata !1545, i32 1403, i32 0, i32 69} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1548 = metadata !{i32 1404, i32 0, metadata !1547, null}
!1549 = metadata !{i32 1406, i32 0, metadata !1545, null}
!1550 = metadata !{i32 1413, i32 0, metadata !1542, null}
!1551 = metadata !{i32 1416, i32 0, metadata !1552, null}
!1552 = metadata !{i32 786443, metadata !103, metadata !258, i32 1416, i32 0, i32 70} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1553 = metadata !{i32 1418, i32 0, metadata !1554, null}
!1554 = metadata !{i32 786443, metadata !103, metadata !1555, i32 1418, i32 0, i32 73} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1555 = metadata !{i32 786443, metadata !103, metadata !1556, i32 1418, i32 0, i32 72} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1556 = metadata !{i32 786443, metadata !103, metadata !1552, i32 1417, i32 0, i32 71} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1557 = metadata !{i32 1418, i32 0, metadata !1555, null}
!1558 = metadata !{i32 1419, i32 0, metadata !1556, null}
!1559 = metadata !{i32 1420, i32 0, metadata !1556, null}
!1560 = metadata !{i32 1423, i32 0, metadata !258, null}
!1561 = metadata !{i32 1424, i32 0, metadata !1562, null}
!1562 = metadata !{i32 786443, metadata !103, metadata !258, i32 1424, i32 0, i32 74} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1563 = metadata !{i32 1426, i32 0, metadata !258, null}
!1564 = metadata !{i32 1428, i32 0, metadata !258, null}
!1565 = metadata !{i32 1430, i32 0, metadata !1566, null}
!1566 = metadata !{i32 786443, metadata !103, metadata !258, i32 1429, i32 0, i32 75} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1567 = metadata !{i32 1434, i32 0, metadata !1566, null}
!1568 = metadata !{i32 1436, i32 0, metadata !1569, null}
!1569 = metadata !{i32 786443, metadata !103, metadata !1566, i32 1436, i32 0, i32 76} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1570 = metadata !{i32 1438, i32 0, metadata !1571, null}
!1571 = metadata !{i32 786443, metadata !103, metadata !1572, i32 1438, i32 0, i32 79} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1572 = metadata !{i32 786443, metadata !103, metadata !1573, i32 1438, i32 0, i32 78} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1573 = metadata !{i32 786443, metadata !103, metadata !1569, i32 1437, i32 0, i32 77} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1574 = metadata !{i32 1439, i32 0, metadata !1573, null}
!1575 = metadata !{i32 1440, i32 0, metadata !1573, null}
!1576 = metadata !{i32 1441, i32 0, metadata !1577, null}
!1577 = metadata !{i32 786443, metadata !103, metadata !1566, i32 1441, i32 0, i32 80} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1578 = metadata !{i32 1443, i32 0, metadata !1579, null}
!1579 = metadata !{i32 786443, metadata !103, metadata !1580, i32 1443, i32 0, i32 82} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1580 = metadata !{i32 786443, metadata !103, metadata !1577, i32 1442, i32 0, i32 81} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1581 = metadata !{i32 1446, i32 0, metadata !1582, null}
!1582 = metadata !{i32 786443, metadata !103, metadata !1579, i32 1445, i32 0, i32 83} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1583 = metadata !{i32 1447, i32 0, metadata !1584, null}
!1584 = metadata !{i32 786443, metadata !103, metadata !1582, i32 1447, i32 0, i32 84} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1585 = metadata !{i32 1448, i32 0, metadata !1582, null}
!1586 = metadata !{i32 1449, i32 0, metadata !1582, null}
!1587 = metadata !{i32 1460, i32 0, metadata !1580, null}
!1588 = metadata !{i32 1461, i32 0, metadata !1580, null}
!1589 = metadata !{i32 1462, i32 0, metadata !1580, null}
!1590 = metadata !{i32 1463, i32 0, metadata !1580, null}
!1591 = metadata !{i32 1464, i32 0, metadata !1592, null}
!1592 = metadata !{i32 786443, metadata !103, metadata !1593, i32 1464, i32 0, i32 86} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1593 = metadata !{i32 786443, metadata !103, metadata !1580, i32 1464, i32 0, i32 85} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1594 = metadata !{i32 1475, i32 0, metadata !1595, null}
!1595 = metadata !{i32 786443, metadata !103, metadata !1566, i32 1471, i32 0, i32 87} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1596 = metadata !{i32 1476, i32 0, metadata !1595, null}
!1597 = metadata !{i32 1477, i32 0, metadata !1595, null}
!1598 = metadata !{i32 1480, i32 0, metadata !1599, null}
!1599 = metadata !{i32 786443, metadata !103, metadata !1595, i32 1480, i32 0, i32 88} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1600 = metadata !{i32 1488, i32 0, metadata !1601, null}
!1601 = metadata !{i32 786443, metadata !103, metadata !1599, i32 1481, i32 0, i32 89} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1602 = metadata !{i32 1489, i32 12, metadata !1601, null}
!1603 = metadata !{i32 1492, i32 0, metadata !1604, null}
!1604 = metadata !{i32 786443, metadata !103, metadata !1601, i32 1492, i32 0, i32 90} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1605 = metadata !{i32 1494, i32 0, metadata !1606, null}
!1606 = metadata !{i32 786443, metadata !103, metadata !1604, i32 1493, i32 0, i32 91} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1607 = metadata !{i32 1495, i32 0, metadata !1606, null}
!1608 = metadata !{i32 1496, i32 0, metadata !1609, null}
!1609 = metadata !{i32 786443, metadata !103, metadata !1606, i32 1496, i32 0, i32 92} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1610 = metadata !{i32 1497, i32 0, metadata !1609, null}
!1611 = metadata !{i32 1501, i32 0, metadata !1612, null}
!1612 = metadata !{i32 786443, metadata !103, metadata !1601, i32 1501, i32 0, i32 93} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1613 = metadata !{i32 1503, i32 0, metadata !1614, null}
!1614 = metadata !{i32 786443, metadata !103, metadata !1615, i32 1503, i32 0, i32 95} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1615 = metadata !{i32 786443, metadata !103, metadata !1612, i32 1502, i32 0, i32 94} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1616 = metadata !{i32 1505, i32 0, metadata !1614, null}
!1617 = metadata !{i32 1504, i32 0, metadata !1614, null}
!1618 = metadata !{i32 1509, i32 0, metadata !1619, null}
!1619 = metadata !{i32 786443, metadata !103, metadata !1612, i32 1508, i32 0, i32 96} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1620 = metadata !{i32 1514, i32 0, metadata !1619, null}
!1621 = metadata !{i32 1515, i32 0, metadata !1619, null}
!1622 = metadata !{i32 1516, i32 0, metadata !1623, null}
!1623 = metadata !{i32 786443, metadata !103, metadata !1624, i32 1516, i32 0, i32 98} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1624 = metadata !{i32 786443, metadata !103, metadata !1619, i32 1516, i32 0, i32 97} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1625 = metadata !{i32 1520, i32 0, metadata !1595, null}
!1626 = metadata !{i32 1522, i32 0, metadata !1627, null}
!1627 = metadata !{i32 786443, metadata !103, metadata !1595, i32 1522, i32 0, i32 99} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1628 = metadata !{i32 1525, i32 0, metadata !1595, null}
!1629 = metadata !{i32 1526, i32 0, metadata !1630, null}
!1630 = metadata !{i32 786443, metadata !103, metadata !1595, i32 1526, i32 0, i32 100} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1631 = metadata !{i32 1528, i32 0, metadata !1632, null}
!1632 = metadata !{i32 786443, metadata !103, metadata !1630, i32 1527, i32 0, i32 101} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1633 = metadata !{i32 1533, i32 0, metadata !1632, null}
!1634 = metadata !{i32 1534, i32 0, metadata !1632, null}
!1635 = metadata !{i32 1541, i32 0, metadata !258, null}
!1636 = metadata !{i32 1544, i32 0, metadata !1637, null}
!1637 = metadata !{i32 786443, metadata !103, metadata !258, i32 1544, i32 0, i32 102} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1638 = metadata !{i32 1546, i32 0, metadata !1639, null}
!1639 = metadata !{i32 786443, metadata !103, metadata !1637, i32 1545, i32 0, i32 103} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1640 = metadata !{i32 1551, i32 0, metadata !1639, null}
!1641 = metadata !{i32 1552, i32 0, metadata !1639, null}
!1642 = metadata !{i32 1554, i32 0, metadata !258, null}
!1643 = metadata !{i32 1555, i32 0, metadata !258, null}
!1644 = metadata !{i32 600, i32 20, metadata !297, null}
!1645 = metadata !{i32 600, i32 0, metadata !297, null}
!1646 = metadata !{i32 601, i32 0, metadata !297, null}
!1647 = metadata !{i32 586, i32 0, metadata !300, null}
!1648 = metadata !{i32 587, i32 0, metadata !1649, null}
!1649 = metadata !{i32 786443, metadata !103, metadata !300, i32 587, i32 0, i32 104} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1650 = metadata !{i32 588, i32 0, metadata !1649, null}
!1651 = metadata !{i32 591, i32 0, metadata !1652, null}
!1652 = metadata !{i32 786443, metadata !103, metadata !1653, i32 591, i32 0, i32 106} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1653 = metadata !{i32 786443, metadata !103, metadata !1649, i32 590, i32 0, i32 105} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1654 = metadata !{i32 592, i32 0, metadata !1652, null}
!1655 = metadata !{i32 594, i32 0, metadata !300, null}
!1656 = metadata !{i32 570, i32 0, metadata !1657, null}
!1657 = metadata !{i32 786443, metadata !103, metadata !308, i32 570, i32 0, i32 107} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1658 = metadata !{i32 572, i32 0, metadata !1659, null}
!1659 = metadata !{i32 786443, metadata !103, metadata !1657, i32 571, i32 0, i32 108} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1660 = metadata !{i32 574, i32 0, metadata !1661, null}
!1661 = metadata !{i32 786443, metadata !103, metadata !1659, i32 574, i32 0, i32 109} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1662 = metadata !{i32 575, i32 0, metadata !1661, null}
!1663 = metadata !{i32 578, i32 0, metadata !308, null}
!1664 = metadata !{i32 208, i32 0, metadata !311, null}
!1665 = metadata !{i32 209, i32 0, metadata !311, null}
!1666 = metadata !{i32 214, i32 0, metadata !314, null}
!1667 = metadata !{i32 842, i32 0, metadata !319, null}
!1668 = metadata !{i32 844, i32 0, metadata !319, null}
!1669 = metadata !{i32 846, i32 0, metadata !1670, null}
!1670 = metadata !{i32 786443, metadata !103, metadata !319, i32 846, i32 0, i32 110} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1671 = metadata !{i32 847, i32 0, metadata !1670, null}
!1672 = metadata !{i32 849, i32 0, metadata !1673, null}
!1673 = metadata !{i32 786443, metadata !103, metadata !319, i32 849, i32 0, i32 111} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1674 = metadata !{i32 851, i32 0, metadata !1673, null}
!1675 = metadata !{i32 853, i32 0, metadata !1673, null}
!1676 = metadata !{i32 855, i32 0, metadata !1677, null}
!1677 = metadata !{i32 786443, metadata !103, metadata !1678, i32 855, i32 0, i32 113} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1678 = metadata !{i32 786443, metadata !103, metadata !1673, i32 854, i32 0, i32 112} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1679 = metadata !{i32 858, i32 0, metadata !1680, null}
!1680 = metadata !{i32 786443, metadata !103, metadata !1677, i32 856, i32 0, i32 114} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1681 = metadata !{i32 863, i32 0, metadata !1680, null}
!1682 = metadata !{i32 866, i32 0, metadata !1683, null}
!1683 = metadata !{i32 786443, metadata !103, metadata !1678, i32 866, i32 0, i32 115} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1684 = metadata !{i32 868, i32 0, metadata !1685, null}
!1685 = metadata !{i32 786443, metadata !103, metadata !1683, i32 867, i32 0, i32 116} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1686 = metadata !{i32 873, i32 0, metadata !1685, null}
!1687 = metadata !{i32 877, i32 0, metadata !1688, null}
!1688 = metadata !{i32 786443, metadata !103, metadata !1678, i32 877, i32 0, i32 117} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1689 = metadata !{i32 880, i32 0, metadata !1690, null}
!1690 = metadata !{i32 786443, metadata !103, metadata !1691, i32 880, i32 0, i32 119} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1691 = metadata !{i32 786443, metadata !103, metadata !1688, i32 878, i32 0, i32 118} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1692 = metadata !{i32 881, i32 0, metadata !1690, null}
!1693 = metadata !{i32 882, i32 0, metadata !1691, null}
!1694 = metadata !{i32 883, i32 0, metadata !1691, null}
!1695 = metadata !{i32 887, i32 0, metadata !1696, null}
!1696 = metadata !{i32 786443, metadata !103, metadata !1678, i32 886, i32 0, i32 120} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1697 = metadata !{i32 892, i32 0, metadata !1698, null}
!1698 = metadata !{i32 786443, metadata !103, metadata !1696, i32 892, i32 0, i32 121} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1699 = metadata !{i32 895, i32 0, metadata !1698, null}
!1700 = metadata !{i32 897, i32 0, metadata !1698, null}
!1701 = metadata !{i32 908, i32 0, metadata !1702, null}
!1702 = metadata !{i32 786443, metadata !103, metadata !1698, i32 903, i32 0, i32 122} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1703 = metadata !{i32 912, i32 0, metadata !1702, null}
!1704 = metadata !{i32 915, i32 0, metadata !1705, null}
!1705 = metadata !{i32 786443, metadata !103, metadata !1696, i32 915, i32 0, i32 123} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1706 = metadata !{i32 916, i32 0, metadata !1705, null}
!1707 = metadata !{i32 919, i32 0, metadata !319, null}
!1708 = metadata !{i32 920, i32 0, metadata !319, null}
!1709 = metadata !{i32 729, i32 0, metadata !324, null}
!1710 = metadata !{i32 733, i32 0, metadata !1711, null}
!1711 = metadata !{i32 786443, metadata !103, metadata !324, i32 733, i32 0, i32 124} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1712 = metadata !{i32 734, i32 0, metadata !1711, null}
!1713 = metadata !{i32 736, i32 0, metadata !324, null}
!1714 = metadata !{i32 737, i32 0, metadata !1715, null}
!1715 = metadata !{i32 786443, metadata !103, metadata !324, i32 737, i32 0, i32 125} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1716 = metadata !{i32 739, i32 0, metadata !1717, null}
!1717 = metadata !{i32 786443, metadata !103, metadata !1715, i32 738, i32 0, i32 126} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1718 = metadata !{i32 740, i32 0, metadata !1717, null}
!1719 = metadata !{i32 743, i32 0, metadata !324, null}
!1720 = metadata !{i32 744, i32 8, metadata !324, null}
!1721 = metadata !{i32 745, i32 0, metadata !324, null}
!1722 = metadata !{i32 746, i32 0, metadata !324, null}
!1723 = metadata !{i32 747, i32 0, metadata !1724, null}
!1724 = metadata !{i32 786443, metadata !103, metadata !324, i32 747, i32 0, i32 127} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1725 = metadata !{i32 748, i32 0, metadata !1724, null}
!1726 = metadata !{i32 749, i32 0, metadata !324, null}
!1727 = metadata !{i32 750, i32 0, metadata !324, null}
!1728 = metadata !{i32 384, i32 0, metadata !1729, null}
!1729 = metadata !{i32 786443, metadata !328, metadata !327} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!1730 = metadata !{i32 386, i32 0, metadata !1731, null}
!1731 = metadata !{i32 786443, metadata !328, metadata !1729, i32 385, i32 0, i32 128} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!1732 = metadata !{i32 387, i32 0, metadata !1733, null}
!1733 = metadata !{i32 786443, metadata !328, metadata !1731, i32 387, i32 0, i32 129} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!1734 = metadata !{i32 387, i32 27, metadata !1733, null}
!1735 = metadata !{i32 388, i32 0, metadata !1733, null}
!1736 = metadata !{i32 762, i32 0, metadata !1737, null}
!1737 = metadata !{i32 786443, metadata !103, metadata !1738, i32 762, i32 0, i32 130} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1738 = metadata !{i32 786443, metadata !103, metadata !350} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1739 = metadata !{i32 763, i32 0, metadata !1737, null}
!1740 = metadata !{i32 764, i32 0, metadata !1741, null}
!1741 = metadata !{i32 786443, metadata !103, metadata !1738, i32 764, i32 0, i32 131} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1742 = metadata !{i32 765, i32 0, metadata !1741, null}
!1743 = metadata !{i32 817, i32 0, metadata !1744, null}
!1744 = metadata !{i32 786443, metadata !103, metadata !1745, i32 817, i32 0, i32 133} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1745 = metadata !{i32 786443, metadata !103, metadata !1738, i32 814, i32 0, i32 132} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1746 = metadata !{i32 817, i32 0, metadata !1745, null}
!1747 = metadata !{i32 819, i32 0, metadata !1745, null}
!1748 = metadata !{i32 820, i32 0, metadata !1745, null}
!1749 = metadata !{i32 821, i32 0, metadata !1745, null}
!1750 = metadata !{i32 823, i32 0, metadata !1738, null}
!1751 = metadata !{i32 463, i32 33, metadata !353, null}
!1752 = metadata !{i32 464, i32 0, metadata !353, null}
!1753 = metadata !{i32 465, i32 0, metadata !353, null}
!1754 = metadata !{i32 470, i32 20, metadata !353, null}
!1755 = metadata !{i32 472, i32 0, metadata !353, null}
!1756 = metadata !{i32 473, i32 0, metadata !353, null}
!1757 = metadata !{i32 474, i32 9, metadata !353, null}
!1758 = metadata !{i32 483, i32 0, metadata !1759, null}
!1759 = metadata !{i32 786443, metadata !103, metadata !1760, i32 483, i32 0, i32 135} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1760 = metadata !{i32 786443, metadata !103, metadata !353, i32 483, i32 0, i32 134} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1761 = metadata !{i32 483, i32 0, metadata !1762, null}
!1762 = metadata !{i32 786443, metadata !103, metadata !1760, i32 483, i32 0, i32 136} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1763 = metadata !{i32 483, i32 0, metadata !1764, null}
!1764 = metadata !{i32 786443, metadata !103, metadata !1762, i32 483, i32 0, i32 137} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1765 = metadata !{i32 487, i32 0, metadata !1766, null}
!1766 = metadata !{i32 786443, metadata !103, metadata !1767, i32 487, i32 0, i32 139} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1767 = metadata !{i32 786443, metadata !103, metadata !353, i32 487, i32 0, i32 138} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1768 = metadata !{i32 489, i32 0, metadata !353, null}
!1769 = metadata !{i32 491, i32 11, metadata !1770, null}
!1770 = metadata !{i32 786443, metadata !103, metadata !353, i32 491, i32 0, i32 140} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1771 = metadata !{i32 494, i32 0, metadata !1772, null}
!1772 = metadata !{i32 786443, metadata !103, metadata !1770, i32 492, i32 0, i32 141} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1773 = metadata !{i32 495, i32 0, metadata !1774, null}
!1774 = metadata !{i32 786443, metadata !103, metadata !1772, i32 495, i32 0, i32 142} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1775 = metadata !{i32 501, i32 0, metadata !1776, null}
!1776 = metadata !{i32 786443, metadata !103, metadata !1774, i32 496, i32 0, i32 143} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1777 = metadata !{i32 502, i32 0, metadata !1776, null}
!1778 = metadata !{i32 508, i32 0, metadata !1779, null}
!1779 = metadata !{i32 786443, metadata !103, metadata !1772, i32 508, i32 0, i32 144} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1780 = metadata !{i32 509, i32 0, metadata !1779, null}
!1781 = metadata !{i32 511, i32 0, metadata !1782, null}
!1782 = metadata !{i32 786443, metadata !103, metadata !1772, i32 511, i32 0, i32 145} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1783 = metadata !{i32 513, i32 0, metadata !1784, null}
!1784 = metadata !{i32 786443, metadata !103, metadata !1782, i32 512, i32 0, i32 146} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1785 = metadata !{i32 518, i32 0, metadata !1784, null}
!1786 = metadata !{i32 521, i32 0, metadata !1787, null}
!1787 = metadata !{i32 786443, metadata !103, metadata !1772, i32 521, i32 0, i32 147} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1788 = metadata !{i32 523, i32 0, metadata !1789, null}
!1789 = metadata !{i32 786443, metadata !103, metadata !1787, i32 522, i32 0, i32 148} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1790 = metadata !{i32 529, i32 0, metadata !1789, null}
!1791 = metadata !{i32 533, i32 0, metadata !1792, null}
!1792 = metadata !{i32 786443, metadata !103, metadata !1772, i32 533, i32 0, i32 149} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1793 = metadata !{i32 535, i32 0, metadata !1794, null}
!1794 = metadata !{i32 786443, metadata !103, metadata !1792, i32 534, i32 0, i32 150} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1795 = metadata !{i32 541, i32 0, metadata !1794, null}
!1796 = metadata !{i32 544, i32 0, metadata !1794, null}
!1797 = metadata !{i32 545, i32 0, metadata !1794, null}
!1798 = metadata !{i32 547, i32 0, metadata !1772, null}
!1799 = metadata !{i32 548, i32 0, metadata !1772, null}
!1800 = metadata !{i32 551, i32 0, metadata !1801, null}
!1801 = metadata !{i32 786443, metadata !103, metadata !1802, i32 551, i32 0, i32 152} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1802 = metadata !{i32 786443, metadata !103, metadata !1770, i32 550, i32 0, i32 151} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1803 = metadata !{i32 557, i32 0, metadata !1804, null}
!1804 = metadata !{i32 786443, metadata !103, metadata !1801, i32 552, i32 0, i32 153} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1805 = metadata !{i32 558, i32 0, metadata !1804, null}
!1806 = metadata !{i32 560, i32 0, metadata !1802, null}
!1807 = metadata !{i32 563, i32 0, metadata !353, null}
!1808 = metadata !{i32 253, i32 0, metadata !1809, null}
!1809 = metadata !{i32 786443, metadata !103, metadata !356, i32 253, i32 0, i32 154} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1810 = metadata !{i32 254, i32 0, metadata !356, null}
!1811 = metadata !{i32 256, i32 0, metadata !356, null}
!1812 = metadata !{i32 257, i32 0, metadata !356, null}
!1813 = metadata !{i32 258, i32 0, metadata !356, null}
!1814 = metadata !{i32 261, i32 0, metadata !1815, null}
!1815 = metadata !{i32 786443, metadata !103, metadata !356, i32 261, i32 0, i32 155} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1816 = metadata !{i32 261, i32 0, metadata !356, null}
!1817 = metadata !{i32 262, i32 0, metadata !1818, null}
!1818 = metadata !{i32 786443, metadata !103, metadata !356, i32 262, i32 0, i32 156} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1819 = metadata !{i32 262, i32 0, metadata !1820, null}
!1820 = metadata !{i32 786443, metadata !103, metadata !1818, i32 262, i32 0, i32 157} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1821 = metadata !{i32 265, i32 0, metadata !1822, null}
!1822 = metadata !{i32 786443, metadata !103, metadata !356, i32 265, i32 0, i32 158} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1823 = metadata !{i32 265, i32 0, metadata !356, null}
!1824 = metadata !{i32 266, i32 0, metadata !1825, null}
!1825 = metadata !{i32 786443, metadata !103, metadata !356, i32 266, i32 0, i32 159} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1826 = metadata !{i32 266, i32 0, metadata !1827, null}
!1827 = metadata !{i32 786443, metadata !103, metadata !1825, i32 266, i32 0, i32 160} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1828 = metadata !{i32 267, i32 0, metadata !356, null}
!1829 = metadata !{i32 240, i32 0, metadata !1830, null}
!1830 = metadata !{i32 786443, metadata !103, metadata !357, i32 240, i32 0, i32 161} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1831 = metadata !{i32 241, i32 0, metadata !357, null}
!1832 = metadata !{i32 242, i32 0, metadata !357, null}
!1833 = metadata !{i32 243, i32 0, metadata !357, null}
!1834 = metadata !{i32 244, i32 0, metadata !357, null}
!1835 = metadata !{i32 245, i32 0, metadata !357, null}
!1836 = metadata !{i32 246, i32 0, metadata !357, null}
!1837 = metadata !{i32 247, i32 0, metadata !357, null}
!1838 = metadata !{i32 610, i32 24, metadata !360, null}
!1839 = metadata !{i32 611, i32 16, metadata !360, null}
!1840 = metadata !{i32 613, i32 0, metadata !360, null}
!1841 = metadata !{i32 615, i32 0, metadata !360, null}
!1842 = metadata !{i32 616, i32 0, metadata !360, null}
!1843 = metadata !{i32 617, i32 0, metadata !360, null}
!1844 = metadata !{i32 1227, i32 24, metadata !361, null}
!1845 = metadata !{i32 1228, i32 0, metadata !361, null}
!1846 = metadata !{i32 1229, i32 0, metadata !361, null}
!1847 = metadata !{i32 1231, i32 0, metadata !361, null}
!1848 = metadata !{i32 1232, i32 0, metadata !361, null}
!1849 = metadata !{i32 1234, i32 0, metadata !361, null}
!1850 = metadata !{i32 1242, i32 0, metadata !1851, null}
!1851 = metadata !{i32 786443, metadata !103, metadata !361, i32 1235, i32 0, i32 162} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1852 = metadata !{i32 1243, i32 12, metadata !1851, null}
!1853 = metadata !{i32 1244, i32 0, metadata !1854, null}
!1854 = metadata !{i32 786443, metadata !103, metadata !1851, i32 1244, i32 0, i32 163} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1855 = metadata !{i32 1246, i32 0, metadata !1856, null}
!1856 = metadata !{i32 786443, metadata !103, metadata !1857, i32 1246, i32 0, i32 165} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1857 = metadata !{i32 786443, metadata !103, metadata !1854, i32 1245, i32 0, i32 164} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1858 = metadata !{i32 1250, i32 0, metadata !1859, null}
!1859 = metadata !{i32 786443, metadata !103, metadata !1856, i32 1250, i32 0, i32 167} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1860 = metadata !{i32 1255, i32 0, metadata !1861, null}
!1861 = metadata !{i32 786443, metadata !103, metadata !1859, i32 1251, i32 0, i32 168} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1862 = metadata !{i32 1256, i32 0, metadata !1861, null}
!1863 = metadata !{i32 1257, i32 0, metadata !1861, null}
!1864 = metadata !{i32 1262, i32 0, metadata !1851, null}
!1865 = metadata !{i32 1265, i32 14, metadata !1866, null}
!1866 = metadata !{i32 786443, metadata !103, metadata !1851, i32 1265, i32 0, i32 169} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1867 = metadata !{i32 1272, i32 0, metadata !1851, null}
!1868 = metadata !{i32 1273, i32 0, metadata !1851, null}
!1869 = metadata !{i32 1274, i32 0, metadata !1851, null}
!1870 = metadata !{i32 1281, i32 0, metadata !1871, null}
!1871 = metadata !{i32 786443, metadata !103, metadata !1851, i32 1275, i32 0, i32 170} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1872 = metadata !{i32 1282, i32 0, metadata !1871, null}
!1873 = metadata !{i32 1286, i32 0, metadata !1871, null}
!1874 = metadata !{i32 1287, i32 0, metadata !1875, null}
!1875 = metadata !{i32 786443, metadata !103, metadata !1876, i32 1287, i32 0, i32 172} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1876 = metadata !{i32 786443, metadata !103, metadata !1871, i32 1287, i32 0, i32 171} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1877 = metadata !{i32 1292, i32 0, metadata !1878, null}
!1878 = metadata !{i32 786443, metadata !103, metadata !1871, i32 1291, i32 0, i32 173} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1879 = metadata !{i32 1293, i32 0, metadata !1878, null}
!1880 = metadata !{i32 1294, i32 0, metadata !1881, null}
!1881 = metadata !{i32 786443, metadata !103, metadata !1878, i32 1294, i32 0, i32 174} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1882 = metadata !{i32 1296, i32 0, metadata !1883, null}
!1883 = metadata !{i32 786443, metadata !103, metadata !1881, i32 1295, i32 0, i32 175} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1884 = metadata !{i32 1300, i32 7, metadata !1885, null}
!1885 = metadata !{i32 786443, metadata !103, metadata !1883, i32 1300, i32 0, i32 176} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1886 = metadata !{i32 1300, i32 0, metadata !1885, null}
!1887 = metadata !{i32 1308, i32 0, metadata !1888, null}
!1888 = metadata !{i32 786443, metadata !103, metadata !1885, i32 1305, i32 0, i32 178} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1889 = metadata !{i32 1309, i32 0, metadata !1890, null}
!1890 = metadata !{i32 786443, metadata !103, metadata !1888, i32 1309, i32 0, i32 179} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1891 = metadata !{i32 1310, i32 0, metadata !1890, null}
!1892 = metadata !{i32 1312, i32 0, metadata !1893, null}
!1893 = metadata !{i32 786443, metadata !103, metadata !1890, i32 1311, i32 0, i32 180} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1894 = metadata !{i32 1320, i32 0, metadata !1895, null}
!1895 = metadata !{i32 786443, metadata !103, metadata !1883, i32 1320, i32 0, i32 181} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1896 = metadata !{i32 1321, i32 0, metadata !1895, null}
!1897 = metadata !{i32 1325, i32 0, metadata !1878, null}
!1898 = metadata !{i32 1326, i32 0, metadata !1899, null}
!1899 = metadata !{i32 786443, metadata !103, metadata !1878, i32 1326, i32 0, i32 182} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1900 = metadata !{i32 1328, i32 0, metadata !1901, null}
!1901 = metadata !{i32 786443, metadata !103, metadata !1899, i32 1327, i32 0, i32 183} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1902 = metadata !{i32 1333, i32 0, metadata !1901, null}
!1903 = metadata !{i32 1334, i32 0, metadata !1901, null}
!1904 = metadata !{i32 1335, i32 0, metadata !1878, null}
!1905 = metadata !{i32 1337, i32 0, metadata !1878, null}
!1906 = metadata !{i32 1342, i32 0, metadata !1907, null}
!1907 = metadata !{i32 786443, metadata !103, metadata !1908, i32 1342, i32 0, i32 185} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1908 = metadata !{i32 786443, metadata !103, metadata !1851, i32 1342, i32 0, i32 184} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1909 = metadata !{i32 1344, i32 0, metadata !1910, null}
!1910 = metadata !{i32 786443, metadata !103, metadata !1851, i32 1344, i32 0, i32 186} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1911 = metadata !{i32 1349, i32 0, metadata !361, null}
!1912 = metadata !{i32 1350, i32 0, metadata !361, null}
!1913 = metadata !{i32 1352, i32 0, metadata !361, null}
!1914 = metadata !{i32 718, i32 24, metadata !365, null}
!1915 = metadata !{i32 719, i32 0, metadata !365, null}
!1916 = metadata !{i32 720, i32 0, metadata !365, null}
!1917 = metadata !{i32 653, i32 0, metadata !368, null}
!1918 = metadata !{i32 682, i32 0, metadata !1919, null}
!1919 = metadata !{i32 786443, metadata !103, metadata !368, i32 682, i32 0, i32 188} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1920 = metadata !{i32 688, i32 0, metadata !1921, null}
!1921 = metadata !{i32 786443, metadata !103, metadata !1919, i32 683, i32 0, i32 189} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1922 = metadata !{i32 684, i32 0, metadata !1921, null}
!1923 = metadata !{i32 698, i32 0, metadata !1921, null}
!1924 = metadata !{i32 702, i32 0, metadata !1925, null}
!1925 = metadata !{i32 786443, metadata !103, metadata !368, i32 702, i32 0, i32 190} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1926 = metadata !{i32 702, i32 0, metadata !1927, null}
!1927 = metadata !{i32 786443, metadata !103, metadata !1925, i32 702, i32 0, i32 191} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1928 = metadata !{i32 705, i32 0, metadata !368, null}
!1929 = metadata !{i32 705, i32 0, metadata !1930, null}
!1930 = metadata !{i32 786443, metadata !103, metadata !368, i32 705, i32 0, i32 192} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1931 = metadata !{i32 709, i32 9, metadata !368, null}
!1932 = metadata !{i32 710, i32 0, metadata !368, null}
!1933 = metadata !{i32 711, i32 0, metadata !368, null}
!1934 = metadata !{i32 712, i32 0, metadata !368, null}
!1935 = metadata !{i32 713, i32 0, metadata !368, null}
!1936 = metadata !{i32 220, i32 0, metadata !373, null}
!1937 = metadata !{i32 223, i32 0, metadata !1938, null}
!1938 = metadata !{i32 786443, metadata !103, metadata !373, i32 223, i32 0, i32 193} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1939 = metadata !{i32 223, i32 0, metadata !1940, null}
!1940 = metadata !{i32 786443, metadata !103, metadata !1938, i32 223, i32 0, i32 194} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1941 = metadata !{i32 226, i32 0, metadata !1942, null}
!1942 = metadata !{i32 786443, metadata !103, metadata !373, i32 226, i32 0, i32 195} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1943 = metadata !{i32 226, i32 0, metadata !1944, null}
!1944 = metadata !{i32 786443, metadata !103, metadata !1942, i32 226, i32 0, i32 196} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1945 = metadata !{i32 229, i32 0, metadata !373, null}
!1946 = metadata !{i32 232, i32 0, metadata !1947, null}
!1947 = metadata !{i32 786443, metadata !103, metadata !373, i32 232, i32 0, i32 197} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1948 = metadata !{i32 232, i32 0, metadata !1949, null}
!1949 = metadata !{i32 786443, metadata !103, metadata !1947, i32 232, i32 0, i32 198} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1950 = metadata !{i32 233, i32 0, metadata !373, null}
!1951 = metadata !{i32 312, i32 0, metadata !1952, null}
!1952 = metadata !{i32 786443, metadata !103, metadata !374, i32 312, i32 0, i32 199} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1953 = metadata !{i32 313, i32 0, metadata !374, null}
!1954 = metadata !{i32 317, i32 0, metadata !374, null}
!1955 = metadata !{i32 318, i32 0, metadata !374, null}
!1956 = metadata !{i32 320, i32 0, metadata !1957, null}
!1957 = metadata !{i32 786443, metadata !103, metadata !374, i32 320, i32 0, i32 200} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1958 = metadata !{i32 327, i32 0, metadata !1959, null}
!1959 = metadata !{i32 786443, metadata !103, metadata !1957, i32 321, i32 0, i32 201} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1960 = metadata !{i32 328, i32 0, metadata !1959, null}
!1961 = metadata !{i32 330, i32 0, metadata !1962, null}
!1962 = metadata !{i32 786443, metadata !103, metadata !1959, i32 330, i32 0, i32 202} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1963 = metadata !{i32 339, i32 0, metadata !1964, null}
!1964 = metadata !{i32 786443, metadata !103, metadata !1962, i32 331, i32 0, i32 203} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1965 = metadata !{i32 340, i32 0, metadata !1964, null}
!1966 = metadata !{i32 342, i32 0, metadata !1964, null}
!1967 = metadata !{i32 343, i32 0, metadata !1968, null}
!1968 = metadata !{i32 786443, metadata !103, metadata !1964, i32 343, i32 0, i32 204} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1969 = metadata !{i32 347, i32 0, metadata !1970, null}
!1970 = metadata !{i32 786443, metadata !103, metadata !1968, i32 344, i32 0, i32 205} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1971 = metadata !{i32 348, i32 0, metadata !1964, null}
!1972 = metadata !{i32 351, i32 0, metadata !1959, null}
!1973 = metadata !{i32 352, i32 0, metadata !1959, null}
!1974 = metadata !{i32 354, i32 0, metadata !1975, null}
!1975 = metadata !{i32 786443, metadata !103, metadata !374, i32 354, i32 0, i32 206} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1976 = metadata !{i32 359, i32 0, metadata !1977, null}
!1977 = metadata !{i32 786443, metadata !103, metadata !1975, i32 355, i32 0, i32 207} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1978 = metadata !{i32 360, i32 0, metadata !1977, null}
!1979 = metadata !{i32 361, i32 0, metadata !1977, null}
!1980 = metadata !{i32 366, i32 0, metadata !1981, null}
!1981 = metadata !{i32 786443, metadata !103, metadata !1975, i32 363, i32 0, i32 208} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1982 = metadata !{i32 367, i32 0, metadata !1981, null}
!1983 = metadata !{i32 370, i32 0, metadata !374, null}
!1984 = metadata !{i32 371, i32 0, metadata !374, null}
!1985 = metadata !{i32 282, i32 0, metadata !1986, null}
!1986 = metadata !{i32 786443, metadata !103, metadata !377, i32 282, i32 0, i32 209} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1987 = metadata !{i32 284, i32 0, metadata !1988, null}
!1988 = metadata !{i32 786443, metadata !103, metadata !1986, i32 283, i32 0, i32 210} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1989 = metadata !{i32 285, i32 0, metadata !1988, null}
!1990 = metadata !{i32 286, i32 0, metadata !1988, null}
!1991 = metadata !{i32 287, i32 0, metadata !1988, null}
!1992 = metadata !{i32 290, i32 0, metadata !1993, null}
!1993 = metadata !{i32 786443, metadata !103, metadata !1986, i32 289, i32 0, i32 211} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!1994 = metadata !{i32 291, i32 0, metadata !1993, null}
!1995 = metadata !{i32 292, i32 0, metadata !1993, null}
!1996 = metadata !{i32 293, i32 0, metadata !1993, null}
!1997 = metadata !{i32 296, i32 0, metadata !377, null}
!1998 = metadata !{i32 297, i32 0, metadata !377, null}
!1999 = metadata !{i32 1186, i32 0, metadata !381, null}
!2000 = metadata !{i32 1187, i32 0, metadata !381, null}
!2001 = metadata !{i32 1193, i32 0, metadata !2002, null}
!2002 = metadata !{i32 786443, metadata !103, metadata !381, i32 1193, i32 0, i32 212} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2003 = metadata !{i32 1194, i32 0, metadata !2002, null}
!2004 = metadata !{i32 1195, i32 0, metadata !2005, null}
!2005 = metadata !{i32 786443, metadata !103, metadata !2002, i32 1195, i32 0, i32 213} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2006 = metadata !{i32 1196, i32 0, metadata !2005, null}
!2007 = metadata !{i32 1197, i32 0, metadata !2008, null}
!2008 = metadata !{i32 786443, metadata !103, metadata !2005, i32 1197, i32 0, i32 214} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2009 = metadata !{i32 1199, i32 0, metadata !2010, null}
!2010 = metadata !{i32 786443, metadata !103, metadata !2008, i32 1198, i32 0, i32 215} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2011 = metadata !{i32 1200, i32 0, metadata !2012, null}
!2012 = metadata !{i32 786443, metadata !103, metadata !2010, i32 1200, i32 0, i32 216} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2013 = metadata !{i32 1201, i32 0, metadata !2012, null}
!2014 = metadata !{i32 1202, i32 0, metadata !2010, null}
!2015 = metadata !{i32 1203, i32 0, metadata !2010, null}
!2016 = metadata !{i32 1205, i32 0, metadata !2008, null}
!2017 = metadata !{i32 1207, i32 0, metadata !381, null}
!2018 = metadata !{i32 1208, i32 0, metadata !381, null}
!2019 = metadata !{i32 1209, i32 0, metadata !381, null}
!2020 = metadata !{i32 1210, i32 0, metadata !381, null}
!2021 = metadata !{i32 1023, i32 0, metadata !384, null}
!2022 = metadata !{i32 1025, i32 27, metadata !384, null}
!2023 = metadata !{i32 1027, i32 0, metadata !2024, null}
!2024 = metadata !{i32 786443, metadata !103, metadata !384, i32 1027, i32 0, i32 217} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2025 = metadata !{i32 1028, i32 0, metadata !2024, null}
!2026 = metadata !{i32 1046, i32 0, metadata !2027, null}
!2027 = metadata !{i32 786443, metadata !103, metadata !2028, i32 1046, i32 0, i32 220} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2028 = metadata !{i32 786443, metadata !103, metadata !2029, i32 1045, i32 0, i32 219} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2029 = metadata !{i32 786443, metadata !103, metadata !384, i32 1044, i32 0, i32 218} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2030 = metadata !{i32 1048, i32 0, metadata !2031, null}
!2031 = metadata !{i32 786443, metadata !103, metadata !2027, i32 1047, i32 0, i32 221} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2032 = metadata !{i32 1053, i32 0, metadata !2031, null}
!2033 = metadata !{i32 1060, i32 0, metadata !2034, null}
!2034 = metadata !{i32 786443, metadata !103, metadata !2028, i32 1060, i32 0, i32 222} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2035 = metadata !{i32 1061, i32 0, metadata !2036, null}
!2036 = metadata !{i32 786443, metadata !103, metadata !2037, i32 1061, i32 0, i32 224} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2037 = metadata !{i32 786443, metadata !103, metadata !2034, i32 1061, i32 0, i32 223} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2038 = metadata !{i32 1061, i32 0, metadata !2039, null}
!2039 = metadata !{i32 786443, metadata !103, metadata !2040, i32 1061, i32 0, i32 226} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2040 = metadata !{i32 786443, metadata !103, metadata !2036, i32 1061, i32 0, i32 225} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2041 = metadata !{i32 1061, i32 0, metadata !2040, null}
!2042 = metadata !{i32 1061, i32 0, metadata !2043, null}
!2043 = metadata !{i32 786443, metadata !103, metadata !2037, i32 1061, i32 0, i32 227} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2044 = metadata !{i32 1061, i32 0, metadata !2045, null}
!2045 = metadata !{i32 786443, metadata !103, metadata !2037, i32 1061, i32 0, i32 228} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2046 = metadata !{i32 1068, i32 0, metadata !2047, null}
!2047 = metadata !{i32 786443, metadata !103, metadata !2028, i32 1068, i32 0, i32 229} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2048 = metadata !{i32 1069, i32 0, metadata !2047, null}
!2049 = metadata !{i32 1071, i32 0, metadata !2050, null}
!2050 = metadata !{i32 786443, metadata !103, metadata !2051, i32 1071, i32 0, i32 231} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2051 = metadata !{i32 786443, metadata !103, metadata !2028, i32 1071, i32 0, i32 230} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2052 = metadata !{i32 1071, i32 0, metadata !2053, null}
!2053 = metadata !{i32 786443, metadata !103, metadata !2054, i32 1071, i32 0, i32 233} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2054 = metadata !{i32 786443, metadata !103, metadata !2050, i32 1071, i32 0, i32 232} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2055 = metadata !{i32 1071, i32 0, metadata !2054, null}
!2056 = metadata !{i32 1071, i32 0, metadata !2057, null}
!2057 = metadata !{i32 786443, metadata !103, metadata !2051, i32 1071, i32 0, i32 234} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2058 = metadata !{i32 1076, i32 0, metadata !2059, null}
!2059 = metadata !{i32 786443, metadata !103, metadata !2028, i32 1076, i32 0, i32 235} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2060 = metadata !{i32 1076, i32 47, metadata !2059, null}
!2061 = metadata !{i32 1077, i32 0, metadata !2059, null}
!2062 = metadata !{i32 1079, i32 0, metadata !2063, null}
!2063 = metadata !{i32 786443, metadata !103, metadata !2028, i32 1079, i32 0, i32 236} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2064 = metadata !{i32 1080, i32 8, metadata !2063, null}
!2065 = metadata !{i32 1082, i32 8, metadata !2066, null}
!2066 = metadata !{i32 786443, metadata !103, metadata !2067, i32 1082, i32 0, i32 238} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2067 = metadata !{i32 786443, metadata !103, metadata !2063, i32 1081, i32 0, i32 237} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2068 = metadata !{i32 1082, i32 0, metadata !2066, null}
!2069 = metadata !{i32 1083, i32 0, metadata !2066, null}
!2070 = metadata !{i32 1087, i32 0, metadata !2067, null}
!2071 = metadata !{i32 1092, i32 0, metadata !2067, null}
!2072 = metadata !{i32 1094, i32 0, metadata !2028, null}
!2073 = metadata !{i32 1162, i32 0, metadata !384, null}
!2074 = metadata !{i32 1163, i32 0, metadata !384, null}
!2075 = metadata !{i32 929, i32 0, metadata !387, null}
!2076 = metadata !{i32 931, i32 0, metadata !387, null}
!2077 = metadata !{i32 933, i32 0, metadata !387, null}
!2078 = metadata !{i32 934, i32 0, metadata !387, null}
!2079 = metadata !{i32 201, i32 0, metadata !390, null}
!2080 = metadata !{i32 382, i32 0, metadata !393, null}
!2081 = metadata !{i32 627, i32 0, metadata !2082, null}
!2082 = metadata !{i32 786443, metadata !103, metadata !402, i32 627, i32 0, i32 239} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2083 = metadata !{i32 627, i32 0, metadata !2084, null}
!2084 = metadata !{i32 786443, metadata !103, metadata !2082, i32 627, i32 0, i32 240} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2085 = metadata !{i32 630, i32 9, metadata !402, null}
!2086 = metadata !{i32 631, i32 0, metadata !402, null}
!2087 = metadata !{i32 636, i32 0, metadata !402, null}
!2088 = metadata !{i32 637, i32 0, metadata !402, null}
!2089 = metadata !{i32 638, i32 0, metadata !402, null}
!2090 = metadata !{i32 1010, i32 0, metadata !403, null}
!2091 = metadata !{i32 1010, i32 37, metadata !403, null}
!2092 = metadata !{i32 1011, i32 0, metadata !403, null}
!2093 = metadata !{i32 996, i32 0, metadata !406, null}
!2094 = metadata !{i32 1000, i32 0, metadata !2095, null}
!2095 = metadata !{i32 786443, metadata !103, metadata !406, i32 997, i32 0, i32 241} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2096 = metadata !{i32 1002, i32 0, metadata !2095, null}
!2097 = metadata !{i32 1004, i32 0, metadata !406, null}
!2098 = metadata !{i32 174, i32 0, metadata !2099, null}
!2099 = metadata !{i32 786443, metadata !103, metadata !409, i32 174, i32 0, i32 242} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2100 = metadata !{i32 175, i32 0, metadata !2099, null}
!2101 = metadata !{i32 176, i32 0, metadata !2102, null}
!2102 = metadata !{i32 786443, metadata !103, metadata !409, i32 176, i32 0, i32 243} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/remove.c]
!2103 = metadata !{i32 177, i32 0, metadata !2102, null}
!2104 = metadata !{i32 178, i32 0, metadata !409, null}
!2105 = metadata !{i32 179, i32 0, metadata !409, null}
!2106 = metadata !{i32 180, i32 0, metadata !409, null}
!2107 = metadata !{i32 186, i32 0, metadata !412, null}
!2108 = metadata !{i32 187, i32 0, metadata !412, null}
!2109 = metadata !{i32 371, i32 0, metadata !2110, null}
!2110 = metadata !{i32 786443, metadata !328, metadata !2111, i32 371, i32 0, i32 244} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!2111 = metadata !{i32 786443, metadata !328, metadata !415} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!2112 = metadata !{i32 373, i32 0, metadata !2113, null}
!2113 = metadata !{i32 786443, metadata !328, metadata !2110, i32 372, i32 0, i32 245} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/src/./system.h]
!2114 = metadata !{i32 374, i32 0, metadata !2113, null}
!2115 = metadata !{i32 377, i32 0, metadata !2110, null}
!2116 = metadata !{i32 378, i32 0, metadata !2111, null}
!2117 = metadata !{i32 35, i32 0, metadata !441, null}
!2118 = metadata !{i32 37, i32 0, metadata !2119, null}
!2119 = metadata !{i32 786443, metadata !439, metadata !441, i32 37, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash-pjw.c]
!2120 = metadata !{i32 38, i32 0, metadata !2119, null}
!2121 = metadata !{i32 40, i32 0, metadata !441, null}
!2122 = metadata !{i32 51, i32 0, metadata !2123, null}
!2123 = metadata !{i32 786443, metadata !447, metadata !453, i32 48, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/version-etc.c]
!2124 = metadata !{i32 53, i32 0, metadata !2123, null}
!2125 = metadata !{i32 54, i32 0, metadata !2123, null}
!2126 = metadata !{i32 55, i32 0, metadata !2123, null}
!2127 = metadata !{i32 58, i32 0, metadata !2128, null} ; [ DW_TAG_imported_module ]
!2128 = metadata !{i32 786443, metadata !447, metadata !453, i32 58, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/version-etc.c]
!2129 = metadata !{i32 59, i32 0, metadata !2128, null}
!2130 = metadata !{i32 61, i32 0, metadata !2128, null}
!2131 = metadata !{i32 66, i32 0, metadata !453, null}
!2132 = metadata !{i32 68, i32 0, metadata !453, null}
!2133 = metadata !{i32 77, i32 0, metadata !453, null}
!2134 = metadata !{i32 81, i32 0, metadata !2135, null}
!2135 = metadata !{i32 786443, metadata !447, metadata !453, i32 78, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/version-etc.c]
!2136 = metadata !{i32 84, i32 0, metadata !2135, null}
!2137 = metadata !{i32 85, i32 0, metadata !2135, null}
!2138 = metadata !{i32 88, i32 0, metadata !2135, null}
!2139 = metadata !{i32 89, i32 0, metadata !2135, null}
!2140 = metadata !{i32 92, i32 0, metadata !2135, null}
!2141 = metadata !{i32 93, i32 0, metadata !2135, null}
!2142 = metadata !{i32 98, i32 0, metadata !2135, null}
!2143 = metadata !{i32 99, i32 0, metadata !2135, null}
!2144 = metadata !{i32 104, i32 0, metadata !2135, null}
!2145 = metadata !{i32 105, i32 0, metadata !2135, null}
!2146 = metadata !{i32 110, i32 0, metadata !2135, null}
!2147 = metadata !{i32 112, i32 0, metadata !2135, null}
!2148 = metadata !{i32 117, i32 0, metadata !2135, null}
!2149 = metadata !{i32 119, i32 0, metadata !2135, null}
!2150 = metadata !{i32 124, i32 0, metadata !2135, null}
!2151 = metadata !{i32 127, i32 0, metadata !2135, null}
!2152 = metadata !{i32 132, i32 0, metadata !2135, null}
!2153 = metadata !{i32 135, i32 0, metadata !2135, null}
!2154 = metadata !{i32 142, i32 0, metadata !2135, null}
!2155 = metadata !{i32 145, i32 0, metadata !2135, null}
!2156 = metadata !{i32 147, i32 0, metadata !453, null}
!2157 = metadata !{i32 148, i32 0, metadata !453, null}
!2158 = metadata !{i32 171, i32 0, metadata !514, null}
!2159 = metadata !{i32 172, i32 0, metadata !514, null}
!2160 = metadata !{i32 173, i32 0, metadata !514, null}
!2161 = metadata !{i32 35, i32 0, metadata !528, null}
!2162 = metadata !{i32 41, i32 0, metadata !528, null}
!2163 = metadata !{i32 90, i32 0, metadata !538, null}
!2164 = metadata !{i32 91, i32 0, metadata !538, null}
!2165 = metadata !{i32 93, i32 0, metadata !538, null}
!2166 = metadata !{i32 96, i32 0, metadata !2167, null}
!2167 = metadata !{i32 786443, metadata !533, metadata !538, i32 96, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2168 = metadata !{i32 98, i32 0, metadata !2169, null}
!2169 = metadata !{i32 786443, metadata !533, metadata !2170, i32 98, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2170 = metadata !{i32 786443, metadata !533, metadata !2167, i32 97, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2171 = metadata !{i32 100, i32 0, metadata !2172, null}
!2172 = metadata !{i32 786443, metadata !533, metadata !2173, i32 100, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2173 = metadata !{i32 786443, metadata !533, metadata !2169, i32 99, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2174 = metadata !{i32 102, i32 0, metadata !2172, null}
!2175 = metadata !{i32 103, i32 0, metadata !2176, null}
!2176 = metadata !{i32 786443, metadata !533, metadata !2172, i32 103, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2177 = metadata !{i32 105, i32 0, metadata !2176, null}
!2178 = metadata !{i32 109, i32 0, metadata !2179, null}
!2179 = metadata !{i32 786443, metadata !533, metadata !2180, i32 109, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2180 = metadata !{i32 786443, metadata !533, metadata !2176, i32 107, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2181 = metadata !{i32 110, i32 0, metadata !2179, null}
!2182 = metadata !{i32 115, i32 0, metadata !2183, null}
!2183 = metadata !{i32 786443, metadata !533, metadata !2179, i32 112, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2184 = metadata !{i32 116, i32 0, metadata !2183, null}
!2185 = metadata !{i32 120, i32 0, metadata !2186, null}
!2186 = metadata !{i32 786443, metadata !533, metadata !538, i32 120, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2187 = metadata !{i32 121, i32 0, metadata !2186, null}
!2188 = metadata !{i32 123, i32 0, metadata !2186, null}
!2189 = metadata !{i32 124, i32 0, metadata !538, null}
!2190 = metadata !{i32 134, i32 0, metadata !544, null}
!2191 = metadata !{i32 138, i32 0, metadata !544, null}
!2192 = metadata !{i32 139, i32 0, metadata !544, null}
!2193 = metadata !{i32 140, i32 0, metadata !544, null}
!2194 = metadata !{i32 151, i32 0, metadata !547, null}
!2195 = metadata !{i32 155, i32 0, metadata !547, null}
!2196 = metadata !{i32 156, i32 0, metadata !2197, null}
!2197 = metadata !{i32 786443, metadata !533, metadata !547, i32 156, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2198 = metadata !{i32 157, i32 0, metadata !2199, null}
!2199 = metadata !{i32 786443, metadata !533, metadata !2197, i32 157, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2200 = metadata !{i32 158, i32 0, metadata !2199, null}
!2201 = metadata !{i32 160, i32 0, metadata !2202, null}
!2202 = metadata !{i32 786443, metadata !533, metadata !2199, i32 159, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2203 = metadata !{i32 161, i32 0, metadata !2202, null}
!2204 = metadata !{i32 162, i32 0, metadata !2202, null}
!2205 = metadata !{i32 165, i32 0, metadata !2206, null}
!2206 = metadata !{i32 786443, metadata !533, metadata !2199, i32 164, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2207 = metadata !{i32 167, i32 0, metadata !547, null}
!2208 = metadata !{i32 168, i32 0, metadata !547, null}
!2209 = metadata !{i32 182, i32 0, metadata !550, null}
!2210 = metadata !{i32 183, i32 0, metadata !2211, null}
!2211 = metadata !{i32 786443, metadata !533, metadata !550, i32 183, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2212 = metadata !{i32 185, i32 0, metadata !2211, null}
!2213 = metadata !{i32 188, i32 0, metadata !550, null}
!2214 = metadata !{i32 189, i32 0, metadata !550, null}
!2215 = metadata !{i32 190, i32 0, metadata !550, null}
!2216 = metadata !{i32 192, i32 0, metadata !550, null}
!2217 = metadata !{i32 193, i32 0, metadata !550, null}
!2218 = metadata !{i32 204, i32 0, metadata !2219, null}
!2219 = metadata !{i32 786443, metadata !533, metadata !555, i32 204, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2220 = metadata !{i32 205, i32 0, metadata !2221, null}
!2221 = metadata !{i32 786443, metadata !533, metadata !2219, i32 205, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/argmatch.c]
!2222 = metadata !{i32 206, i32 0, metadata !2221, null}
!2223 = metadata !{i32 207, i32 0, metadata !555, null}
!2224 = metadata !{i32 208, i32 0, metadata !555, null}
!2225 = metadata !{i32 65, i32 0, metadata !558, null}
!2226 = metadata !{i32 66, i32 0, metadata !558, null}
!2227 = metadata !{i32 35, i32 0, metadata !564, null}
!2228 = metadata !{i32 37, i32 0, metadata !564, null}
!2229 = metadata !{i32 39, i32 0, metadata !564, null}
!2230 = metadata !{i32 40, i32 0, metadata !564, null}
!2231 = metadata !{i32 42, i32 0, metadata !2232, null}
!2232 = metadata !{i32 786443, metadata !562, metadata !564, i32 42, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!2233 = metadata !{i32 44, i32 0, metadata !2234, null}
!2234 = metadata !{i32 786443, metadata !562, metadata !2235, i32 44, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!2235 = metadata !{i32 786443, metadata !562, metadata !2232, i32 43, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!2236 = metadata !{i32 45, i32 0, metadata !2234, null}
!2237 = metadata !{i32 46, i32 0, metadata !2238, null}
!2238 = metadata !{i32 786443, metadata !562, metadata !2234, i32 46, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!2239 = metadata !{i32 48, i32 0, metadata !2240, null}
!2240 = metadata !{i32 786443, metadata !562, metadata !2238, i32 47, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!2241 = metadata !{i32 49, i32 0, metadata !2240, null}
!2242 = metadata !{i32 50, i32 0, metadata !2240, null}
!2243 = metadata !{i32 53, i32 0, metadata !564, null}
!2244 = metadata !{i32 77, i32 0, metadata !568, null}
!2245 = metadata !{i32 82, i32 0, metadata !2246, null}
!2246 = metadata !{i32 786443, metadata !562, metadata !568, i32 82, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!2247 = metadata !{i32 83, i32 0, metadata !2246, null}
!2248 = metadata !{i32 86, i32 0, metadata !568, null}
!2249 = metadata !{i32 87, i32 0, metadata !2250, null}
!2250 = metadata !{i32 786443, metadata !562, metadata !568, i32 87, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!2251 = metadata !{i32 88, i32 0, metadata !2250, null}
!2252 = metadata !{i32 104, i32 0, metadata !568, null}
!2253 = metadata !{i32 105, i32 0, metadata !568, null}
!2254 = metadata !{i32 115, i32 0, metadata !569, null}
!2255 = metadata !{i32 117, i32 0, metadata !2256, null}
!2256 = metadata !{i32 786443, metadata !562, metadata !569, i32 117, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/basename.c]
!2257 = metadata !{i32 128, i32 0, metadata !569, null}
!2258 = metadata !{i32 43, i32 0, metadata !576, null}
!2259 = metadata !{i32 44, i32 0, metadata !576, null}
!2260 = metadata !{i32 72, i32 0, metadata !2261, null}
!2261 = metadata !{i32 786443, metadata !574, metadata !580, i32 72, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/closeout.c]
!2262 = metadata !{i32 74, i32 0, metadata !2263, null}
!2263 = metadata !{i32 786443, metadata !574, metadata !2261, i32 73, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/closeout.c]
!2264 = metadata !{i32 75, i32 0, metadata !2265, null}
!2265 = metadata !{i32 786443, metadata !574, metadata !2263, i32 75, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/closeout.c]
!2266 = metadata !{i32 76, i32 0, metadata !2265, null}
!2267 = metadata !{i32 79, i32 0, metadata !2265, null}
!2268 = metadata !{i32 81, i32 0, metadata !2263, null}
!2269 = metadata !{i32 84, i32 0, metadata !2270, null}
!2270 = metadata !{i32 786443, metadata !574, metadata !580, i32 84, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/closeout.c]
!2271 = metadata !{i32 85, i32 0, metadata !2270, null}
!2272 = metadata !{i32 86, i32 0, metadata !580, null}
!2273 = metadata !{i32 47, i32 0, metadata !586, null}
!2274 = metadata !{i32 48, i32 0, metadata !586, null}
!2275 = metadata !{i32 49, i32 0, metadata !586, null}
!2276 = metadata !{i32 62, i32 0, metadata !606, null}
!2277 = metadata !{i32 67, i32 0, metadata !2278, null}
!2278 = metadata !{i32 786443, metadata !584, metadata !606, i32 67, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/cycle-check.c]
!2279 = metadata !{i32 68, i32 0, metadata !2278, null}
!2280 = metadata !{i32 72, i32 7, metadata !2281, null}
!2281 = metadata !{i32 786443, metadata !584, metadata !606, i32 72, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/cycle-check.c]
!2282 = metadata !{i32 79, i32 0, metadata !2283, null}
!2283 = metadata !{i32 786443, metadata !584, metadata !2284, i32 79, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/cycle-check.c]
!2284 = metadata !{i32 786443, metadata !584, metadata !2281, i32 73, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/cycle-check.c]
!2285 = metadata !{i32 80, i32 0, metadata !2283, null}
!2286 = metadata !{i32 82, i32 0, metadata !2284, null}
!2287 = metadata !{i32 83, i32 0, metadata !2284, null}
!2288 = metadata !{i32 84, i32 0, metadata !2284, null}
!2289 = metadata !{i32 86, i32 0, metadata !606, null}
!2290 = metadata !{i32 87, i32 0, metadata !606, null}
!2291 = metadata !{i32 41, i32 0, metadata !644, null}
!2292 = metadata !{i32 38, i32 0, metadata !2293, null}
!2293 = metadata !{i32 786443, metadata !654, metadata !656, i32 38, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!2294 = metadata !{i32 39, i32 0, metadata !2293, null}
!2295 = metadata !{i32 41, i32 0, metadata !2296, null}
!2296 = metadata !{i32 786443, metadata !654, metadata !656, i32 41, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!2297 = metadata !{i32 42, i32 0, metadata !2296, null}
!2298 = metadata !{i32 44, i32 0, metadata !2299, null}
!2299 = metadata !{i32 786443, metadata !654, metadata !656, i32 44, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!2300 = metadata !{i32 45, i32 0, metadata !2299, null}
!2301 = metadata !{i32 47, i32 0, metadata !2302, null}
!2302 = metadata !{i32 786443, metadata !654, metadata !656, i32 47, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!2303 = metadata !{i32 48, i32 0, metadata !2302, null}
!2304 = metadata !{i32 50, i32 0, metadata !2305, null}
!2305 = metadata !{i32 786443, metadata !654, metadata !656, i32 50, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!2306 = metadata !{i32 51, i32 0, metadata !2305, null}
!2307 = metadata !{i32 53, i32 0, metadata !2308, null}
!2308 = metadata !{i32 786443, metadata !654, metadata !656, i32 53, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!2309 = metadata !{i32 54, i32 0, metadata !2308, null}
!2310 = metadata !{i32 56, i32 0, metadata !2311, null}
!2311 = metadata !{i32 786443, metadata !654, metadata !656, i32 56, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!2312 = metadata !{i32 57, i32 0, metadata !2311, null}
!2313 = metadata !{i32 59, i32 0, metadata !2314, null}
!2314 = metadata !{i32 786443, metadata !654, metadata !656, i32 59, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!2315 = metadata !{i32 60, i32 0, metadata !2314, null}
!2316 = metadata !{i32 62, i32 0, metadata !2317, null}
!2317 = metadata !{i32 786443, metadata !654, metadata !656, i32 62, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!2318 = metadata !{i32 63, i32 0, metadata !2317, null}
!2319 = metadata !{i32 65, i32 0, metadata !2320, null}
!2320 = metadata !{i32 786443, metadata !654, metadata !656, i32 65, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/file-type.c]
!2321 = metadata !{i32 66, i32 0, metadata !2320, null}
!2322 = metadata !{i32 71, i32 0, metadata !656, null}
!2323 = metadata !{i32 72, i32 0, metadata !656, null}
!2324 = metadata !{i32 150, i32 0, metadata !688, null}
!2325 = metadata !{i32 158, i32 0, metadata !735, null}
!2326 = metadata !{i32 166, i32 0, metadata !736, null}
!2327 = metadata !{i32 175, i32 0, metadata !737, null}
!2328 = metadata !{i32 177, i32 0, metadata !2329, null}
!2329 = metadata !{i32 786443, metadata !686, metadata !737, i32 177, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2330 = metadata !{i32 179, i32 0, metadata !2331, null}
!2331 = metadata !{i32 786443, metadata !686, metadata !2332, i32 179, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2332 = metadata !{i32 786443, metadata !686, metadata !2329, i32 178, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2333 = metadata !{i32 181, i32 0, metadata !2334, null}
!2334 = metadata !{i32 786443, metadata !686, metadata !2331, i32 180, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2335 = metadata !{i32 182, i32 0, metadata !2334, null}
!2336 = metadata !{i32 184, i32 0, metadata !2334, null}
!2337 = metadata !{i32 185, i32 0, metadata !2334, null}
!2338 = metadata !{i32 187, i32 0, metadata !2339, null}
!2339 = metadata !{i32 786443, metadata !686, metadata !2334, i32 187, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2340 = metadata !{i32 188, i32 0, metadata !2339, null}
!2341 = metadata !{i32 192, i32 0, metadata !737, null}
!2342 = metadata !{i32 202, i32 0, metadata !738, null}
!2343 = metadata !{i32 203, i32 0, metadata !738, null}
!2344 = metadata !{i32 205, i32 0, metadata !2345, null}
!2345 = metadata !{i32 786443, metadata !686, metadata !738, i32 205, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2346 = metadata !{i32 207, i32 0, metadata !2347, null}
!2347 = metadata !{i32 786443, metadata !686, metadata !2348, i32 207, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2348 = metadata !{i32 786443, metadata !686, metadata !2345, i32 206, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2349 = metadata !{i32 209, i32 0, metadata !2350, null}
!2350 = metadata !{i32 786443, metadata !686, metadata !2347, i32 208, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2351 = metadata !{i32 212, i32 0, metadata !2350, null}
!2352 = metadata !{i32 213, i32 0, metadata !2350, null}
!2353 = metadata !{i32 216, i32 0, metadata !2350, null}
!2354 = metadata !{i32 217, i32 0, metadata !2350, null}
!2355 = metadata !{i32 221, i32 0, metadata !2356, null}
!2356 = metadata !{i32 786443, metadata !686, metadata !738, i32 221, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2357 = metadata !{i32 222, i32 0, metadata !2356, null}
!2358 = metadata !{i32 224, i32 0, metadata !738, null}
!2359 = metadata !{i32 225, i32 0, metadata !738, null}
!2360 = metadata !{i32 230, i32 0, metadata !741, null}
!2361 = metadata !{i32 231, i32 0, metadata !741, null}
!2362 = metadata !{i32 232, i32 0, metadata !741, null}
!2363 = metadata !{i32 233, i32 0, metadata !741, null}
!2364 = metadata !{i32 235, i32 0, metadata !741, null}
!2365 = metadata !{i32 236, i32 0, metadata !741, null}
!2366 = metadata !{i32 237, i32 0, metadata !741, null}
!2367 = metadata !{i32 240, i32 0, metadata !741, null}
!2368 = metadata !{i32 242, i32 0, metadata !741, null}
!2369 = metadata !{i32 250, i32 0, metadata !784, null}
!2370 = metadata !{i32 251, i32 0, metadata !784, null}
!2371 = metadata !{i32 254, i32 0, metadata !2372, null}
!2372 = metadata !{i32 786443, metadata !686, metadata !784, i32 254, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2373 = metadata !{i32 255, i32 0, metadata !2372, null}
!2374 = metadata !{i32 257, i32 0, metadata !2375, null}
!2375 = metadata !{i32 786443, metadata !686, metadata !784, i32 257, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2376 = metadata !{i32 258, i32 0, metadata !2375, null}
!2377 = metadata !{i32 260, i32 0, metadata !2378, null}
!2378 = metadata !{i32 786443, metadata !686, metadata !784, i32 260, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2379 = metadata !{i32 261, i32 0, metadata !2380, null}
!2380 = metadata !{i32 786443, metadata !686, metadata !2378, i32 261, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2381 = metadata !{i32 262, i32 0, metadata !2380, null}
!2382 = metadata !{i32 264, i32 0, metadata !784, null}
!2383 = metadata !{i32 265, i32 0, metadata !784, null}
!2384 = metadata !{i32 281, i32 0, metadata !2385, null}
!2385 = metadata !{i32 786443, metadata !686, metadata !787, i32 281, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2386 = metadata !{i32 282, i32 0, metadata !2385, null}
!2387 = metadata !{i32 284, i32 0, metadata !2388, null}
!2388 = metadata !{i32 786443, metadata !686, metadata !787, i32 284, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2389 = metadata !{i32 285, i32 0, metadata !2390, null}
!2390 = metadata !{i32 786443, metadata !686, metadata !2388, i32 285, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2391 = metadata !{i32 286, i32 0, metadata !2390, null}
!2392 = metadata !{i32 287, i32 0, metadata !2393, null}
!2393 = metadata !{i32 786443, metadata !686, metadata !2390, i32 287, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2394 = metadata !{i32 288, i32 0, metadata !2393, null}
!2395 = metadata !{i32 289, i32 0, metadata !787, null}
!2396 = metadata !{i32 298, i32 0, metadata !790, null}
!2397 = metadata !{i32 299, i32 0, metadata !790, null}
!2398 = metadata !{i32 302, i32 0, metadata !2399, null}
!2399 = metadata !{i32 786443, metadata !686, metadata !790, i32 302, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2400 = metadata !{i32 303, i32 0, metadata !2399, null}
!2401 = metadata !{i32 306, i32 0, metadata !2402, null}
!2402 = metadata !{i32 786443, metadata !686, metadata !790, i32 306, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2403 = metadata !{i32 307, i32 0, metadata !2404, null}
!2404 = metadata !{i32 786443, metadata !686, metadata !2402, i32 307, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2405 = metadata !{i32 308, i32 0, metadata !2404, null}
!2406 = metadata !{i32 311, i32 0, metadata !790, null}
!2407 = metadata !{i32 312, i32 0, metadata !2408, null}
!2408 = metadata !{i32 786443, metadata !686, metadata !790, i32 312, i32 0, i32 21} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2409 = metadata !{i32 313, i32 0, metadata !2408, null}
!2410 = metadata !{i32 316, i32 0, metadata !790, null}
!2411 = metadata !{i32 317, i32 0, metadata !790, null}
!2412 = metadata !{i32 327, i32 0, metadata !791, null}
!2413 = metadata !{i32 331, i32 0, metadata !2414, null}
!2414 = metadata !{i32 786443, metadata !686, metadata !791, i32 331, i32 0, i32 22} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2415 = metadata !{i32 333, i32 0, metadata !2416, null}
!2416 = metadata !{i32 786443, metadata !686, metadata !2417, i32 333, i32 0, i32 24} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2417 = metadata !{i32 786443, metadata !686, metadata !2414, i32 332, i32 0, i32 23} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2418 = metadata !{i32 335, i32 0, metadata !2419, null}
!2419 = metadata !{i32 786443, metadata !686, metadata !2420, i32 335, i32 0, i32 26} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2420 = metadata !{i32 786443, metadata !686, metadata !2416, i32 334, i32 0, i32 25} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2421 = metadata !{i32 337, i32 0, metadata !2422, null}
!2422 = metadata !{i32 786443, metadata !686, metadata !2423, i32 337, i32 0, i32 28} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2423 = metadata !{i32 786443, metadata !686, metadata !2419, i32 336, i32 0, i32 27} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2424 = metadata !{i32 338, i32 0, metadata !2422, null}
!2425 = metadata !{i32 339, i32 0, metadata !2423, null}
!2426 = metadata !{i32 344, i32 0, metadata !791, null}
!2427 = metadata !{i32 345, i32 0, metadata !791, null}
!2428 = metadata !{i32 359, i32 0, metadata !795, null}
!2429 = metadata !{i32 363, i32 0, metadata !2430, null}
!2430 = metadata !{i32 786443, metadata !686, metadata !795, i32 363, i32 0, i32 29} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2431 = metadata !{i32 365, i32 0, metadata !2432, null}
!2432 = metadata !{i32 786443, metadata !686, metadata !2433, i32 365, i32 0, i32 31} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2433 = metadata !{i32 786443, metadata !686, metadata !2430, i32 364, i32 0, i32 30} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2434 = metadata !{i32 367, i32 0, metadata !2435, null}
!2435 = metadata !{i32 786443, metadata !686, metadata !2436, i32 367, i32 0, i32 33} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2436 = metadata !{i32 786443, metadata !686, metadata !2432, i32 366, i32 0, i32 32} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2437 = metadata !{i32 369, i32 0, metadata !2438, null}
!2438 = metadata !{i32 786443, metadata !686, metadata !2439, i32 369, i32 0, i32 35} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2439 = metadata !{i32 786443, metadata !686, metadata !2435, i32 368, i32 0, i32 34} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2440 = metadata !{i32 371, i32 0, metadata !2439, null}
!2441 = metadata !{i32 370, i32 0, metadata !2438, null}
!2442 = metadata !{i32 376, i32 0, metadata !795, null}
!2443 = metadata !{i32 377, i32 0, metadata !795, null}
!2444 = metadata !{i32 421, i32 0, metadata !802, null}
!2445 = metadata !{i32 424, i32 0, metadata !2446, null}
!2446 = metadata !{i32 786443, metadata !686, metadata !802, i32 424, i32 0, i32 36} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2447 = metadata !{i32 425, i32 0, metadata !2446, null}
!2448 = metadata !{i32 426, i32 0, metadata !802, null}
!2449 = metadata !{i32 472, i32 0, metadata !805, null}
!2450 = metadata !{i32 473, i32 0, metadata !805, null}
!2451 = metadata !{i32 544, i32 0, metadata !2452, null}
!2452 = metadata !{i32 786443, metadata !686, metadata !809, i32 544, i32 0, i32 37} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2453 = metadata !{i32 545, i32 0, metadata !2452, null}
!2454 = metadata !{i32 547, i32 0, metadata !809, null}
!2455 = metadata !{i32 548, i32 0, metadata !2456, null}
!2456 = metadata !{i32 786443, metadata !686, metadata !809, i32 548, i32 0, i32 38} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2457 = metadata !{i32 549, i32 0, metadata !2456, null}
!2458 = metadata !{i32 551, i32 0, metadata !2459, null}
!2459 = metadata !{i32 786443, metadata !686, metadata !809, i32 551, i32 0, i32 39} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2460 = metadata !{i32 552, i32 0, metadata !2459, null}
!2461 = metadata !{i32 553, i32 0, metadata !809, null}
!2462 = metadata !{i32 554, i32 0, metadata !2463, null}
!2463 = metadata !{i32 786443, metadata !686, metadata !809, i32 554, i32 0, i32 40} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2464 = metadata !{i32 564, i32 0, metadata !2465, null}
!2465 = metadata !{i32 786443, metadata !686, metadata !809, i32 564, i32 0, i32 42} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2466 = metadata !{i32 566, i32 0, metadata !2467, null}
!2467 = metadata !{i32 786443, metadata !686, metadata !2465, i32 565, i32 0, i32 43} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2468 = metadata !{i32 567, i32 0, metadata !2469, null}
!2469 = metadata !{i32 786443, metadata !686, metadata !2467, i32 567, i32 0, i32 44} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2470 = metadata !{i32 569, i32 0, metadata !2467, null}
!2471 = metadata !{i32 570, i32 0, metadata !2467, null}
!2472 = metadata !{i32 572, i32 0, metadata !2473, null}
!2473 = metadata !{i32 786443, metadata !686, metadata !809, i32 572, i32 0, i32 45} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2474 = metadata !{i32 574, i32 0, metadata !809, null}
!2475 = metadata !{i32 575, i32 0, metadata !2476, null}
!2476 = metadata !{i32 786443, metadata !686, metadata !809, i32 575, i32 0, i32 46} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2477 = metadata !{i32 578, i32 0, metadata !809, null}
!2478 = metadata !{i32 579, i32 0, metadata !809, null}
!2479 = metadata !{i32 580, i32 0, metadata !809, null}
!2480 = metadata !{i32 581, i32 0, metadata !809, null}
!2481 = metadata !{i32 583, i32 0, metadata !809, null}
!2482 = metadata !{i32 584, i32 0, metadata !809, null}
!2483 = metadata !{i32 585, i32 0, metadata !809, null}
!2484 = metadata !{i32 587, i32 0, metadata !809, null}
!2485 = metadata !{i32 591, i32 0, metadata !809, null}
!2486 = metadata !{i32 594, i32 0, metadata !809, null}
!2487 = metadata !{i32 595, i32 0, metadata !809, null}
!2488 = metadata !{i32 596, i32 0, metadata !809, null}
!2489 = metadata !{i32 607, i32 0, metadata !2490, null}
!2490 = metadata !{i32 786443, metadata !686, metadata !813, i32 607, i32 0, i32 47} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2491 = metadata !{i32 609, i32 0, metadata !2492, null}
!2492 = metadata !{i32 786443, metadata !686, metadata !2493, i32 609, i32 0, i32 49} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2493 = metadata !{i32 786443, metadata !686, metadata !2490, i32 608, i32 0, i32 48} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2494 = metadata !{i32 615, i32 0, metadata !2495, null}
!2495 = metadata !{i32 786443, metadata !686, metadata !2496, i32 615, i32 0, i32 51} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2496 = metadata !{i32 786443, metadata !686, metadata !2492, i32 610, i32 0, i32 50} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2497 = metadata !{i32 617, i32 0, metadata !2498, null}
!2498 = metadata !{i32 786443, metadata !686, metadata !2499, i32 617, i32 0, i32 53} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2499 = metadata !{i32 786443, metadata !686, metadata !2495, i32 616, i32 0, i32 52} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2500 = metadata !{i32 618, i32 0, metadata !2498, null}
!2501 = metadata !{i32 619, i32 0, metadata !2499, null}
!2502 = metadata !{i32 621, i32 0, metadata !2499, null}
!2503 = metadata !{i32 624, i32 0, metadata !2499, null}
!2504 = metadata !{i32 625, i32 0, metadata !2499, null}
!2505 = metadata !{i32 629, i32 0, metadata !2506, null}
!2506 = metadata !{i32 786443, metadata !686, metadata !2496, i32 629, i32 0, i32 54} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2507 = metadata !{i32 630, i32 0, metadata !2506, null}
!2508 = metadata !{i32 631, i32 0, metadata !2496, null}
!2509 = metadata !{i32 632, i32 0, metadata !2496, null}
!2510 = metadata !{i32 633, i32 0, metadata !2496, null}
!2511 = metadata !{i32 636, i32 0, metadata !813, null}
!2512 = metadata !{i32 637, i32 0, metadata !813, null}
!2513 = metadata !{i32 638, i32 0, metadata !813, null}
!2514 = metadata !{i32 653, i32 0, metadata !2515, null}
!2515 = metadata !{i32 786443, metadata !686, metadata !816, i32 653, i32 0, i32 55} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2516 = metadata !{i32 655, i32 0, metadata !2517, null}
!2517 = metadata !{i32 786443, metadata !686, metadata !2518, i32 655, i32 0, i32 57} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2518 = metadata !{i32 786443, metadata !686, metadata !2515, i32 654, i32 0, i32 56} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2519 = metadata !{i32 657, i32 0, metadata !2520, null}
!2520 = metadata !{i32 786443, metadata !686, metadata !2521, i32 657, i32 0, i32 59} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2521 = metadata !{i32 786443, metadata !686, metadata !2517, i32 656, i32 0, i32 58} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2522 = metadata !{i32 659, i32 0, metadata !2523, null}
!2523 = metadata !{i32 786443, metadata !686, metadata !2524, i32 659, i32 0, i32 61} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2524 = metadata !{i32 786443, metadata !686, metadata !2520, i32 658, i32 0, i32 60} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2525 = metadata !{i32 661, i32 0, metadata !2526, null}
!2526 = metadata !{i32 786443, metadata !686, metadata !2523, i32 660, i32 0, i32 62} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2527 = metadata !{i32 674, i32 0, metadata !2528, null}
!2528 = metadata !{i32 786443, metadata !686, metadata !816, i32 674, i32 0, i32 63} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2529 = metadata !{i32 676, i32 0, metadata !2530, null}
!2530 = metadata !{i32 786443, metadata !686, metadata !2531, i32 676, i32 0, i32 65} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2531 = metadata !{i32 786443, metadata !686, metadata !2528, i32 675, i32 0, i32 64} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2532 = metadata !{i32 678, i32 0, metadata !2533, null}
!2533 = metadata !{i32 786443, metadata !686, metadata !2530, i32 677, i32 0, i32 66} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2534 = metadata !{i32 679, i32 0, metadata !2533, null}
!2535 = metadata !{i32 684, i32 0, metadata !2536, null}
!2536 = metadata !{i32 786443, metadata !686, metadata !816, i32 684, i32 0, i32 67} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2537 = metadata !{i32 686, i32 0, metadata !2538, null}
!2538 = metadata !{i32 786443, metadata !686, metadata !2536, i32 685, i32 0, i32 68} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2539 = metadata !{i32 687, i32 0, metadata !2538, null}
!2540 = metadata !{i32 693, i32 0, metadata !816, null}
!2541 = metadata !{i32 694, i32 0, metadata !816, null}
!2542 = metadata !{i32 695, i32 0, metadata !816, null}
!2543 = metadata !{i32 824, i32 0, metadata !817, null}
!2544 = metadata !{i32 826, i32 0, metadata !2545, null}
!2545 = metadata !{i32 786443, metadata !686, metadata !817, i32 826, i32 0, i32 69} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2546 = metadata !{i32 827, i32 0, metadata !2545, null}
!2547 = metadata !{i32 834, i32 0, metadata !817, null}
!2548 = metadata !{i32 836, i32 0, metadata !2549, null}
!2549 = metadata !{i32 786443, metadata !686, metadata !817, i32 836, i32 0, i32 70} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2550 = metadata !{i32 837, i32 0, metadata !2551, null}
!2551 = metadata !{i32 786443, metadata !686, metadata !2549, i32 837, i32 0, i32 71} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2552 = metadata !{i32 838, i32 0, metadata !2553, null}
!2553 = metadata !{i32 786443, metadata !686, metadata !2551, i32 838, i32 0, i32 72} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2554 = metadata !{i32 840, i32 0, metadata !2555, null}
!2555 = metadata !{i32 786443, metadata !686, metadata !2553, i32 839, i32 0, i32 73} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2556 = metadata !{i32 841, i32 0, metadata !2555, null}
!2557 = metadata !{i32 843, i32 0, metadata !2555, null}
!2558 = metadata !{i32 845, i32 0, metadata !2559, null}
!2559 = metadata !{i32 786443, metadata !686, metadata !2555, i32 845, i32 0, i32 74} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2560 = metadata !{i32 846, i32 0, metadata !2559, null}
!2561 = metadata !{i32 848, i32 0, metadata !2555, null}
!2562 = metadata !{i32 850, i32 0, metadata !2563, null}
!2563 = metadata !{i32 786443, metadata !686, metadata !2555, i32 850, i32 0, i32 75} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2564 = metadata !{i32 852, i32 0, metadata !2565, null}
!2565 = metadata !{i32 786443, metadata !686, metadata !2566, i32 852, i32 0, i32 77} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2566 = metadata !{i32 786443, metadata !686, metadata !2563, i32 851, i32 0, i32 76} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2567 = metadata !{i32 856, i32 0, metadata !2568, null}
!2568 = metadata !{i32 786443, metadata !686, metadata !2565, i32 853, i32 0, i32 78} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2569 = metadata !{i32 858, i32 0, metadata !2570, null}
!2570 = metadata !{i32 786443, metadata !686, metadata !2568, i32 858, i32 0, i32 79} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2571 = metadata !{i32 859, i32 0, metadata !2570, null}
!2572 = metadata !{i32 861, i32 0, metadata !2568, null}
!2573 = metadata !{i32 862, i32 0, metadata !2568, null}
!2574 = metadata !{i32 863, i32 0, metadata !2568, null}
!2575 = metadata !{i32 864, i32 0, metadata !2568, null}
!2576 = metadata !{i32 869, i32 0, metadata !2577, null}
!2577 = metadata !{i32 786443, metadata !686, metadata !2565, i32 866, i32 0, i32 80} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2578 = metadata !{i32 870, i32 0, metadata !2577, null}
!2579 = metadata !{i32 879, i32 0, metadata !2580, null}
!2580 = metadata !{i32 786443, metadata !686, metadata !2563, i32 874, i32 0, i32 81} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2581 = metadata !{i32 880, i32 0, metadata !2580, null}
!2582 = metadata !{i32 881, i32 0, metadata !2583, null}
!2583 = metadata !{i32 786443, metadata !686, metadata !2580, i32 881, i32 0, i32 82} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2584 = metadata !{i32 882, i32 0, metadata !2583, null}
!2585 = metadata !{i32 886, i32 0, metadata !817, null}
!2586 = metadata !{i32 887, i32 0, metadata !817, null}
!2587 = metadata !{i32 888, i32 0, metadata !817, null}
!2588 = metadata !{i32 889, i32 0, metadata !817, null}
!2589 = metadata !{i32 890, i32 0, metadata !817, null}
!2590 = metadata !{i32 891, i32 0, metadata !817, null}
!2591 = metadata !{i32 896, i32 0, metadata !817, null}
!2592 = metadata !{i32 898, i32 0, metadata !817, null}
!2593 = metadata !{i32 899, i32 0, metadata !817, null}
!2594 = metadata !{i32 912, i32 0, metadata !2595, null}
!2595 = metadata !{i32 786443, metadata !686, metadata !820, i32 912, i32 0, i32 83} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2596 = metadata !{i32 913, i32 0, metadata !2595, null}
!2597 = metadata !{i32 916, i32 0, metadata !2598, null}
!2598 = metadata !{i32 786443, metadata !686, metadata !820, i32 916, i32 0, i32 84} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2599 = metadata !{i32 917, i32 0, metadata !2598, null}
!2600 = metadata !{i32 921, i32 0, metadata !2601, null}
!2601 = metadata !{i32 786443, metadata !686, metadata !820, i32 921, i32 0, i32 85} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2602 = metadata !{i32 923, i32 0, metadata !2603, null}
!2603 = metadata !{i32 786443, metadata !686, metadata !2601, i32 922, i32 0, i32 86} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2604 = metadata !{i32 925, i32 0, metadata !2605, null}
!2605 = metadata !{i32 786443, metadata !686, metadata !2603, i32 925, i32 0, i32 87} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2606 = metadata !{i32 926, i32 0, metadata !2605, null}
!2607 = metadata !{i32 930, i32 0, metadata !2603, null}
!2608 = metadata !{i32 931, i32 0, metadata !2603, null}
!2609 = metadata !{i32 932, i32 0, metadata !2603, null}
!2610 = metadata !{i32 933, i32 0, metadata !2603, null}
!2611 = metadata !{i32 934, i32 0, metadata !2603, null}
!2612 = metadata !{i32 939, i32 0, metadata !820, null}
!2613 = metadata !{i32 940, i32 0, metadata !820, null}
!2614 = metadata !{i32 941, i32 0, metadata !820, null}
!2615 = metadata !{i32 948, i32 0, metadata !2616, null}
!2616 = metadata !{i32 786443, metadata !686, metadata !820, i32 948, i32 0, i32 88} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2617 = metadata !{i32 953, i32 0, metadata !2618, null}
!2618 = metadata !{i32 786443, metadata !686, metadata !2616, i32 950, i32 0, i32 89} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2619 = metadata !{i32 954, i32 0, metadata !2620, null}
!2620 = metadata !{i32 786443, metadata !686, metadata !2618, i32 954, i32 0, i32 90} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2621 = metadata !{i32 957, i32 0, metadata !2622, null}
!2622 = metadata !{i32 786443, metadata !686, metadata !2620, i32 956, i32 0, i32 91} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2623 = metadata !{i32 958, i32 0, metadata !2622, null}
!2624 = metadata !{i32 964, i32 0, metadata !2625, null}
!2625 = metadata !{i32 786443, metadata !686, metadata !2622, i32 964, i32 0, i32 92} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2626 = metadata !{i32 965, i32 0, metadata !2625, null}
!2627 = metadata !{i32 968, i32 0, metadata !2628, null}
!2628 = metadata !{i32 786443, metadata !686, metadata !2622, i32 968, i32 0, i32 93} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2629 = metadata !{i32 969, i32 0, metadata !2628, null}
!2630 = metadata !{i32 973, i32 0, metadata !820, null}
!2631 = metadata !{i32 974, i32 0, metadata !820, null}
!2632 = metadata !{i32 986, i32 0, metadata !823, null}
!2633 = metadata !{i32 987, i32 0, metadata !2634, null}
!2634 = metadata !{i32 786443, metadata !686, metadata !823, i32 987, i32 0, i32 94} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2635 = metadata !{i32 988, i32 0, metadata !2634, null}
!2636 = metadata !{i32 990, i32 0, metadata !823, null}
!2637 = metadata !{i32 991, i32 0, metadata !2638, null}
!2638 = metadata !{i32 786443, metadata !686, metadata !823, i32 991, i32 0, i32 95} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2639 = metadata !{i32 993, i32 0, metadata !2640, null}
!2640 = metadata !{i32 786443, metadata !686, metadata !2638, i32 992, i32 0, i32 96} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2641 = metadata !{i32 998, i32 0, metadata !2642, null}
!2642 = metadata !{i32 786443, metadata !686, metadata !2640, i32 998, i32 0, i32 97} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2643 = metadata !{i32 1003, i32 0, metadata !2644, null}
!2644 = metadata !{i32 786443, metadata !686, metadata !2642, i32 1000, i32 0, i32 98} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2645 = metadata !{i32 1004, i32 0, metadata !2646, null}
!2646 = metadata !{i32 786443, metadata !686, metadata !2644, i32 1004, i32 0, i32 99} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2647 = metadata !{i32 1007, i32 0, metadata !2648, null}
!2648 = metadata !{i32 786443, metadata !686, metadata !2646, i32 1006, i32 0, i32 100} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2649 = metadata !{i32 1008, i32 0, metadata !2648, null}
!2650 = metadata !{i32 1014, i32 0, metadata !2648, null}
!2651 = metadata !{i32 1015, i32 0, metadata !2648, null}
!2652 = metadata !{i32 1019, i32 0, metadata !823, null}
!2653 = metadata !{i32 1020, i32 0, metadata !823, null}
!2654 = metadata !{i32 484, i32 0, metadata !840, null}
!2655 = metadata !{i32 491, i32 0, metadata !840, null}
!2656 = metadata !{i32 493, i32 0, metadata !2657, null}
!2657 = metadata !{i32 786443, metadata !686, metadata !840, i32 493, i32 0, i32 121} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2658 = metadata !{i32 500, i32 0, metadata !2657, null}
!2659 = metadata !{i32 502, i32 0, metadata !840, null}
!2660 = metadata !{i32 503, i32 0, metadata !840, null}
!2661 = metadata !{i32 504, i32 0, metadata !840, null}
!2662 = metadata !{i32 457, i32 0, metadata !2663, null}
!2663 = metadata !{i32 786443, metadata !686, metadata !834, i32 457, i32 0, i32 119} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2664 = metadata !{i32 458, i32 0, metadata !2663, null}
!2665 = metadata !{i32 461, i32 0, metadata !834, null}
!2666 = metadata !{i32 463, i32 0, metadata !834, null}
!2667 = metadata !{i32 464, i32 0, metadata !834, null}
!2668 = metadata !{i32 466, i32 0, metadata !834, null}
!2669 = metadata !{i32 707, i32 0, metadata !2670, null}
!2670 = metadata !{i32 786443, metadata !686, metadata !831, i32 707, i32 0, i32 116} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2671 = metadata !{i32 709, i32 0, metadata !2672, null}
!2672 = metadata !{i32 786443, metadata !686, metadata !2670, i32 708, i32 0, i32 117} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2673 = metadata !{i32 710, i32 0, metadata !2672, null}
!2674 = metadata !{i32 711, i32 0, metadata !2672, null}
!2675 = metadata !{i32 717, i32 0, metadata !2676, null}
!2676 = metadata !{i32 786443, metadata !686, metadata !2670, i32 713, i32 0, i32 118} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2677 = metadata !{i32 721, i32 0, metadata !831, null}
!2678 = metadata !{i32 730, i32 0, metadata !828, null}
!2679 = metadata !{i32 731, i32 0, metadata !828, null}
!2680 = metadata !{i32 732, i32 0, metadata !828, null}
!2681 = metadata !{i32 733, i32 0, metadata !828, null}
!2682 = metadata !{i32 745, i32 0, metadata !824, null}
!2683 = metadata !{i32 746, i32 0, metadata !824, null}
!2684 = metadata !{i32 749, i32 0, metadata !2685, null}
!2685 = metadata !{i32 786443, metadata !686, metadata !824, i32 749, i32 0, i32 101} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2686 = metadata !{i32 750, i32 0, metadata !2685, null}
!2687 = metadata !{i32 752, i32 0, metadata !824, null}
!2688 = metadata !{i32 755, i32 0, metadata !2689, null}
!2689 = metadata !{i32 786443, metadata !686, metadata !824, i32 755, i32 0, i32 102} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2690 = metadata !{i32 756, i32 0, metadata !2689, null}
!2691 = metadata !{i32 759, i32 0, metadata !2692, null}
!2692 = metadata !{i32 786443, metadata !686, metadata !824, i32 759, i32 0, i32 103} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2693 = metadata !{i32 761, i32 0, metadata !2694, null}
!2694 = metadata !{i32 786443, metadata !686, metadata !2692, i32 760, i32 0, i32 104} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2695 = metadata !{i32 763, i32 0, metadata !2696, null}
!2696 = metadata !{i32 786443, metadata !686, metadata !2694, i32 763, i32 0, i32 105} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2697 = metadata !{i32 765, i32 0, metadata !2698, null}
!2698 = metadata !{i32 786443, metadata !686, metadata !2699, i32 765, i32 0, i32 107} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2699 = metadata !{i32 786443, metadata !686, metadata !2696, i32 764, i32 0, i32 106} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2700 = metadata !{i32 767, i32 0, metadata !2701, null}
!2701 = metadata !{i32 786443, metadata !686, metadata !2698, i32 766, i32 0, i32 108} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2702 = metadata !{i32 771, i32 0, metadata !2701, null}
!2703 = metadata !{i32 772, i32 0, metadata !2701, null}
!2704 = metadata !{i32 773, i32 0, metadata !2701, null}
!2705 = metadata !{i32 776, i32 0, metadata !2706, null}
!2706 = metadata !{i32 786443, metadata !686, metadata !2698, i32 775, i32 0, i32 109} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2707 = metadata !{i32 780, i32 0, metadata !2694, null}
!2708 = metadata !{i32 784, i32 0, metadata !2709, null}
!2709 = metadata !{i32 786443, metadata !686, metadata !824, i32 784, i32 0, i32 110} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2710 = metadata !{i32 786, i32 0, metadata !2711, null}
!2711 = metadata !{i32 786443, metadata !686, metadata !2712, i32 786, i32 0, i32 112} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2712 = metadata !{i32 786443, metadata !686, metadata !2709, i32 785, i32 0, i32 111} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2713 = metadata !{i32 788, i32 0, metadata !2714, null}
!2714 = metadata !{i32 786443, metadata !686, metadata !2711, i32 787, i32 0, i32 113} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2715 = metadata !{i32 790, i32 0, metadata !2716, null}
!2716 = metadata !{i32 786443, metadata !686, metadata !2714, i32 790, i32 0, i32 114} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2717 = metadata !{i32 792, i32 0, metadata !2718, null}
!2718 = metadata !{i32 786443, metadata !686, metadata !2716, i32 791, i32 0, i32 115} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2719 = metadata !{i32 796, i32 0, metadata !2718, null}
!2720 = metadata !{i32 797, i32 0, metadata !2718, null}
!2721 = metadata !{i32 798, i32 0, metadata !2718, null}
!2722 = metadata !{i32 800, i32 0, metadata !2714, null}
!2723 = metadata !{i32 805, i32 0, metadata !824, null}
!2724 = metadata !{i32 806, i32 0, metadata !824, null}
!2725 = metadata !{i32 437, i32 0, metadata !837, null}
!2726 = metadata !{i32 438, i32 0, metadata !837, null}
!2727 = metadata !{i32 440, i32 0, metadata !837, null}
!2728 = metadata !{i32 442, i32 0, metadata !2729, null}
!2729 = metadata !{i32 786443, metadata !686, metadata !837, i32 441, i32 0, i32 120} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/hash.c]
!2730 = metadata !{i32 443, i32 0, metadata !2729, null}
!2731 = metadata !{i32 444, i32 0, metadata !2729, null}
!2732 = metadata !{i32 445, i32 0, metadata !2729, null}
!2733 = metadata !{i32 447, i32 0, metadata !837, null}
!2734 = metadata !{i32 32, i32 0, metadata !848, null}
!2735 = metadata !{i32 40, i32 0, metadata !852, null}
!2736 = metadata !{i32 117, i32 0, metadata !874, null}
!2737 = metadata !{i32 118, i32 0, metadata !874, null}
!2738 = metadata !{i32 120, i32 0, metadata !874, null}
!2739 = metadata !{i32 121, i32 0, metadata !874, null}
!2740 = metadata !{i32 128, i32 0, metadata !884, null}
!2741 = metadata !{i32 136, i32 0, metadata !887, null}
!2742 = metadata !{i32 137, i32 0, metadata !887, null}
!2743 = metadata !{i32 147, i32 0, metadata !890, null}
!2744 = metadata !{i32 148, i32 0, metadata !890, null}
!2745 = metadata !{i32 150, i32 0, metadata !890, null}
!2746 = metadata !{i32 151, i32 0, metadata !890, null}
!2747 = metadata !{i32 152, i32 0, metadata !890, null}
!2748 = metadata !{i32 153, i32 0, metadata !890, null}
!2749 = metadata !{i32 534, i32 0, metadata !893, null}
!2750 = metadata !{i32 535, i32 0, metadata !893, null}
!2751 = metadata !{i32 536, i32 0, metadata !893, null}
!2752 = metadata !{i32 538, i32 0, metadata !893, null}
!2753 = metadata !{i32 539, i32 0, metadata !893, null}
!2754 = metadata !{i32 548, i32 0, metadata !899, null}
!2755 = metadata !{i32 549, i32 0, metadata !899, null}
!2756 = metadata !{i32 550, i32 0, metadata !899, null}
!2757 = metadata !{i32 551, i32 0, metadata !899, null}
!2758 = metadata !{i32 552, i32 0, metadata !899, null}
!2759 = metadata !{i32 553, i32 0, metadata !899, null}
!2760 = metadata !{i32 573, i32 0, metadata !902, null}
!2761 = metadata !{i32 575, i32 0, metadata !2762, null}
!2762 = metadata !{i32 786443, metadata !856, metadata !902, i32 575, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2763 = metadata !{i32 576, i32 0, metadata !2762, null}
!2764 = metadata !{i32 577, i32 0, metadata !2765, null}
!2765 = metadata !{i32 786443, metadata !856, metadata !902, i32 577, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2766 = metadata !{i32 579, i32 0, metadata !2767, null}
!2767 = metadata !{i32 786443, metadata !856, metadata !2765, i32 578, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2768 = metadata !{i32 580, i32 0, metadata !2767, null}
!2769 = metadata !{i32 581, i32 0, metadata !2767, null}
!2770 = metadata !{i32 582, i32 0, metadata !2767, null}
!2771 = metadata !{i32 583, i32 0, metadata !2772, null}
!2772 = metadata !{i32 786443, metadata !856, metadata !902, i32 583, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2773 = metadata !{i32 585, i32 0, metadata !2774, null}
!2774 = metadata !{i32 786443, metadata !856, metadata !2772, i32 584, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2775 = metadata !{i32 586, i32 0, metadata !2774, null}
!2776 = metadata !{i32 587, i32 0, metadata !2774, null}
!2777 = metadata !{i32 588, i32 0, metadata !902, null}
!2778 = metadata !{i32 589, i32 0, metadata !902, null}
!2779 = metadata !{i32 653, i32 0, metadata !903, null}
!2780 = metadata !{i32 659, i32 0, metadata !906, null}
!2781 = metadata !{i32 675, i32 0, metadata !907, null}
!2782 = metadata !{i32 676, i32 0, metadata !907, null}
!2783 = metadata !{i32 683, i32 0, metadata !910, null}
!2784 = metadata !{i32 684, i32 0, metadata !910, null}
!2785 = metadata !{i32 690, i32 0, metadata !913, null}
!2786 = metadata !{i32 697, i32 0, metadata !916, null}
!2787 = metadata !{i32 698, i32 0, metadata !916, null}
!2788 = metadata !{i32 699, i32 0, metadata !916, null}
!2789 = metadata !{i32 705, i32 0, metadata !919, null}
!2790 = metadata !{i32 187, i32 0, metadata !926, null}
!2791 = metadata !{i32 188, i32 0, metadata !926, null}
!2792 = metadata !{i32 189, i32 0, metadata !926, null}
!2793 = metadata !{i32 190, i32 0, metadata !926, null}
!2794 = metadata !{i32 191, i32 0, metadata !926, null}
!2795 = metadata !{i32 202, i32 0, metadata !926, null}
!2796 = metadata !{i32 205, i32 0, metadata !2797, null}
!2797 = metadata !{i32 786443, metadata !856, metadata !2798, i32 205, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2798 = metadata !{i32 786443, metadata !856, metadata !2799, i32 205, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2799 = metadata !{i32 786443, metadata !856, metadata !926, i32 203, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2800 = metadata !{i32 205, i32 0, metadata !2798, null}
!2801 = metadata !{i32 206, i32 0, metadata !2799, null}
!2802 = metadata !{i32 207, i32 0, metadata !2799, null}
!2803 = metadata !{i32 208, i32 0, metadata !2799, null}
!2804 = metadata !{i32 209, i32 0, metadata !2799, null}
!2805 = metadata !{i32 212, i32 0, metadata !2799, null}
!2806 = metadata !{i32 213, i32 0, metadata !2799, null}
!2807 = metadata !{i32 238, i32 0, metadata !2808, null}
!2808 = metadata !{i32 786443, metadata !856, metadata !2799, i32 217, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2809 = metadata !{i32 239, i32 0, metadata !2808, null}
!2810 = metadata !{i32 240, i32 0, metadata !2811, null}
!2811 = metadata !{i32 786443, metadata !856, metadata !2808, i32 240, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2812 = metadata !{i32 241, i32 0, metadata !2813, null}
!2813 = metadata !{i32 786443, metadata !856, metadata !2814, i32 241, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2814 = metadata !{i32 786443, metadata !856, metadata !2811, i32 241, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2815 = metadata !{i32 241, i32 0, metadata !2814, null}
!2816 = metadata !{i32 242, i32 0, metadata !2808, null}
!2817 = metadata !{i32 243, i32 0, metadata !2808, null}
!2818 = metadata !{i32 244, i32 0, metadata !2808, null}
!2819 = metadata !{i32 246, i32 0, metadata !2799, null}
!2820 = metadata !{i32 249, i32 0, metadata !2821, null}
!2821 = metadata !{i32 786443, metadata !856, metadata !2822, i32 249, i32 0, i32 22} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2822 = metadata !{i32 786443, metadata !856, metadata !2799, i32 249, i32 0, i32 21} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2823 = metadata !{i32 249, i32 0, metadata !2822, null}
!2824 = metadata !{i32 250, i32 0, metadata !2799, null}
!2825 = metadata !{i32 251, i32 0, metadata !2799, null}
!2826 = metadata !{i32 252, i32 0, metadata !2799, null}
!2827 = metadata !{i32 258, i32 0, metadata !2828, null}
!2828 = metadata !{i32 786443, metadata !856, metadata !926, i32 258, i32 0, i32 23} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2829 = metadata !{i32 263, i32 0, metadata !2830, null}
!2830 = metadata !{i32 786443, metadata !856, metadata !2831, i32 263, i32 0, i32 25} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2831 = metadata !{i32 786443, metadata !856, metadata !2828, i32 259, i32 0, i32 24} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2832 = metadata !{i32 266, i32 0, metadata !2830, null}
!2833 = metadata !{i32 267, i32 0, metadata !2834, null}
!2834 = metadata !{i32 786443, metadata !856, metadata !2835, i32 267, i32 0, i32 27} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2835 = metadata !{i32 786443, metadata !856, metadata !2830, i32 267, i32 0, i32 26} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2836 = metadata !{i32 267, i32 0, metadata !2835, null}
!2837 = metadata !{i32 269, i32 0, metadata !2831, null}
!2838 = metadata !{i32 270, i32 0, metadata !2831, null}
!2839 = metadata !{i32 273, i32 0, metadata !2840, null}
!2840 = metadata !{i32 786443, metadata !856, metadata !2841, i32 273, i32 0, i32 29} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2841 = metadata !{i32 786443, metadata !856, metadata !2831, i32 271, i32 0, i32 28} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2842 = metadata !{i32 275, i32 0, metadata !2843, null}
!2843 = metadata !{i32 786443, metadata !856, metadata !2844, i32 275, i32 0, i32 32} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2844 = metadata !{i32 786443, metadata !856, metadata !2845, i32 275, i32 0, i32 31} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2845 = metadata !{i32 786443, metadata !856, metadata !2840, i32 274, i32 0, i32 30} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2846 = metadata !{i32 275, i32 0, metadata !2844, null}
!2847 = metadata !{i32 276, i32 0, metadata !2848, null}
!2848 = metadata !{i32 786443, metadata !856, metadata !2849, i32 276, i32 0, i32 34} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2849 = metadata !{i32 786443, metadata !856, metadata !2845, i32 276, i32 0, i32 33} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2850 = metadata !{i32 276, i32 0, metadata !2849, null}
!2851 = metadata !{i32 277, i32 0, metadata !2852, null}
!2852 = metadata !{i32 786443, metadata !856, metadata !2853, i32 277, i32 0, i32 36} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2853 = metadata !{i32 786443, metadata !856, metadata !2845, i32 277, i32 0, i32 35} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2854 = metadata !{i32 277, i32 0, metadata !2853, null}
!2855 = metadata !{i32 278, i32 0, metadata !2845, null}
!2856 = metadata !{i32 279, i32 0, metadata !2845, null}
!2857 = metadata !{i32 283, i32 0, metadata !2841, null}
!2858 = metadata !{i32 289, i32 0, metadata !2859, null}
!2859 = metadata !{i32 786443, metadata !856, metadata !2860, i32 289, i32 0, i32 38} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2860 = metadata !{i32 786443, metadata !856, metadata !2841, i32 284, i32 0, i32 37} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2861 = metadata !{i32 290, i32 0, metadata !2859, null}
!2862 = metadata !{i32 297, i32 0, metadata !2863, null}
!2863 = metadata !{i32 786443, metadata !856, metadata !2859, i32 291, i32 0, i32 39} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2864 = metadata !{i32 298, i32 0, metadata !2863, null}
!2865 = metadata !{i32 299, i32 0, metadata !2866, null}
!2866 = metadata !{i32 786443, metadata !856, metadata !2867, i32 299, i32 0, i32 41} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2867 = metadata !{i32 786443, metadata !856, metadata !2863, i32 299, i32 0, i32 40} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2868 = metadata !{i32 299, i32 0, metadata !2867, null}
!2869 = metadata !{i32 300, i32 0, metadata !2870, null}
!2870 = metadata !{i32 786443, metadata !856, metadata !2871, i32 300, i32 0, i32 43} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2871 = metadata !{i32 786443, metadata !856, metadata !2863, i32 300, i32 0, i32 42} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2872 = metadata !{i32 300, i32 0, metadata !2871, null}
!2873 = metadata !{i32 301, i32 0, metadata !2874, null}
!2874 = metadata !{i32 786443, metadata !856, metadata !2875, i32 301, i32 0, i32 45} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2875 = metadata !{i32 786443, metadata !856, metadata !2863, i32 301, i32 0, i32 44} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2876 = metadata !{i32 301, i32 0, metadata !2875, null}
!2877 = metadata !{i32 302, i32 0, metadata !2863, null}
!2878 = metadata !{i32 314, i32 0, metadata !2841, null}
!2879 = metadata !{i32 315, i32 0, metadata !2841, null}
!2880 = metadata !{i32 316, i32 0, metadata !2841, null}
!2881 = metadata !{i32 317, i32 0, metadata !2841, null}
!2882 = metadata !{i32 318, i32 0, metadata !2841, null}
!2883 = metadata !{i32 319, i32 0, metadata !2841, null}
!2884 = metadata !{i32 320, i32 0, metadata !2841, null}
!2885 = metadata !{i32 321, i32 0, metadata !2841, null}
!2886 = metadata !{i32 324, i32 0, metadata !2887, null}
!2887 = metadata !{i32 786443, metadata !856, metadata !2841, i32 324, i32 0, i32 46} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2888 = metadata !{i32 327, i32 0, metadata !2889, null}
!2889 = metadata !{i32 786443, metadata !856, metadata !2841, i32 327, i32 0, i32 47} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2890 = metadata !{i32 329, i32 0, metadata !2891, null}
!2891 = metadata !{i32 786443, metadata !856, metadata !2889, i32 328, i32 0, i32 48} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2892 = metadata !{i32 330, i32 0, metadata !2891, null}
!2893 = metadata !{i32 335, i32 0, metadata !2894, null}
!2894 = metadata !{i32 786443, metadata !856, metadata !2841, i32 335, i32 0, i32 49} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2895 = metadata !{i32 339, i32 0, metadata !2896, null}
!2896 = metadata !{i32 786443, metadata !856, metadata !2841, i32 339, i32 0, i32 50} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2897 = metadata !{i32 355, i32 0, metadata !2898, null}
!2898 = metadata !{i32 786443, metadata !856, metadata !2841, i32 355, i32 0, i32 51} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2899 = metadata !{i32 360, i32 0, metadata !2841, null}
!2900 = metadata !{i32 366, i32 0, metadata !2901, null}
!2901 = metadata !{i32 786443, metadata !856, metadata !2902, i32 366, i32 0, i32 54} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2902 = metadata !{i32 786443, metadata !856, metadata !2903, i32 366, i32 0, i32 53} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2903 = metadata !{i32 786443, metadata !856, metadata !2841, i32 361, i32 0, i32 52} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2904 = metadata !{i32 366, i32 0, metadata !2902, null}
!2905 = metadata !{i32 367, i32 0, metadata !2906, null}
!2906 = metadata !{i32 786443, metadata !856, metadata !2907, i32 367, i32 0, i32 56} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2907 = metadata !{i32 786443, metadata !856, metadata !2903, i32 367, i32 0, i32 55} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2908 = metadata !{i32 367, i32 0, metadata !2907, null}
!2909 = metadata !{i32 368, i32 0, metadata !2910, null}
!2910 = metadata !{i32 786443, metadata !856, metadata !2911, i32 368, i32 0, i32 58} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2911 = metadata !{i32 786443, metadata !856, metadata !2903, i32 368, i32 0, i32 57} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2912 = metadata !{i32 368, i32 0, metadata !2911, null}
!2913 = metadata !{i32 369, i32 0, metadata !2903, null}
!2914 = metadata !{i32 404, i32 0, metadata !2915, null}
!2915 = metadata !{i32 786443, metadata !856, metadata !2916, i32 404, i32 0, i32 60} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2916 = metadata !{i32 786443, metadata !856, metadata !2841, i32 398, i32 0, i32 59} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2917 = metadata !{i32 406, i32 0, metadata !2918, null}
!2918 = metadata !{i32 786443, metadata !856, metadata !2915, i32 405, i32 0, i32 61} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2919 = metadata !{i32 407, i32 0, metadata !2918, null}
!2920 = metadata !{i32 408, i32 0, metadata !2918, null}
!2921 = metadata !{i32 412, i32 0, metadata !2922, null}
!2922 = metadata !{i32 786443, metadata !856, metadata !2915, i32 410, i32 0, i32 62} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2923 = metadata !{i32 414, i32 0, metadata !2922, null}
!2924 = metadata !{i32 415, i32 0, metadata !2922, null}
!2925 = metadata !{i32 416, i32 0, metadata !2926, null}
!2926 = metadata !{i32 786443, metadata !856, metadata !2922, i32 416, i32 0, i32 63} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2927 = metadata !{i32 417, i32 0, metadata !2926, null}
!2928 = metadata !{i32 422, i32 0, metadata !2929, null}
!2929 = metadata !{i32 786443, metadata !856, metadata !2922, i32 420, i32 0, i32 64} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2930 = metadata !{i32 424, i32 0, metadata !2931, null}
!2931 = metadata !{i32 786443, metadata !856, metadata !2929, i32 424, i32 0, i32 65} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2932 = metadata !{i32 426, i32 0, metadata !2933, null}
!2933 = metadata !{i32 786443, metadata !856, metadata !2931, i32 426, i32 0, i32 66} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2934 = metadata !{i32 428, i32 0, metadata !2935, null}
!2935 = metadata !{i32 786443, metadata !856, metadata !2933, i32 427, i32 0, i32 67} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2936 = metadata !{i32 429, i32 0, metadata !2935, null}
!2937 = metadata !{i32 431, i32 0, metadata !2938, null}
!2938 = metadata !{i32 786443, metadata !856, metadata !2933, i32 431, i32 0, i32 68} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2939 = metadata !{i32 433, i32 0, metadata !2940, null}
!2940 = metadata !{i32 786443, metadata !856, metadata !2938, i32 432, i32 0, i32 69} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2941 = metadata !{i32 434, i32 0, metadata !2940, null}
!2942 = metadata !{i32 435, i32 0, metadata !2940, null}
!2943 = metadata !{i32 444, i32 0, metadata !2944, null}
!2944 = metadata !{i32 786443, metadata !856, metadata !2945, i32 444, i32 0, i32 71} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2945 = metadata !{i32 786443, metadata !856, metadata !2938, i32 439, i32 0, i32 70} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2946 = metadata !{i32 447, i32 0, metadata !2947, null}
!2947 = metadata !{i32 786443, metadata !856, metadata !2948, i32 447, i32 0, i32 73} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2948 = metadata !{i32 786443, metadata !856, metadata !2944, i32 445, i32 0, i32 72} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2949 = metadata !{i32 448, i32 0, metadata !2947, null}
!2950 = metadata !{i32 459, i32 0, metadata !2951, null}
!2951 = metadata !{i32 786443, metadata !856, metadata !2945, i32 459, i32 0, i32 75} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2952 = metadata !{i32 460, i32 0, metadata !2951, null}
!2953 = metadata !{i32 461, i32 0, metadata !2945, null}
!2954 = metadata !{i32 464, i32 0, metadata !2922, null}
!2955 = metadata !{i32 467, i32 0, metadata !2956, null}
!2956 = metadata !{i32 786443, metadata !856, metadata !2916, i32 467, i32 0, i32 76} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2957 = metadata !{i32 471, i32 0, metadata !2958, null}
!2958 = metadata !{i32 786443, metadata !856, metadata !2956, i32 468, i32 0, i32 77} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2959 = metadata !{i32 473, i32 0, metadata !2960, null}
!2960 = metadata !{i32 786443, metadata !856, metadata !2958, i32 473, i32 0, i32 78} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2961 = metadata !{i32 475, i32 0, metadata !2962, null}
!2962 = metadata !{i32 786443, metadata !856, metadata !2963, i32 475, i32 0, i32 80} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2963 = metadata !{i32 786443, metadata !856, metadata !2960, i32 474, i32 0, i32 79} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2964 = metadata !{i32 477, i32 0, metadata !2965, null}
!2965 = metadata !{i32 786443, metadata !856, metadata !2966, i32 477, i32 0, i32 83} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2966 = metadata !{i32 786443, metadata !856, metadata !2967, i32 477, i32 0, i32 82} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2967 = metadata !{i32 786443, metadata !856, metadata !2962, i32 476, i32 0, i32 81} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2968 = metadata !{i32 477, i32 0, metadata !2966, null}
!2969 = metadata !{i32 478, i32 0, metadata !2970, null}
!2970 = metadata !{i32 786443, metadata !856, metadata !2971, i32 478, i32 0, i32 85} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2971 = metadata !{i32 786443, metadata !856, metadata !2967, i32 478, i32 0, i32 84} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2972 = metadata !{i32 478, i32 0, metadata !2971, null}
!2973 = metadata !{i32 479, i32 0, metadata !2974, null}
!2974 = metadata !{i32 786443, metadata !856, metadata !2975, i32 479, i32 0, i32 87} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2975 = metadata !{i32 786443, metadata !856, metadata !2967, i32 479, i32 0, i32 86} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2976 = metadata !{i32 479, i32 0, metadata !2975, null}
!2977 = metadata !{i32 480, i32 0, metadata !2967, null}
!2978 = metadata !{i32 481, i32 0, metadata !2967, null}
!2979 = metadata !{i32 482, i32 0, metadata !2980, null}
!2980 = metadata !{i32 786443, metadata !856, metadata !2963, i32 482, i32 0, i32 88} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2981 = metadata !{i32 484, i32 0, metadata !2982, null}
!2982 = metadata !{i32 786443, metadata !856, metadata !2983, i32 484, i32 0, i32 90} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2983 = metadata !{i32 786443, metadata !856, metadata !2963, i32 484, i32 0, i32 89} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2984 = metadata !{i32 484, i32 0, metadata !2983, null}
!2985 = metadata !{i32 485, i32 0, metadata !2963, null}
!2986 = metadata !{i32 486, i32 0, metadata !2963, null}
!2987 = metadata !{i32 493, i32 0, metadata !2988, null}
!2988 = metadata !{i32 786443, metadata !856, metadata !2831, i32 493, i32 0, i32 91} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2989 = metadata !{i32 498, i32 0, metadata !2990, null}
!2990 = metadata !{i32 786443, metadata !856, metadata !2991, i32 498, i32 0, i32 93} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2991 = metadata !{i32 786443, metadata !856, metadata !2831, i32 498, i32 0, i32 92} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2992 = metadata !{i32 498, i32 0, metadata !2991, null}
!2993 = metadata !{i32 501, i32 0, metadata !2994, null}
!2994 = metadata !{i32 786443, metadata !856, metadata !2995, i32 501, i32 0, i32 95} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2995 = metadata !{i32 786443, metadata !856, metadata !2831, i32 501, i32 0, i32 94} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2996 = metadata !{i32 501, i32 0, metadata !2995, null}
!2997 = metadata !{i32 504, i32 0, metadata !2998, null}
!2998 = metadata !{i32 786443, metadata !856, metadata !926, i32 504, i32 0, i32 96} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!2999 = metadata !{i32 507, i32 0, metadata !3000, null}
!3000 = metadata !{i32 786443, metadata !856, metadata !926, i32 507, i32 0, i32 97} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3001 = metadata !{i32 508, i32 0, metadata !3002, null}
!3002 = metadata !{i32 786443, metadata !856, metadata !3000, i32 508, i32 0, i32 98} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3003 = metadata !{i32 509, i32 0, metadata !3004, null}
!3004 = metadata !{i32 786443, metadata !856, metadata !3005, i32 509, i32 0, i32 100} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3005 = metadata !{i32 786443, metadata !856, metadata !3002, i32 509, i32 0, i32 99} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3006 = metadata !{i32 509, i32 0, metadata !3005, null}
!3007 = metadata !{i32 511, i32 0, metadata !3008, null}
!3008 = metadata !{i32 786443, metadata !856, metadata !926, i32 511, i32 0, i32 101} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3009 = metadata !{i32 512, i32 0, metadata !3008, null}
!3010 = metadata !{i32 513, i32 0, metadata !926, null}
!3011 = metadata !{i32 516, i32 0, metadata !926, null}
!3012 = metadata !{i32 518, i32 0, metadata !926, null}
!3013 = metadata !{i32 603, i32 0, metadata !923, null}
!3014 = metadata !{i32 605, i32 0, metadata !923, null}
!3015 = metadata !{i32 606, i32 0, metadata !923, null}
!3016 = metadata !{i32 608, i32 0, metadata !3017, null}
!3017 = metadata !{i32 786443, metadata !856, metadata !923, i32 608, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3018 = metadata !{i32 609, i32 0, metadata !3017, null}
!3019 = metadata !{i32 611, i32 0, metadata !3020, null}
!3020 = metadata !{i32 786443, metadata !856, metadata !923, i32 611, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3021 = metadata !{i32 618, i32 0, metadata !3022, null}
!3022 = metadata !{i32 786443, metadata !856, metadata !3020, i32 612, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3023 = metadata !{i32 619, i32 0, metadata !3022, null}
!3024 = metadata !{i32 621, i32 0, metadata !3025, null}
!3025 = metadata !{i32 786443, metadata !856, metadata !3022, i32 621, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3026 = metadata !{i32 622, i32 0, metadata !3025, null}
!3027 = metadata !{i32 624, i32 0, metadata !3022, null}
!3028 = metadata !{i32 625, i32 0, metadata !3029, null}
!3029 = metadata !{i32 786443, metadata !856, metadata !3022, i32 625, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3030 = metadata !{i32 626, i32 0, metadata !3029, null}
!3031 = metadata !{i32 627, i32 0, metadata !3022, null}
!3032 = metadata !{i32 628, i32 0, metadata !3022, null}
!3033 = metadata !{i32 629, i32 0, metadata !3022, null}
!3034 = metadata !{i32 632, i32 0, metadata !3035, null}
!3035 = metadata !{i32 786443, metadata !856, metadata !923, i32 631, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3036 = metadata !{i32 633, i32 0, metadata !3035, null}
!3037 = metadata !{i32 634, i32 0, metadata !3035, null}
!3038 = metadata !{i32 636, i32 0, metadata !3039, null}
!3039 = metadata !{i32 786443, metadata !856, metadata !3035, i32 636, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3040 = metadata !{i32 638, i32 0, metadata !3041, null}
!3041 = metadata !{i32 786443, metadata !856, metadata !3039, i32 637, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3042 = metadata !{i32 639, i32 0, metadata !3043, null}
!3043 = metadata !{i32 786443, metadata !856, metadata !3041, i32 639, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3044 = metadata !{i32 640, i32 0, metadata !3043, null}
!3045 = metadata !{i32 641, i32 0, metadata !3041, null}
!3046 = metadata !{i32 642, i32 0, metadata !3041, null}
!3047 = metadata !{i32 643, i32 0, metadata !3041, null}
!3048 = metadata !{i32 645, i32 0, metadata !3035, null}
!3049 = metadata !{i32 646, i32 0, metadata !3035, null}
!3050 = metadata !{i32 667, i32 0, metadata !920, null}
!3051 = metadata !{i32 668, i32 0, metadata !920, null}
!3052 = metadata !{i32 669, i32 0, metadata !920, null}
!3053 = metadata !{i32 161, i32 0, metadata !929, null}
!3054 = metadata !{i32 162, i32 0, metadata !3055, null}
!3055 = metadata !{i32 786443, metadata !856, metadata !929, i32 162, i32 0, i32 102} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/quotearg.c]
!3056 = metadata !{i32 163, i32 0, metadata !3055, null}
!3057 = metadata !{i32 164, i32 0, metadata !929, null}
!3058 = metadata !{i32 35, i32 0, metadata !3059, null}
!3059 = metadata !{i32 786443, metadata !949, metadata !951, i32 35, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/root-dev-ino.c]
!3060 = metadata !{i32 36, i32 0, metadata !3059, null}
!3061 = metadata !{i32 37, i32 0, metadata !951, null}
!3062 = metadata !{i32 38, i32 0, metadata !951, null}
!3063 = metadata !{i32 39, i32 0, metadata !951, null}
!3064 = metadata !{i32 40, i32 0, metadata !951, null}
!3065 = metadata !{i32 115, i32 0, metadata !3066, null}
!3066 = metadata !{i32 786443, metadata !964, metadata !974, i32 115, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!3067 = metadata !{i32 116, i32 0, metadata !3066, null}
!3068 = metadata !{i32 117, i32 0, metadata !974, null}
!3069 = metadata !{i32 50, i32 0, metadata !3070, null}
!3070 = metadata !{i32 786443, metadata !961, metadata !983} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xmalloc.c]
!3071 = metadata !{i32 51, i32 0, metadata !3072, null}
!3072 = metadata !{i32 786443, metadata !961, metadata !3070, i32 51, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xmalloc.c]
!3073 = metadata !{i32 52, i32 0, metadata !3072, null}
!3074 = metadata !{i32 53, i32 0, metadata !3070, null}
!3075 = metadata !{i32 126, i32 0, metadata !3076, null}
!3076 = metadata !{i32 786443, metadata !964, metadata !977, i32 126, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!3077 = metadata !{i32 127, i32 0, metadata !3076, null}
!3078 = metadata !{i32 128, i32 0, metadata !977, null}
!3079 = metadata !{i32 62, i32 0, metadata !987, null}
!3080 = metadata !{i32 63, i32 0, metadata !3081, null}
!3081 = metadata !{i32 786443, metadata !961, metadata !987, i32 63, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xmalloc.c]
!3082 = metadata !{i32 64, i32 0, metadata !3081, null}
!3083 = metadata !{i32 65, i32 0, metadata !987, null}
!3084 = metadata !{i32 189, i32 0, metadata !965, null}
!3085 = metadata !{i32 191, i32 0, metadata !3086, null}
!3086 = metadata !{i32 786443, metadata !964, metadata !965, i32 191, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!3087 = metadata !{i32 193, i32 0, metadata !3088, null}
!3088 = metadata !{i32 786443, metadata !964, metadata !3089, i32 193, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!3089 = metadata !{i32 786443, metadata !964, metadata !3086, i32 192, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!3090 = metadata !{i32 201, i32 0, metadata !3091, null}
!3091 = metadata !{i32 786443, metadata !964, metadata !3088, i32 194, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!3092 = metadata !{i32 202, i32 0, metadata !3091, null}
!3093 = metadata !{i32 203, i32 0, metadata !3091, null}
!3094 = metadata !{i32 207, i32 0, metadata !3095, null}
!3095 = metadata !{i32 786443, metadata !964, metadata !3096, i32 207, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!3096 = metadata !{i32 786443, metadata !964, metadata !3086, i32 206, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/./xalloc.h]
!3097 = metadata !{i32 208, i32 0, metadata !3095, null}
!3098 = metadata !{i32 209, i32 0, metadata !3096, null}
!3099 = metadata !{i32 212, i32 0, metadata !965, null}
!3100 = metadata !{i32 213, i32 0, metadata !965, null}
!3101 = metadata !{i32 222, i32 0, metadata !980, null}
!3102 = metadata !{i32 77, i32 0, metadata !990, null}
!3103 = metadata !{i32 87, i32 0, metadata !993, null}
!3104 = metadata !{i32 102, i32 0, metadata !3105, null}
!3105 = metadata !{i32 786443, metadata !961, metadata !994, i32 101, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xmalloc.c]
!3106 = metadata !{i32 103, i32 0, metadata !3105, null}
!3107 = metadata !{i32 104, i32 0, metadata !994, null}
!3108 = metadata !{i32 114, i32 0, metadata !995, null}
!3109 = metadata !{i32 122, i32 0, metadata !998, null}
!3110 = metadata !{i32 57, i32 0, metadata !1002, null}
!3111 = metadata !{i32 58, i32 0, metadata !1002, null} ; [ DW_TAG_imported_module ]
!3112 = metadata !{i32 59, i32 0, metadata !1002, null}
!3113 = metadata !{i32 60, i32 0, metadata !1002, null}
!3114 = metadata !{i32 63, i32 0, metadata !1002, null}
!3115 = metadata !{i32 58, i32 0, metadata !3116, null} ; [ DW_TAG_imported_module ]
!3116 = metadata !{i32 786443, metadata !1007, metadata !1009, i32 57, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!3117 = metadata !{i32 64, i32 0, metadata !3118, null}
!3118 = metadata !{i32 786443, metadata !1007, metadata !1009, i32 64, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!3119 = metadata !{i32 65, i32 0, metadata !3118, null}
!3120 = metadata !{i32 67, i32 0, metadata !1009, null}
!3121 = metadata !{i32 71, i32 0, metadata !3122, null}
!3122 = metadata !{i32 786443, metadata !1007, metadata !1009, i32 71, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!3123 = metadata !{i32 73, i32 0, metadata !3122, null}
!3124 = metadata !{i32 85, i32 0, metadata !3125, null}
!3125 = metadata !{i32 786443, metadata !1007, metadata !1009, i32 76, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!3126 = metadata !{i32 97, i32 0, metadata !3127, null}
!3127 = metadata !{i32 786443, metadata !1007, metadata !1009, i32 97, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!3128 = metadata !{i32 98, i32 0, metadata !3127, null}
!3129 = metadata !{i32 101, i32 0, metadata !3130, null}
!3130 = metadata !{i32 786443, metadata !1007, metadata !3127, i32 100, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!3131 = metadata !{i32 102, i32 0, metadata !3132, null}
!3132 = metadata !{i32 786443, metadata !1007, metadata !3130, i32 102, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!3133 = metadata !{i32 103, i32 0, metadata !3132, null}
!3134 = metadata !{i32 106, i32 0, metadata !3135, null}
!3135 = metadata !{i32 786443, metadata !1007, metadata !1009, i32 106, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/euidaccess-stat.c]
!3136 = metadata !{i32 107, i32 0, metadata !3135, null}
!3137 = metadata !{i32 109, i32 0, metadata !1009, null}
!3138 = metadata !{i32 110, i32 0, metadata !1009, null}
!3139 = metadata !{i32 33, i32 0, metadata !1039, null}
!3140 = metadata !{i32 34, i32 0, metadata !3141, null}
!3141 = metadata !{i32 786443, metadata !1037, metadata !1039, i32 34, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/xstrndup.c]
!3142 = metadata !{i32 35, i32 0, metadata !3141, null}
!3143 = metadata !{i32 36, i32 0, metadata !1039, null}
!3144 = metadata !{i32 56, i32 0, metadata !1047, null}
!3145 = metadata !{i32 57, i32 0, metadata !1047, null}
!3146 = metadata !{i32 58, i32 0, metadata !1047, null} ; [ DW_TAG_imported_module ]
!3147 = metadata !{i32 68, i32 0, metadata !3148, null}
!3148 = metadata !{i32 786443, metadata !1045, metadata !1047, i32 68, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/close-stream.c]
!3149 = metadata !{i32 70, i32 0, metadata !3150, null}
!3150 = metadata !{i32 786443, metadata !1045, metadata !3151, i32 70, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/close-stream.c]
!3151 = metadata !{i32 786443, metadata !1045, metadata !3148, i32 69, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/shadowvm/shadow/shadow-test/coreutils/cr-1/lib/close-stream.c]
!3152 = metadata !{i32 71, i32 0, metadata !3150, null}
!3153 = metadata !{i32 72, i32 0, metadata !3151, null}
!3154 = metadata !{i32 75, i32 0, metadata !1047, null}
!3155 = metadata !{i32 76, i32 0, metadata !1047, null}
!3156 = metadata !{i32 13, i32 0, metadata !3157, null}
!3157 = metadata !{i32 786443, metadata !1092, metadata !1094, i32 13, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_div_zero_check.c]
!3158 = metadata !{i32 14, i32 0, metadata !3157, null}
!3159 = metadata !{i32 15, i32 0, metadata !1094, null}
!3160 = metadata !{i32 15, i32 0, metadata !1104, null}
!3161 = metadata !{i32 16, i32 0, metadata !1104, null}
!3162 = metadata !{metadata !3163, metadata !3163, i64 0}
!3163 = metadata !{metadata !"int", metadata !3164, i64 0}
!3164 = metadata !{metadata !"omnipotent char", metadata !3165, i64 0}
!3165 = metadata !{metadata !"Simple C/C++ TBAA"}
!3166 = metadata !{i32 25, i32 0, metadata !3167, null}
!3167 = metadata !{i32 786443, metadata !1112, metadata !1114, i32 25, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c]
!3168 = metadata !{i32 26, i32 0, metadata !3169, null}
!3169 = metadata !{i32 786443, metadata !1112, metadata !3167, i32 25, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c]
!3170 = metadata !{metadata !3171, metadata !3171, i64 0}
!3171 = metadata !{metadata !"any pointer", metadata !3164, i64 0}
!3172 = metadata !{i32 15, i32 0, metadata !1127, metadata !3168}
!3173 = metadata !{metadata !3164, metadata !3164, i64 0}
!3174 = metadata !{i32 27, i32 0, metadata !3169, null}
!3175 = metadata !{i32 28, i32 0, metadata !3169, null}
!3176 = metadata !{i32 29, i32 0, metadata !3177, null}
!3177 = metadata !{i32 786443, metadata !1112, metadata !3169, i32 29, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c]
!3178 = metadata !{i32 33, i32 0, metadata !3179, null}
!3179 = metadata !{i32 786443, metadata !1112, metadata !3177, i32 29, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_mark_arg_symbolic.c]
!3180 = metadata !{i32 21, i32 0, metadata !1122, metadata !3178}
!3181 = metadata !{i32 35, i32 0, metadata !3169, null}
!3182 = metadata !{i32 37, i32 0, metadata !1114, null}
!3183 = metadata !{i32 21, i32 0, metadata !3184, null}
!3184 = metadata !{i32 786443, metadata !1134, metadata !1136, i32 21, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_overshift_check.c]
!3185 = metadata !{i32 27, i32 0, metadata !3186, null}
!3186 = metadata !{i32 786443, metadata !1134, metadata !3184, i32 21, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_overshift_check.c]
!3187 = metadata !{i32 29, i32 0, metadata !1136, null}
!3188 = metadata !{i32 16, i32 0, metadata !3189, null}
!3189 = metadata !{i32 786443, metadata !1145, metadata !1147, i32 16, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!3190 = metadata !{i32 17, i32 0, metadata !3189, null}
!3191 = metadata !{i32 19, i32 0, metadata !3192, null}
!3192 = metadata !{i32 786443, metadata !1145, metadata !1147, i32 19, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!3193 = metadata !{i32 22, i32 0, metadata !3194, null}
!3194 = metadata !{i32 786443, metadata !1145, metadata !3192, i32 21, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!3195 = metadata !{i32 25, i32 0, metadata !3196, null}
!3196 = metadata !{i32 786443, metadata !1145, metadata !3194, i32 25, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!3197 = metadata !{i32 26, i32 0, metadata !3198, null}
!3198 = metadata !{i32 786443, metadata !1145, metadata !3196, i32 25, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!3199 = metadata !{i32 27, i32 0, metadata !3198, null}
!3200 = metadata !{i32 28, i32 0, metadata !3201, null}
!3201 = metadata !{i32 786443, metadata !1145, metadata !3196, i32 27, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/klee_range.c]
!3202 = metadata !{i32 29, i32 0, metadata !3201, null}
!3203 = metadata !{i32 32, i32 0, metadata !3194, null}
!3204 = metadata !{i32 34, i32 0, metadata !1147, null}
!3205 = metadata !{i32 16, i32 0, metadata !1159, null}
!3206 = metadata !{i32 17, i32 0, metadata !1159, null}
!3207 = metadata !{metadata !3207, metadata !3208, metadata !3209}
!3208 = metadata !{metadata !"llvm.vectorizer.width", i32 1}
!3209 = metadata !{metadata !"llvm.vectorizer.unroll", i32 1}
!3210 = metadata !{metadata !3210, metadata !3208, metadata !3209}
!3211 = metadata !{i32 18, i32 0, metadata !1159, null}
!3212 = metadata !{i32 16, i32 0, metadata !3213, null}
!3213 = metadata !{i32 786443, metadata !1171, metadata !1173, i32 16, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memmove.c]
!3214 = metadata !{i32 19, i32 0, metadata !3215, null}
!3215 = metadata !{i32 786443, metadata !1171, metadata !1173, i32 19, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memmove.c]
!3216 = metadata !{i32 20, i32 0, metadata !3217, null}
!3217 = metadata !{i32 786443, metadata !1171, metadata !3215, i32 19, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memmove.c]
!3218 = metadata !{metadata !3218, metadata !3208, metadata !3209}
!3219 = metadata !{metadata !3219, metadata !3208, metadata !3209}
!3220 = metadata !{i32 22, i32 0, metadata !3221, null}
!3221 = metadata !{i32 786443, metadata !1171, metadata !3215, i32 21, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/jl/deploy/use/build/runtime/Intrinsic//home/jl/deploy/use/src/runtime/Intrinsic/memmove.c]
!3222 = metadata !{i32 24, i32 0, metadata !3221, null}
!3223 = metadata !{i32 23, i32 0, metadata !3221, null}
!3224 = metadata !{metadata !3224, metadata !3208, metadata !3209}
!3225 = metadata !{metadata !3225, metadata !3208, metadata !3209}
!3226 = metadata !{i32 28, i32 0, metadata !1173, null}
!3227 = metadata !{i32 15, i32 0, metadata !1187, null}
!3228 = metadata !{i32 16, i32 0, metadata !1187, null}
!3229 = metadata !{metadata !3229, metadata !3208, metadata !3209}
!3230 = metadata !{metadata !3230, metadata !3208, metadata !3209}
!3231 = metadata !{i32 17, i32 0, metadata !1187, null}
!3232 = metadata !{i32 13, i32 0, metadata !1201, null}
!3233 = metadata !{i32 14, i32 0, metadata !1201, null}
!3234 = metadata !{i32 15, i32 0, metadata !1201, null}
